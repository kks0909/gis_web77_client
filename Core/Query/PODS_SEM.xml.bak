<root version="postgres 7.7.7.6">
    <data table="ACTIVITY_ZONE" schema="PODS" id="PODS_ACTIVITY_ZONE" comment="PODS.ACTIVITY_ZONE">
        <select>
            <dbQuery idField="ID">
                <param name="USER_ID" default="-1" type="Int64"/>
                <var name="FILTER" default="1=1"/>
                <var name="LPU_ACCESS_FILTER" default="SELECT srv_district_id FROM PODS.SRV_DISTRICT_GCL"/>
                <query>
                    SELECT * FROM (SELECT EVENT_ID ID, t.* FROM PODS.ACTIVITY_ZONE t) d WHERE {FILTER}
                </query>
            </dbQuery>
        </select>
        <insert>
            <dbCommand>
				<var name="CLASS_ID" type="String" direction="Input" default="PODS_ACTIVITY_ZONE" /> 
				<var name="POLICY" default="POLICY.xml#INSERT_PODS_SEM"  />
                <var name="EVENT_GUID" default="" type="String"/>
                <var name="ZONE_CL" default="UNKNOWN" type="String"/>
                <var name="DESCRIPTION" default="" type="String"/>
                <var name="SOURCE_GCL" default="UNKNOWN" type="String"/>
                <var name="COMMENTS" default="" type="String"/>
                <var name="ID" type="Int64" direction="Output" default="SELECT max(EVENT_ID) id FROM PODS.EVENT_RANGE"/>
                <var name="PODS_USER" type="String"/>
                <var name="USER_ID" default="-1" type="Int64"/>				
                <query>
					DO $$
					DECLARE
					returnId integer;
				
                    BEGIN
                    INSERT INTO PODS.EVENT_RANGE (EVENT_GUID,FEATURE_ID,STATION_ID_BEGIN,STATION_ID_END,PODS_USER,CREATE_DATE,EFFECTIVE_FROM_DATE,CURRENT_INDICATOR_LF,POSITIONING_TYPE_CL)
                    VALUES('{EVENT_GUID}','ACTIVITY_ZONE',0,0,NULLIF('{PODS_USER}',''),current_timestamp,current_timestamp,'Y','UNKNOWN')
                    RETURNING EVENT_ID INTO returnId;

                    INSERT INTO PODS.ACTIVITY_ZONE(EVENT_ID,EVENT_GUID,ZONE_CL,DESCRIPTION,SOURCE_GCL,COMMENTS)
                    VALUES(returnId,'{EVENT_GUID}','{ZONE_CL}',NULLIF('{DESCRIPTION}',''),NULLIF('{SOURCE_GCL}',''),NULLIF('{COMMENTS}',''));
                    END $$;
                </query>
            </dbCommand>
        </insert>
        <update>
            <dbCommand>
				<param name="CLASS_ID" type="String" direction="Input" default="PODS_ACTIVITY_ZONE" /> 
				<var name="POLICY" default="POLICY.xml#UPDATE_PODS_SEM"  />
                <param name="EVENT_GUID" default="" type="String"/>
                <param name="ZONE_CL" default="UNKNOWN" type="String"/>
                <param name="DESCRIPTION" default="" type="String"/>
                <param name="SOURCE_GCL" default="UNKNOWN" type="String"/>
                <param name="COMMENTS" default="" type="String"/>
                <param name="ID" type="Int64"/>
                <param name="USER_ID" default="-1" type="Int64"/>
                <query>
					UPDATE PODS.ACTIVITY_ZONE
                    SET 
					EVENT_GUID=case when :EVENT_GUID is null then EVENT_GUID else :EVENT_GUID end,
					ZONE_CL=case when :ZONE_CL is null then ZONE_CL else :ZONE_CL end,
					DESCRIPTION=case when :DESCRIPTION is null then DESCRIPTION else :DESCRIPTION end,
					SOURCE_GCL=case when :SOURCE_GCL is null then SOURCE_GCL else :SOURCE_GCL end,
					COMMENTS=case when :COMMENTS is null then COMMENTS else :COMMENTS end
                    WHERE EVENT_ID = :ID;
                </query>
            </dbCommand>
        </update>
        <delete>
            <dbCommand>
				<var name="CLASS_ID" type="String" direction="Input" default="PODS_ACTIVITY_ZONE" /> 
				<var name="POLICY" default="POLICY.xml#DELETE_PODS_SEM"  />
                <var name="ID" type="Int64"/>
                <var name="USER_ID" default="-1" type="Int64"/>
                <query>
					DO $$
                    BEGIN
                    UPDATE PODS.EVENT_RANGE
                    SET CURRENT_INDICATOR_LF='N'
                    WHERE EVENT_ID = {ID};

                    DELETE FROM PODS.ACTIVITY_ZONE
                    WHERE EVENT_ID = {ID};
                    DELETE FROM WEB50.LNK_GATE WHERE LEFT_OBJ_ID = 'PODS_ACTIVITY_ZONE/'||CAST({ID} AS VARCHAR(30)) OR RIGHT_OBJ_ID = 'PODS_ACTIVITY_ZONE/'||CAST({ID} AS VARCHAR(30));
					END $$;
                </query>
            </dbCommand>
        </delete>
    </data>
    <data table="ANODE" schema="PODS" id="PODS_ANODE" comment="PODS.ANODE">
        <select>
            <dbQuery idField="ID">
                <param name="USER_ID" default="-1" type="Int64"/>
                <var name="FILTER" default="1=1"/>
                <var name="LPU_ACCESS_FILTER" default="SELECT srv_district_id FROM PODS.SRV_DISTRICT_GCL"/>
                <query>
                    SELECT * FROM (SELECT EVENT_ID ID, t.* FROM PODS.ANODE t) d WHERE {FILTER}
                </query>
            </dbQuery>
        </select>
        <insert>
            <dbCommand>
				<var name="CLASS_ID" type="String" direction="Input" default="PODS_ANODE" /> 
				<var name="POLICY" default="POLICY.xml#INSERT_PODS_SEM"  />
                <var name="EVENT_GUID" default="" type="String"/>
                <var name="TYPE_CL" default="UNKNOWN" type="String"/>
                <var name="ANODE_MASS" default="NULL" type="Decimal"/>
                <var name="MODEL" default="" type="String"/>
                <var name="GROUND_BED_EVENT_ID" default="NULL" type="Decimal"/>
                <var name="GROUND_BED_EVENT_GUID" default="" type="String"/>
                <var name="DESCRIPTION" default="" type="String"/>
                <var name="DEPTH_OF_COVER" default="NULL" type="Decimal"/>
                <var name="BACK_FILL_MATERIAL_GCL" default="UNKNOWN" type="String"/>
                <var name="ANODE_DIAMETER" default="0" type="Decimal"/>
                <var name="ANODE_LENGTH" default="NULL" type="Decimal"/>
                <var name="MANUFACTURER_CL" default="UNKNOWN" type="String"/>
                <var name="MATERIAL_CL" default="UNKNOWN" type="String"/>
                <var name="PACKAGE_FILL_CL" default="UNKNOWN" type="String"/>
                <var name="PACKAGE_DIAMETER" default="0" type="Decimal"/>
                <var name="PACKAGE_LENGTH" default="NULL" type="Decimal"/>
                <var name="DATE_INSTALLED" default="" type="DateTime"/>
                <var name="GALVANIC_LF" default="" type="String"/>
                <var name="SOURCE_GCL" default="UNKNOWN" type="String"/>
                <var name="COMMENTS" default="" type="String"/>
                <var name="ID" type="Int64" direction="Output" default="SELECT max(EVENT_ID) id FROM PODS.EVENT_RANGE"/>
                <var name="PODS_USER" type="String"/>
                <var name="USER_ID" default="-1" type="Int64"/>
                <query>
					DO $$
					DECLARE
					returnId integer;
                    BEGIN
                    INSERT INTO PODS.EVENT_RANGE (EVENT_GUID,FEATURE_ID,STATION_ID_BEGIN,STATION_ID_END,PODS_USER,CREATE_DATE,EFFECTIVE_FROM_DATE,CURRENT_INDICATOR_LF,POSITIONING_TYPE_CL)
                    VALUES('{EVENT_GUID}','ANODE',0,0,NULLIF('{PODS_USER}',''),current_timestamp,current_timestamp,'Y','UNKNOWN')
                    RETURNING EVENT_ID INTO returnId;

                    INSERT INTO PODS.ANODE(EVENT_ID,EVENT_GUID,TYPE_CL,ANODE_MASS,MODEL,GROUND_BED_EVENT_ID,GROUND_BED_EVENT_GUID,DESCRIPTION,DEPTH_OF_COVER,BACK_FILL_MATERIAL_GCL,ANODE_DIAMETER,ANODE_LENGTH,MANUFACTURER_CL,MATERIAL_CL,PACKAGE_FILL_CL,PACKAGE_DIAMETER,PACKAGE_LENGTH,DATE_INSTALLED,GALVANIC_LF,SOURCE_GCL,COMMENTS)
                    VALUES(returnId,'{EVENT_GUID}',NULLIF('{TYPE_CL}',''),{ANODE_MASS},NULLIF('{MODEL}',''),{GROUND_BED_EVENT_ID},'{GROUND_BED_EVENT_GUID}',NULLIF('{DESCRIPTION}',''),{DEPTH_OF_COVER},NULLIF('{BACK_FILL_MATERIAL_GCL}',''),{ANODE_DIAMETER},{ANODE_LENGTH},NULLIF('{MANUFACTURER_CL}',''),NULLIF('{MATERIAL_CL}',''),NULLIF('{PACKAGE_FILL_CL}',''),{PACKAGE_DIAMETER},{PACKAGE_LENGTH},'{DATE_INSTALLED}','{GALVANIC_LF}',NULLIF('{SOURCE_GCL}',''),NULLIF('{COMMENTS}',''));
                    END $$;
                </query>
            </dbCommand>
        </insert>
        <update>
            <dbCommand>
				<param name="CLASS_ID" type="String" direction="Input" default="PODS_ANODE" /> 
				<var name="POLICY" default="POLICY.xml#UPDATE_PODS_SEM"  />
                <param name="EVENT_GUID" default="" type="String"/>
                <param name="TYPE_CL" default="UNKNOWN" type="String"/>
                <param name="ANODE_MASS" default="NULL" type="Decimal"/>
                <param name="MODEL" default="" type="String"/>
                <param name="GROUND_BED_EVENT_ID" default="NULL" type="Decimal"/>
                <param name="GROUND_BED_EVENT_GUID" default="" type="String"/>
                <param name="DESCRIPTION" default="" type="String"/>
                <param name="DEPTH_OF_COVER" default="NULL" type="Decimal"/>
                <param name="BACK_FILL_MATERIAL_GCL" default="UNKNOWN" type="String"/>
                <param name="ANODE_DIAMETER" default="0" type="Decimal"/>
                <param name="ANODE_LENGTH" default="NULL" type="Decimal"/>
                <param name="MANUFACTURER_CL" default="UNKNOWN" type="String"/>
                <param name="MATERIAL_CL" default="UNKNOWN" type="String"/>
                <param name="PACKAGE_FILL_CL" default="UNKNOWN" type="String"/>
                <param name="PACKAGE_DIAMETER" default="0" type="Decimal"/>
                <param name="PACKAGE_LENGTH" default="NULL" type="Decimal"/>
                <param name="DATE_INSTALLED" default="" type="DateTime"/>
                <param name="GALVANIC_LF" default="" type="String"/>
                <param name="SOURCE_GCL" default="UNKNOWN" type="String"/>
                <param name="COMMENTS" default="" type="String"/>
                <param name="ID" type="Int64"/>
                <param name="USER_ID" default="-1" type="Int64"/>
                <query>
                    UPDATE PODS.ANODE
                    SET 
					EVENT_GUID=case when :EVENT_GUID is null then EVENT_GUID else :EVENT_GUID end,
					TYPE_CL=case when :TYPE_CL is null then TYPE_CL else :TYPE_CL end,
					ANODE_MASS=case when :ANODE_MASS is null then ANODE_MASS else :ANODE_MASS end,
					MODEL=case when :MODEL is null then MODEL else :MODEL end,
					GROUND_BED_EVENT_ID=case when :GROUND_BED_EVENT_ID is null then GROUND_BED_EVENT_ID else :GROUND_BED_EVENT_ID end,
					GROUND_BED_EVENT_GUID=case when :GROUND_BED_EVENT_GUID is null then GROUND_BED_EVENT_GUID else :GROUND_BED_EVENT_GUID end,
					DESCRIPTION=case when :DESCRIPTION is null then DESCRIPTION else :DESCRIPTION end,
					DEPTH_OF_COVER=case when :DEPTH_OF_COVER is null then DEPTH_OF_COVER else :DEPTH_OF_COVER end,
					BACK_FILL_MATERIAL_GCL=case when :BACK_FILL_MATERIAL_GCL is null then BACK_FILL_MATERIAL_GCL else :BACK_FILL_MATERIAL_GCL end,
					ANODE_DIAMETER=case when :ANODE_DIAMETER is null then ANODE_DIAMETER else :ANODE_DIAMETER end,
					ANODE_LENGTH=case when :ANODE_LENGTH is null then ANODE_LENGTH else :ANODE_LENGTH end,
					MANUFACTURER_CL=case when :MANUFACTURER_CL is null then MANUFACTURER_CL else :MANUFACTURER_CL end,
					MATERIAL_CL=case when :MATERIAL_CL is null then MATERIAL_CL else :MATERIAL_CL end,
					PACKAGE_FILL_CL=case when :PACKAGE_FILL_CL is null then PACKAGE_FILL_CL else :PACKAGE_FILL_CL end,
					PACKAGE_DIAMETER=case when :PACKAGE_DIAMETER is null then PACKAGE_DIAMETER else :PACKAGE_DIAMETER end,
					PACKAGE_LENGTH=case when :PACKAGE_LENGTH is null then PACKAGE_LENGTH else :PACKAGE_LENGTH end,
					DATE_INSTALLED=case when :DATE_INSTALLED is null then DATE_INSTALLED else :DATE_INSTALLED end,
					GALVANIC_LF=case when :GALVANIC_LF is null then GALVANIC_LF else :GALVANIC_LF end,
					SOURCE_GCL=case when :SOURCE_GCL is null then SOURCE_GCL else :SOURCE_GCL end,
					COMMENTS=case when :COMMENTS is null then COMMENTS else :COMMENTS end
					WHERE EVENT_ID = :ID;
                </query>
            </dbCommand>
        </update>
        <delete>
            <dbCommand>
				<var name="CLASS_ID" type="String" direction="Input" default="PODS_ANODE" /> 
				<var name="POLICY" default="POLICY.xml#DELETE_PODS_SEM"  />
                <var name="ID" type="Int64"/>
                <var name="USER_ID" default="-1" type="Int64"/>
                <query>
					DO $$
                    BEGIN
                    UPDATE PODS.EVENT_RANGE
                    SET CURRENT_INDICATOR_LF='N'
                    WHERE EVENT_ID = {ID};

                    UPDATE PODS.PI_ANODE_READING
                    SET REF_ANODE_EVENT_ID = NULL
                    WHERE REF_ANODE_EVENT_ID = {ID};

                    DELETE
                    FROM PODS.ANODE
                    WHERE EVENT_ID = {ID};

                    DELETE
                    FROM WEB50.LNK_GATE
                    WHERE LEFT_OBJ_ID = 'PODS_ANODE/'||CAST({ID} AS VARCHAR(30))
                    OR RIGHT_OBJ_ID = 'PODS_ANODE/'||CAST({ID} AS VARCHAR(30));

					END $$;
                </query>
            </dbCommand>
        </delete>
    </data>
    <data table="BOND_LEAD" schema="PODS" id="PODS_BOND_LEAD" comment="PODS.BOND_LEAD">
        <select>
            <dbQuery idField="ID">
                <param name="USER_ID" default="-1" type="Int64"/>
                <var name="FILTER" default="1=1"/>
                <var name="LPU_ACCESS_FILTER" default="SELECT srv_district_id FROM PODS.SRV_DISTRICT_GCL"/>
                <query>
                    SELECT * FROM (SELECT EVENT_ID ID, t.* FROM PODS.BOND_LEAD t) d WHERE {FILTER}
                </query>
            </dbQuery>
        </select>
        <insert>
            <dbCommand>
				<var name="CLASS_ID" type="String" direction="Input" default="PODS_BOND_LEAD" /> 
				<var name="POLICY" default="POLICY.xml#INSERT_PODS_SEM"  />
                <var name="EVENT_GUID" default="" type="String"/>
                <var name="NAME" default="" type="String"/>
                <var name="MATERIAL_CL" default="UNKNOWN" type="String"/>
                <var name="DESCRIPTION" default="" type="String"/>
                <var name="TYPE_CL" default="UNKNOWN" type="String"/>
                <var name="DATE_INSTALLED" default="" type="DateTime"/>
                <var name="REF_TEST_LEAD_EVENT_ID" default="NULL" type="Decimal"/>
                <var name="REF_TEST_LEAD_EVENT_GUID" default="" type="String"/>
                <var name="MAX_RESISTANCE" default="NULL" type="Decimal"/>
                <var name="BONDED_COMPANY_CL" default="UNKNOWN" type="String"/>
                <var name="RESISTOR_TYPE_CL" default="UNKNOWN" type="String"/>
                <var name="RESISTOR_POWER_RATING" default="NULL" type="Decimal"/>
                <var name="GAUGE_SIZE_CL" default="UNKNOWN" type="String"/>
                <var name="SOURCE_GCL" default="UNKNOWN" type="String"/>
                <var name="COMMENTS" default="" type="String"/>
                <var name="ID" type="Int64" direction="Output" default="SELECT max(EVENT_ID) id FROM PODS.EVENT_RANGE"/>
                <var name="PODS_USER" type="String"/>
                <var name="USER_ID" default="-1" type="Int64"/>
                <query>
					DO $$
					DECLARE
					returnId integer;
                    BEGIN
                    INSERT INTO PODS.EVENT_RANGE (EVENT_GUID,FEATURE_ID,STATION_ID_BEGIN,STATION_ID_END,PODS_USER,CREATE_DATE,EFFECTIVE_FROM_DATE,CURRENT_INDICATOR_LF,POSITIONING_TYPE_CL)
                    VALUES('{EVENT_GUID}','BOND_LEAD',0,0,NULLIF('{PODS_USER}',''),current_timestamp,current_timestamp,'Y','UNKNOWN')
                    RETURNING EVENT_ID INTO returnId;

                    INSERT INTO PODS.BOND_LEAD(EVENT_ID,EVENT_GUID,NAME,MATERIAL_CL,DESCRIPTION,TYPE_CL,DATE_INSTALLED,REF_TEST_LEAD_EVENT_ID,REF_TEST_LEAD_EVENT_GUID,MAX_RESISTANCE,BONDED_COMPANY_CL,RESISTOR_TYPE_CL,RESISTOR_POWER_RATING,GAUGE_SIZE_CL,SOURCE_GCL,COMMENTS)
                    VALUES(returnId,'{EVENT_GUID}',NULLIF('{NAME}',''),NULLIF('{MATERIAL_CL}',''),NULLIF('{DESCRIPTION}',''),NULLIF('{TYPE_CL}',''),'{DATE_INSTALLED}',{REF_TEST_LEAD_EVENT_ID},'{REF_TEST_LEAD_EVENT_GUID}',{MAX_RESISTANCE},NULLIF('{BONDED_COMPANY_CL}',''),NULLIF('{RESISTOR_TYPE_CL}',''),{RESISTOR_POWER_RATING},NULLIF('{GAUGE_SIZE_CL}',''),NULLIF('{SOURCE_GCL}',''),NULLIF('{COMMENTS}',''));
                    END $$;
                </query>
            </dbCommand>
        </insert>
        <update>
            <dbCommand>
				<param name="CLASS_ID" type="String" direction="Input" default="PODS_BOND_LEAD" /> 
				<var name="POLICY" default="POLICY.xml#UPDATE_PODS_SEM"  />
                <param name="EVENT_GUID" default="" type="String"/>
                <param name="NAME" default="" type="String"/>
                <param name="MATERIAL_CL" default="UNKNOWN" type="String"/>
                <param name="DESCRIPTION" default="" type="String"/>
                <param name="TYPE_CL" default="UNKNOWN" type="String"/>
                <param name="DATE_INSTALLED" default="" type="DateTime"/>
                <param name="REF_TEST_LEAD_EVENT_ID" default="NULL" type="Decimal"/>
                <param name="REF_TEST_LEAD_EVENT_GUID" default="" type="String"/>
                <param name="MAX_RESISTANCE" default="NULL" type="Decimal"/>
                <param name="BONDED_COMPANY_CL" default="UNKNOWN" type="String"/>
                <param name="RESISTOR_TYPE_CL" default="UNKNOWN" type="String"/>
                <param name="RESISTOR_POWER_RATING" default="NULL" type="Decimal"/>
                <param name="GAUGE_SIZE_CL" default="UNKNOWN" type="String"/>
                <param name="SOURCE_GCL" default="UNKNOWN" type="String"/>
                <param name="COMMENTS" default="" type="String"/>
                <param name="ID" type="Int64"/>
                <param name="USER_ID" default="-1" type="Int64"/>
                <query>
                    UPDATE PODS.BOND_LEAD
                    SET 
					EVENT_GUID=case when :EVENT_GUID is null then EVENT_GUID else :EVENT_GUID end,
					NAME=case when :NAME is null then NAME else :NAME end,
					MATERIAL_CL=case when :MATERIAL_CL is null then MATERIAL_CL else :MATERIAL_CL end,
                    DESCRIPTION=case when :DESCRIPTION is null then DESCRIPTION else :DESCRIPTION end,
					TYPE_CL=case when :TYPE_CL is null then TYPE_CL else :TYPE_CL end,
					DATE_INSTALLED=case when :DATE_INSTALLED is null then DATE_INSTALLED else :DATE_INSTALLED end,
					REF_TEST_LEAD_EVENT_ID=case when :REF_TEST_LEAD_EVENT_ID is null then REF_TEST_LEAD_EVENT_ID else :REF_TEST_LEAD_EVENT_ID end,
					REF_TEST_LEAD_EVENT_GUID=case when :REF_TEST_LEAD_EVENT_GUID is null then REF_TEST_LEAD_EVENT_GUID else :REF_TEST_LEAD_EVENT_GUID end,
					MAX_RESISTANCE=case when :MAX_RESISTANCE is null then MAX_RESISTANCE else :MAX_RESISTANCE end,
					BONDED_COMPANY_CL=case when :BONDED_COMPANY_CL is null then BONDED_COMPANY_CL else :BONDED_COMPANY_CL end,
					RESISTOR_TYPE_CL=case when :RESISTOR_TYPE_CL is null then RESISTOR_TYPE_CL else :RESISTOR_TYPE_CL end,
					RESISTOR_POWER_RATING=case when :RESISTOR_POWER_RATING is null then RESISTOR_POWER_RATING else :RESISTOR_POWER_RATING end,
					GAUGE_SIZE_CL=case when :GAUGE_SIZE_CL is null then GAUGE_SIZE_CL else :GAUGE_SIZE_CL end,
					SOURCE_GCL=case when :SOURCE_GCL is null then SOURCE_GCL else :SOURCE_GCL end,
					COMMENTS=case when :COMMENTS is null then COMMENTS else :COMMENTS end
                    WHERE EVENT_ID = :ID;
                </query>
            </dbCommand>
        </update>
        <delete>
            <dbCommand>
				<var name="CLASS_ID" type="String" direction="Input" default="PODS_BOND_LEAD" /> 
				<var name="POLICY" default="POLICY.xml#DELETE_PODS_SEM"  />
                <var name="ID" type="Int64"/>
                <var name="USER_ID" default="-1" type="Int64"/>
                <query>
					DO $$
                    BEGIN
                    UPDATE PODS.EVENT_RANGE
                    SET CURRENT_INDICATOR_LF='N'
                    WHERE EVENT_ID = {ID};

                    UPDATE PODS.PI_BOND_READING
                    SET REF_BOND_LEAD_EVENT_ID = NULL
                    WHERE REF_BOND_LEAD_EVENT_ID = {ID};

                    DELETE
                    FROM PODS.BOND_LEAD
                    WHERE EVENT_ID = {ID};

                    DELETE
                    FROM WEB50.LNK_GATE
                    WHERE LEFT_OBJ_ID = 'PODS_BOND_LEAD/'||CAST({ID} AS VARCHAR(30))
                    OR RIGHT_OBJ_ID = 'PODS_BOND_LEAD/'||CAST({ID} AS VARCHAR(30));

					END $$;
                </query>
            </dbCommand>
        </delete>
    </data>
    <data table="BRANCH_CONNECT" schema="PODS" id="PODS_BRANCH_CONNECT" comment="PODS.BRANCH_CONNECT">
        <select>
            <dbQuery idField="ID">
                <param name="USER_ID" default="-1" type="Int64"/>
                <var name="FILTER" default="1=1"/>
                <var name="LPU_ACCESS_FILTER" default="SELECT srv_district_id FROM PODS.SRV_DISTRICT_GCL"/>
                <query>
                    SELECT * FROM (SELECT EVENT_ID ID, t.* FROM PODS.BRANCH_CONNECT t) d WHERE {FILTER}
                </query>
            </dbQuery>
        </select>
        <insert>
            <dbCommand>
				<var name="CLASS_ID" type="String" direction="Input" default="PODS_BRANCH_CONNECT" /> 
				<var name="POLICY" default="POLICY.xml#INSERT_PODS_SEM"  />
                <var name="EVENT_GUID" default="" type="String"/>
                <var name="TYPE_CL" default="UNKNOWN" type="String"/>
                <var name="NOMINAL_WALL_THICKNESS_GCL" default="0" type="Decimal"/>
                <var name="NOMINAL_DIAMETER_GCL" default="0" type="Decimal"/>
                <var name="MANUFACTURER_CL" default="UNKNOWN" type="String"/>
                <var name="DATE_MANUFACTURED" default="" type="DateTime"/>
                <var name="SPECIFICATION_CL" default="UNKNOWN" type="String"/>
                <var name="NOMINAL_PRESSURE_RATING" default="NULL" type="Decimal"/>
                <var name="MILL_TEST_PRESSURE" default="NULL" type="Decimal"/>
                <var name="TAP_METHOD_GCL" default="UNKNOWN" type="String"/>
                <var name="DATE_INSTALLED" default="" type="DateTime"/>
                <var name="DESCRIPTION" default="" type="String"/>
                <var name="SOURCE_GCL" default="UNKNOWN" type="String"/>
                <var name="COMMENTS" default="" type="String"/>
                <var name="ID" type="Int64" direction="Output" default="SELECT max(EVENT_ID) id FROM PODS.EVENT_RANGE"/>
                <var name="PODS_USER" type="String"/>
                <var name="USER_ID" default="-1" type="Int64"/>
                <query>
					DO $$
					DECLARE
					returnId integer;
                    BEGIN
                    INSERT INTO PODS.EVENT_RANGE (EVENT_GUID,FEATURE_ID,STATION_ID_BEGIN,STATION_ID_END,PODS_USER,CREATE_DATE,EFFECTIVE_FROM_DATE,CURRENT_INDICATOR_LF,POSITIONING_TYPE_CL)
                    VALUES('{EVENT_GUID}','BRANCH_CONNECT',0,0,NULLIF('{PODS_USER}',''),current_timestamp,current_timestamp,'Y','UNKNOWN')
                    RETURNING EVENT_ID INTO returnId;

                    INSERT INTO PODS.BRANCH_CONNECT(EVENT_ID,EVENT_GUID,TYPE_CL,NOMINAL_WALL_THICKNESS_GCL,NOMINAL_DIAMETER_GCL,MANUFACTURER_CL,DATE_MANUFACTURED,SPECIFICATION_CL,NOMINAL_PRESSURE_RATING,MILL_TEST_PRESSURE,TAP_METHOD_GCL,DATE_INSTALLED,DESCRIPTION,SOURCE_GCL,COMMENTS)
                    VALUES(returnId,'{EVENT_GUID}',NULLIF('{TYPE_CL}',''),{NOMINAL_WALL_THICKNESS_GCL},{NOMINAL_DIAMETER_GCL},NULLIF('{MANUFACTURER_CL}',''),'{DATE_MANUFACTURED}',NULLIF('{SPECIFICATION_CL}',''),{NOMINAL_PRESSURE_RATING},'{MILL_TEST_PRESSURE}',{TAP_METHOD_GCL},'{DATE_INSTALLED}',NULLIF('{DESCRIPTION}',''),NULLIF('{SOURCE_GCL}',''),NULLIF('{COMMENTS}',''));
                    END $$;
                </query>
            </dbCommand>
        </insert>
        <update>
            <dbCommand>
				<param name="CLASS_ID" type="String" direction="Input" default="PODS_BRANCH_CONNECT" /> 
				<var name="POLICY" default="POLICY.xml#UPDATE_PODS_SEM"  />
                <param name="EVENT_GUID" default="" type="String"/>
                <param name="TYPE_CL" default="UNKNOWN" type="String"/>
                <param name="NOMINAL_WALL_THICKNESS_GCL" default="0" type="Decimal"/>
                <param name="NOMINAL_DIAMETER_GCL" default="0" type="Decimal"/>
                <param name="MANUFACTURER_CL" default="UNKNOWN" type="String"/>
                <param name="DATE_MANUFACTURED" default="" type="DateTime"/>
                <param name="SPECIFICATION_CL" default="UNKNOWN" type="String"/>
                <param name="NOMINAL_PRESSURE_RATING" default="NULL" type="Decimal"/>
                <param name="MILL_TEST_PRESSURE" default="NULL" type="Decimal"/>
                <param name="TAP_METHOD_GCL" default="UNKNOWN" type="String"/>
                <param name="DATE_INSTALLED" default="" type="DateTime"/>
                <param name="DESCRIPTION" default="" type="String"/>
                <param name="SOURCE_GCL" default="UNKNOWN" type="String"/>
                <param name="COMMENTS" default="" type="String"/>
                <param name="ID" type="Int64"/>
                <param name="USER_ID" default="-1" type="Int64"/>
                <query>
                    UPDATE PODS.BRANCH_CONNECT
                    SET 
					EVENT_GUID=case when :EVENT_GUID is null then EVENT_GUID else :EVENT_GUID end,
					TYPE_CL=case when :TYPE_CL is null then TYPE_CL else :TYPE_CL end,
					NOMINAL_WALL_THICKNESS_GCL=case when :NOMINAL_WALL_THICKNESS_GCL is null then NOMINAL_WALL_THICKNESS_GCL else :NOMINAL_WALL_THICKNESS_GCL end,
					NOMINAL_DIAMETER_GCL=case when :NOMINAL_DIAMETER_GCL is null then NOMINAL_DIAMETER_GCL else :NOMINAL_DIAMETER_GCL end,
					MANUFACTURER_CL=case when :MANUFACTURER_CL is null then MANUFACTURER_CL else :MANUFACTURER_CL end,
					DATE_MANUFACTURED=case when :DATE_MANUFACTURED is null then DATE_MANUFACTURED else :DATE_MANUFACTURED end,
					SPECIFICATION_CL=case when :SPECIFICATION_CL is null then SPECIFICATION_CL else :SPECIFICATION_CL end,
					NOMINAL_PRESSURE_RATING=case when :NOMINAL_PRESSURE_RATING is null then NOMINAL_PRESSURE_RATING else :NOMINAL_PRESSURE_RATING end,
					MILL_TEST_PRESSURE=case when :MILL_TEST_PRESSURE is null then MILL_TEST_PRESSURE else :MILL_TEST_PRESSURE end,
					TAP_METHOD_GCL=case when :TAP_METHOD_GCL is null then TAP_METHOD_GCL else :TAP_METHOD_GCL end,
					DATE_INSTALLED=case when :DATE_INSTALLED is null then DATE_INSTALLED else :DATE_INSTALLED end,
                    DESCRIPTION=case when :DESCRIPTION is null then DESCRIPTION else :DESCRIPTION end,
					SOURCE_GCL=case when :SOURCE_GCL is null then SOURCE_GCL else :SOURCE_GCL end,
					COMMENTS=case when :COMMENTS is null then COMMENTS else :COMMENTS end
                    WHERE EVENT_ID = :ID;
                </query>
            </dbCommand>
        </update>
        <delete>
            <dbCommand>
				<var name="CLASS_ID" type="String" direction="Input" default="PODS_BRANCH_CONNECT" /> 
				<var name="POLICY" default="POLICY.xml#DELETE_PODS_SEM"  />
                <var name="ID" type="Int64"/>
                <var name="USER_ID" default="-1" type="Int64"/>
                <query>
					DO $$
                    BEGIN
                    UPDATE PODS.EVENT_RANGE
                    SET CURRENT_INDICATOR_LF='N'
                    WHERE EVENT_ID = {ID};

                    DELETE FROM PODS.BRANCH_CONNECT
                    WHERE EVENT_ID = {ID};
                    DELETE FROM WEB50.LNK_GATE WHERE LEFT_OBJ_ID = 'PODS_BRANCH_CONNECT/'||CAST({ID} AS VARCHAR(30)) OR RIGHT_OBJ_ID = 'PODS_BRANCH_CONNECT/'||CAST({ID} AS VARCHAR(30));
					END $$;
                </query>
            </dbCommand>
        </delete>
    </data>
    <data table="CASING" schema="PODS" id="PODS_CASING" comment="PODS.CASING">
        <select>
            <dbQuery idField="ID">
                <param name="USER_ID" default="-1" type="Int64"/>
                <var name="FILTER" default="1=1"/>
                <var name="LPU_ACCESS_FILTER" default="SELECT srv_district_id FROM PODS.SRV_DISTRICT_GCL"/>
                <query>
                    SELECT * FROM (SELECT EVENT_ID ID, t.* FROM PODS.CASING t) d WHERE {FILTER}
                </query>
            </dbQuery>
        </select>
        <insert>
            <dbCommand>
				<var name="CLASS_ID" type="String" direction="Input" default="PODS_CASING" /> 
				<var name="POLICY" default="POLICY.xml#INSERT_PODS_SEM"  />
                <var name="EVENT_GUID" default="" type="String"/>
                <var name="CROSSING_TYPE_GCL" default="UNKNOWN" type="String"/>
                <var name="INSULATOR_TYPE_CL" default="UNKNOWN" type="String"/>
                <var name="SEAL_TYPE_CL" default="UNKNOWN" type="String"/>
                <var name="VENTED_INDICATOR_LF" default="" type="String"/>
                <var name="QUANTITY_OF_VENTS" default="NULL" type="Decimal"/>
                <var name="MANUFACTURER_CL" default="UNKNOWN" type="String"/>
                <var name="DATE_MANUFACTURED" default="" type="DateTime"/>
                <var name="PIPE_MILL_LOCATION_GCL" default="UNKNOWN" type="String"/>
                <var name="MATERIAL_CL" default="UNKNOWN" type="String"/>
                <var name="PIPE_SPECIFICATION_GCL" default="UNKNOWN" type="String"/>
                <var name="SMYS_GCL" default="UNKNOWN" type="Decimal"/>
                <var name="PIPE_GRADE_GCL" default="UNKNOWN" type="String"/>
                <var name="NOMINAL_DIAMETER_GCL" default="0" type="Decimal"/>
                <var name="NOMINAL_WALL_THICKNESS_GCL" default="0" type="Decimal"/>
                <var name="LENGTH" default="NULL" type="Decimal"/>
                <var name="DATE_INSTALLED" default="" type="DateTime"/>
                <var name="DESCRIPTION" default="" type="String"/>
                <var name="SOURCE_GCL" default="UNKNOWN" type="String"/>
                <var name="COMMENTS" default="" type="String"/>
                <var name="ID" type="Int64" direction="Output" default="SELECT max(EVENT_ID) id FROM PODS.EVENT_RANGE"/>
                <var name="PODS_USER" type="String"/>
                <var name="USER_ID" default="-1" type="Int64"/>
                <query>
					DO $$
					DECLARE
					returnId integer;
                    BEGIN
                    INSERT INTO PODS.EVENT_RANGE (EVENT_GUID,FEATURE_ID,STATION_ID_BEGIN,STATION_ID_END,PODS_USER,CREATE_DATE,EFFECTIVE_FROM_DATE,CURRENT_INDICATOR_LF,POSITIONING_TYPE_CL)
                    VALUES('{EVENT_GUID}','CASING',0,0,NULLIF('{PODS_USER}',''),current_timestamp,current_timestamp,'Y','UNKNOWN')
                    RETURNING EVENT_ID INTO returnId;

                    INSERT INTO PODS.CASING(EVENT_ID,EVENT_GUID,CROSSING_TYPE_GCL,INSULATOR_TYPE_CL,SEAL_TYPE_CL,VENTED_INDICATOR_LF,QUANTITY_OF_VENTS,MANUFACTURER_CL,DATE_MANUFACTURED,PIPE_MILL_LOCATION_GCL,MATERIAL_CL,PIPE_SPECIFICATION_GCL,SMYS_GCL,PIPE_GRADE_GCL,NOMINAL_DIAMETER_GCL,NOMINAL_WALL_THICKNESS_GCL,LENGTH,DATE_INSTALLED,DESCRIPTION,SOURCE_GCL,COMMENTS)
                    VALUES(returnId,'{EVENT_GUID}','{CROSSING_TYPE_GCL}',NULLIF('{INSULATOR_TYPE_CL}',''),NULLIF('{SEAL_TYPE_CL}',''),'{VENTED_INDICATOR_LF}',{QUANTITY_OF_VENTS},NULLIF('{MANUFACTURER_CL}',''),'{DATE_MANUFACTURED}',NULLIF('{PIPE_MILL_LOCATION_GCL}',''),NULLIF('{MATERIAL_CL}',''),NULLIF('{PIPE_SPECIFICATION_GCL}',''),{SMYS_GCL},NULLIF('{PIPE_GRADE_GCL}',''),{NOMINAL_DIAMETER_GCL},{NOMINAL_WALL_THICKNESS_GCL},{LENGTH},'{DATE_INSTALLED}',NULLIF('{DESCRIPTION}',''),NULLIF('{SOURCE_GCL}',''),NULLIF('{COMMENTS}',''));
                    END $$;
                </query>
            </dbCommand>
        </insert>
        <update>
            <dbCommand>
				<param name="CLASS_ID" type="String" direction="Input" default="PODS_CASING" /> 
				<var name="POLICY" default="POLICY.xml#UPDATE_PODS_SEM"  />
                <param name="EVENT_GUID" default="" type="String"/>
                <param name="CROSSING_TYPE_GCL" default="UNKNOWN" type="String"/>
                <param name="INSULATOR_TYPE_CL" default="UNKNOWN" type="String"/>
                <param name="SEAL_TYPE_CL" default="UNKNOWN" type="String"/>
                <param name="VENTED_INDICATOR_LF" default="" type="String"/>
                <param name="QUANTITY_OF_VENTS" default="NULL" type="Decimal"/>
                <param name="MANUFACTURER_CL" default="UNKNOWN" type="String"/>
                <param name="DATE_MANUFACTURED" default="" type="DateTime"/>
                <param name="PIPE_MILL_LOCATION_GCL" default="UNKNOWN" type="String"/>
                <param name="MATERIAL_CL" default="UNKNOWN" type="String"/>
                <param name="PIPE_SPECIFICATION_GCL" default="UNKNOWN" type="String"/>
                <param name="SMYS_GCL" default="UNKNOWN" type="Decimal"/>
                <param name="PIPE_GRADE_GCL" default="UNKNOWN" type="String"/>
                <param name="NOMINAL_DIAMETER_GCL" default="0" type="Decimal"/>
                <param name="NOMINAL_WALL_THICKNESS_GCL" default="0" type="Decimal"/>
                <param name="LENGTH" default="NULL" type="Decimal"/>
                <param name="DATE_INSTALLED" default="" type="DateTime"/>
                <param name="DESCRIPTION" default="" type="String"/>
                <param name="SOURCE_GCL" default="UNKNOWN" type="String"/>
                <param name="COMMENTS" default="" type="String"/>
                <param name="ID" type="Int64"/>
                <param name="USER_ID" default="-1" type="Int64"/>
                <query>
                    UPDATE PODS.CASING
                    SET 
					EVENT_GUID=case when :EVENT_GUID is null then EVENT_GUID else :EVENT_GUID end,
					CROSSING_TYPE_GCL=case when :CROSSING_TYPE_GCL is null then CROSSING_TYPE_GCL else :CROSSING_TYPE_GCL end,
					INSULATOR_TYPE_CL=case when :INSULATOR_TYPE_CL is null then INSULATOR_TYPE_CL else :INSULATOR_TYPE_CL end,
					SEAL_TYPE_CL=case when :SEAL_TYPE_CL is null then SEAL_TYPE_CL else :SEAL_TYPE_CL end,
					VENTED_INDICATOR_LF=case when :VENTED_INDICATOR_LF is null then VENTED_INDICATOR_LF else :VENTED_INDICATOR_LF end,
					QUANTITY_OF_VENTS=case when :QUANTITY_OF_VENTS is null then QUANTITY_OF_VENTS else :QUANTITY_OF_VENTS end,
					MANUFACTURER_CL=case when :MANUFACTURER_CL is null then MANUFACTURER_CL else :MANUFACTURER_CL end,
					DATE_MANUFACTURED=case when :DATE_MANUFACTURED is null then DATE_MANUFACTURED else :DATE_MANUFACTURED end,
					PIPE_MILL_LOCATION_GCL=case when :PIPE_MILL_LOCATION_GCL is null then PIPE_MILL_LOCATION_GCL else :PIPE_MILL_LOCATION_GCL end,
					MATERIAL_CL=case when :MATERIAL_CL is null then MATERIAL_CL else :MATERIAL_CL end,
					PIPE_SPECIFICATION_GCL=case when :PIPE_SPECIFICATION_GCL is null then PIPE_SPECIFICATION_GCL else :PIPE_SPECIFICATION_GCL end,
					SMYS_GCL=case when :SMYS_GCL is null then SMYS_GCL else :SMYS_GCL end,
					PIPE_GRADE_GCL=case when :PIPE_GRADE_GCL is null then PIPE_GRADE_GCL else :PIPE_GRADE_GCL end,
					NOMINAL_DIAMETER_GCL=case when :NOMINAL_DIAMETER_GCL is null then NOMINAL_DIAMETER_GCL else :NOMINAL_DIAMETER_GCL end,
					NOMINAL_WALL_THICKNESS_GCL=case when :NOMINAL_WALL_THICKNESS_GCL is null then NOMINAL_WALL_THICKNESS_GCL else :NOMINAL_WALL_THICKNESS_GCL end,
					LENGTH=case when :LENGTH is null then LENGTH else :LENGTH end,
					DATE_INSTALLED=case when :DATE_INSTALLED is null then DATE_INSTALLED else :DATE_INSTALLED end,
                    DESCRIPTION=case when :DESCRIPTION is null then DESCRIPTION else :DESCRIPTION end,
					SOURCE_GCL=case when :SOURCE_GCL is null then SOURCE_GCL else :SOURCE_GCL end,
					COMMENTS=case when :COMMENTS is null then COMMENTS else :COMMENTS end
                    WHERE EVENT_ID = :ID;
                </query>
            </dbCommand>
        </update>
        <delete>
            <dbCommand>
				<param name="CLASS_ID" type="String" direction="Input" default="PODS_CASING" /> 
				<var name="POLICY" default="POLICY.xml#DELETE_PODS_SEM"  />
                <param name="ID" type="Int64"/>
                <param name="USER_ID" default="-1" type="Int64"/>
                <query>
					DO $$
                    BEGIN
                    UPDATE PODS.EVENT_RANGE
                    SET CURRENT_INDICATOR_LF='N'
                    WHERE EVENT_ID = {ID};

                    DELETE
                    FROM PODS.CASING
                    WHERE EVENT_ID = {ID};

                    UPDATE PODS.PI_CASING_READING
                    SET REF_CASING_EVENT_ID = NULL
                    WHERE REF_CASING_EVENT_ID = {ID};

                    DELETE
                    FROM WEB50.LNK_GATE
                    WHERE LEFT_OBJ_ID = 'PODS_CASING/'||CAST({ID} AS VARCHAR(30))
                    OR RIGHT_OBJ_ID = 'PODS_CASING/'||CAST({ID} AS VARCHAR(30));

					END $$;
                </query>
            </dbCommand>
        </delete>
    </data>
    <data table="CATHODIC_PROTECTION_RANGE" schema="PODS" id="PODS_CATHODIC_PROTECTION_RANGE" comment="PODS.CATHODIC_PROTECTION_RANGE">
        <select>
            <dbQuery idField="ID">
                <param name="USER_ID" default="-1" type="Int64"/>
                <var name="FILTER" default="1=1"/>
                <var name="LPU_ACCESS_FILTER" default="SELECT srv_district_id FROM PODS.SRV_DISTRICT_GCL"/>
                <query>
                    SELECT * FROM (SELECT EVENT_ID ID, t.* FROM PODS.CATHODIC_PROTECTION_RANGE t) d WHERE {FILTER}
                </query>
            </dbQuery>
        </select>
        <insert>
            <dbCommand>
				<var name="CLASS_ID" type="String" direction="Input" default="PODS_CATHODIC_PROTECTION_RANGE" /> 
				<var name="POLICY" default="POLICY.xml#INSERT_PODS_SEM"  />
                <var name="EVENT_GUID" default="" type="String"/>
                <var name="TYPE_CL" default="UNKNOWN" type="String"/>
                <var name="DESCRIPTION" default="" type="String"/>
                <var name="CATHODICALLY_PROTECTED_LF" default="" type="String"/>
                <var name="SOURCE_GCL" default="UNKNOWN" type="String"/>
                <var name="COMMENTS" default="" type="String"/>
                <var name="ID" type="Int64" direction="Output" default="SELECT max(EVENT_ID) id FROM PODS.EVENT_RANGE"/>
                <var name="PODS_USER" type="String"/>
                <var name="USER_ID" default="-1" type="Int64"/>
                <query>
					DO $$
					DECLARE
					returnId integer;
                    BEGIN
                    INSERT INTO PODS.EVENT_RANGE (EVENT_GUID,FEATURE_ID,STATION_ID_BEGIN,STATION_ID_END,PODS_USER,CREATE_DATE,EFFECTIVE_FROM_DATE,CURRENT_INDICATOR_LF,POSITIONING_TYPE_CL)
                    VALUES('{EVENT_GUID}','CATH_PROT_RNG',0,0,NULLIF('{PODS_USER}',''),current_timestamp,current_timestamp,'Y','UNKNOWN')
                    RETURNING EVENT_ID INTO returnId;

                    INSERT INTO PODS.CATHODIC_PROTECTION_RANGE(EVENT_ID,EVENT_GUID,TYPE_CL,DESCRIPTION,CATHODICALLY_PROTECTED_LF,SOURCE_GCL,COMMENTS)
                    VALUES(returnId,'{EVENT_GUID}',NULLIF('{TYPE_CL}',''),NULLIF('{DESCRIPTION}',''),'{CATHODICALLY_PROTECTED_LF}',NULLIF('{SOURCE_GCL}',''),NULLIF('{COMMENTS}',''));
                    END $$;
                </query>
            </dbCommand>
        </insert>
        <update>
            <dbCommand>
				<param name="CLASS_ID" type="String" direction="Input" default="PODS_CATHODIC_PROTECTION_RANGE" /> 
				<var name="POLICY" default="POLICY.xml#UPDATE_PODS_SEM"  />
                <param name="EVENT_GUID" default="" type="String"/>
                <param name="TYPE_CL" default="UNKNOWN" type="String"/>
                <param name="DESCRIPTION" default="" type="String"/>
                <param name="CATHODICALLY_PROTECTED_LF" default="" type="String"/>
                <param name="SOURCE_GCL" default="UNKNOWN" type="String"/>
                <param name="COMMENTS" default="" type="String"/>
                <param name="ID" type="Int64"/>
                <param name="USER_ID" default="-1" type="Int64"/>
                <query>
                    UPDATE PODS.CATHODIC_PROTECTION_RANGE
                    SET 
					EVENT_GUID=case when :EVENT_GUID is null then EVENT_GUID else :EVENT_GUID end,
					TYPE_CL=case when :TYPE_CL is null then TYPE_CL else :TYPE_CL end,
                    DESCRIPTION=case when :DESCRIPTION is null then DESCRIPTION else :DESCRIPTION end,
					CATHODICALLY_PROTECTED_LF=case when :CATHODICALLY_PROTECTED_LF is null then CATHODICALLY_PROTECTED_LF else :CATHODICALLY_PROTECTED_LF end,
                    SOURCE_GCL=case when :SOURCE_GCL is null then SOURCE_GCL else :SOURCE_GCL end,
					COMMENTS=case when :COMMENTS is null then COMMENTS else :COMMENTS end
                    WHERE EVENT_ID = :ID;
                </query>
            </dbCommand>
        </update>
        <delete>
            <dbCommand>
				<var name="CLASS_ID" type="String" direction="Input" default="PODS_CATHODIC_PROTECTION_RANGE" /> 
				<var name="POLICY" default="POLICY.xml#DELETE_PODS_SEM"  />
                <var name="ID" type="Int64"/>
                <var name="USER_ID" default="-1" type="Int64"/>
                <query>
					DO $$
                    BEGIN
                    UPDATE PODS.EVENT_RANGE
                    SET CURRENT_INDICATOR_LF='N'
                    WHERE EVENT_ID = {ID};

                    DELETE FROM PODS.CATHODIC_PROTECTION_RANGE
                    WHERE EVENT_ID = {ID};
                    DELETE FROM WEB50.LNK_GATE WHERE LEFT_OBJ_ID = 'PODS_CATHODIC_PROTECTION_RANGE/'||CAST({ID} AS VARCHAR(30)) OR RIGHT_OBJ_ID = 'PODS_CATHODIC_PROTECTION_RANGE/'||CAST({ID} AS VARCHAR(30)); 
					END $$;
                </query>
            </dbCommand>
        </delete>
    </data>
    <data table="CHEMICAL_INJECTION_LOG" schema="PODS" id="PODS_CHEMICAL_INJECTION_LOG" comment="PODS.CHEMICAL_INJECTION_LOG">
        <select>
            <dbQuery idField="ID">
                <param name="USER_ID" default="-1" type="Int64"/>
                <var name="FILTER" default="1=1"/>
                <var name="LPU_ACCESS_FILTER" default="SELECT srv_district_id FROM PODS.SRV_DISTRICT_GCL"/>
                <query>
                    SELECT * FROM (SELECT EVENT_ID ID, t.* FROM PODS.CHEMICAL_INJECTION_LOG t) d WHERE {FILTER}
                </query>
            </dbQuery>
        </select>
        <insert>
            <dbCommand>
				<var name="CLASS_ID" type="String" direction="Input" default="PODS_CHEMICAL_INJECTION_LOG" /> 
				<var name="POLICY" default="POLICY.xml#INSERT_PODS_SEM"  />
                <var name="EVENT_GUID" default="" type="String"/>
                <var name="INSPECTION_DATE" default="" type="DateTime"/>
                <var name="DESCRIPTION" default="" type="String"/>
                <var name="CHEMICAL_TYPE_CL" default="UNKNOWN" type="String"/>
                <var name="CHEMICAL_MEASUREMENT" default="NULL" type="Decimal"/>
                <var name="REF_CHEMICAL_INJECTOR_EVENT_ID" default="NULL" type="Decimal"/>
                <var name="REF_CHEM_INJECTOR_EVENT_GUID" default="" type="String"/>
                <var name="SOURCE_GCL" default="UNKNOWN" type="String"/>
                <var name="COMMENTS" default="" type="String"/>
                <var name="ID" type="Int64" direction="Output" default="SELECT max(EVENT_ID) id FROM PODS.EVENT_RANGE"/>
                <var name="PODS_USER" type="String"/>
                <var name="USER_ID" default="-1" type="Int64"/>
                <query>
					DO $$
					DECLARE
					returnId integer;
                    BEGIN
                    INSERT INTO PODS.EVENT_RANGE (EVENT_GUID,FEATURE_ID,STATION_ID_BEGIN,STATION_ID_END,PODS_USER,CREATE_DATE,EFFECTIVE_FROM_DATE,CURRENT_INDICATOR_LF,POSITIONING_TYPE_CL)
                    VALUES('{EVENT_GUID}','CHEM_INJECT_LOG',0,0,NULLIF('{PODS_USER}',''),current_timestamp,current_timestamp,'Y','UNKNOWN')
                    RETURNING EVENT_ID INTO returnId;

                    INSERT INTO PODS.CHEMICAL_INJECTION_LOG(EVENT_ID,EVENT_GUID,INSPECTION_DATE,DESCRIPTION,CHEMICAL_TYPE_CL,CHEMICAL_MEASUREMENT,REF_CHEMICAL_INJECTOR_EVENT_ID,REF_CHEM_INJECTOR_EVENT_GUID,SOURCE_GCL,COMMENTS)
                    VALUES(returnId,'{EVENT_GUID}','{INSPECTION_DATE}',NULLIF('{DESCRIPTION}',''),NULLIF('{CHEMICAL_TYPE_CL}',''),{CHEMICAL_MEASUREMENT},{REF_CHEMICAL_INJECTOR_EVENT_ID},'{REF_CHEM_INJECTOR_EVENT_GUID}',NULLIF('{SOURCE_GCL}',''),NULLIF('{COMMENTS}',''));
                    END $$;
                </query>
            </dbCommand>
        </insert>
        <update>
            <dbCommand>
				<param name="CLASS_ID" type="String" direction="Input" default="PODS_CHEMICAL_INJECTION_LOG" /> 
				<var name="POLICY" default="POLICY.xml#UPDATE_PODS_SEM"  />
                <param name="EVENT_GUID" default="" type="String"/>
                <param name="INSPECTION_DATE" default="" type="DateTime"/>
                <param name="DESCRIPTION" default="" type="String"/>
                <param name="CHEMICAL_TYPE_CL" default="UNKNOWN" type="String"/>
                <param name="CHEMICAL_MEASUREMENT" default="NULL" type="Decimal"/>
                <param name="REF_CHEMICAL_INJECTOR_EVENT_ID" default="NULL" type="Decimal"/>
                <param name="REF_CHEM_INJECTOR_EVENT_GUID" default="" type="String"/>
                <param name="SOURCE_GCL" default="UNKNOWN" type="String"/>
                <param name="COMMENTS" default="" type="String"/>
                <param name="ID" type="Int64"/>
                <param name="USER_ID" default="-1" type="Int64"/>
                <query>
                    UPDATE PODS.CHEMICAL_INJECTION_LOG
                    SET 
					EVENT_GUID=case when :EVENT_GUID is null then EVENT_GUID else :EVENT_GUID end,
					INSPECTION_DATE=case when :INSPECTION_DATE is null then INSPECTION_DATE else :INSPECTION_DATE end,
                    DESCRIPTION=case when :DESCRIPTION is null then DESCRIPTION else :DESCRIPTION end,
					CHEMICAL_TYPE_CL=case when :CHEMICAL_TYPE_CL is null then CHEMICAL_TYPE_CL else :CHEMICAL_TYPE_CL end,
					CHEMICAL_MEASUREMENT=case when :CHEMICAL_MEASUREMENT is null then CHEMICAL_MEASUREMENT else :CHEMICAL_MEASUREMENT end,
					REF_CHEMICAL_INJECTOR_EVENT_ID=case when :REF_CHEMICAL_INJECTOR_EVENT_ID is null then REF_CHEMICAL_INJECTOR_EVENT_ID else :REF_CHEMICAL_INJECTOR_EVENT_ID end,
					REF_CHEM_INJECTOR_EVENT_GUID=case when :REF_CHEM_INJECTOR_EVENT_GUID is null then REF_CHEM_INJECTOR_EVENT_GUID else :REF_CHEM_INJECTOR_EVENT_GUID end,
                    SOURCE_GCL=case when :SOURCE_GCL is null then SOURCE_GCL else :SOURCE_GCL end,
					COMMENTS=case when :COMMENTS is null then COMMENTS else :COMMENTS end
                    WHERE EVENT_ID = :ID;
                </query>
            </dbCommand>
        </update>
        <delete>
            <dbCommand>
				<var name="CLASS_ID" type="String" direction="Input" default="PODS_CHEMICAL_INJECTION_LOG" /> 
				<var name="POLICY" default="POLICY.xml#DELETE_PODS_SEM"  />
                <var name="ID" type="Int64"/>
                <var name="USER_ID" default="-1" type="Int64"/>
                <query>
					DO $$
                    BEGIN
                    UPDATE PODS.EVENT_RANGE
                    SET CURRENT_INDICATOR_LF='N'
                    WHERE EVENT_ID = {ID};

                    DELETE FROM PODS.CHEMICAL_INJECTION_LOG
                    WHERE EVENT_ID = {ID};
                    DELETE FROM WEB50.LNK_GATE WHERE LEFT_OBJ_ID = 'PODS_CHEMICAL_INJECTION_LOG/'||CAST({ID} AS VARCHAR(30)) OR RIGHT_OBJ_ID = 'PODS_CHEMICAL_INJECTION_LOG/'||CAST({ID} AS VARCHAR(30));
					END $$;
                </query>
            </dbCommand>
        </delete>
    </data>
    <data table="CHEMICAL_INJECTOR" schema="PODS" id="PODS_CHEMICAL_INJECTOR" comment="PODS.CHEMICAL_INJECTOR">
        <select>
            <dbQuery idField="ID">
                <param name="USER_ID" default="-1" type="Int64"/>
                <var name="FILTER" default="1=1"/>
                <var name="LPU_ACCESS_FILTER" default="SELECT srv_district_id FROM PODS.SRV_DISTRICT_GCL"/>
                <query>
                    SELECT * FROM (SELECT EVENT_ID ID, t.* FROM PODS.CHEMICAL_INJECTOR t) d WHERE {FILTER}
                </query>
            </dbQuery>
        </select>
        <insert>
            <dbCommand>
				<var name="CLASS_ID" type="String" direction="Input" default="PODS_CHEMICAL_INJECTOR" /> 
				<var name="POLICY" default="POLICY.xml#INSERT_PODS_SEM"  />
                <var name="EVENT_GUID" default="" type="String"/>
                <var name="INJECTOR_NAME" default="" type="String"/>
                <var name="DATE_INSTALLED" default="" type="DateTime"/>
                <var name="DESCRIPTION" default="" type="String"/>
                <var name="TYPE_CL" default="UNKNOWN" type="String"/>
                <var name="SOURCE_GCL" default="UNKNOWN" type="String"/>
                <var name="COMMENTS" default="" type="String"/>
                <var name="ID" type="Int64" direction="Output" default="SELECT max(EVENT_ID) id FROM PODS.EVENT_RANGE"/>
                <var name="PODS_USER" type="String"/>
                <var name="USER_ID" default="-1" type="Int64"/>
                <query>
					DO $$
					DECLARE
					returnId integer;
                    BEGIN
                    INSERT INTO PODS.EVENT_RANGE (EVENT_GUID,FEATURE_ID,STATION_ID_BEGIN,STATION_ID_END,PODS_USER,CREATE_DATE,EFFECTIVE_FROM_DATE,CURRENT_INDICATOR_LF,POSITIONING_TYPE_CL)
                    VALUES('{EVENT_GUID}','CHEM_INJECT',0,0,NULLIF('{PODS_USER}',''),current_timestamp,current_timestamp,'Y','UNKNOWN')
                    RETURNING EVENT_ID INTO returnId;

                    INSERT INTO PODS.CHEMICAL_INJECTOR(EVENT_ID,EVENT_GUID,INJECTOR_NAME,DATE_INSTALLED,DESCRIPTION,TYPE_CL,SOURCE_GCL,COMMENTS)
                    VALUES(returnId,'{EVENT_GUID}',NULLIF('{INJECTOR_NAME}',''),'{DATE_INSTALLED}',NULLIF('{DESCRIPTION}',''),NULLIF('{TYPE_CL}',''),NULLIF('{SOURCE_GCL}',''),NULLIF('{COMMENTS}',''));
                    END $$;
                </query>
            </dbCommand>
        </insert>
        <update>
            <dbCommand>
				<param name="CLASS_ID" type="String" direction="Input" default="PODS_CHEMICAL_INJECTOR" /> 
				<var name="POLICY" default="POLICY.xml#UPDATE_PODS_SEM"  />
                <param name="EVENT_GUID" default="" type="String"/>
                <param name="INJECTOR_NAME" default="" type="String"/>
                <param name="DATE_INSTALLED" default="" type="DateTime"/>
                <param name="DESCRIPTION" default="" type="String"/>
                <param name="TYPE_CL" default="UNKNOWN" type="String"/>
                <param name="SOURCE_GCL" default="UNKNOWN" type="String"/>
                <param name="COMMENTS" default="" type="String"/>
                <param name="ID" type="Int64"/>
                <param name="USER_ID" default="-1" type="Int64"/>
                <query>
                    UPDATE PODS.CHEMICAL_INJECTOR
                    SET 
					EVENT_GUID=case when :EVENT_GUID is null then EVENT_GUID else :EVENT_GUID end,
					INJECTOR_NAME=case when :INJECTOR_NAME is null then INJECTOR_NAME else :INJECTOR_NAME end,
                    DATE_INSTALLED=case when :DATE_INSTALLED is null then DATE_INSTALLED else :DATE_INSTALLED end,
                    DESCRIPTION=case when :DESCRIPTION is null then DESCRIPTION else :DESCRIPTION end,
					TYPE_CL=case when :TYPE_CL is null then TYPE_CL else :TYPE_CL end,
					SOURCE_GCL=case when :SOURCE_GCL is null then SOURCE_GCL else :SOURCE_GCL end,
					COMMENTS=case when :COMMENTS is null then COMMENTS else :COMMENTS end
                    WHERE EVENT_ID = :ID;
                </query>
            </dbCommand>
        </update>
        <delete>
            <dbCommand>
				<var name="CLASS_ID" type="String" direction="Input" default="PODS_CHEMICAL_INJECTOR" /> 
				<var name="POLICY" default="POLICY.xml#DELETE_PODS_SEM"  />
                <var name="ID" type="Int64"/>
                <var name="USER_ID" default="-1" type="Int64"/>
                <query>
					DO $$
                    BEGIN
                    UPDATE PODS.EVENT_RANGE
                    SET CURRENT_INDICATOR_LF = 'N'
                    WHERE EVENT_ID = {ID};

                    UPDATE PODS.EVENT_RANGE
                    SET CURRENT_INDICATOR_LF = 'N'
                    WHERE EVENT_ID = (SELECT EVENT_ID
                    FROM PODS.CHEMICAL_INJECTION_LOG
                    WHERE REF_CHEMICAL_INJECTOR_EVENT_ID = {ID});

                    DELETE
                    FROM WEB50.LNK_GATE
                    WHERE LEFT_OBJ_ID IN (SELECT  'PODS_CHEMICAL_INJECTION_LOG/'||CAST(EVENT_ID AS VARCHAR(30))
                    FROM PODS.CHEMICAL_INJECTION_LOG
                    WHERE REF_CHEMICAL_INJECTOR_EVENT_ID = {ID})
                    OR RIGHT_OBJ_ID IN (SELECT  'PODS_CHEMICAL_INJECTION_LOG/'||CAST(EVENT_ID AS VARCHAR(30))
                    FROM PODS.CHEMICAL_INJECTION_LOG
                    WHERE REF_CHEMICAL_INJECTOR_EVENT_ID = {ID});


                    DELETE
                    FROM PODS.CHEMICAL_INJECTION_LOG
                    WHERE REF_CHEMICAL_INJECTOR_EVENT_ID = {ID};

                    DELETE
                    FROM PODS.CHEMICAL_INJECTOR
                    WHERE EVENT_ID = {ID};

                    DELETE
                    FROM WEB50.LNK_GATE
                    WHERE LEFT_OBJ_ID = 'PODS_CHEMICAL_INJECTOR/'||CAST({ID} AS VARCHAR(30))
                    OR RIGHT_OBJ_ID = 'PODS_CHEMICAL_INJECTOR/'||CAST({ID} AS VARCHAR(30));
					END $$;
                </query>
            </dbCommand>
        </delete>
    </data>
    <data table="CLOSURE" schema="PODS" id="PODS_CLOSURE" comment="PODS.CLOSURE">
        <select>
            <dbQuery idField="ID">
                <param name="USER_ID" default="-1" type="Int64"/>
                <var name="FILTER" default="1=1"/>
                <var name="LPU_ACCESS_FILTER" default="SELECT srv_district_id FROM PODS.SRV_DISTRICT_GCL"/>
                <query>
                    SELECT * FROM (SELECT EVENT_ID ID, t.* FROM PODS.CLOSURE t) d WHERE {FILTER}
                </query>
            </dbQuery>
        </select>
        <insert>
            <dbCommand>
				<var name="CLASS_ID" type="String" direction="Input" default="PODS_CLOSURE" /> 
				<var name="POLICY" default="POLICY.xml#INSERT_PODS_SEM"  />
				<var name="EVENT_GUID" default="" type="String"/>
				<var name="TYPE_CL" default="UNKNOWN" type="String"/>
				<var name="MANUFACTURER_CL" default="UNKNOWN" type="String"/>
				<var name="DATE_MANUFACTURED" default="" type="DateTime"/>
				<var name="NOMINAL_DIAMETER_GCL" default="0" type="Decimal"/>
				<var name="NOMINAL_WALL_THICKNESS_GCL" default="0" type="Decimal"/>
				<var name="SPECIFICATION_CL" default="UNKNOWN" type="String"/>
				<var name="NOMINAL_PRESSURE_RATING" default="NULL" type="Decimal"/>
				<var name="MILL_TEST_PRESSURE" default="NULL" type="Decimal"/>
				<var name="MATERIAL_CL" default="UNKNOWN" type="String"/>
				<var name="DATE_INSTALLED" default="" type="DateTime"/>
				<var name="DESCRIPTION" default="" type="String"/>
				<var name="SOURCE_GCL" default="UNKNOWN" type="String"/>
				<var name="COMMENTS" default="" type="String"/>
                <var name="ID" type="Int64" direction="Output" default="SELECT max(EVENT_ID) id FROM PODS.EVENT_RANGE"/>
				<var name="PODS_USER" type="String"/>
                <var name="USER_ID" default="-1" type="Int64"/>
                <query>
					DO $$
					DECLARE
					returnId integer;
                    BEGIN
                    INSERT INTO PODS.EVENT_RANGE (EVENT_GUID,FEATURE_ID,STATION_ID_BEGIN,STATION_ID_END,PODS_USER,CREATE_DATE,EFFECTIVE_FROM_DATE,CURRENT_INDICATOR_LF,POSITIONING_TYPE_CL)
                    VALUES('{EVENT_GUID}','CLOSURE',0,0,NULLIF('{PODS_USER}',''),current_timestamp,current_timestamp,'Y','UNKNOWN')
                    RETURNING EVENT_ID INTO returnId;

                    INSERT INTO PODS.CLOSURE(EVENT_ID,EVENT_GUID,TYPE_CL,MANUFACTURER_CL,DATE_MANUFACTURED,NOMINAL_DIAMETER_GCL,NOMINAL_WALL_THICKNESS_GCL,SPECIFICATION_CL,NOMINAL_PRESSURE_RATING,MILL_TEST_PRESSURE,MATERIAL_CL,DATE_INSTALLED,DESCRIPTION,SOURCE_GCL,COMMENTS)
                    VALUES(returnId,'{EVENT_GUID}',NULLIF('{TYPE_CL}',''),NULLIF('{MANUFACTURER_CL}',''),'{DATE_MANUFACTURED}',{NOMINAL_DIAMETER_GCL},{NOMINAL_WALL_THICKNESS_GCL},NULLIF('{SPECIFICATION_CL}',''),{NOMINAL_PRESSURE_RATING},{MILL_TEST_PRESSURE},NULLIF('{MATERIAL_CL}',''),'{DATE_INSTALLED}',NULLIF('{DESCRIPTION}',''),NULLIF('{SOURCE_GCL}',''),NULLIF('{COMMENTS}',''));
                    END $$;
                </query>
            </dbCommand>
        </insert>
        <update>
            <dbCommand>
				<param name="CLASS_ID" type="String" direction="Input" default="PODS_CLOSURE" /> 
				<var name="POLICY" default="POLICY.xml#UPDATE_PODS_SEM"  />
                <param name="EVENT_GUID" default="" type="String"/>
                <param name="TYPE_CL" default="UNKNOWN" type="String"/>
                <param name="MANUFACTURER_CL" default="UNKNOWN" type="String"/>
                <param name="DATE_MANUFACTURED" default="" type="DateTime"/>
                <param name="NOMINAL_DIAMETER_GCL" default="0" type="Decimal"/>
                <param name="NOMINAL_WALL_THICKNESS_GCL" default="0" type="Decimal"/>
                <param name="SPECIFICATION_CL" default="UNKNOWN" type="String"/>
                <param name="NOMINAL_PRESSURE_RATING" default="NULL" type="Decimal"/>
                <param name="MILL_TEST_PRESSURE" default="NULL" type="Decimal"/>
                <param name="MATERIAL_CL" default="UNKNOWN" type="String"/>
                <param name="DATE_INSTALLED" default="" type="DateTime"/>
                <param name="DESCRIPTION" default="" type="String"/>
                <param name="SOURCE_GCL" default="UNKNOWN" type="String"/>
                <param name="COMMENTS" default="" type="String"/>
                <param name="ID" type="Int64"/>
                <param name="USER_ID" default="-1" type="Int64"/>
                <query>
                    UPDATE PODS.CLOSURE
                    SET 
					EVENT_GUID=case when :EVENT_GUID is null then EVENT_GUID else :EVENT_GUID end,
					TYPE_CL=case when :TYPE_CL is null then TYPE_CL else :TYPE_CL end,
					MANUFACTURER_CL=case when :MANUFACTURER_CL is null then MANUFACTURER_CL else :MANUFACTURER_CL end,
					DATE_MANUFACTURED=case when :DATE_MANUFACTURED is null then DATE_MANUFACTURED else :DATE_MANUFACTURED end,
					NOMINAL_DIAMETER_GCL=case when :NOMINAL_DIAMETER_GCL is null then NOMINAL_DIAMETER_GCL else :NOMINAL_DIAMETER_GCL end,
					NOMINAL_WALL_THICKNESS_GCL=case when :NOMINAL_WALL_THICKNESS_GCL is null then NOMINAL_WALL_THICKNESS_GCL else :NOMINAL_WALL_THICKNESS_GCL end,
					SPECIFICATION_CL=case when :SPECIFICATION_CL is null then SPECIFICATION_CL else :SPECIFICATION_CL end,
					NOMINAL_PRESSURE_RATING=case when :NOMINAL_PRESSURE_RATING is null then NOMINAL_PRESSURE_RATING else :NOMINAL_PRESSURE_RATING end,
					MILL_TEST_PRESSURE=case when :MILL_TEST_PRESSURE is null then MILL_TEST_PRESSURE else :MILL_TEST_PRESSURE end,
					MATERIAL_CL=case when :MATERIAL_CL is null then MATERIAL_CL else :MATERIAL_CL end,
					DATE_INSTALLED=case when :DATE_INSTALLED is null then DATE_INSTALLED else :DATE_INSTALLED end,
					DESCRIPTION=case when :DESCRIPTION is null then DESCRIPTION else :DESCRIPTION end,
					SOURCE_GCL=case when :SOURCE_GCL is null then SOURCE_GCL else :SOURCE_GCL end,
					COMMENTS=case when :COMMENTS is null then COMMENTS else :COMMENTS end
                    WHERE EVENT_ID = {ID};
                  </query>
            </dbCommand>
        </update>
        <delete>
            <dbCommand>
				<var name="CLASS_ID" type="String" direction="Input" default="PODS_CLOSURE" /> 
				<var name="POLICY" default="POLICY.xml#DELETE_PODS_SEM"  />
                <var name="ID" type="Int64"/>
                <var name="USER_ID" default="-1" type="Int64"/>
                <query>
					DO $$
                    BEGIN
                    UPDATE PODS.EVENT_RANGE
                    SET CURRENT_INDICATOR_LF='N'
                    WHERE EVENT_ID = {ID};

                    DELETE FROM PODS.CLOSURE
                    WHERE EVENT_ID = {ID};
                    DELETE FROM WEB50.LNK_GATE WHERE LEFT_OBJ_ID = 'PODS_CLOSURE/'||CAST({ID} AS VARCHAR(30)) OR RIGHT_OBJ_ID = 'PODS_CLOSURE/'||CAST({ID} AS VARCHAR(30));
					END $$;
                </query>
            </dbCommand>
        </delete>
    </data>
    <data table="COLLAR" schema="PODS" id="PODS_COLLAR" comment="PODS.COLLAR">
        <select>
            <dbQuery idField="ID">
                <param name="USER_ID" default="-1" type="Int64"/>
                <var name="FILTER" default="1=1"/>
                <var name="LPU_ACCESS_FILTER" default="SELECT srv_district_id FROM PODS.SRV_DISTRICT_GCL"/>
                <query>
                    SELECT * FROM (SELECT EVENT_ID ID, t.* FROM PODS.COLLAR t) d WHERE {FILTER}
                </query>
            </dbQuery>
        </select>
        <insert>
            <dbCommand>
				<var name="CLASS_ID" type="String" direction="Input" default="PODS_COLLAR" /> 
				<var name="POLICY" default="POLICY.xml#INSERT_PODS_SEM"  />
                <var name="EVENT_GUID" default="" type="String"/>
                <var name="COLLAR_ID" default="" type="String"/>
                <var name="TYPE_CL" default="UNKNOWN" type="String"/>
                <var name="SERIAL_NUMBER" default="" type="String"/>
                <var name="HEAT_NUMBER" default="" type="String"/>
                <var name="PART_NUMBER" default="" type="String"/>
                <var name="DESIGN_MIN_TEMPERATURE" default="NULL" type="Decimal"/>
                <var name="DESIGN_MAX_TEMPERATURE" default="NULL" type="Decimal"/>
                <var name="MANUFACTURER_CL" default="UNKNOWN" type="String"/>
                <var name="DATE_MANUFACTURED" default="" type="DateTime"/>
                <var name="COATING_TYPE_SCL" default="UNKNOWN" type="String"/>
                <var name="COATING_SUBTYPE_SCL" default="NONE" type="String"/>
                <var name="INTERNAL_NOMINAL_DIAMETER_GCL" default="0" type="Decimal"/>
                <var name="EXTERNAL_NOMINAL_DIAMETER_GCL" default="0" type="Decimal"/>
                <var name="NOMINAL_WALL_THICKNESS_GCL" default="0" type="Decimal"/>
                <var name="MATERIAL_CL" default="UNKNOWN" type="String"/>
                <var name="FITTING_TYPE_CL" default="UNKNOWN" type="String"/>
                <var name="MAX_DEPTH" default="NULL" type="Decimal"/>
                <var name="DATE_INSTALLED" default="" type="DateTime"/>
                <var name="DESCRIPTION" default="" type="String"/>
                <var name="SOURCE_GCL" default="UNKNOWN" type="String"/>
                <var name="COMMENTS" default="" type="String"/>
                <var name="ID" type="Int64" direction="Output" default="SELECT max(EVENT_ID) id FROM PODS.EVENT_RANGE"/>
                <var name="PODS_USER" type="String"/>
                <var name="USER_ID" default="-1" type="Int64"/>
                <query>
					DO $$
					DECLARE
					returnId integer;
                    BEGIN
                    INSERT INTO PODS.EVENT_RANGE (EVENT_GUID,FEATURE_ID,STATION_ID_BEGIN,STATION_ID_END,PODS_USER,CREATE_DATE,EFFECTIVE_FROM_DATE,CURRENT_INDICATOR_LF,POSITIONING_TYPE_CL)
                    VALUES('{EVENT_GUID}','COLLAR',0,0,NULLIF('{PODS_USER}',''),current_timestamp,current_timestamp,'Y','UNKNOWN')
                    RETURNING EVENT_ID INTO returnId;

                    INSERT INTO PODS.COLLAR(EVENT_ID,EVENT_GUID,COLLAR_ID,TYPE_CL,SERIAL_NUMBER,HEAT_NUMBER,PART_NUMBER,DESIGN_MIN_TEMPERATURE,DESIGN_MAX_TEMPERATURE,MANUFACTURER_CL,DATE_MANUFACTURED,COATING_TYPE_SCL,COATING_SUBTYPE_SCL,INTERNAL_NOMINAL_DIAMETER_GCL,EXTERNAL_NOMINAL_DIAMETER_GCL,NOMINAL_WALL_THICKNESS_GCL,MATERIAL_CL,FITTING_TYPE_CL,MAX_DEPTH,DATE_INSTALLED,DESCRIPTION,SOURCE_GCL,COMMENTS)
                    VALUES(returnId,'{EVENT_GUID}',returnId,NULLIF('{TYPE_CL}',''),NULLIF('{SERIAL_NUMBER}',''),NULLIF('{HEAT_NUMBER}',''),NULLIF('{PART_NUMBER}',''),{DESIGN_MIN_TEMPERATURE},{DESIGN_MAX_TEMPERATURE},NULLIF('{MANUFACTURER_CL}',''),'{DATE_MANUFACTURED}',coalesce(SUBSTR(NULLIF('{COATING_TYPE_SCL}',''),0,strpos(NULLIF('{COATING_TYPE_SCL}',''),'@')),'UNKNOWN'),coalesce(SUBSTR(NULLIF('{COATING_TYPE_SCL}',''),strpos(NULLIF('{COATING_TYPE_SCL}',''),'@')+1,length(NULLIF('{COATING_TYPE_SCL}',''))-strpos(NULLIF('{COATING_TYPE_SCL}',''),'@')),'NONE'),{INTERNAL_NOMINAL_DIAMETER_GCL},{EXTERNAL_NOMINAL_DIAMETER_GCL},{NOMINAL_WALL_THICKNESS_GCL},NULLIF('{MATERIAL_CL}',''),NULLIF('{FITTING_TYPE_CL}',''),{MAX_DEPTH},'{DATE_INSTALLED}',NULLIF('{DESCRIPTION}',''),NULLIF('{SOURCE_GCL}',''),NULLIF('{COMMENTS}',''));
                    END $$;
                </query>
            </dbCommand>
        </insert>
        <update>
            <dbCommand>
				<param name="CLASS_ID" type="String" direction="Input" default="PODS_COLLAR" /> 
				<var name="POLICY" default="POLICY.xml#UPDATE_PODS_SEM"  />
                <param name="EVENT_GUID" default="" type="String"/>
                <param name="COLLAR_ID" default="" type="String"/>
                <param name="TYPE_CL" default="UNKNOWN" type="String"/>
                <param name="SERIAL_NUMBER" default="" type="String"/>
                <param name="HEAT_NUMBER" default="" type="String"/>
                <param name="PART_NUMBER" default="" type="String"/>
                <param name="DESIGN_MIN_TEMPERATURE" default="NULL" type="Decimal"/>
                <param name="DESIGN_MAX_TEMPERATURE" default="NULL" type="Decimal"/>
                <param name="MANUFACTURER_CL" default="UNKNOWN" type="String"/>
                <param name="DATE_MANUFACTURED" default="" type="DateTime"/>
                <param name="COATING_TYPE_SCL" default="UNKNOWN" type="String"/>
                <param name="COATING_SUBTYPE_SCL" default="NONE" type="String"/>
                <param name="INTERNAL_NOMINAL_DIAMETER_GCL" default="0" type="Decimal"/>
                <param name="EXTERNAL_NOMINAL_DIAMETER_GCL" default="0" type="Decimal"/>
                <param name="NOMINAL_WALL_THICKNESS_GCL" default="0" type="Decimal"/>
                <param name="MATERIAL_CL" default="UNKNOWN" type="String"/>
                <param name="FITTING_TYPE_CL" default="UNKNOWN" type="String"/>
                <param name="MAX_DEPTH" default="NULL" type="Decimal"/>
                <param name="DATE_INSTALLED" default="" type="DateTime"/>
                <param name="DESCRIPTION" default="" type="String"/>
                <param name="SOURCE_GCL" default="UNKNOWN" type="String"/>
                <param name="COMMENTS" default="" type="String"/>
                <param name="ID" type="Int64"/>
                <param name="USER_ID" default="-1" type="Int64"/>
                <query>
                    UPDATE PODS.COLLAR
                    SET 
					EVENT_GUID=case when :EVENT_GUID is null then EVENT_GUID else :EVENT_GUID end,
					COLLAR_ID=case when :COLLAR_ID is null then COLLAR_ID else :COLLAR_ID end,
                    TYPE_CL=case when :TYPE_CL is null then TYPE_CL else :TYPE_CL end,
					SERIAL_NUMBER=case when :SERIAL_NUMBER is null then SERIAL_NUMBER else :SERIAL_NUMBER end,
					HEAT_NUMBER=case when :HEAT_NUMBER is null then HEAT_NUMBER else :HEAT_NUMBER end,
					PART_NUMBER=case when :PART_NUMBER is null then PART_NUMBER else :PART_NUMBER end,
					DESIGN_MIN_TEMPERATURE=case when :DESIGN_MIN_TEMPERATURE is null then DESIGN_MIN_TEMPERATURE else :DESIGN_MIN_TEMPERATURE end,
					DESIGN_MAX_TEMPERATURE=case when :DESIGN_MAX_TEMPERATURE is null then DESIGN_MAX_TEMPERATURE else :DESIGN_MAX_TEMPERATURE end,
                    MANUFACTURER_CL=case when :MANUFACTURER_CL is null then MANUFACTURER_CL else :MANUFACTURER_CL end,
                    DATE_MANUFACTURED=case when :DATE_MANUFACTURED is null then DATE_MANUFACTURED else :DATE_MANUFACTURED end,
					COATING_TYPE_SCL=coalesce(SUBSTR(:COATING_TYPE_SCL,0,strpos(:COATING_TYPE_SCL,'@')),'UNKNOWN'),
					COATING_SUBTYPE_SCL=coalesce(SUBSTR(:COATING_TYPE_SCL,strpos(:COATING_TYPE_SCL,'@')+1,length(:COATING_TYPE_SCL)-strpos(:COATING_TYPE_SCL,'@')),'NONE'),
					INTERNAL_NOMINAL_DIAMETER_GCL=case when :INTERNAL_NOMINAL_DIAMETER_GCL is null then INTERNAL_NOMINAL_DIAMETER_GCL else :INTERNAL_NOMINAL_DIAMETER_GCL end,
					EXTERNAL_NOMINAL_DIAMETER_GCL=case when :EXTERNAL_NOMINAL_DIAMETER_GCL is null then EXTERNAL_NOMINAL_DIAMETER_GCL else :EXTERNAL_NOMINAL_DIAMETER_GCL end,
                    NOMINAL_WALL_THICKNESS_GCL=case when :NOMINAL_WALL_THICKNESS_GCL is null then NOMINAL_WALL_THICKNESS_GCL else :NOMINAL_WALL_THICKNESS_GCL end,
					MATERIAL_CL=case when :MATERIAL_CL is null then MATERIAL_CL else :MATERIAL_CL end,
					FITTING_TYPE_CL=case when :FITTING_TYPE_CL is null then FITTING_TYPE_CL else :FITTING_TYPE_CL end,
					MAX_DEPTH=case when :MAX_DEPTH is null then MAX_DEPTH else :MAX_DEPTH end,
					DATE_INSTALLED=case when :DATE_INSTALLED is null then DATE_INSTALLED else :DATE_INSTALLED end,
                    DESCRIPTION=case when :DESCRIPTION is null then DESCRIPTION else :DESCRIPTION end,
                    SOURCE_GCL=case when :SOURCE_GCL is null then SOURCE_GCL else :SOURCE_GCL end,
                    COMMENTS=case when :COMMENTS is null then COMMENTS else :COMMENTS end
                    WHERE EVENT_ID = :ID;
                </query>
            </dbCommand>
        </update>
        <delete>
            <dbCommand>
				<var name="CLASS_ID" type="String" direction="Input" default="PODS_COLLAR" /> 
				<var name="POLICY" default="POLICY.xml#DELETE_PODS_SEM"  />
                <var name="ID" type="Int64"/>
                <var name="USER_ID" default="-1" type="Int64"/>
                <query>
					DO $$
                    BEGIN
                    UPDATE PODS.EVENT_RANGE
                    SET CURRENT_INDICATOR_LF='N'
                    WHERE EVENT_ID = {ID};

                    DELETE FROM PODS.COLLAR
                    WHERE EVENT_ID = {ID};
                    DELETE FROM WEB50.LNK_GATE WHERE LEFT_OBJ_ID = 'PODS_COLLAR/'||CAST({ID} AS VARCHAR(30)) OR RIGHT_OBJ_ID = 'PODS_COLLAR/'||CAST({ID} AS VARCHAR(30));
					END $$;
                </query>
            </dbCommand>
        </delete>
    </data>
    <data table="COLLET_CONNECTOR" schema="PODS" id="PODS_COLLET_CONNECTOR" comment="PODS.COLLET_CONNECTOR">
        <select>
            <dbQuery idField="ID">
                <param name="USER_ID" default="-1" type="Int64"/>
                <var name="FILTER" default="1=1"/>
                <var name="LPU_ACCESS_FILTER" default="SELECT srv_district_id FROM PODS.SRV_DISTRICT_GCL"/>
                <query>
                    SELECT * FROM (SELECT EVENT_ID ID, t.* FROM PODS.COLLET_CONNECTOR t) d WHERE {FILTER}
                </query>
            </dbQuery>
        </select>
        <insert>
            <dbCommand>
				<var name="CLASS_ID" type="String" direction="Input" default="PODS_COLLET_CONNECTOR" /> 
				<var name="POLICY" default="POLICY.xml#INSERT_PODS_SEM"  />
                <var name="EVENT_GUID" default="" type="String"/>
                <var name="CONNECTOR_ID" default="" type="String"/>
                <var name="SERIAL_NUMBER" default="" type="String"/>
                <var name="PART_NUMBER" default="" type="String"/>
                <var name="TYPE_CL" default="UNKNOWN" type="String"/>
                <var name="MATERIAL_CL" default="UNKNOWN" type="String"/>
                <var name="MANUFACTURER_CL" default="UNKNOWN" type="String"/>
                <var name="DATE_MANUFACTURED" default="" type="DateTime"/>
                <var name="SPECIFICATION_CL" default="UNKNOWN" type="String"/>
                <var name="MILL_TEST_PRESSURE" default="NULL" type="Decimal"/>
                <var name="NOMINAL_EXT_PRESSURE_RATING" default="NULL" type="Decimal"/>
                <var name="NOMINAL_INT_PRESSURE_RATING" default="NULL" type="Decimal"/>
                <var name="DESIGN_MIN_TEMPERATURE" default="NULL" type="Decimal"/>
                <var name="DESIGN_MAX_TEMPERATURE" default="NULL" type="Decimal"/>
                <var name="DATE_INSTALLED" default="" type="DateTime"/>
                <var name="DESCRIPTION" default="" type="String"/>
                <var name="SOURCE_GCL" default="UNKNOWN" type="String"/>
                <var name="COMMENTS" default="" type="String"/>
                <var name="ID" type="Int64" direction="Output" default="SELECT max(EVENT_ID) id FROM PODS.EVENT_RANGE"/>
                <var name="PODS_USER" type="String"/>
                <var name="USER_ID" default="-1" type="Int64"/>
                <query>
					DO $$
					DECLARE
					returnId integer;
                    BEGIN
                    INSERT INTO PODS.EVENT_RANGE (EVENT_GUID,FEATURE_ID,STATION_ID_BEGIN,STATION_ID_END,PODS_USER,CREATE_DATE,EFFECTIVE_FROM_DATE,CURRENT_INDICATOR_LF,POSITIONING_TYPE_CL)
                    VALUES('{EVENT_GUID}','COLLET_CONNECTOR',0,0,NULLIF('{PODS_USER}',''),current_timestamp,current_timestamp,'Y','UNKNOWN')
                    RETURNING EVENT_ID INTO returnId;

                    INSERT INTO PODS.COLLET_CONNECTOR(EVENT_ID,EVENT_GUID,CONNECTOR_ID,SERIAL_NUMBER,PART_NUMBER,TYPE_CL,MATERIAL_CL,MANUFACTURER_CL,DATE_MANUFACTURED,SPECIFICATION_CL,MILL_TEST_PRESSURE,NOMINAL_EXT_PRESSURE_RATING,NOMINAL_INT_PRESSURE_RATING,DESIGN_MIN_TEMPERATURE,DESIGN_MAX_TEMPERATURE,DATE_INSTALLED,DESCRIPTION,SOURCE_GCL,COMMENTS)
                    VALUES(returnId,'{EVENT_GUID}',returnId,NULLIF('{SERIAL_NUMBER}',''),NULLIF('{PART_NUMBER}',''),NULLIF('{TYPE_CL}',''),NULLIF('{MATERIAL_CL}',''),NULLIF('{MANUFACTURER_CL}',''),'{DATE_MANUFACTURED}',NULLIF('{SPECIFICATION_CL}',''),{MILL_TEST_PRESSURE},{NOMINAL_EXT_PRESSURE_RATING},{NOMINAL_INT_PRESSURE_RATING},{DESIGN_MIN_TEMPERATURE},{DESIGN_MAX_TEMPERATURE},'{DATE_INSTALLED}',NULLIF('{DESCRIPTION}',''),NULLIF('{SOURCE_GCL}',''),NULLIF('{COMMENTS}',''));
                    END $$;
                </query>
            </dbCommand>
        </insert>
        <update>
            <dbCommand>
				<param name="CLASS_ID" type="String" direction="Input" default="PODS_COLLET_CONNECTOR" /> 
				<var name="POLICY" default="POLICY.xml#UPDATE_PODS_SEM"  />
                <param name="EVENT_GUID" default="" type="String"/>
                <param name="CONNECTOR_ID" default="" type="String"/>
                <param name="SERIAL_NUMBER" default="" type="String"/>
                <param name="PART_NUMBER" default="" type="String"/>
                <param name="TYPE_CL" default="UNKNOWN" type="String"/>
                <param name="MATERIAL_CL" default="UNKNOWN" type="String"/>
                <param name="MANUFACTURER_CL" default="UNKNOWN" type="String"/>
                <param name="DATE_MANUFACTURED" default="" type="DateTime"/>
                <param name="SPECIFICATION_CL" default="UNKNOWN" type="String"/>
                <param name="MILL_TEST_PRESSURE" default="NULL" type="Decimal"/>
                <param name="NOMINAL_EXT_PRESSURE_RATING" default="NULL" type="Decimal"/>
                <param name="NOMINAL_INT_PRESSURE_RATING" default="NULL" type="Decimal"/>
                <param name="DESIGN_MIN_TEMPERATURE" default="NULL" type="Decimal"/>
                <param name="DESIGN_MAX_TEMPERATURE" default="NULL" type="Decimal"/>
                <param name="DATE_INSTALLED" default="" type="DateTime"/>
                <param name="DESCRIPTION" default="" type="String"/>
                <param name="SOURCE_GCL" default="UNKNOWN" type="String"/>
                <param name="COMMENTS" default="" type="String"/>
                <param name="ID" type="Int64"/>
                <param name="USER_ID" default="-1" type="Int64"/>
                <query>
                    UPDATE PODS.COLLET_CONNECTOR
                    SET 
					EVENT_GUID=case when :EVENT_GUID is null then EVENT_GUID else :EVENT_GUID end,
					CONNECTOR_ID=case when :CONNECTOR_ID is null then CONNECTOR_ID else :CONNECTOR_ID end,
                    SERIAL_NUMBER=case when :SERIAL_NUMBER is null then SERIAL_NUMBER else :SERIAL_NUMBER end,
                    PART_NUMBER=case when :PART_NUMBER is null then PART_NUMBER else :PART_NUMBER end,
                    TYPE_CL=case when :TYPE_CL is null then TYPE_CL else :TYPE_CL end,MATERIAL_CL=case when :MATERIAL_CL is null then MATERIAL_CL else :MATERIAL_CL end,
                    MANUFACTURER_CL=case when :MANUFACTURER_CL is null then MANUFACTURER_CL else :MANUFACTURER_CL end,
                    DATE_MANUFACTURED=case when :DATE_MANUFACTURED is null then DATE_MANUFACTURED else :DATE_MANUFACTURED end,
                    SPECIFICATION_CL=case when :SPECIFICATION_CL is null then SPECIFICATION_CL else :SPECIFICATION_CL end,
                    MILL_TEST_PRESSURE=case when :MILL_TEST_PRESSURE is null then MILL_TEST_PRESSURE else :MILL_TEST_PRESSURE end,
					NOMINAL_EXT_PRESSURE_RATING=case when :NOMINAL_EXT_PRESSURE_RATING is null then NOMINAL_EXT_PRESSURE_RATING else :NOMINAL_EXT_PRESSURE_RATING end,
					NOMINAL_INT_PRESSURE_RATING=case when :NOMINAL_INT_PRESSURE_RATING is null then NOMINAL_INT_PRESSURE_RATING else :NOMINAL_INT_PRESSURE_RATING end,
                    DESIGN_MIN_TEMPERATURE=case when :DESIGN_MIN_TEMPERATURE is null then DESIGN_MIN_TEMPERATURE else :DESIGN_MIN_TEMPERATURE end,
                    DESIGN_MAX_TEMPERATURE=case when :DESIGN_MAX_TEMPERATURE is null then DESIGN_MAX_TEMPERATURE else :DESIGN_MAX_TEMPERATURE end,
                    DATE_INSTALLED=case when :DATE_INSTALLED is null then DATE_INSTALLED else :DATE_INSTALLED end,
                    DESCRIPTION=case when :DESCRIPTION is null then DESCRIPTION else :DESCRIPTION end,
                    SOURCE_GCL=case when :SOURCE_GCL is null then SOURCE_GCL else :SOURCE_GCL end,
                    COMMENTS=case when :COMMENTS is null then COMMENTS else :COMMENTS end
                    WHERE EVENT_ID = :ID;
                </query>
            </dbCommand>
        </update>
        <delete>
            <dbCommand>
				<param name="CLASS_ID" type="String" direction="Input" default="PODS_COLLET_CONNECTOR" /> 
				<var name="POLICY" default="POLICY.xml#DELETE_PODS_SEM"  />
                <param name="ID" type="Int64"/>
                <param name="USER_ID" default="-1" type="Int64"/>
                <query>
					DO $$
                    BEGIN
                    UPDATE PODS.EVENT_RANGE
                    SET CURRENT_INDICATOR_LF='N'
                    WHERE EVENT_ID = {ID};

                    DELETE FROM PODS.COLLET_CONNECTOR
                    WHERE EVENT_ID = {ID};
                    DELETE FROM WEB50.LNK_GATE WHERE LEFT_OBJ_ID = 'PODS_COLLET_CONNECTOR/'||CAST({ID} AS VARCHAR(30)) OR RIGHT_OBJ_ID = 'PODS_COLLET_CONNECTOR/'||CAST({ID} AS VARCHAR(30)); END $$;
                </query>
            </dbCommand>
        </delete>
    </data>
    <data table="CONCRETE_SLAB" schema="PODS" id="PODS_CONCRETE_SLAB" comment="PODS.CONCRETE_SLAB">
        <select>
            <dbQuery idField="ID">
                <param name="USER_ID" default="-1" type="Int64"/>
                <var name="FILTER" default="1=1"/>
                <var name="LPU_ACCESS_FILTER" default="SELECT srv_district_id FROM PODS.SRV_DISTRICT_GCL"/>
                <query>
                    SELECT * FROM (SELECT EVENT_ID ID, t.* FROM PODS.CONCRETE_SLAB t) d WHERE {FILTER}
                </query>
            </dbQuery>
        </select>
        <insert>
            <dbCommand>
				<var name="CLASS_ID" type="String" direction="Input" default="PODS_CONCRETE_SLAB" /> 
				<var name="POLICY" default="POLICY.xml#INSERT_PODS_SEM"  />
                <var name="EVENT_GUID" default="" type="String"/>
                <var name="NAME" default="" type="String"/>
                <var name="WEIGHT" default="NULL" type="Decimal"/>
                <var name="THICKNESS" default="0" type="Decimal"/>
                <var name="DATE_INSTALLED" default="" type="DateTime"/>
                <var name="DESCRIPTION" default="" type="String"/>
                <var name="SOURCE_GCL" default="UNKNOWN" type="String"/>
                <var name="COMMENTS" default="" type="String"/>
                <var name="ID" type="Int64" direction="Output" default="SELECT max(EVENT_ID) id FROM PODS.EVENT_RANGE"/>
                <var name="PODS_USER" type="String"/>
                <var name="USER_ID" default="-1" type="Int64"/>
                <query>
					DO $$
					DECLARE
					returnId integer;
                    BEGIN
                    INSERT INTO PODS.EVENT_RANGE (EVENT_GUID,FEATURE_ID,STATION_ID_BEGIN,STATION_ID_END,PODS_USER,CREATE_DATE,EFFECTIVE_FROM_DATE,CURRENT_INDICATOR_LF,POSITIONING_TYPE_CL)
                    VALUES('{EVENT_GUID}','CONCRETE_SLAB',0,0,NULLIF('{PODS_USER}',''),current_timestamp,current_timestamp,'Y','UNKNOWN')
                    RETURNING EVENT_ID INTO returnId;

                    INSERT INTO PODS.CONCRETE_SLAB(EVENT_ID,EVENT_GUID,NAME,WEIGHT,THICKNESS,DATE_INSTALLED,DESCRIPTION,SOURCE_GCL,COMMENTS)
                    VALUES(returnId,'{EVENT_GUID}',NULLIF('{NAME}',''),{WEIGHT},{THICKNESS},'{DATE_INSTALLED}',NULLIF('{DESCRIPTION}',''),NULLIF('{SOURCE_GCL}',''),NULLIF('{COMMENTS}',''));
                    END $$;
                </query>
            </dbCommand>
        </insert>
        <update>
            <dbCommand>
				<param name="CLASS_ID" type="String" direction="Input" default="PODS_CONCRETE_SLAB" /> 
				<var name="POLICY" default="POLICY.xml#UPDATE_PODS_SEM"  />
                <param name="EVENT_GUID" default="" type="String"/>
                <param name="NAME" default="" type="String"/>
                <param name="WEIGHT" default="NULL" type="Decimal"/>
                <param name="THICKNESS" default="0" type="Decimal"/>
                <param name="DATE_INSTALLED" default="" type="DateTime"/>
                <param name="DESCRIPTION" default="" type="String"/>
                <param name="SOURCE_GCL" default="UNKNOWN" type="String"/>
                <param name="COMMENTS" default="" type="String"/>
                <param name="ID" type="Int64"/>
                <param name="USER_ID" default="-1" type="Int64"/>
                <query>
                    UPDATE PODS.CONCRETE_SLAB
                    SET 
					EVENT_GUID=case when :EVENT_GUID is null then EVENT_GUID else :EVENT_GUID end,
					NAME=case when :NAME is null then NAME else :NAME end,
					WEIGHT=case when :WEIGHT is null then WEIGHT else :WEIGHT end,
					THICKNESS=case when :THICKNESS is null then THICKNESS else :THICKNESS end,
                    DATE_INSTALLED=case when :DATE_INSTALLED is null then DATE_INSTALLED else :DATE_INSTALLED end,
                    DESCRIPTION=case when :DESCRIPTION is null then DESCRIPTION else :DESCRIPTION end,
                    SOURCE_GCL=case when :SOURCE_GCL is null then SOURCE_GCL else :SOURCE_GCL end,
                    COMMENTS=case when :COMMENTS is null then COMMENTS else :COMMENTS end
                    WHERE EVENT_ID = :ID;
                </query>
            </dbCommand>
        </update>
        <delete>
            <dbCommand>
				<var name="CLASS_ID" type="String" direction="Input" default="PODS_CONCRETE_SLAB" /> 
				<var name="POLICY" default="POLICY.xml#DELETE_PODS_SEM"  />
                <var name="ID" type="Int64"/>
                <var name="USER_ID" default="-1" type="Int64"/>
                <query>
					DO $$
                    BEGIN
                    UPDATE PODS.EVENT_RANGE
                    SET CURRENT_INDICATOR_LF='N'
                    WHERE EVENT_ID = {ID};
                    DELETE FROM PODS.CONCRETE_SLAB
                    WHERE EVENT_ID = {ID};
                    DELETE FROM WEB50.LNK_GATE WHERE LEFT_OBJ_ID = 'PODS_CONCRETE_SLAB/'||CAST({ID} AS VARCHAR(30)) OR RIGHT_OBJ_ID = 'PODS_CONCRETE_SLAB/'||CAST({ID} AS VARCHAR(30)); 
					END $$;
                </query>
            </dbCommand>
        </delete>
    </data>
    <data table="COUNTY_BOUNDARY" schema="PODS" id="PODS_COUNTY_BOUNDARY" comment="PODS.COUNTY_BOUNDARY">
        <select>
            <dbQuery idField="ID">
                <param name="USER_ID" default="-1" type="Int64"/>
                <var name="FILTER" default="1=1"/>
                <var name="LPU_ACCESS_FILTER" default="SELECT srv_district_id FROM PODS.SRV_DISTRICT_GCL"/>
                <query>
                    SELECT * FROM (SELECT EVENT_ID ID, t.* FROM PODS.COUNTY_BOUNDARY t) d WHERE {FILTER}
                </query>
            </dbQuery>
        </select>
        <insert>
            <dbCommand>
				<var name="CLASS_ID" type="String" direction="Input" default="PODS_COUNTY_BOUNDARY" /> 
				<var name="POLICY" default="POLICY.xml#INSERT_PODS_SEM"  />
                <var name="EVENT_GUID" default="" type="String"/>
                <var name="STATE_GCL" default="UNKNOWN" type="String"/>
                <var name="FIPS_CL" default="UNKNOWN" type="String"/>
                <var name="DESCRIPTION" default="" type="String"/>
                <var name="SOURCE_GCL" default="UNKNOWN" type="String"/>
                <var name="COMMENTS" default="" type="String"/>
                <var name="ID" type="Int64" direction="Output" default="SELECT max(EVENT_ID) id FROM PODS.EVENT_RANGE"/>
                <var name="PODS_USER" type="String"/>
                <var name="USER_ID" default="-1" type="Int64"/>
                <query>
					DO $$
					DECLARE
					returnId integer;
                    BEGIN
                    INSERT INTO PODS.EVENT_RANGE (EVENT_GUID,FEATURE_ID,STATION_ID_BEGIN,STATION_ID_END,PODS_USER,CREATE_DATE,EFFECTIVE_FROM_DATE,CURRENT_INDICATOR_LF,POSITIONING_TYPE_CL)
                    VALUES('{EVENT_GUID}','COUNTY_BOUNDARY',0,0,NULLIF('{PODS_USER}',''),current_timestamp,current_timestamp,'Y','UNKNOWN')
                    RETURNING EVENT_ID INTO returnId;

                    INSERT INTO PODS.COUNTY_BOUNDARY(EVENT_ID,EVENT_GUID,STATE_GCL,FIPS_CL,DESCRIPTION,SOURCE_GCL,COMMENTS)
                    VALUES(returnId,'{EVENT_GUID}',NULLIF('{STATE_GCL}',''),'{FIPS_CL}',NULLIF('{DESCRIPTION}',''),NULLIF('{SOURCE_GCL}',''),NULLIF('{COMMENTS}',''));
                    END $$;
                </query>
            </dbCommand>
        </insert>
        <update>
            <dbCommand>
				<param name="CLASS_ID" type="String" direction="Input" default="PODS_COUNTY_BOUNDARY" /> 
				<var name="POLICY" default="POLICY.xml#UPDATE_PODS_SEM"  />
                <param name="EVENT_GUID" default="" type="String"/>
                <param name="STATE_GCL" default="UNKNOWN" type="String"/>
                <param name="FIPS_CL" default="UNKNOWN" type="String"/>
                <param name="DESCRIPTION" default="" type="String"/>
                <param name="SOURCE_GCL" default="UNKNOWN" type="String"/>
                <param name="COMMENTS" default="" type="String"/>
                <param name="ID" type="Int64"/>
                <param name="USER_ID" default="-1" type="Int64"/>
                <query>
                    UPDATE PODS.COUNTY_BOUNDARY
                    SET 
					EVENT_GUID=case when :EVENT_GUID is null then EVENT_GUID else :EVENT_GUID end,
					STATE_GCL=case when :STATE_GCL is null then STATE_GCL else :STATE_GCL end,
					FIPS_CL=case when :FIPS_CL is null then FIPS_CL else :FIPS_CL end,
                    DESCRIPTION=case when :DESCRIPTION is null then DESCRIPTION else :DESCRIPTION end,
                    SOURCE_GCL=case when :SOURCE_GCL is null then SOURCE_GCL else :SOURCE_GCL end,
                    COMMENTS=case when :COMMENTS is null then COMMENTS else :COMMENTS end
                    WHERE EVENT_ID = :ID;
                </query>
            </dbCommand>
        </update>
        <delete>
            <dbCommand>
				<var name="CLASS_ID" type="String" direction="Input" default="PODS_COUNTY_BOUNDARY" /> 
				<var name="POLICY" default="POLICY.xml#DELETE_PODS_SEM"  />
                <var name="ID" type="Int64"/>
                <var name="USER_ID" default="-1" type="Int64"/>
                <query>
					DO $$
                    BEGIN
                    UPDATE PODS.EVENT_RANGE
                    SET CURRENT_INDICATOR_LF='N'
                    WHERE EVENT_ID = {ID};

                    DELETE FROM PODS.COUNTY_BOUNDARY
                    WHERE EVENT_ID = {ID};
                    DELETE FROM WEB50.LNK_GATE WHERE LEFT_OBJ_ID = 'PODS_COUNTY_BOUNDARY/'||CAST({ID} AS VARCHAR(30)) OR RIGHT_OBJ_ID = 'PODS_COUNTY_BOUNDARY/'||CAST({ID} AS VARCHAR(30));
					END $$;
                </query>
            </dbCommand>
        </delete>
    </data>
    <data table="COUPON_SITE" schema="PODS" id="PODS_COUPON_SITE" comment="PODS.COUPON_SITE">
        <select>
            <dbQuery idField="ID">
                <param name="USER_ID" default="-1" type="Int64"/>
                <var name="FILTER" default="1=1"/>
                <var name="LPU_ACCESS_FILTER" default="SELECT srv_district_id FROM PODS.SRV_DISTRICT_GCL"/>
                <query>
                    SELECT * FROM (SELECT EVENT_ID ID, t.* FROM PODS.COUPON_SITE t) d WHERE {FILTER}
                </query>
            </dbQuery>
        </select>
        <insert>
            <dbCommand>
				<var name="CLASS_ID" type="String" direction="Input" default="PODS_COUPON_SITE" /> 
				<var name="POLICY" default="POLICY.xml#INSERT_PODS_SEM"  />
                <var name="EVENT_GUID" default="" type="String"/>
                <var name="TYPE_CL" default="UNKNOWN" type="String"/>
                <var name="DESCRIPTION" default="" type="String"/>
                <var name="NAME" default="" type="String"/>
                <var name="MODEL" default="" type="String"/>
                <var name="DIRECTION_GCL" default="UNKNOWN" type="String"/>
                <var name="BEARING_FROM_LINE" default="" type="String"/>
                <var name="OFFSET" default="NULL" type="Decimal"/>
                <var name="BACK_FILL_MATERIAL_GCL" default="UNKNOWN" type="String"/>
                <var name="NUMBER_OF_COUPONS" default="NULL" type="Decimal"/>
                <var name="DATE_INSTALLED" default="" type="DateTime"/>
                <var name="REF_TEST_LEAD_EVENT_ID" default="NULL" type="Decimal"/>
                <var name="REF_TEST_LEAD_EVENT_GUID" default="" type="String"/>
                <var name="MANUFACTURER_CL" default="UNKNOWN" type="String"/>
                <var name="SOURCE_GCL" default="UNKNOWN" type="String"/>
                <var name="COMMENTS" default="" type="String"/>
                <var name="ID" type="Int64" direction="Output" default="SELECT max(EVENT_ID) id FROM PODS.EVENT_RANGE"/>
                <var name="PODS_USER" type="String"/>
                <var name="USER_ID" default="-1" type="Int64"/>
                <query>
					DO $$
					DECLARE
					returnId integer;
                    BEGIN
                    INSERT INTO PODS.EVENT_RANGE (EVENT_GUID,FEATURE_ID,STATION_ID_BEGIN,STATION_ID_END,PODS_USER,CREATE_DATE,EFFECTIVE_FROM_DATE,CURRENT_INDICATOR_LF,POSITIONING_TYPE_CL)
                    VALUES('{EVENT_GUID}','COUPON_SITE',0,0,NULLIF('{PODS_USER}',''),current_timestamp,current_timestamp,'Y','UNKNOWN')
                    RETURNING EVENT_ID INTO returnId;

                    INSERT INTO PODS.COUPON_SITE(EVENT_ID,EVENT_GUID,TYPE_CL,DESCRIPTION,NAME,MODEL,DIRECTION_GCL,BEARING_FROM_LINE,"OFFSET",BACK_FILL_MATERIAL_GCL,NUMBER_OF_COUPONS,DATE_INSTALLED,REF_TEST_LEAD_EVENT_ID,REF_TEST_LEAD_EVENT_GUID,MANUFACTURER_CL,SOURCE_GCL,COMMENTS)
                    VALUES(returnId,'{EVENT_GUID}',NULLIF('{TYPE_CL}',''),NULLIF('{DESCRIPTION}',''),NULLIF('{NAME}',''),NULLIF('{MODEL}',''),NULLIF('{DIRECTION_GCL}',''),'{BEARING_FROM_LINE}',{OFFSET},NULLIF('{BACK_FILL_MATERIAL_GCL}',''),{NUMBER_OF_COUPONS},'{DATE_INSTALLED}',{REF_TEST_LEAD_EVENT_ID},'{REF_TEST_LEAD_EVENT_GUID}',NULLIF('{MANUFACTURER_CL}',''),NULLIF('{SOURCE_GCL}',''),NULLIF('{COMMENTS}',''));
                    END $$;
                </query>
            </dbCommand>
        </insert>
        <update>
            <dbCommand>
				<param name="CLASS_ID" type="String" direction="Input" default="PODS_COUPON_SITE" /> 
				<var name="POLICY" default="POLICY.xml#UPDATE_PODS_SEM"  />
                <param name="EVENT_GUID" default="" type="String"/>
                <param name="TYPE_CL" default="UNKNOWN" type="String"/>
                <param name="DESCRIPTION" default="" type="String"/>
                <param name="NAME" default="" type="String"/>
                <param name="MODEL" default="" type="String"/>
                <param name="DIRECTION_GCL" default="UNKNOWN" type="String"/>
                <param name="BEARING_FROM_LINE" default="" type="String"/>
                <param name="OFFSET" default="NULL" type="Decimal"/>
                <param name="BACK_FILL_MATERIAL_GCL" default="UNKNOWN" type="String"/>
                <param name="NUMBER_OF_COUPONS" default="NULL" type="Decimal"/>
                <param name="DATE_INSTALLED" default="" type="DateTime"/>
                <param name="REF_TEST_LEAD_EVENT_ID" default="NULL" type="Decimal"/>
                <param name="REF_TEST_LEAD_EVENT_GUID" default="" type="String"/>
                <param name="MANUFACTURER_CL" default="UNKNOWN" type="String"/>
                <param name="SOURCE_GCL" default="UNKNOWN" type="String"/>
                <param name="COMMENTS" default="" type="String"/>
                <param name="ID" type="Int64"/>
                <param name="USER_ID" default="-1" type="Int64"/>
                <query>
                    UPDATE PODS.COUPON_SITE
                    SET EVENT_GUID=case when :EVENT_GUID is null then EVENT_GUID else :EVENT_GUID end,
                    TYPE_CL=case when :TYPE_CL is null then TYPE_CL else :TYPE_CL end,
                    DESCRIPTION=case when :DESCRIPTION is null then DESCRIPTION else :DESCRIPTION end,
					NAME=case when :NAME is null then NAME else :NAME end,
					MODEL=case when :MODEL is null then MODEL else :MODEL end,
					DIRECTION_GCL=case when :DIRECTION_GCL is null then DIRECTION_GCL else :DIRECTION_GCL end,
					BEARING_FROM_LINE=case when :BEARING_FROM_LINE is null then BEARING_FROM_LINE else :BEARING_FROM_LINE end,
					"OFFSET"=:OFFSET,
					BACK_FILL_MATERIAL_GCL=case when :BACK_FILL_MATERIAL_GCL is null then BACK_FILL_MATERIAL_GCL else :BACK_FILL_MATERIAL_GCL end,
					NUMBER_OF_COUPONS=case when :NUMBER_OF_COUPONS is null then NUMBER_OF_COUPONS else :NUMBER_OF_COUPONS end,
                    DATE_INSTALLED=case when :DATE_INSTALLED is null then DATE_INSTALLED else :DATE_INSTALLED end,
                    REF_TEST_LEAD_EVENT_ID=case when :REF_TEST_LEAD_EVENT_ID is null then REF_TEST_LEAD_EVENT_ID else :REF_TEST_LEAD_EVENT_ID end,
                    REF_TEST_LEAD_EVENT_GUID=case when :REF_TEST_LEAD_EVENT_GUID is null then REF_TEST_LEAD_EVENT_GUID else :REF_TEST_LEAD_EVENT_GUID end,
                    MANUFACTURER_CL=case when :MANUFACTURER_CL is null then MANUFACTURER_CL else :MANUFACTURER_CL end,
                    SOURCE_GCL=case when :SOURCE_GCL is null then SOURCE_GCL else :SOURCE_GCL end,
                    COMMENTS=case when :COMMENTS is null then COMMENTS else :COMMENTS end
                    WHERE EVENT_ID = :ID;
                </query>
            </dbCommand>
        </update>
        <delete>
            <dbCommand>
				<var name="CLASS_ID" type="String" direction="Input" default="PODS_COUPON_SITE" /> 
				<var name="POLICY" default="POLICY.xml#DELETE_PODS_SEM"  />
                <var name="ID" type="Int64"/>
                <var name="USER_ID" default="-1" type="Int64"/>
                <query>
					DO $$
                    BEGIN
                    UPDATE PODS.COUPON
                    SET COUPON_SITE_EVENT_ID = NULL
                    WHERE COUPON_SITE_EVENT_ID = {ID};

                    UPDATE PODS.EVENT_RANGE
                    SET CURRENT_INDICATOR_LF='N'
                    WHERE EVENT_ID = {ID};

                    DELETE
                    FROM PODS.COUPON_SITE
                    WHERE EVENT_ID = {ID};

                    DELETE
                    FROM WEB50.LNK_GATE
                    WHERE LEFT_OBJ_ID = 'PODS_COUPON_SITE/'||CAST({ID} AS VARCHAR(30))
                    OR RIGHT_OBJ_ID = 'PODS_COUPON_SITE/'||CAST({ID} AS VARCHAR(30));

                    END $$;
                </query>
            </dbCommand>
        </delete>
    </data>
    <data table="CUSTOMER_INTERRUPT" schema="PODS" id="PODS_CUSTOMER_INTERRUPT" comment="PODS.CUSTOMER_INTERRUPT">
        <select>
            <dbQuery idField="ID">
                <param name="USER_ID" default="-1" type="Int64"/>
                <var name="FILTER" default="1=1"/>
                <var name="LPU_ACCESS_FILTER" default="SELECT srv_district_id FROM PODS.SRV_DISTRICT_GCL"/>
                <query>
                    SELECT * FROM (SELECT EVENT_ID ID, t.* FROM PODS.CUSTOMER_INTERRUPT t) d WHERE {FILTER}
                </query>
            </dbQuery>
        </select>
        <insert>
            <dbCommand>
				<var name="CLASS_ID" type="String" direction="Input" default="PODS_CUSTOMER_INTERRUPT" /> 
				<var name="POLICY" default="POLICY.xml#INSERT_PODS_SEM"  />
                <var name="EVENT_GUID" default="" type="String"/>
                <var name="STATUS_CL" default="UNKNOWN" type="String"/>
                <var name="DETERMINATION_DATE" default="" type="DateTime"/>
                <var name="DESCRIPTION" default="" type="String"/>
                <var name="SOURCE_GCL" default="UNKNOWN" type="String"/>
                <var name="COMMENTS" default="" type="String"/>
                <var name="ID" type="Int64" direction="Output" default="SELECT max(EVENT_ID) id FROM PODS.EVENT_RANGE"/>
                <var name="PODS_USER" type="String"/>
                <var name="USER_ID" default="-1" type="Int64"/>
                <query>
					DO $$
					DECLARE
					returnId integer;
                    BEGIN
                    INSERT INTO PODS.EVENT_RANGE (EVENT_GUID,FEATURE_ID,STATION_ID_BEGIN,STATION_ID_END,PODS_USER,CREATE_DATE,EFFECTIVE_FROM_DATE,CURRENT_INDICATOR_LF,POSITIONING_TYPE_CL)
                    VALUES('{EVENT_GUID}','CUST_INTER',0,0,NULLIF('{PODS_USER}',''),current_timestamp,current_timestamp,'Y','UNKNOWN')
                    RETURNING EVENT_ID INTO returnId;

                    INSERT INTO PODS.CUSTOMER_INTERRUPT(EVENT_ID,EVENT_GUID,STATUS_CL,DETERMINATION_DATE,DESCRIPTION,SOURCE_GCL,COMMENTS)
                    VALUES(returnId,'{EVENT_GUID}',NULLIF('{STATUS_CL}',''),'{DETERMINATION_DATE}',NULLIF('{DESCRIPTION}',''),NULLIF('{SOURCE_GCL}',''),NULLIF('{COMMENTS}',''));
                    END $$;
                </query>
            </dbCommand>
        </insert>
        <update>
            <dbCommand>
				<param name="CLASS_ID" type="String" direction="Input" default="PODS_CUSTOMER_INTERRUPT" /> 
				<var name="POLICY" default="POLICY.xml#UPDATE_PODS_SEM"  />
                <param name="EVENT_GUID" default="" type="String"/>
                <param name="STATUS_CL" default="UNKNOWN" type="String"/>
                <param name="DETERMINATION_DATE" default="" type="DateTime"/>
                <param name="DESCRIPTION" default="" type="String"/>
                <param name="SOURCE_GCL" default="UNKNOWN" type="String"/>
                <param name="COMMENTS" default="" type="String"/>
                <param name="ID" type="Int64"/>
                <param name="USER_ID" default="-1" type="Int64"/>
                <query>
                    UPDATE PODS.CUSTOMER_INTERRUPT
                    SET 
					EVENT_GUID=case when :EVENT_GUID is null then EVENT_GUID else :EVENT_GUID end,
                    STATUS_CL=case when :STATUS_CL is null then STATUS_CL else :STATUS_CL end,
                    DETERMINATION_DATE=case when :DETERMINATION_DATE is null then DETERMINATION_DATE else :DETERMINATION_DATE end,
                    DESCRIPTION=case when :DESCRIPTION is null then DESCRIPTION else :DESCRIPTION end,
                    SOURCE_GCL=case when :SOURCE_GCL is null then SOURCE_GCL else :SOURCE_GCL end,
                    COMMENTS=case when :COMMENTS is null then COMMENTS else :COMMENTS end
                    WHERE EVENT_ID = :ID;
                </query>
            </dbCommand>
        </update>
        <delete>
            <dbCommand>
				<var name="CLASS_ID" type="String" direction="Input" default="PODS_CUSTOMER_INTERRUPT" /> 
				<var name="POLICY" default="POLICY.xml#DELETE_PODS_SEM"  />
                <var name="ID" type="Int64"/>
                <var name="USER_ID" default="-1" type="Int64"/>
                <query>
					DO $$
                    BEGIN
                    UPDATE PODS.EVENT_RANGE
                    SET CURRENT_INDICATOR_LF='N'
                    WHERE EVENT_ID = {ID};

                    DELETE FROM PODS.CUSTOMER_INTERRUPT
                    WHERE EVENT_ID = {ID};
                    DELETE FROM WEB50.LNK_GATE WHERE LEFT_OBJ_ID = 'PODS_CUSTOMER_INTERRUPT/'||CAST({ID} AS VARCHAR(30)) OR RIGHT_OBJ_ID = 'PODS_CUSTOMER_INTERRUPT/'||CAST({ID} AS VARCHAR(30));
                    END $$;
                </query>
            </dbCommand>
        </delete>
    </data>
    <data table="DEPTH_OF_COVER" schema="PODS" id="PODS_DEPTH_OF_COVER" comment="PODS.DEPTH_OF_COVER">
        <select>
            <dbQuery idField="ID">
                <param name="USER_ID" default="-1" type="Int64"/>
                <var name="FILTER" default="1=1"/>
                <var name="LPU_ACCESS_FILTER" default="SELECT srv_district_id FROM PODS.SRV_DISTRICT_GCL"/>
                <query>
                    SELECT * FROM (SELECT EVENT_ID ID, t.* FROM PODS.DEPTH_OF_COVER t) d WHERE {FILTER}
                </query>
            </dbQuery>
        </select>
        <insert>
            <dbCommand>
				<var name="CLASS_ID" type="String" direction="Input" default="PODS_DEPTH_OF_COVER" /> 
				<var name="POLICY" default="POLICY.xml#INSERT_PODS_SEM"  />
                <var name="EVENT_GUID" default="" type="String"/>
                <var name="MEASUREMENT" default="NULL" type="Decimal"/>
                <var name="MEASUREMENT_METHOD_CL" default="UNKNOWN" type="String"/>
                <var name="DETERMINATION_DATE" default="" type="DateTime"/>
                <var name="DESCRIPTION" default="" type="String"/>
                <var name="SOURCE_GCL" default="UNKNOWN" type="String"/>
                <var name="COMMENTS" default="" type="String"/>
                <var name="ID" type="Int64" direction="Output" default="SELECT max(EVENT_ID) id FROM PODS.EVENT_RANGE"/>
                <var name="PODS_USER" type="String"/>
                <var name="USER_ID" default="-1" type="Int64"/>
                <query>
					DO $$
					DECLARE
					returnId integer;
                    BEGIN
                    INSERT INTO PODS.EVENT_RANGE (EVENT_GUID,FEATURE_ID,STATION_ID_BEGIN,STATION_ID_END,PODS_USER,CREATE_DATE,EFFECTIVE_FROM_DATE,CURRENT_INDICATOR_LF,POSITIONING_TYPE_CL)
                    VALUES('{EVENT_GUID}','DEPTH_OF_COVER',0,0,NULLIF('{PODS_USER}',''),current_timestamp,current_timestamp,'Y','UNKNOWN')
                    RETURNING EVENT_ID INTO returnId;

                    INSERT INTO PODS.DEPTH_OF_COVER(EVENT_ID,EVENT_GUID,MEASUREMENT,MEASUREMENT_METHOD_CL,DETERMINATION_DATE,DESCRIPTION,SOURCE_GCL,COMMENTS)
                    VALUES(returnId,'{EVENT_GUID}',{MEASUREMENT},NULLIF('{MEASUREMENT_METHOD_CL}',''),'{DETERMINATION_DATE}',NULLIF('{DESCRIPTION}',''),NULLIF('{SOURCE_GCL}',''),NULLIF('{COMMENTS}',''));
                    END $$;
                </query>
            </dbCommand>
        </insert>
        <update>
            <dbCommand>
				<param name="CLASS_ID" type="String" direction="Input" default="PODS_DEPTH_OF_COVER" /> 
				<var name="POLICY" default="POLICY.xml#UPDATE_PODS_SEM"  />
                <param name="EVENT_GUID" default="" type="String"/>
                <param name="MEASUREMENT" default="NULL" type="Decimal"/>
                <param name="MEASUREMENT_METHOD_CL" default="UNKNOWN" type="String"/>
                <param name="DETERMINATION_DATE" default="" type="DateTime"/>
                <param name="DESCRIPTION" default="" type="String"/>
                <param name="SOURCE_GCL" default="UNKNOWN" type="String"/>
                <param name="COMMENTS" default="" type="String"/>
                <param name="ID" type="Int64"/>
                <param name="USER_ID" default="-1" type="Int64"/>
                <query>
                    UPDATE PODS.DEPTH_OF_COVER
                    SET EVENT_GUID=case when :EVENT_GUID is null then EVENT_GUID else :EVENT_GUID end,
                    MEASUREMENT=case when :MEASUREMENT is null then MEASUREMENT else :MEASUREMENT end,
                    MEASUREMENT_METHOD_CL=case when :MEASUREMENT_METHOD_CL is null then MEASUREMENT_METHOD_CL else :MEASUREMENT_METHOD_CL end,
                    DETERMINATION_DATE=case when :DETERMINATION_DATE is null then DETERMINATION_DATE else :DETERMINATION_DATE end,
                    DESCRIPTION=case when :DESCRIPTION is null then DESCRIPTION else :DESCRIPTION end,
                    SOURCE_GCL=case when :SOURCE_GCL is null then SOURCE_GCL else :SOURCE_GCL end,
                    COMMENTS=case when :COMMENTS is null then COMMENTS else :COMMENTS end
                    WHERE EVENT_ID = :ID;
                </query>
            </dbCommand>
        </update>
        <delete>
            <dbCommand>
				<var name="CLASS_ID" type="String" direction="Input" default="PODS_DEPTH_OF_COVER" /> 
				<var name="POLICY" default="POLICY.xml#DELETE_PODS_SEM"  />
                <var name="ID" type="Int64"/>
                <var name="USER_ID" default="-1" type="Int64"/>
                <query>
					DO $$
                    BEGIN
                    UPDATE PODS.EVENT_RANGE
                    SET CURRENT_INDICATOR_LF='N'
                    WHERE EVENT_ID = {ID};

                    DELETE FROM PODS.DEPTH_OF_COVER
                    WHERE EVENT_ID = {ID};
                    DELETE FROM WEB50.LNK_GATE WHERE LEFT_OBJ_ID = 'PODS_DEPTH_OF_COVER/'||CAST({ID} AS VARCHAR(30)) OR RIGHT_OBJ_ID = 'PODS_DEPTH_OF_COVER/'||CAST({ID} AS VARCHAR(30)); END $$;
                </query>
            </dbCommand>
        </delete>
    </data>
    <data table="DOT_CLASS" schema="PODS" id="PODS_DOT_CLASS" comment="PODS.DOT_CLASS">
        <select>
            <dbQuery idField="ID">
                <param name="USER_ID" default="-1" type="Int64"/>
                <var name="FILTER" default="1=1"/>
                <var name="LPU_ACCESS_FILTER" default="SELECT srv_district_id FROM PODS.SRV_DISTRICT_GCL"/>
                <query>
                    SELECT * FROM (SELECT EVENT_ID ID, t.* FROM PODS.DOT_CLASS t) d WHERE {FILTER}
                </query>
            </dbQuery>
        </select>
        <insert>
            <dbCommand>
				<var name="CLASS_ID" type="String" direction="Input" default="PODS_DOT_CLASS" /> 
				<var name="POLICY" default="POLICY.xml#INSERT_PODS_SEM"  />
                <var name="EVENT_GUID" default="" type="String"/>
                <var name="RATING_CL" default="UNKNOWN" type="String"/>
                <var name="DESIGN_CL" default="UNKNOWN" type="String"/>
                <var name="METHOD_CL" default="UNKNOWN" type="String"/>
                <var name="DETERMINATION_DATE" default="" type="DateTime"/>
                <var name="DESCRIPTION" default="" type="String"/>
                <var name="SOURCE_GCL" default="UNKNOWN" type="String"/>
                <var name="COMMENTS" default="" type="String"/>
                <var name="ID" type="Int64" direction="Output" default="SELECT max(EVENT_ID) id FROM PODS.EVENT_RANGE"/>
                <var name="PODS_USER" type="String"/>
                <var name="USER_ID" default="-1" type="Int64"/>
                <query>
					DO $$
					DECLARE
					returnId integer;
                    BEGIN
                    INSERT INTO PODS.EVENT_RANGE (EVENT_GUID,FEATURE_ID,STATION_ID_BEGIN,STATION_ID_END,PODS_USER,CREATE_DATE,EFFECTIVE_FROM_DATE,CURRENT_INDICATOR_LF,POSITIONING_TYPE_CL)
                    VALUES('{EVENT_GUID}','DOT_CLASS',0,0,NULLIF('{PODS_USER}',''),current_timestamp,current_timestamp,'Y','UNKNOWN')
                    RETURNING EVENT_ID INTO returnId;

                    INSERT INTO PODS.DOT_CLASS(EVENT_ID,EVENT_GUID,RATING_CL,DESIGN_CL,METHOD_CL,DETERMINATION_DATE,DESCRIPTION,SOURCE_GCL,COMMENTS)
                    VALUES(returnId,'{EVENT_GUID}','{RATING_CL}',NULLIF('{DESIGN_CL}',''),NULLIF('{METHOD_CL}',''),'{DETERMINATION_DATE}',NULLIF('{DESCRIPTION}',''),NULLIF('{SOURCE_GCL}',''),NULLIF('{COMMENTS}',''));
                    END $$;
                </query>
            </dbCommand>
        </insert>
        <update>
            <dbCommand>
				<param name="CLASS_ID" type="String" direction="Input" default="PODS_DOT_CLASS" /> 
				<var name="POLICY" default="POLICY.xml#UPDATE_PODS_SEM"  />
                <param name="EVENT_GUID" default="" type="String"/>
                <param name="RATING_CL" default="UNKNOWN" type="String"/>
                <param name="DESIGN_CL" default="UNKNOWN" type="String"/>
                <param name="METHOD_CL" default="UNKNOWN" type="String"/>
                <param name="DETERMINATION_DATE" default="" type="DateTime"/>
                <param name="DESCRIPTION" default="" type="String"/>
                <param name="SOURCE_GCL" default="UNKNOWN" type="String"/>
                <param name="COMMENTS" default="" type="String"/>
                <param name="ID" type="Int64"/>
                <param name="USER_ID" default="-1" type="Int64"/>
                <query>
                    UPDATE PODS.DOT_CLASS
                    SET
					EVENT_GUID=case when :EVENT_GUID is null then EVENT_GUID else :EVENT_GUID end,
					RATING_CL=case when :RATING_CL is null then RATING_CL else :RATING_CL end,
					DESIGN_CL=case when :DESIGN_CL is null then DESIGN_CL else :DESIGN_CL end,
					METHOD_CL=case when :METHOD_CL is null then METHOD_CL else :METHOD_CL end,
                    DETERMINATION_DATE=case when :DETERMINATION_DATE is null then DETERMINATION_DATE else :DETERMINATION_DATE end,
                    DESCRIPTION=case when :DESCRIPTION is null then DESCRIPTION else :DESCRIPTION end,
                    SOURCE_GCL=case when :SOURCE_GCL is null then SOURCE_GCL else :SOURCE_GCL end,
                    COMMENTS=case when :COMMENTS is null then COMMENTS else :COMMENTS end
                    WHERE EVENT_ID = {ID};
				</query>
            </dbCommand>
        </update>
        <delete>
            <dbCommand>
				<var name="CLASS_ID" type="String" direction="Input" default="PODS_DOT_CLASS" /> 
				<var name="POLICY" default="POLICY.xml#DELETE_PODS_SEM"  />
                <var name="ID" type="Int64"/>
                <var name="USER_ID" default="-1" type="Int64"/>
                <query>
					DO $$
                    BEGIN
                    UPDATE PODS.EVENT_RANGE
                    SET CURRENT_INDICATOR_LF='N'
                    WHERE EVENT_ID = {ID};

                    DELETE FROM PODS.DOT_CLASS
                    WHERE EVENT_ID = {ID};
                    DELETE FROM WEB50.LNK_GATE WHERE LEFT_OBJ_ID = 'PODS_DOT_CLASS/'||CAST({ID} AS VARCHAR(30)) OR RIGHT_OBJ_ID = 'PODS_DOT_CLASS/'||CAST({ID} AS VARCHAR(30)); END $$;
                </query>
            </dbCommand>
        </delete>
    </data>
    <data table="DRAG_REDUCING_AGENT" schema="PODS" id="PODS_DRAG_REDUCING_AGENT" comment="PODS.DRAG_REDUCING_AGENT">
        <select>
            <dbQuery idField="ID">
                <param name="USER_ID" default="-1" type="Int64"/>
                <var name="FILTER" default="1=1"/>
                <var name="LPU_ACCESS_FILTER" default="SELECT srv_district_id FROM PODS.SRV_DISTRICT_GCL"/>
                <query>
                    SELECT * FROM (SELECT EVENT_ID ID, t.* FROM PODS.DRAG_REDUCING_AGENT t) d WHERE {FILTER}
                </query>
            </dbQuery>
        </select>
        <insert>
            <dbCommand>
				<var name="CLASS_ID" type="String" direction="Input" default="PODS_DRAG_REDUCING_AGENT" /> 
				<var name="POLICY" default="POLICY.xml#INSERT_PODS_SEM"  />
                <var name="EVENT_GUID" default="" type="String"/>
                <var name="DRA_SKID_ID" default="NULL" type="Decimal"/>
                <var name="MANUFACTURER_CL" default="UNKNOWN" type="String"/>
                <var name="MATERIAL_CL" default="UNKNOWN" type="String"/>
                <var name="INJECTION_RATE" default="NULL" type="Decimal"/>
                <var name="INJECTION_RATE_OUOM" default="" type="String"/>
                <var name="TANK_VOLUME" default="NULL" type="Decimal"/>
                <var name="SOURCE_GCL" default="UNKNOWN" type="String"/>
                <var name="COMMENTS" default="" type="String"/>
                <var name="DESCRIPTION" default="" type="String"/>
                <var name="ID" type="Int64" direction="Output" default="SELECT max(EVENT_ID) id FROM PODS.EVENT_RANGE"/>
                <var name="PODS_USER" type="String"/>
                <var name="USER_ID" default="-1" type="Int64"/>
                <query>
					DO $$
					DECLARE
					returnId integer;
                    BEGIN
                    INSERT INTO PODS.EVENT_RANGE (EVENT_GUID,FEATURE_ID,STATION_ID_BEGIN,STATION_ID_END,PODS_USER,CREATE_DATE,EFFECTIVE_FROM_DATE,CURRENT_INDICATOR_LF,POSITIONING_TYPE_CL)
                    VALUES('{EVENT_GUID}','DRG_RED_AGNT',0,0,NULLIF('{PODS_USER}',''),current_timestamp,current_timestamp,'Y','UNKNOWN')
                    RETURNING EVENT_ID INTO returnId;

                    INSERT INTO PODS.DRAG_REDUCING_AGENT(EVENT_ID,EVENT_GUID,DRA_SKID_ID,MANUFACTURER_CL,MATERIAL_CL,INJECTION_RATE,INJECTION_RATE_OUOM,TANK_VOLUME,SOURCE_GCL,COMMENTS,DESCRIPTION)
                    VALUES(returnId,'{EVENT_GUID}',{DRA_SKID_ID},NULLIF('{MANUFACTURER_CL}',''),NULLIF('{MATERIAL_CL}',''),{INJECTION_RATE},NULLIF('{INJECTION_RATE_OUOM}',''),{TANK_VOLUME},NULLIF('{SOURCE_GCL}',''),NULLIF('{COMMENTS}',''),NULLIF('{DESCRIPTION}',''));
                    END $$;
                </query>
            </dbCommand>
        </insert>
        <update>
            <dbCommand>
				<param name="CLASS_ID" type="String" direction="Input" default="PODS_DRAG_REDUCING_AGENT" /> 
				<var name="POLICY" default="POLICY.xml#UPDATE_PODS_SEM"  />
                <param name="EVENT_GUID" default="" type="String"/>
                <param name="DRA_SKID_ID" default="NULL" type="Decimal"/>
                <param name="MANUFACTURER_CL" default="UNKNOWN" type="String"/>
                <param name="MATERIAL_CL" default="UNKNOWN" type="String"/>
                <param name="INJECTION_RATE" default="NULL" type="Decimal"/>
                <param name="INJECTION_RATE_OUOM" default="" type="String"/>
                <param name="TANK_VOLUME" default="NULL" type="Decimal"/>
                <param name="SOURCE_GCL" default="UNKNOWN" type="String"/>
                <param name="COMMENTS" default="" type="String"/>
                <param name="DESCRIPTION" default="" type="String"/>
                <param name="ID" type="Int64"/>
                <param name="USER_ID" default="-1" type="Int64"/>
                <query>
                    UPDATE PODS.DRAG_REDUCING_AGENT
                    SET 
					EVENT_GUID=case when :EVENT_GUID is null then EVENT_GUID else :EVENT_GUID end,
					DRA_SKID_ID=case when :DRA_SKID_ID is null then DRA_SKID_ID else :DRA_SKID_ID end,
                    MANUFACTURER_CL=case when :MANUFACTURER_CL is null then MANUFACTURER_CL else :MANUFACTURER_CL end,
					MATERIAL_CL=case when :MATERIAL_CL is null then MATERIAL_CL else :MATERIAL_CL end,
					INJECTION_RATE=case when :INJECTION_RATE is null then INJECTION_RATE else :INJECTION_RATE end,
					INJECTION_RATE_OUOM=case when :INJECTION_RATE_OUOM is null then INJECTION_RATE_OUOM else :INJECTION_RATE_OUOM end,
					TANK_VOLUME=case when :TANK_VOLUME is null then TANK_VOLUME else :TANK_VOLUME end,
                    SOURCE_GCL=case when :SOURCE_GCL is null then SOURCE_GCL else :SOURCE_GCL end,
                    COMMENTS=case when :COMMENTS is null then COMMENTS else :COMMENTS end,
					DESCRIPTION=case when :DESCRIPTION is null then DESCRIPTION else :DESCRIPTION end
                    WHERE EVENT_ID = :ID;
                </query>
            </dbCommand>
        </update>
        <delete>
            <dbCommand>
				<var name="CLASS_ID" type="String" direction="Input" default="PODS_DRAG_REDUCING_AGENT" /> 
				<var name="POLICY" default="POLICY.xml#DELETE_PODS_SEM"  />
                <var name="ID" type="Int64"/>
                <var name="USER_ID" default="-1" type="Int64"/>
                <query>
					DO $$
                    BEGIN
                    UPDATE PODS.EVENT_RANGE
                    SET CURRENT_INDICATOR_LF='N'
                    WHERE EVENT_ID = {ID};

                    DELETE FROM PODS.DRAG_REDUCING_AGENT
                    WHERE EVENT_ID = {ID};
                    DELETE FROM WEB50.LNK_GATE WHERE LEFT_OBJ_ID = 'PODS_DRAG_REDUCING_AGENT/'||CAST({ID} AS VARCHAR(30)) OR RIGHT_OBJ_ID = 'PODS_DRAG_REDUCING_AGENT/'||CAST({ID} AS VARCHAR(30)); END $$;
                </query>
            </dbCommand>
        </delete>
    </data>
    <data table="DRIP" schema="PODS" id="PODS_DRIP" comment="PODS.DRIP">
        <select>
            <dbQuery idField="ID">
                <param name="USER_ID" default="-1" type="Int64"/>
                <var name="FILTER" default="1=1"/>
                <var name="LPU_ACCESS_FILTER" default="SELECT srv_district_id FROM PODS.SRV_DISTRICT_GCL"/>
                <query>
                    SELECT * FROM (SELECT EVENT_ID ID, t.* FROM PODS.DRIP t) d WHERE {FILTER}
                </query>
            </dbQuery>
        </select>
        <insert>
            <dbCommand>
				<var name="CLASS_ID" type="String" direction="Input" default="PODS_DRIP" /> 
				<var name="POLICY" default="POLICY.xml#INSERT_PODS_SEM"  />
                <var name="EVENT_GUID" default="" type="String"/>
                <var name="NAME" default="" type="String"/>
                <var name="MANUFACTURER_CL" default="UNKNOWN" type="String"/>
                <var name="DATE_MANUFACTURED" default="" type="DateTime"/>
                <var name="PURCHASE_ORDER_NUMBER" default="" type="String"/>
                <var name="PIPE_MILL_LOCATION_GCL" default="UNKNOWN" type="String"/>
                <var name="MILL_TEST_PRESSURE" default="NULL" type="Decimal"/>
                <var name="MATERIAL_CL" default="UNKNOWN" type="String"/>
                <var name="PIPE_SPECIFICATION_GCL" default="UNKNOWN" type="String"/>
                <var name="SMYS_GCL" default="0" type="Decimal"/>
                <var name="NOMINAL_DIAMETER_GCL" default="0" type="Decimal"/>
                <var name="NOMINAL_WALL_THICKNESS_GCL" default="0" type="Decimal"/>
                <var name="PIPE_LONG_SEAM_GCL" default="UNKNOWN" type="String"/>
                <var name="DATE_INSTALLED" default="" type="DateTime"/>
                <var name="DESCRIPTION" default="" type="String"/>
                <var name="SOURCE_GCL" default="UNKNOWN" type="String"/>
                <var name="COMMENTS" default="" type="String"/>
                <var name="ID" type="Int64" direction="Output" default="SELECT max(EVENT_ID) id FROM PODS.EVENT_RANGE"/>
                <var name="PODS_USER" type="String"/>
                <var name="USER_ID" default="-1" type="Int64"/>
                <query>
					DO $$
					DECLARE
					returnId integer;
                    BEGIN
                    INSERT INTO PODS.EVENT_RANGE (EVENT_GUID,FEATURE_ID,STATION_ID_BEGIN,STATION_ID_END,PODS_USER,CREATE_DATE,EFFECTIVE_FROM_DATE,CURRENT_INDICATOR_LF,POSITIONING_TYPE_CL)
                    VALUES('{EVENT_GUID}','DRIP',0,0,NULLIF('{PODS_USER}',''),current_timestamp,current_timestamp,'Y','UNKNOWN')
                    RETURNING EVENT_ID INTO returnId;

                    INSERT INTO PODS.DRIP(EVENT_ID,EVENT_GUID,NAME,MANUFACTURER_CL,DATE_MANUFACTURED,PURCHASE_ORDER_NUMBER,PIPE_MILL_LOCATION_GCL,MILL_TEST_PRESSURE,MATERIAL_CL,PIPE_SPECIFICATION_GCL,SMYS_GCL,NOMINAL_DIAMETER_GCL,NOMINAL_WALL_THICKNESS_GCL,PIPE_LONG_SEAM_GCL,DATE_INSTALLED,DESCRIPTION,SOURCE_GCL,COMMENTS)
                    VALUES(returnId,'{EVENT_GUID}',NULLIF('{NAME}',''),NULLIF('{MANUFACTURER_CL}',''),'{DATE_MANUFACTURED}',NULLIF('{PURCHASE_ORDER_NUMBER}',''),NULLIF('{PIPE_MILL_LOCATION_GCL}',''),{MILL_TEST_PRESSURE},NULLIF('{MATERIAL_CL}',''),NULLIF('{PIPE_SPECIFICATION_GCL}',''),{SMYS_GCL},{NOMINAL_DIAMETER_GCL},{NOMINAL_WALL_THICKNESS_GCL},NULLIF('{PIPE_LONG_SEAM_GCL}',''),'{DATE_INSTALLED}',NULLIF('{DESCRIPTION}',''),NULLIF('{SOURCE_GCL}',''),NULLIF('{COMMENTS}',''));
                    END $$;
                </query>
            </dbCommand>
        </insert>
        <update>
            <dbCommand>
				<param name="CLASS_ID" type="String" direction="Input" default="PODS_DRIP" /> 
				<var name="POLICY" default="POLICY.xml#UPDATE_PODS_SEM"  />
                <param name="EVENT_GUID" default="" type="String"/>
                <param name="NAME" default="" type="String"/>
                <param name="MANUFACTURER_CL" default="UNKNOWN" type="String"/>
                <param name="DATE_MANUFACTURED" default="" type="DateTime"/>
                <param name="PURCHASE_ORDER_NUMBER" default="" type="String"/>
                <param name="PIPE_MILL_LOCATION_GCL" default="UNKNOWN" type="String"/>
                <param name="MILL_TEST_PRESSURE" default="NULL" type="Decimal"/>
                <param name="MATERIAL_CL" default="UNKNOWN" type="String"/>
                <param name="PIPE_SPECIFICATION_GCL" default="UNKNOWN" type="String"/>
                <param name="SMYS_GCL" default="0" type="Decimal"/>
                <param name="NOMINAL_DIAMETER_GCL" default="0" type="Decimal"/>
                <param name="NOMINAL_WALL_THICKNESS_GCL" default="0" type="Decimal"/>
                <param name="PIPE_LONG_SEAM_GCL" default="UNKNOWN" type="String"/>
                <param name="DATE_INSTALLED" default="" type="DateTime"/>
                <param name="DESCRIPTION" default="" type="String"/>
                <param name="SOURCE_GCL" default="UNKNOWN" type="String"/>
                <param name="COMMENTS" default="" type="String"/>
                <param name="ID" type="Int64"/>
                <param name="USER_ID" default="-1" type="Int64"/>
                <query>
                    UPDATE PODS.DRIP
                    SET 
					EVENT_GUID=case when :EVENT_GUID is null then EVENT_GUID else :EVENT_GUID end,
					NAME=case when :NAME is null then NAME else :NAME end,
                    MANUFACTURER_CL=case when :MANUFACTURER_CL is null then MANUFACTURER_CL else :MANUFACTURER_CL end,
                    DATE_MANUFACTURED=case when :DATE_MANUFACTURED is null then DATE_MANUFACTURED else :DATE_MANUFACTURED end,
					PURCHASE_ORDER_NUMBER=case when :PURCHASE_ORDER_NUMBER is null then PURCHASE_ORDER_NUMBER else :PURCHASE_ORDER_NUMBER end,
                    PIPE_MILL_LOCATION_GCL=case when :PIPE_MILL_LOCATION_GCL is null then PIPE_MILL_LOCATION_GCL else :PIPE_MILL_LOCATION_GCL end,
                    MILL_TEST_PRESSURE=case when :MILL_TEST_PRESSURE is null then MILL_TEST_PRESSURE else :MILL_TEST_PRESSURE end,
					MATERIAL_CL=case when :MATERIAL_CL is null then MATERIAL_CL else :MATERIAL_CL end,
                    PIPE_SPECIFICATION_GCL=case when :PIPE_SPECIFICATION_GCL is null then PIPE_SPECIFICATION_GCL else :PIPE_SPECIFICATION_GCL end,
                    SMYS_GCL=case when :SMYS_GCL is null then SMYS_GCL else :SMYS_GCL end,
                    NOMINAL_DIAMETER_GCL=case when :NOMINAL_DIAMETER_GCL is null then NOMINAL_DIAMETER_GCL else :NOMINAL_DIAMETER_GCL end,
                    NOMINAL_WALL_THICKNESS_GCL=case when :NOMINAL_WALL_THICKNESS_GCL is null then NOMINAL_WALL_THICKNESS_GCL else :NOMINAL_WALL_THICKNESS_GCL end,
					PIPE_LONG_SEAM_GCL=case when :PIPE_LONG_SEAM_GCL is null then PIPE_LONG_SEAM_GCL else :PIPE_LONG_SEAM_GCL end,
                    DATE_INSTALLED=case when :DATE_INSTALLED is null then DATE_INSTALLED else :DATE_INSTALLED end,
                    DESCRIPTION=case when :DESCRIPTION is null then DESCRIPTION else :DESCRIPTION end,
                    SOURCE_GCL=case when :SOURCE_GCL is null then SOURCE_GCL else :SOURCE_GCL end,
                    COMMENTS=case when :COMMENTS is null then COMMENTS else :COMMENTS end
                    WHERE EVENT_ID = :ID;
                </query>
            </dbCommand>
        </update>
        <delete>
            <dbCommand>
				<var name="CLASS_ID" type="String" direction="Input" default="PODS_DRIP" /> 
				<var name="POLICY" default="POLICY.xml#DELETE_PODS_SEM"  />
                <var name="ID" type="Int64"/>
                <var name="USER_ID" default="-1" type="Int64"/>
                <query>
					DO $$
                    BEGIN
                    UPDATE PODS.EVENT_RANGE
                    SET CURRENT_INDICATOR_LF='N'
                    WHERE EVENT_ID = {ID};

                    DELETE FROM PODS.DRIP
                    WHERE EVENT_ID = {ID};
                    DELETE FROM WEB50.LNK_GATE WHERE LEFT_OBJ_ID = 'PODS_DRIP/'||CAST({ID} AS VARCHAR(30)) OR RIGHT_OBJ_ID = 'PODS_DRIP/'||CAST({ID} AS VARCHAR(30)); END $$;
                </query>
            </dbCommand>
        </delete>
    </data>
    <data table="DRIP_RISER" schema="PODS" id="PODS_DRIP_RISER" comment="PODS.DRIP_RISER">
        <select>
            <dbQuery idField="ID">
                <param name="USER_ID" default="-1" type="Int64"/>
                <var name="FILTER" default="1=1"/>
                <var name="LPU_ACCESS_FILTER" default="SELECT srv_district_id FROM PODS.SRV_DISTRICT_GCL"/>
                <query>
                    SELECT * FROM (SELECT EVENT_ID ID, t.* FROM PODS.DRIP_RISER t) d WHERE {FILTER}
                </query>
            </dbQuery>
        </select>
        <insert>
            <dbCommand>
				<var name="CLASS_ID" type="String" direction="Input" default="PODS_DRIP_RISER" /> 
				<var name="POLICY" default="POLICY.xml#INSERT_PODS_SEM"  />
                <var name="EVENT_GUID" default="" type="String"/>
                <var name="NAME" default="" type="String"/>
                <var name="MANUFACTURER_CL" default="UNKNOWN" type="String"/>
                <var name="DATE_MANUFACTURED" default="" type="DateTime"/>
                <var name="PURCHASE_ORDER_NUMBER" default="" type="String"/>
                <var name="PIPE_MILL_LOCATION_GCL" default="UNKNOWN" type="String"/>
                <var name="MILL_TEST_PRESSURE" default="NULL" type="Decimal"/>
                <var name="MATERIAL_CL" default="UNKNOWN" type="String"/>
                <var name="PIPE_SPECIFICATION_GCL" default="UNKNOWN" type="String"/>
                <var name="SMYS_GCL" default="UNKNOWN" type="Decimal"/>
                <var name="NOMINAL_DIAMETER_GCL" default="0" type="Decimal"/>
                <var name="NOMINAL_WALL_THICKNESS_GCL" default="0" type="Decimal"/>
                <var name="PIPE_LONG_SEAM_GCL" default="UNKNOWN" type="String"/>
                <var name="DATE_INSTALLED" default="" type="DateTime"/>
                <var name="DESCRIPTION" default="" type="String"/>
                <var name="SOURCE_GCL" default="UNKNOWN" type="String"/>
                <var name="COMMENTS" default="" type="String"/>
                <var name="ID" type="Int64" direction="Output" default="SELECT max(EVENT_ID) id FROM PODS.EVENT_RANGE"/>
                <var name="PODS_USER" type="String"/>
                <var name="USER_ID" default="-1" type="Int64"/>
                <query>
					DO $$
					DECLARE
					returnId integer;
                    BEGIN
                    INSERT INTO PODS.EVENT_RANGE (EVENT_GUID,FEATURE_ID,STATION_ID_BEGIN,STATION_ID_END,PODS_USER,CREATE_DATE,EFFECTIVE_FROM_DATE,CURRENT_INDICATOR_LF,POSITIONING_TYPE_CL)
                    VALUES('{EVENT_GUID}','DRIP_RISER',0,0,NULLIF('{PODS_USER}',''),current_timestamp,current_timestamp,'Y','UNKNOWN')
                    RETURNING EVENT_ID INTO returnId;

                    INSERT INTO PODS.DRIP_RISER(EVENT_ID,EVENT_GUID,NAME,MANUFACTURER_CL,DATE_MANUFACTURED,PURCHASE_ORDER_NUMBER,PIPE_MILL_LOCATION_GCL,MILL_TEST_PRESSURE,MATERIAL_CL,PIPE_SPECIFICATION_GCL,SMYS_GCL,NOMINAL_DIAMETER_GCL,NOMINAL_WALL_THICKNESS_GCL,PIPE_LONG_SEAM_GCL,DATE_INSTALLED,DESCRIPTION,SOURCE_GCL,COMMENTS)
                    VALUES(returnId,'{EVENT_GUID}',NULLIF('{NAME}',''),NULLIF('{MANUFACTURER_CL}',''),'{DATE_MANUFACTURED}',NULLIF('{PURCHASE_ORDER_NUMBER}',''),NULLIF('{PIPE_MILL_LOCATION_GCL}',''),{MILL_TEST_PRESSURE},NULLIF('{MATERIAL_CL}',''),NULLIF('{PIPE_SPECIFICATION_GCL}',''),{SMYS_GCL},{NOMINAL_DIAMETER_GCL},{NOMINAL_WALL_THICKNESS_GCL},NULLIF('{PIPE_LONG_SEAM_GCL}',''),'{DATE_INSTALLED}',NULLIF('{DESCRIPTION}',''),NULLIF('{SOURCE_GCL}',''),NULLIF('{COMMENTS}',''));
                    END $$;
                </query>
            </dbCommand>
        </insert>
        <update>
            <dbCommand>
				<param name="CLASS_ID" type="String" direction="Input" default="PODS_DRIP_RISER" /> 
				<var name="POLICY" default="POLICY.xml#UPDATE_PODS_SEM"  />
                <param name="EVENT_GUID" default="" type="String"/>
                <param name="NAME" default="" type="String"/>
                <param name="MANUFACTURER_CL" default="UNKNOWN" type="String"/>
                <param name="DATE_MANUFACTURED" default="" type="DateTime"/>
                <param name="PURCHASE_ORDER_NUMBER" default="" type="String"/>
                <param name="PIPE_MILL_LOCATION_GCL" default="UNKNOWN" type="String"/>
                <param name="MILL_TEST_PRESSURE" default="NULL" type="Decimal"/>
                <param name="MATERIAL_CL" default="UNKNOWN" type="String"/>
                <param name="PIPE_SPECIFICATION_GCL" default="UNKNOWN" type="String"/>
                <param name="SMYS_GCL" default="UNKNOWN" type="Decimal"/>
                <param name="NOMINAL_DIAMETER_GCL" default="0" type="Decimal"/>
                <param name="NOMINAL_WALL_THICKNESS_GCL" default="0" type="Decimal"/>
                <param name="PIPE_LONG_SEAM_GCL" default="UNKNOWN" type="String"/>
                <param name="DATE_INSTALLED" default="" type="DateTime"/>
                <param name="DESCRIPTION" default="" type="String"/>
                <param name="SOURCE_GCL" default="UNKNOWN" type="String"/>
                <param name="COMMENTS" default="" type="String"/>
                <param name="ID" type="Int64"/>
                <param name="USER_ID" default="-1" type="Int64"/>
                <query>
                    UPDATE PODS.DRIP_RISER
                    SET 
					EVENT_GUID=case when :EVENT_GUID is null then EVENT_GUID else :EVENT_GUID end,
					NAME=case when :NAME is null then NAME else :NAME end,
                    MANUFACTURER_CL=case when :MANUFACTURER_CL is null then MANUFACTURER_CL else :MANUFACTURER_CL end,
                    DATE_MANUFACTURED=case when :DATE_MANUFACTURED is null then DATE_MANUFACTURED else :DATE_MANUFACTURED end,
                    PURCHASE_ORDER_NUMBER=case when :PURCHASE_ORDER_NUMBER is null then PURCHASE_ORDER_NUMBER else :PURCHASE_ORDER_NUMBER end,
                    PIPE_MILL_LOCATION_GCL=case when :PIPE_MILL_LOCATION_GCL is null then PIPE_MILL_LOCATION_GCL else :PIPE_MILL_LOCATION_GCL end,
                    MILL_TEST_PRESSURE=case when :MILL_TEST_PRESSURE is null then MILL_TEST_PRESSURE else :MILL_TEST_PRESSURE end,
					MATERIAL_CL=case when :MATERIAL_CL is null then MATERIAL_CL else :MATERIAL_CL end,
                    PIPE_SPECIFICATION_GCL=case when :PIPE_SPECIFICATION_GCL is null then PIPE_SPECIFICATION_GCL else :PIPE_SPECIFICATION_GCL end,
                    SMYS_GCL=case when :SMYS_GCL is null then SMYS_GCL else :SMYS_GCL end,
                    NOMINAL_DIAMETER_GCL=case when :NOMINAL_DIAMETER_GCL is null then NOMINAL_DIAMETER_GCL else :NOMINAL_DIAMETER_GCL end,
                    NOMINAL_WALL_THICKNESS_GCL=case when :NOMINAL_WALL_THICKNESS_GCL is null then NOMINAL_WALL_THICKNESS_GCL else :NOMINAL_WALL_THICKNESS_GCL end,
                    PIPE_LONG_SEAM_GCL=case when :PIPE_LONG_SEAM_GCL is null then PIPE_LONG_SEAM_GCL else :PIPE_LONG_SEAM_GCL end,
                    DATE_INSTALLED=case when :DATE_INSTALLED is null then DATE_INSTALLED else :DATE_INSTALLED end,
                    DESCRIPTION=case when :DESCRIPTION is null then DESCRIPTION else :DESCRIPTION end,
                    SOURCE_GCL=case when :SOURCE_GCL is null then SOURCE_GCL else :SOURCE_GCL end,
                    COMMENTS=case when :COMMENTS is null then COMMENTS else :COMMENTS end
                    WHERE EVENT_ID = :ID;
                </query>
            </dbCommand>
        </update>
        <delete>
            <dbCommand>
				<var name="CLASS_ID" type="String" direction="Input" default="PODS_DRIP_RISER" /> 
				<var name="POLICY" default="POLICY.xml#DELETE_PODS_SEM"  />
                <var name="ID" type="Int64"/>
                <var name="USER_ID" default="-1" type="Int64"/>
                <query>
					DO $$
                    BEGIN
                    UPDATE PODS.EVENT_RANGE
                    SET CURRENT_INDICATOR_LF='N'
                    WHERE EVENT_ID = {ID};

                    DELETE FROM PODS.DRIP_RISER
                    WHERE EVENT_ID = {ID};
                    DELETE FROM WEB50.LNK_GATE WHERE LEFT_OBJ_ID = 'PODS_DRIP_RISER/'||CAST({ID} AS VARCHAR(30)) OR RIGHT_OBJ_ID = 'PODS_DRIP_RISER/'||CAST({ID} AS VARCHAR(30)); END $$;
                </query>
            </dbCommand>
        </delete>
    </data>
    <data table="ELBOW" schema="PODS" id="PODS_ELBOW" comment="PODS.ELBOW">
        <select>
            <dbQuery idField="ID">
                <param name="USER_ID" default="-1" type="Int64"/>
                <var name="FILTER" default="1=1"/>
                <var name="LPU_ACCESS_FILTER" default="SELECT srv_district_id FROM PODS.SRV_DISTRICT_GCL"/>
                <query>
                    SELECT * FROM (SELECT EVENT_ID ID, t.* FROM PODS.ELBOW t) d WHERE {FILTER}
                </query>
            </dbQuery>
        </select>
        <insert>
            <dbCommand>
				<var name="CLASS_ID" type="String" direction="Input" default="PODS_ELBOW" /> 
				<var name="POLICY" default="POLICY.xml#INSERT_PODS_SEM"  />
                <var name="EVENT_GUID" default="" type="String"/>
                <var name="NOMINAL_DIAMETER_INLET_GCL" default="0" type="Decimal"/>
                <var name="NOMINAL_DIAMETER_OUTLET_GCL" default="0" type="Decimal"/>
                <var name="NOMINAL_WALL_THICKNESS_GCL" default="0" type="Decimal"/>
                <var name="ANGLE" default="NULL" type="Decimal"/>
                <var name="RADIUS" default="NULL" type="Decimal"/>
                <var name="MANUFACTURER_CL" default="UNKNOWN" type="String"/>
                <var name="DATE_MANUFACTURED" default="" type="DateTime"/>
                <var name="MATERIAL_CL" default="UNKNOWN" type="String"/>
                <var name="SPECIFICATION_CL" default="UNKNOWN" type="String"/>
                <var name="NOMINAL_PRESSURE_RATING" default="NULL" type="Decimal"/>
                <var name="MILL_TEST_PRESSURE" default="NULL" type="Decimal"/>
                <var name="DATE_INSTALLED" default="" type="DateTime"/>
                <var name="DESCRIPTION" default="" type="String"/>
                <var name="SOURCE_GCL" default="UNKNOWN" type="String"/>
                <var name="COMMENTS" default="" type="String"/>
                <var name="ID" type="Int64" direction="Output" default="SELECT max(EVENT_ID) id FROM PODS.EVENT_RANGE"/>
                <var name="PODS_USER" type="String"/>
                <var name="USER_ID" default="-1" type="Int64"/>
                <query>
					DO $$
					DECLARE
					returnId integer;
                    BEGIN
                    INSERT INTO PODS.EVENT_RANGE (EVENT_GUID,FEATURE_ID,STATION_ID_BEGIN,STATION_ID_END,PODS_USER,CREATE_DATE,EFFECTIVE_FROM_DATE,CURRENT_INDICATOR_LF,POSITIONING_TYPE_CL)
                    VALUES('{EVENT_GUID}','ELBOW',0,0,NULLIF('{PODS_USER}',''),current_timestamp,current_timestamp,'Y','UNKNOWN')
                    RETURNING EVENT_ID INTO returnId;

                    INSERT INTO PODS.ELBOW(EVENT_ID,EVENT_GUID,NOMINAL_DIAMETER_INLET_GCL,NOMINAL_DIAMETER_OUTLET_GCL,NOMINAL_WALL_THICKNESS_GCL,ANGLE,RADIUS,MANUFACTURER_CL,DATE_MANUFACTURED,MATERIAL_CL,SPECIFICATION_CL,NOMINAL_PRESSURE_RATING,MILL_TEST_PRESSURE,DATE_INSTALLED,DESCRIPTION,SOURCE_GCL,COMMENTS)
                    VALUES(returnId,'{EVENT_GUID}',{NOMINAL_DIAMETER_INLET_GCL},{NOMINAL_DIAMETER_OUTLET_GCL},{NOMINAL_WALL_THICKNESS_GCL},{ANGLE},{RADIUS},NULLIF('{MANUFACTURER_CL}',''),'{DATE_MANUFACTURED}',NULLIF('{MATERIAL_CL}',''),NULLIF('{SPECIFICATION_CL}',''),{NOMINAL_PRESSURE_RATING},{MILL_TEST_PRESSURE},'{DATE_INSTALLED}',NULLIF('{DESCRIPTION}',''),NULLIF('{SOURCE_GCL}',''),NULLIF('{COMMENTS}',''));
                    END $$;
                </query>
            </dbCommand>
        </insert>
        <update>
            <dbCommand>
				<param name="CLASS_ID" type="String" direction="Input" default="PODS_ELBOW" /> 
				<var name="POLICY" default="POLICY.xml#UPDATE_PODS_SEM"  />
                <param name="EVENT_GUID" default="" type="String"/>
                <param name="NOMINAL_DIAMETER_INLET_GCL" default="0" type="Decimal"/>
                <param name="NOMINAL_DIAMETER_OUTLET_GCL" default="0" type="Decimal"/>
                <param name="NOMINAL_WALL_THICKNESS_GCL" default="0" type="Decimal"/>
                <param name="ANGLE" default="NULL" type="Decimal"/>
                <param name="RADIUS" default="NULL" type="Decimal"/>
                <param name="MANUFACTURER_CL" default="UNKNOWN" type="String"/>
                <param name="DATE_MANUFACTURED" default="" type="DateTime"/>
                <param name="MATERIAL_CL" default="UNKNOWN" type="String"/>
                <param name="SPECIFICATION_CL" default="UNKNOWN" type="String"/>
                <param name="NOMINAL_PRESSURE_RATING" default="NULL" type="Decimal"/>
                <param name="MILL_TEST_PRESSURE" default="NULL" type="Decimal"/>
                <param name="DATE_INSTALLED" default="" type="DateTime"/>
                <param name="DESCRIPTION" default="" type="String"/>
                <param name="SOURCE_GCL" default="UNKNOWN" type="String"/>
                <param name="COMMENTS" default="" type="String"/>
                <param name="ID" type="Int64"/>
                <param name="USER_ID" default="-1" type="Int64"/>
                <query>
                    UPDATE PODS.ELBOW
                    SET EVENT_GUID=case when :EVENT_GUID is null then EVENT_GUID else :EVENT_GUID end,
					NOMINAL_DIAMETER_INLET_GCL=case when :NOMINAL_DIAMETER_INLET_GCL is null then NOMINAL_DIAMETER_INLET_GCL else :NOMINAL_DIAMETER_INLET_GCL end,
					NOMINAL_DIAMETER_OUTLET_GCL=case when :NOMINAL_DIAMETER_OUTLET_GCL is null then NOMINAL_DIAMETER_OUTLET_GCL else :NOMINAL_DIAMETER_OUTLET_GCL end,
                    NOMINAL_WALL_THICKNESS_GCL=case when :NOMINAL_WALL_THICKNESS_GCL is null then NOMINAL_WALL_THICKNESS_GCL else :NOMINAL_WALL_THICKNESS_GCL end,
					ANGLE=case when :ANGLE is null then ANGLE else :ANGLE end,
                    RADIUS=case when :RADIUS is null then RADIUS else :RADIUS end,
                    MANUFACTURER_CL=case when :MANUFACTURER_CL is null then MANUFACTURER_CL else :MANUFACTURER_CL end,
                    DATE_MANUFACTURED=case when :DATE_MANUFACTURED is null then DATE_MANUFACTURED else :DATE_MANUFACTURED end,
					MATERIAL_CL=case when :MATERIAL_CL is null then MATERIAL_CL else :MATERIAL_CL end,
                    SPECIFICATION_CL=case when :SPECIFICATION_CL is null then SPECIFICATION_CL else :SPECIFICATION_CL end,
                    NOMINAL_PRESSURE_RATING=case when :NOMINAL_PRESSURE_RATING is null then NOMINAL_PRESSURE_RATING else :NOMINAL_PRESSURE_RATING end,
                    MILL_TEST_PRESSURE=case when :MILL_TEST_PRESSURE is null then MILL_TEST_PRESSURE else :MILL_TEST_PRESSURE end,
                    DATE_INSTALLED=case when :DATE_INSTALLED is null then DATE_INSTALLED else :DATE_INSTALLED end,
                    DESCRIPTION=case when :DESCRIPTION is null then DESCRIPTION else :DESCRIPTION end,
                    SOURCE_GCL=case when :SOURCE_GCL is null then SOURCE_GCL else :SOURCE_GCL end,
                    COMMENTS=case when :COMMENTS is null then COMMENTS else :COMMENTS end
                    WHERE EVENT_ID = :ID;
                </query>
            </dbCommand>
        </update>
        <delete>
            <dbCommand>
				<var name="CLASS_ID" type="String" direction="Input" default="PODS_ELBOW" /> 
				<var name="POLICY" default="POLICY.xml#DELETE_PODS_SEM"  />
                <var name="ID" type="Int64"/>
                <var name="USER_ID" default="-1" type="Int64"/>
                <query>
					DO $$
                    BEGIN
                    UPDATE PODS.EVENT_RANGE
                    SET CURRENT_INDICATOR_LF='N'
                    WHERE EVENT_ID = {ID};

                    DELETE FROM PODS.ELBOW
                    WHERE EVENT_ID = {ID};
                    DELETE FROM WEB50.LNK_GATE WHERE LEFT_OBJ_ID = 'PODS_ELBOW/'||CAST({ID} AS VARCHAR(30)) OR RIGHT_OBJ_ID = 'PODS_ELBOW/'||CAST({ID} AS VARCHAR(30)); END $$;
                </query>
            </dbCommand>
        </delete>
    </data>
    <data table="EXPOSURE" schema="PODS" id="PODS_EXPOSURE" comment="PODS.EXPOSURE">
        <select>
            <dbQuery idField="ID">
                <param name="USER_ID" default="-1" type="Int64"/>
                <var name="FILTER" default="1=1"/>
                <var name="LPU_ACCESS_FILTER" default="SELECT srv_district_id FROM PODS.SRV_DISTRICT_GCL"/>
                <query>
                    SELECT * FROM (SELECT EVENT_ID ID, t.* FROM PODS.EXPOSURE t) d WHERE {FILTER}
                </query>
            </dbQuery>
        </select>
        <insert>
            <dbCommand>
				<var name="CLASS_ID" type="String" direction="Input" default="PODS_EXPOSURE" /> 
				<var name="POLICY" default="POLICY.xml#INSERT_PODS_SEM"  />
                <var name="EVENT_GUID" default="" type="String"/>
                <var name="TYPE_CL" default="UNKNOWN" type="String"/>
                <var name="SUPPORT_TYPE_CL" default="UNKNOWN" type="String"/>
                <var name="INTENTIONAL_LF" default="" type="String"/>
                <var name="ORIGINAL_CONSTRUCTION_LF" default="" type="String"/>
                <var name="ONSHORE_LF" default="" type="String"/>
                <var name="HEIGHT" default="NULL" type="Decimal"/>
                <var name="DESCRIPTION" default="" type="String"/>
                <var name="SOURCE_GCL" default="UNKNOWN" type="String"/>
                <var name="COMMENTS" default="" type="String"/>
                <var name="ID" type="Int64" direction="Output" default="SELECT max(EVENT_ID) id FROM PODS.EVENT_RANGE"/>
                <var name="PODS_USER" type="String"/>
                <var name="USER_ID" default="-1" type="Int64"/>
                <query>
					DO $$
					DECLARE
					returnId integer;
                    BEGIN
                    INSERT INTO PODS.EVENT_RANGE (EVENT_GUID,FEATURE_ID,STATION_ID_BEGIN,STATION_ID_END,PODS_USER,CREATE_DATE,EFFECTIVE_FROM_DATE,CURRENT_INDICATOR_LF,POSITIONING_TYPE_CL)
                    VALUES('{EVENT_GUID}','EXPOSURE',0,0,NULLIF('{PODS_USER}',''),current_timestamp,current_timestamp,'Y','UNKNOWN')
                    RETURNING EVENT_ID INTO returnId;

                    INSERT INTO PODS.EXPOSURE(EVENT_ID,EVENT_GUID,TYPE_CL,SUPPORT_TYPE_CL,INTENTIONAL_LF,ORIGINAL_CONSTRUCTION_LF,ONSHORE_LF,HEIGHT,DESCRIPTION,SOURCE_GCL,COMMENTS)
                    VALUES(returnId,'{EVENT_GUID}',NULLIF('{TYPE_CL}',''),NULLIF('{SUPPORT_TYPE_CL}',''),'{INTENTIONAL_LF}','{ORIGINAL_CONSTRUCTION_LF}','{ONSHORE_LF}',{HEIGHT},NULLIF('{DESCRIPTION}',''),NULLIF('{SOURCE_GCL}',''),NULLIF('{COMMENTS}',''));
                    END $$;
                </query>
            </dbCommand>
        </insert>
        <update>
            <dbCommand>
				<param name="CLASS_ID" type="String" direction="Input" default="PODS_EXPOSURE" /> 
				<var name="POLICY" default="POLICY.xml#UPDATE_PODS_SEM"  />
                <param name="EVENT_GUID" default="" type="String"/>
                <param name="TYPE_CL" default="UNKNOWN" type="String"/>
                <param name="SUPPORT_TYPE_CL" default="UNKNOWN" type="String"/>
                <param name="INTENTIONAL_LF" default="" type="String"/>
                <param name="ORIGINAL_CONSTRUCTION_LF" default="" type="String"/>
                <param name="ONSHORE_LF" default="" type="String"/>
                <param name="HEIGHT" default="NULL" type="Decimal"/>
                <param name="DESCRIPTION" default="" type="String"/>
                <param name="SOURCE_GCL" default="UNKNOWN" type="String"/>
                <param name="COMMENTS" default="" type="String"/>
                <param name="ID" type="Int64"/>
                <param name="USER_ID" default="-1" type="Int64"/>
                <query>
                    UPDATE PODS.EXPOSURE
                    SET 
					EVENT_GUID=case when :EVENT_GUID is null then EVENT_GUID else :EVENT_GUID end,
                    TYPE_CL=case when :TYPE_CL is null then TYPE_CL else :TYPE_CL end,
					ONSHORE_LF=case when :ONSHORE_LF is null then ONSHORE_LF else :ONSHORE_LF end,
					ORIGINAL_CONSTRUCTION_LF=case when :ORIGINAL_CONSTRUCTION_LF is null then ORIGINAL_CONSTRUCTION_LF else :ORIGINAL_CONSTRUCTION_LF end,
					INTENTIONAL_LF=case when :INTENTIONAL_LF is null then INTENTIONAL_LF else :INTENTIONAL_LF end,
					SUPPORT_TYPE_CL=case when :SUPPORT_TYPE_CL is null then SUPPORT_TYPE_CL else :SUPPORT_TYPE_CL end,
					HEIGHT=case when :HEIGHT is null then HEIGHT else :HEIGHT end,
                    DESCRIPTION=case when :DESCRIPTION is null then DESCRIPTION else :DESCRIPTION end,
                    SOURCE_GCL=case when :SOURCE_GCL is null then SOURCE_GCL else :SOURCE_GCL end,
                    COMMENTS=case when :COMMENTS is null then COMMENTS else :COMMENTS end
                    WHERE EVENT_ID = :ID;
                </query>
            </dbCommand>
        </update>
        <delete>
            <dbCommand>
				<var name="CLASS_ID" type="String" direction="Input" default="PODS_EXPOSURE" /> 
				<var name="POLICY" default="POLICY.xml#DELETE_PODS_SEM"  />
                <var name="ID" type="Int64"/>
                <var name="USER_ID" default="-1" type="Int64"/>
                <query>
					DO $$
                    BEGIN
                    UPDATE PODS.EVENT_RANGE
                    SET CURRENT_INDICATOR_LF='N'
                    WHERE EVENT_ID = {ID};

                    DELETE FROM PODS.EXPOSURE
                    WHERE EVENT_ID = {ID};
                    DELETE FROM WEB50.LNK_GATE WHERE LEFT_OBJ_ID = 'PODS_EXPOSURE/'||CAST({ID} AS VARCHAR(30)) OR RIGHT_OBJ_ID = 'PODS_EXPOSURE/'||CAST({ID} AS VARCHAR(30)); END $$;
                </query>
            </dbCommand>
        </delete>
    </data>
    <data table="EXTERNAL_COATING" schema="PODS" id="PODS_EXTERNAL_COATING" comment="PODS.EXTERNAL_COATING">
        <select>
            <dbQuery idField="ID">
                <param name="USER_ID" default="-1" type="Int64"/>
                <var name="FILTER" default="1=1"/>
                <var name="LPU_ACCESS_FILTER" default="SELECT srv_district_id FROM PODS.SRV_DISTRICT_GCL"/>
                <query>

                    SELECT * FROM (
                    SELECT ec.EVENT_ID ID
                    ,ec.DESCRIPTION
                    ,ec.PRODUCT_NAME
                    ,ec.TYPE_SCL||'@'||ec.SUBTYPE_SCL TYPE_SCL
                    ,ec.COATING_MATERIAL_GCL
                    ,ec.COATING_MANUFACTURER_GCL
                    ,ec.DATE_APPLIED
                    ,ec.WHERE_COATING_APPLIED_GCL
                    ,ec.COATING_APPLICATOR_GCL
                    ,ec.SOURCE_GCL
                    ,ec.COMMENTS
                    ,ec.EVENT_ID
                    FROM PODS.EXTERNAL_COATING ec
                    ) d WHERE {FILTER}
                </query>
            </dbQuery>
        </select>
        <insert>
            <dbCommand>
				<var name="CLASS_ID" type="String" direction="Input" default="PODS_EXTERNAL_COATING" /> 
				<var name="POLICY" default="POLICY.xml#INSERT_PODS_SEM"  />
                <var name="EVENT_GUID" default="" type="String"/>
                <var name="TYPE_SCL" default="UNKNOWN" type="String"/>
                <var name="SUBTYPE_SCL" default="NONE" type="String"/>
                <var name="COATING_MATERIAL_GCL" default="UNKNOWN" type="String"/>
                <var name="COATING_MANUFACTURER_GCL" default="UNKNOWN" type="String"/>
                <var name="PRODUCT_NAME" default="" type="String"/>
                <var name="COATING_APPLICATOR_GCL" default="UNKNOWN" type="String"/>
                <var name="WHERE_COATING_APPLIED_GCL" default="UNKNOWN" type="String"/>
                <var name="DATE_APPLIED" default="" type="DateTime"/>
                <var name="DESCRIPTION" default="" type="String"/>
                <var name="SOURCE_GCL" default="UNKNOWN" type="String"/>
                <var name="COMMENTS" default="" type="String"/>
                <var name="ID" type="Int64" direction="Output" default="SELECT max(EVENT_ID) id FROM PODS.EVENT_RANGE"/>
                <var name="PODS_USER" type="String"/>
                <var name="USER_ID" default="-1" type="Int64"/>
                <query>
					DO $$
					DECLARE
					returnId integer;
                    BEGIN
                    INSERT INTO PODS.EVENT_RANGE (EVENT_GUID,FEATURE_ID,STATION_ID_BEGIN,STATION_ID_END,PODS_USER,CREATE_DATE,EFFECTIVE_FROM_DATE,CURRENT_INDICATOR_LF,POSITIONING_TYPE_CL)
                    VALUES('{EVENT_GUID}','EXTERNAL_COATING',0,0,NULLIF('{PODS_USER}',''),current_timestamp,current_timestamp,'Y','UNKNOWN')
                    RETURNING EVENT_ID INTO returnId;

                    INSERT INTO PODS.EXTERNAL_COATING(EVENT_ID,EVENT_GUID,TYPE_SCL,SUBTYPE_SCL,COATING_MATERIAL_GCL,COATING_MANUFACTURER_GCL,PRODUCT_NAME,COATING_APPLICATOR_GCL,WHERE_COATING_APPLIED_GCL,DATE_APPLIED,DESCRIPTION,SOURCE_GCL,COMMENTS)
                    VALUES(returnId,'{EVENT_GUID}',coalesce(SUBSTR('{TYPE_SCL}',0,strpos('{TYPE_SCL}','@')),'UNKNOWN'),coalesce(SUBSTR('{TYPE_SCL}',strpos('{TYPE_SCL}','@')+1,length('{TYPE_SCL}')-strpos('{TYPE_SCL}','@')),'NONE'),NULLIF('{COATING_MATERIAL_GCL}',''),NULLIF('{COATING_MANUFACTURER_GCL}',''),NULLIF('{PRODUCT_NAME}',''),NULLIF('{COATING_APPLICATOR_GCL}',''),NULLIF('{WHERE_COATING_APPLIED_GCL}',''),'{DATE_APPLIED}',NULLIF('{DESCRIPTION}',''),NULLIF('{SOURCE_GCL}',''),NULLIF('{COMMENTS}',''));
                    END $$;
                </query>
            </dbCommand>
        </insert>
        <update>
            <dbCommand>
				<param name="CLASS_ID" type="String" direction="Input" default="PODS_EXTERNAL_COATING" /> 
				<var name="POLICY" default="POLICY.xml#UPDATE_PODS_SEM"  />
                <param name="EVENT_GUID" default="" type="String"/>
                <param name="TYPE_SCL" default="UNKNOWN" type="String"/>
                <param name="SUBTYPE_SCL" default="NONE" type="String"/>
                <param name="COATING_MATERIAL_GCL" default="UNKNOWN" type="String"/>
                <param name="COATING_MANUFACTURER_GCL" default="UNKNOWN" type="String"/>
                <param name="PRODUCT_NAME" default="" type="String"/>
                <param name="COATING_APPLICATOR_GCL" default="UNKNOWN" type="String"/>
                <param name="WHERE_COATING_APPLIED_GCL" default="UNKNOWN" type="String"/>
                <param name="DATE_APPLIED" default="" type="DateTime"/>
                <param name="DESCRIPTION" default="" type="String"/>
                <param name="SOURCE_GCL" default="UNKNOWN" type="String"/>
                <param name="COMMENTS" default="" type="String"/>
                <param name="ID" type="Int64"/>
                <param name="USER_ID" default="-1" type="Int64"/>
                <query>
                    UPDATE PODS.EXTERNAL_COATING
                    SET 
					EVENT_GUID=case when :EVENT_GUID is null then EVENT_GUID else :EVENT_GUID end,
					TYPE_SCL=coalesce(SUBSTR(:TYPE_SCL,0,strpos(:TYPE_SCL,'@')),'UNKNOWN'),SUBTYPE_SCL=coalesce(SUBSTR(:TYPE_SCL,strpos(:TYPE_SCL,'@')+1,length(:TYPE_SCL)-strpos(:TYPE_SCL,'@')),'NONE'),
					COATING_MATERIAL_GCL=case when :COATING_MATERIAL_GCL is null then COATING_MATERIAL_GCL else :COATING_MATERIAL_GCL end,
					COATING_MANUFACTURER_GCL=case when :COATING_MANUFACTURER_GCL is null then COATING_MANUFACTURER_GCL else :COATING_MANUFACTURER_GCL end,
					PRODUCT_NAME=case when :PRODUCT_NAME is null then PRODUCT_NAME else :PRODUCT_NAME end,
					COATING_APPLICATOR_GCL=case when :COATING_APPLICATOR_GCL is null then COATING_APPLICATOR_GCL else :COATING_APPLICATOR_GCL end,
					WHERE_COATING_APPLIED_GCL=case when :WHERE_COATING_APPLIED_GCL is null then WHERE_COATING_APPLIED_GCL else :WHERE_COATING_APPLIED_GCL end,
					DATE_APPLIED=case when :DATE_APPLIED is null then DATE_APPLIED else :DATE_APPLIED end,
					DESCRIPTION=case when :DESCRIPTION is null then DESCRIPTION else :DESCRIPTION end,
                    SOURCE_GCL=case when :SOURCE_GCL is null then SOURCE_GCL else :SOURCE_GCL end,
                    COMMENTS=case when :COMMENTS is null then COMMENTS else :COMMENTS end
                    WHERE EVENT_ID = :ID;
                </query>
            </dbCommand>
        </update>
        <delete>
            <dbCommand>
				<var name="CLASS_ID" type="String" direction="Input" default="PODS_EXTERNAL_COATING" /> 
				<var name="POLICY" default="POLICY.xml#DELETE_PODS_SEM"  />
                <var name="ID" type="Int64"/>
                <var name="USER_ID" default="-1" type="Int64"/>
                <query>
					DO $$
                    BEGIN
                    UPDATE PODS.EVENT_RANGE
                    SET CURRENT_INDICATOR_LF='N'
                    WHERE EVENT_ID = {ID};

                    DELETE FROM PODS.EXTERNAL_COATING
                    WHERE EVENT_ID = {ID};
                    DELETE FROM WEB50.LNK_GATE WHERE LEFT_OBJ_ID = 'PODS_EXTERNAL_COATING/'||CAST({ID} AS VARCHAR(30)) OR RIGHT_OBJ_ID = 'PODS_EXTERNAL_COATING/'||CAST({ID} AS VARCHAR(30)); END $$;
                </query>
            </dbCommand>
        </delete>
    </data>
    <data table="EXTRUSION" schema="PODS" id="PODS_EXTRUSION" comment="PODS.EXTRUSION">
        <select>
            <dbQuery idField="ID">
                <param name="USER_ID" default="-1" type="Int64"/>
                <var name="FILTER" default="1=1"/>
                <var name="LPU_ACCESS_FILTER" default="SELECT srv_district_id FROM PODS.SRV_DISTRICT_GCL"/>
                <query>
                    SELECT * FROM (SELECT EVENT_ID ID, t.* FROM PODS.EXTRUSION t) d WHERE {FILTER}
                </query>
            </dbQuery>
        </select>
        <insert>
            <dbCommand>
				<var name="CLASS_ID" type="String" direction="Input" default="PODS_EXTRUSION" /> 
				<var name="POLICY" default="POLICY.xml#INSERT_PODS_SEM"  />
                <var name="EVENT_GUID" default="" type="String"/>
                <var name="TYPE_CL" default="UNKNOWN" type="String"/>
                <var name="MANUFACTURER_CL" default="UNKNOWN" type="String"/>
                <var name="DATE_MANUFACTURED" default="" type="DateTime"/>
                <var name="NOMINAL_DIAMETER_INLET_GCL" default="0" type="Decimal"/>
                <var name="NOMINAL_DIAMETER_OUTLET_GCL" default="0" type="Decimal"/>
                <var name="NOMINAL_WALL_THICKNESS_IN_GCL" default="0" type="Decimal"/>
                <var name="NOMINAL_WALL_THICK_OUT_GCL" default="0" type="Decimal"/>
                <var name="SPECIFICATION_CL" default="UNKNOWN" type="String"/>
                <var name="NOMINAL_PRESSURE_RATING" default="NULL" type="Decimal"/>
                <var name="MILL_TEST_PRESSURE" default="NULL" type="Decimal"/>
                <var name="MATERIAL_CL" default="UNKNOWN" type="String"/>
                <var name="DATE_INSTALLED" default="" type="DateTime"/>
                <var name="DESCRIPTION" default="" type="String"/>
                <var name="SOURCE_GCL" default="UNKNOWN" type="String"/>
                <var name="COMMENTS" default="" type="String"/>
                <var name="ID" type="Int64" direction="Output" default="SELECT max(EVENT_ID) id FROM PODS.EVENT_RANGE"/>
                <var name="PODS_USER" type="String"/>
                <var name="USER_ID" default="-1" type="Int64"/>
                <query>
					DO $$
					DECLARE
					returnId integer;
                    BEGIN
                    INSERT INTO PODS.EVENT_RANGE (EVENT_GUID,FEATURE_ID,STATION_ID_BEGIN,STATION_ID_END,PODS_USER,CREATE_DATE,EFFECTIVE_FROM_DATE,CURRENT_INDICATOR_LF,POSITIONING_TYPE_CL)
                    VALUES('{EVENT_GUID}','EXTRUSION',0,0,NULLIF('{PODS_USER}',''),current_timestamp,current_timestamp,'Y','UNKNOWN')
                    RETURNING EVENT_ID INTO returnId;

                    INSERT INTO PODS.EXTRUSION(EVENT_ID,EVENT_GUID,TYPE_CL,MANUFACTURER_CL,DATE_MANUFACTURED,NOMINAL_DIAMETER_INLET_GCL,NOMINAL_DIAMETER_OUTLET_GCL,NOMINAL_WALL_THICKNESS_IN_GCL,NOMINAL_WALL_THICK_OUT_GCL,SPECIFICATION_CL,NOMINAL_PRESSURE_RATING,MILL_TEST_PRESSURE,MATERIAL_CL,DATE_INSTALLED,DESCRIPTION,SOURCE_GCL,COMMENTS)
                    VALUES(returnId,'{EVENT_GUID}',NULLIF('{TYPE_CL}',''),NULLIF('{MANUFACTURER_CL}',''),'{DATE_MANUFACTURED}',{NOMINAL_DIAMETER_INLET_GCL},{NOMINAL_DIAMETER_OUTLET_GCL},{NOMINAL_WALL_THICKNESS_IN_GCL},{NOMINAL_WALL_THICK_OUT_GCL},NULLIF('{SPECIFICATION_CL}',''),{NOMINAL_PRESSURE_RATING},{MILL_TEST_PRESSURE},NULLIF('{MATERIAL_CL}',''),'{DATE_INSTALLED}',NULLIF('{DESCRIPTION}',''),NULLIF('{SOURCE_GCL}',''),NULLIF('{COMMENTS}',''));
                    END $$;
                </query>
            </dbCommand>
        </insert>
        <update>
            <dbCommand>
				<param name="CLASS_ID" type="String" direction="Input" default="PODS_EXTRUSION" /> 
				<var name="POLICY" default="POLICY.xml#UPDATE_PODS_SEM"  />
                <param name="EVENT_GUID" default="" type="String"/>
                <param name="TYPE_CL" default="UNKNOWN" type="String"/>
                <param name="MANUFACTURER_CL" default="UNKNOWN" type="String"/>
                <param name="DATE_MANUFACTURED" default="" type="DateTime"/>
                <param name="NOMINAL_DIAMETER_INLET_GCL" default="0" type="Decimal"/>
                <param name="NOMINAL_DIAMETER_OUTLET_GCL" default="0" type="Decimal"/>
                <param name="NOMINAL_WALL_THICKNESS_IN_GCL" default="0" type="Decimal"/>
                <param name="NOMINAL_WALL_THICK_OUT_GCL" default="0" type="Decimal"/>
                <param name="SPECIFICATION_CL" default="UNKNOWN" type="String"/>
                <param name="NOMINAL_PRESSURE_RATING" default="NULL" type="Decimal"/>
                <param name="MILL_TEST_PRESSURE" default="NULL" type="Decimal"/>
                <param name="MATERIAL_CL" default="UNKNOWN" type="String"/>
                <param name="DATE_INSTALLED" default="" type="DateTime"/>
                <param name="DESCRIPTION" default="" type="String"/>
                <param name="SOURCE_GCL" default="UNKNOWN" type="String"/>
                <param name="COMMENTS" default="" type="String"/>
                <param name="ID" type="Int64"/>
                <param name="USER_ID" default="-1" type="Int64"/>
                <query>
                    UPDATE PODS.EXTRUSION
                    SET 
					EVENT_GUID=case when :EVENT_GUID is null then EVENT_GUID else :EVENT_GUID end,
                    TYPE_CL=case when :TYPE_CL is null then TYPE_CL else :TYPE_CL end,
                    MANUFACTURER_CL=case when :MANUFACTURER_CL is null then MANUFACTURER_CL else :MANUFACTURER_CL end,
                    DATE_MANUFACTURED=case when :DATE_MANUFACTURED is null then DATE_MANUFACTURED else :DATE_MANUFACTURED end,
                    NOMINAL_DIAMETER_INLET_GCL=case when :NOMINAL_DIAMETER_INLET_GCL is null then NOMINAL_DIAMETER_INLET_GCL else :NOMINAL_DIAMETER_INLET_GCL end,
                    NOMINAL_DIAMETER_OUTLET_GCL=case when :NOMINAL_DIAMETER_OUTLET_GCL is null then NOMINAL_DIAMETER_OUTLET_GCL else :NOMINAL_DIAMETER_OUTLET_GCL end,
					NOMINAL_WALL_THICKNESS_IN_GCL=case when :NOMINAL_WALL_THICKNESS_IN_GCL is null then NOMINAL_WALL_THICKNESS_IN_GCL else :NOMINAL_WALL_THICKNESS_IN_GCL end,
					NOMINAL_WALL_THICK_OUT_GCL=case when :NOMINAL_WALL_THICK_OUT_GCL is null then NOMINAL_WALL_THICK_OUT_GCL else :NOMINAL_WALL_THICK_OUT_GCL end,
                    SPECIFICATION_CL=case when :SPECIFICATION_CL is null then SPECIFICATION_CL else :SPECIFICATION_CL end,
                    NOMINAL_PRESSURE_RATING=case when :NOMINAL_PRESSURE_RATING is null then NOMINAL_PRESSURE_RATING else :NOMINAL_PRESSURE_RATING end,
                    MILL_TEST_PRESSURE=case when :MILL_TEST_PRESSURE is null then MILL_TEST_PRESSURE else :MILL_TEST_PRESSURE end,
					MATERIAL_CL=case when :MATERIAL_CL is null then MATERIAL_CL else :MATERIAL_CL end,
                    DATE_INSTALLED=case when :DATE_INSTALLED is null then DATE_INSTALLED else :DATE_INSTALLED end,
                    DESCRIPTION=case when :DESCRIPTION is null then DESCRIPTION else :DESCRIPTION end,
                    SOURCE_GCL=case when :SOURCE_GCL is null then SOURCE_GCL else :SOURCE_GCL end,
                    COMMENTS=case when :COMMENTS is null then COMMENTS else :COMMENTS end
                    WHERE EVENT_ID = :ID;
                </query>
            </dbCommand>
        </update>
        <delete>
            <dbCommand>
				<var name="CLASS_ID" type="String" direction="Input" default="PODS_EXTRUSION" /> 
				<var name="POLICY" default="POLICY.xml#DELETE_PODS_SEM"  />
                <var name="ID" type="Int64"/>
                <var name="USER_ID" default="-1" type="Int64"/>
                <query>
					DO $$
                    BEGIN
                    UPDATE PODS.EVENT_RANGE
                    SET CURRENT_INDICATOR_LF='N'
                    WHERE EVENT_ID = {ID};

                    DELETE FROM PODS.EXTRUSION
                    WHERE EVENT_ID = {ID};
                    DELETE FROM WEB50.LNK_GATE WHERE LEFT_OBJ_ID = 'PODS_EXTRUSION/'||CAST({ID} AS VARCHAR(30)) OR RIGHT_OBJ_ID = 'PODS_EXTRUSION/'||CAST({ID} AS VARCHAR(30)); END $$;
                </query>
            </dbCommand>
        </delete>
    </data>
    <data table="EXTRUSION_OPENING" schema="PODS" id="PODS_EXTRUSION_OPENING" comment="PODS.EXTRUSION_OPENING">
        <select>
            <dbQuery idField="ID">
                <param name="USER_ID" default="-1" type="Int64"/>
                <var name="FILTER" default="1=1"/>
                <var name="LPU_ACCESS_FILTER" default="SELECT srv_district_id FROM PODS.SRV_DISTRICT_GCL"/>
                <query>
                    SELECT * FROM (SELECT EVENT_ID ID, t.* FROM PODS.EXTRUSION_OPENING t) d WHERE {FILTER}
                </query>
            </dbQuery>
        </select>
        <insert>
            <dbCommand>
				<var name="CLASS_ID" type="String" direction="Input" default="PODS_EXTRUSION_OPENING" /> 
				<var name="POLICY" default="POLICY.xml#INSERT_PODS_SEM"  />
                <var name="EVENT_GUID" default="" type="String"/>
                <var name="NOMINAL_DIAMETER_GCL" default="0" type="Decimal"/>
                <var name="NOMINAL_WALL_THICKNESS_GCL" default="0" type="Decimal"/>
                <var name="SERIES_BRANCH" default="NULL" type="Decimal"/>
                <var name="DATE_INSTALLED" default="" type="DateTime"/>
                <var name="DESCRIPTION" default="" type="String"/>
                <var name="SOURCE_GCL" default="UNKNOWN" type="String"/>
                <var name="COMMENTS" default="" type="String"/>
                <var name="ID" type="Int64" direction="Output" default="SELECT max(EVENT_ID) id FROM PODS.EVENT_RANGE"/>
                <var name="PODS_USER" type="String"/>
                <var name="USER_ID" default="-1" type="Int64"/>
                <query>
					DO $$
					DECLARE
					returnId integer;
                    BEGIN
                    INSERT INTO PODS.EVENT_RANGE (EVENT_GUID,FEATURE_ID,STATION_ID_BEGIN,STATION_ID_END,PODS_USER,CREATE_DATE,EFFECTIVE_FROM_DATE,CURRENT_INDICATOR_LF,POSITIONING_TYPE_CL)
                    VALUES('{EVENT_GUID}','EXTR_OPEN',0,0,NULLIF('{PODS_USER}',''),current_timestamp,current_timestamp,'Y','UNKNOWN')
                    RETURNING EVENT_ID INTO returnId;

                    INSERT INTO PODS.EXTRUSION_OPENING(EVENT_ID,EVENT_GUID,NOMINAL_DIAMETER_GCL,NOMINAL_WALL_THICKNESS_GCL,SERIES_BRANCH,DATE_INSTALLED,DESCRIPTION,SOURCE_GCL,COMMENTS)
                    VALUES(returnId,'{EVENT_GUID}',{NOMINAL_DIAMETER_GCL},{NOMINAL_WALL_THICKNESS_GCL},{SERIES_BRANCH},'{DATE_INSTALLED}',NULLIF('{DESCRIPTION}',''),NULLIF('{SOURCE_GCL}',''),NULLIF('{COMMENTS}',''));
                    END $$;
                </query>
            </dbCommand>
        </insert>
        <update>
            <dbCommand>
				<param name="CLASS_ID" type="String" direction="Input" default="PODS_EXTRUSION_OPENING" /> 
				<var name="POLICY" default="POLICY.xml#UPDATE_PODS_SEM"  />
                <param name="EVENT_GUID" default="" type="String"/>
                <param name="NOMINAL_DIAMETER_GCL" default="0" type="Decimal"/>
                <param name="NOMINAL_WALL_THICKNESS_GCL" default="0" type="Decimal"/>
                <param name="SERIES_BRANCH" default="NULL" type="Decimal"/>
                <param name="DATE_INSTALLED" default="" type="DateTime"/>
                <param name="DESCRIPTION" default="" type="String"/>
                <param name="SOURCE_GCL" default="UNKNOWN" type="String"/>
                <param name="COMMENTS" default="" type="String"/>
                <param name="ID" type="Int64"/>
                <param name="USER_ID" default="-1" type="Int64"/>
                <query>
                    UPDATE PODS.EXTRUSION_OPENING
                    SET 
					EVENT_GUID=case when :EVENT_GUID is null then EVENT_GUID else :EVENT_GUID end,
                    NOMINAL_DIAMETER_GCL=case when :NOMINAL_DIAMETER_GCL is null then NOMINAL_DIAMETER_GCL else :NOMINAL_DIAMETER_GCL end,
                    NOMINAL_WALL_THICKNESS_GCL=case when :NOMINAL_WALL_THICKNESS_GCL is null then NOMINAL_WALL_THICKNESS_GCL else :NOMINAL_WALL_THICKNESS_GCL end,
					SERIES_BRANCH=case when :SERIES_BRANCH is null then SERIES_BRANCH else :SERIES_BRANCH end,
                    DATE_INSTALLED=case when :DATE_INSTALLED is null then DATE_INSTALLED else :DATE_INSTALLED end,
                    DESCRIPTION=case when :DESCRIPTION is null then DESCRIPTION else :DESCRIPTION end,
                    SOURCE_GCL=case when :SOURCE_GCL is null then SOURCE_GCL else :SOURCE_GCL end,
                    COMMENTS=case when :COMMENTS is null then COMMENTS else :COMMENTS end
                    WHERE EVENT_ID = :ID;
                </query>
            </dbCommand>
        </update>
        <delete>
            <dbCommand>
				<var name="CLASS_ID" type="String" direction="Input" default="PODS_EXTRUSION_OPENING" /> 
				<var name="POLICY" default="POLICY.xml#DELETE_PODS_SEM"  />
                <var name="ID" type="Int64"/>
                <var name="USER_ID" default="-1" type="Int64"/>
                <query>
					DO $$
                    BEGIN
                    UPDATE PODS.EVENT_RANGE
                    SET CURRENT_INDICATOR_LF='N'
                    WHERE EVENT_ID = {ID};

                    DELETE FROM PODS.EXTRUSION_OPENING
                    WHERE EVENT_ID = {ID};
                    DELETE FROM WEB50.LNK_GATE WHERE LEFT_OBJ_ID = 'PODS_EXTRUSION_OPENING/'||CAST({ID} AS VARCHAR(30)) OR RIGHT_OBJ_ID = 'PODS_EXTRUSION_OPENING/'||CAST({ID} AS VARCHAR(30)); END $$;
                </query>
            </dbCommand>
        </delete>
    </data>
    <data table="FABRICATION" schema="PODS" id="PODS_FABRICATION" comment="PODS.FABRICATION">
        <select>
            <dbQuery idField="ID">
                <param name="USER_ID" default="-1" type="Int64"/>
                <var name="FILTER" default="1=1"/>
                <var name="LPU_ACCESS_FILTER" default="SELECT srv_district_id FROM PODS.SRV_DISTRICT_GCL"/>
                <query>
                    SELECT * FROM (SELECT EVENT_ID ID, t.* FROM PODS.FABRICATION t) d WHERE {FILTER}
                </query>
            </dbQuery>
        </select>
        <insert>
            <dbCommand>
				<var name="CLASS_ID" type="String" direction="Input" default="PODS_FABRICATION" /> 
				<var name="POLICY" default="POLICY.xml#INSERT_PODS_SEM"  />
                <var name="EVENT_GUID" default="" type="String"/>
                <var name="FABRICATOR_NAME" default="" type="String"/>
                <var name="LOCATION_CL" default="UNKNOWN" type="String"/>
                <var name="FABRICATION_DATE" default="" type="DateTime"/>
                <var name="DATE_INSTALLED" default="" type="DateTime"/>
                <var name="DESCRIPTION" default="" type="String"/>
                <var name="SOURCE_GCL" default="UNKNOWN" type="String"/>
                <var name="COMMENTS" default="" type="String"/>
                <var name="ID" type="Int64" direction="Output" default="SELECT max(EVENT_ID) id FROM PODS.EVENT_RANGE"/>
                <var name="PODS_USER" type="String"/>
                <var name="USER_ID" default="-1" type="Int64"/>
                <query>
					DO $$
					DECLARE
					returnId integer;
                    BEGIN
                    INSERT INTO PODS.EVENT_RANGE (EVENT_GUID,FEATURE_ID,STATION_ID_BEGIN,STATION_ID_END,PODS_USER,CREATE_DATE,EFFECTIVE_FROM_DATE,CURRENT_INDICATOR_LF,POSITIONING_TYPE_CL)
                    VALUES('{EVENT_GUID}','FABRICATION',0,0,NULLIF('{PODS_USER}',''),current_timestamp,current_timestamp,'Y','UNKNOWN')
                    RETURNING EVENT_ID INTO returnId;

                    INSERT INTO PODS.FABRICATION(EVENT_ID,EVENT_GUID,FABRICATOR_NAME,LOCATION_CL,FABRICATION_DATE,DATE_INSTALLED,DESCRIPTION,SOURCE_GCL,COMMENTS)
                    VALUES(returnId,'{EVENT_GUID}',NULLIF('{FABRICATOR_NAME}',''),NULLIF('{LOCATION_CL}',''),'{FABRICATION_DATE}','{DATE_INSTALLED}',NULLIF('{DESCRIPTION}',''),NULLIF('{SOURCE_GCL}',''),NULLIF('{COMMENTS}',''));
                    END $$;
                </query>
            </dbCommand>
        </insert>
        <update>
            <dbCommand>
				<param name="CLASS_ID" type="String" direction="Input" default="PODS_FABRICATION" /> 
				<var name="POLICY" default="POLICY.xml#UPDATE_PODS_SEM"  />
                <param name="EVENT_GUID" default="" type="String"/>
                <param name="FABRICATOR_NAME" default="" type="String"/>
                <param name="LOCATION_CL" default="UNKNOWN" type="String"/>
                <param name="FABRICATION_DATE" default="" type="DateTime"/>
                <param name="DATE_INSTALLED" default="" type="DateTime"/>
                <param name="DESCRIPTION" default="" type="String"/>
                <param name="SOURCE_GCL" default="UNKNOWN" type="String"/>
                <param name="COMMENTS" default="" type="String"/>
                <param name="ID" type="Int64"/>
                <param name="USER_ID" default="-1" type="Int64"/>
                <query>
                    UPDATE PODS.FABRICATION
                    SET 
					EVENT_GUID=case when :EVENT_GUID is null then EVENT_GUID else :EVENT_GUID end,
					FABRICATOR_NAME=case when :FABRICATOR_NAME is null then FABRICATOR_NAME else :FABRICATOR_NAME end,
					LOCATION_CL=case when :LOCATION_CL is null then LOCATION_CL else :LOCATION_CL end,
					FABRICATION_DATE=case when :FABRICATION_DATE is null then FABRICATION_DATE else :FABRICATION_DATE end,
                    DATE_INSTALLED=case when :DATE_INSTALLED is null then DATE_INSTALLED else :DATE_INSTALLED end,
                    DESCRIPTION=case when :DESCRIPTION is null then DESCRIPTION else :DESCRIPTION end,
                    SOURCE_GCL=case when :SOURCE_GCL is null then SOURCE_GCL else :SOURCE_GCL end,
                    COMMENTS=case when :COMMENTS is null then COMMENTS else :COMMENTS end
                    WHERE EVENT_ID = :ID;
                </query>
            </dbCommand>
        </update>
        <delete>
            <dbCommand>
				<var name="CLASS_ID" type="String" direction="Input" default="PODS_FABRICATION" /> 
				<var name="POLICY" default="POLICY.xml#DELETE_PODS_SEM"  />
                <var name="ID" type="Int64"/>
                <var name="USER_ID" default="-1" type="Int64"/>
                <query>
					DO $$
                    BEGIN
                    UPDATE PODS.EVENT_RANGE
                    SET CURRENT_INDICATOR_LF='N'
                    WHERE EVENT_ID = {ID};

                    DELETE FROM PODS.FABRICATION
                    WHERE EVENT_ID = {ID};
                    DELETE FROM WEB50.LNK_GATE WHERE LEFT_OBJ_ID = 'PODS_FABRICATION/'||CAST({ID} AS VARCHAR(30)) OR RIGHT_OBJ_ID = 'PODS_FABRICATION/'||CAST({ID} AS VARCHAR(30)); END $$;
                </query>
            </dbCommand>
        </delete>
    </data>
    <data table="FACILITY_RANKING" schema="PODS" id="PODS_FACILITY_RANKING" comment="PODS.FACILITY_RANKING">
        <select>
            <dbQuery idField="ID">
                <param name="USER_ID" default="-1" type="Int64"/>
                <var name="FILTER" default="1=1"/>
                <var name="LPU_ACCESS_FILTER" default="SELECT srv_district_id FROM PODS.SRV_DISTRICT_GCL"/>
                <query>
                    SELECT * FROM (SELECT EVENT_ID ID, t.* FROM PODS.FACILITY_RANKING t) d WHERE {FILTER}
                </query>
            </dbQuery>
        </select>
        <insert>
            <dbCommand>
				<var name="CLASS_ID" type="String" direction="Input" default="PODS_FACILITY_RANKING" /> 
				<var name="POLICY" default="POLICY.xml#INSERT_PODS_SEM"  />
                <var name="EVENT_GUID" default="" type="String"/>
                <var name="PURPOSE_CL" default="UNKNOWN" type="String"/>
                <var name="RANKING" default="NULL" type="Decimal"/>
                <var name="DETERMINATION_METHOD_GCL" default="UNKNOWN" type="String"/>
                <var name="DETERMINATION_DATE" default="" type="DateTime"/>
                <var name="DESCRIPTION" default="" type="String"/>
                <var name="SOURCE_GCL" default="UNKNOWN" type="String"/>
                <var name="COMMENTS" default="" type="String"/>
                <var name="ID" type="Int64" direction="Output" default="SELECT max(EVENT_ID) id FROM PODS.EVENT_RANGE"/>
                <var name="PODS_USER" type="String"/>
                <var name="USER_ID" default="-1" type="Int64"/>
                <query>
					DO $$
					DECLARE
					returnId integer;
                    BEGIN
                    INSERT INTO PODS.EVENT_RANGE (EVENT_GUID,FEATURE_ID,STATION_ID_BEGIN,STATION_ID_END,PODS_USER,CREATE_DATE,EFFECTIVE_FROM_DATE,CURRENT_INDICATOR_LF,POSITIONING_TYPE_CL)
                    VALUES('{EVENT_GUID}','FACILITY_RANKING',0,0,NULLIF('{PODS_USER}',''),current_timestamp,current_timestamp,'Y','UNKNOWN')
                    RETURNING EVENT_ID INTO returnId;

                    INSERT INTO PODS.FACILITY_RANKING(EVENT_ID,EVENT_GUID,PURPOSE_CL,RANKING,DETERMINATION_METHOD_GCL,DETERMINATION_DATE,DESCRIPTION,SOURCE_GCL,COMMENTS)
                    VALUES(returnId,'{EVENT_GUID}',NULLIF('{PURPOSE_CL}',''),{RANKING},NULLIF('{DETERMINATION_METHOD_GCL}',''),'{DETERMINATION_DATE}',NULLIF('{DESCRIPTION}',''),NULLIF('{SOURCE_GCL}',''),NULLIF('{COMMENTS}',''));
                    END $$;
                </query>
            </dbCommand>
        </insert>
        <update>
            <dbCommand>
				<param name="CLASS_ID" type="String" direction="Input" default="PODS_FACILITY_RANKING" /> 
				<var name="POLICY" default="POLICY.xml#UPDATE_PODS_SEM"  />
                <param name="EVENT_GUID" default="" type="String"/>
                <param name="PURPOSE_CL" default="UNKNOWN" type="String"/>
                <param name="RANKING" default="NULL" type="Decimal"/>
                <param name="DETERMINATION_METHOD_GCL" default="UNKNOWN" type="String"/>
                <param name="DETERMINATION_DATE" default="" type="DateTime"/>
                <param name="DESCRIPTION" default="" type="String"/>
                <param name="SOURCE_GCL" default="UNKNOWN" type="String"/>
                <param name="COMMENTS" default="" type="String"/>
                <param name="ID" type="Int64"/>
                <param name="USER_ID" default="-1" type="Int64"/>
                <query>
                    UPDATE PODS.FACILITY_RANKING
                    SET 
					EVENT_GUID=case when :EVENT_GUID is null then EVENT_GUID else :EVENT_GUID end,
                    PURPOSE_CL=case when :PURPOSE_CL is null then PURPOSE_CL else :PURPOSE_CL end,
					RANKING=case when :RANKING is null then RANKING else :RANKING end,
                    DETERMINATION_METHOD_GCL=case when :DETERMINATION_METHOD_GCL is null then DETERMINATION_METHOD_GCL else :DETERMINATION_METHOD_GCL end,
                    DETERMINATION_DATE=case when :DETERMINATION_DATE is null then DETERMINATION_DATE else :DETERMINATION_DATE end,
                    DESCRIPTION=case when :DESCRIPTION is null then DESCRIPTION else :DESCRIPTION end,
                    SOURCE_GCL=case when :SOURCE_GCL is null then SOURCE_GCL else :SOURCE_GCL end,
                    COMMENTS=case when :COMMENTS is null then COMMENTS else :COMMENTS end
                    WHERE EVENT_ID = :ID;
                </query>
            </dbCommand>
        </update>
        <delete>
            <dbCommand>
				<var name="CLASS_ID" type="String" direction="Input" default="PODS_FACILITY_RANKING" /> 
				<var name="POLICY" default="POLICY.xml#DELETE_PODS_SEM"  />
                <var name="ID" type="Int64"/>
                <var name="USER_ID" default="-1" type="Int64"/>
                <query>
					DO $$
                    BEGIN
                    UPDATE PODS.EVENT_RANGE
                    SET CURRENT_INDICATOR_LF='N'
                    WHERE EVENT_ID = {ID};

                    DELETE FROM PODS.FACILITY_RANKING
                    WHERE EVENT_ID = {ID};
                    DELETE FROM WEB50.LNK_GATE WHERE LEFT_OBJ_ID = 'PODS_FACILITY_RANKING/'||CAST({ID} AS VARCHAR(30)) OR RIGHT_OBJ_ID = 'PODS_FACILITY_RANKING/'||CAST({ID} AS VARCHAR(30)); END $$;
                </query>
            </dbCommand>
        </delete>
    </data>
    <data table="FACILITY_RATING" schema="PODS" id="PODS_FACILITY_RATING" comment="PODS.FACILITY_RATING">
        <select>
            <dbQuery idField="ID">
                <param name="USER_ID" default="-1" type="Int64"/>
                <var name="FILTER" default="1=1"/>
                <var name="LPU_ACCESS_FILTER" default="SELECT srv_district_id FROM PODS.SRV_DISTRICT_GCL"/>
                <query>
                    SELECT * FROM (SELECT EVENT_ID ID, t.* FROM PODS.FACILITY_RATING t) d WHERE {FILTER}
                </query>
            </dbQuery>
        </select>
        <insert>
            <dbCommand>
				<var name="CLASS_ID" type="String" direction="Input" default="PODS_FACILITY_RATING" /> 
				<var name="POLICY" default="POLICY.xml#INSERT_PODS_SEM"  />
                <var name="EVENT_GUID" default="" type="String"/>
                <var name="PURPOSE_CL" default="UNKNOWN" type="String"/>
                <var name="RATING" default="NULL" type="Decimal"/>
                <var name="DETERMINATION_METHOD_GCL" default="UNKNOWN" type="String"/>
                <var name="DETERMINATION_DATE" default="" type="DateTime"/>
                <var name="DESCRIPTION" default="" type="String"/>
                <var name="SOURCE_GCL" default="UNKNOWN" type="String"/>
                <var name="COMMENTS" default="" type="String"/>
                <var name="ID" type="Int64" direction="Output" default="SELECT max(EVENT_ID) id FROM PODS.EVENT_RANGE"/>
                <var name="PODS_USER" type="String"/>
                <var name="USER_ID" default="-1" type="Int64"/>
                <query>
					DO $$
					DECLARE
					returnId integer;
                    BEGIN
                    INSERT INTO PODS.EVENT_RANGE (EVENT_GUID,FEATURE_ID,STATION_ID_BEGIN,STATION_ID_END,PODS_USER,CREATE_DATE,EFFECTIVE_FROM_DATE,CURRENT_INDICATOR_LF,POSITIONING_TYPE_CL)
                    VALUES('{EVENT_GUID}','FACILITY_RATING',0,0,NULLIF('{PODS_USER}',''),current_timestamp,current_timestamp,'Y','UNKNOWN')
                    RETURNING EVENT_ID INTO returnId;

                    INSERT INTO PODS.FACILITY_RATING(EVENT_ID,EVENT_GUID,PURPOSE_CL,RATING,DETERMINATION_METHOD_GCL,DETERMINATION_DATE,DESCRIPTION,SOURCE_GCL,COMMENTS)
                    VALUES(returnId,'{EVENT_GUID}',NULLIF('{PURPOSE_CL}',''),{RATING},NULLIF('{DETERMINATION_METHOD_GCL}',''),'{DETERMINATION_DATE}',NULLIF('{DESCRIPTION}',''),NULLIF('{SOURCE_GCL}',''),NULLIF('{COMMENTS}',''));
                    END $$;
                </query>
            </dbCommand>
        </insert>
        <update>
            <dbCommand>
				<param name="CLASS_ID" type="String" direction="Input" default="PODS_FACILITY_RATING" /> 
				<var name="POLICY" default="POLICY.xml#UPDATE_PODS_SEM"  />
                <param name="EVENT_GUID" default="" type="String"/>
                <param name="PURPOSE_CL" default="UNKNOWN" type="String"/>
                <param name="RATING" default="NULL" type="Decimal"/>
                <param name="DETERMINATION_METHOD_GCL" default="UNKNOWN" type="String"/>
                <param name="DETERMINATION_DATE" default="" type="DateTime"/>
                <param name="DESCRIPTION" default="" type="String"/>
                <param name="SOURCE_GCL" default="UNKNOWN" type="String"/>
                <param name="COMMENTS" default="" type="String"/>
                <param name="ID" type="Int64"/>
                <param name="USER_ID" default="-1" type="Int64"/>
                <query>
                    UPDATE PODS.FACILITY_RATING
                    SET 
					EVENT_GUID=case when :EVENT_GUID is null then EVENT_GUID else :EVENT_GUID end,
                    PURPOSE_CL=case when :PURPOSE_CL is null then PURPOSE_CL else :PURPOSE_CL end,
					RATING=case when :RATING is null then RATING else :RATING end,
                    DETERMINATION_METHOD_GCL=case when :DETERMINATION_METHOD_GCL is null then DETERMINATION_METHOD_GCL else :DETERMINATION_METHOD_GCL end,
                    DETERMINATION_DATE=case when :DETERMINATION_DATE is null then DETERMINATION_DATE else :DETERMINATION_DATE end,
                    DESCRIPTION=case when :DESCRIPTION is null then DESCRIPTION else :DESCRIPTION end,
                    SOURCE_GCL=case when :SOURCE_GCL is null then SOURCE_GCL else :SOURCE_GCL end,
                    COMMENTS=case when :COMMENTS is null then COMMENTS else :COMMENTS end
                    WHERE EVENT_ID = :ID;
                </query>
            </dbCommand>
        </update>
        <delete>
            <dbCommand>
				<var name="CLASS_ID" type="String" direction="Input" default="PODS_FACILITY_RATING" /> 
				<var name="POLICY" default="POLICY.xml#DELETE_PODS_SEM"  />
                <var name="ID" type="Int64"/>
                <var name="USER_ID" default="-1" type="Int64"/>
                <query>
					DO $$
                    BEGIN
                    UPDATE PODS.EVENT_RANGE
                    SET CURRENT_INDICATOR_LF='N'
                    WHERE EVENT_ID = {ID};

                    DELETE FROM PODS.FACILITY_RATING
                    WHERE EVENT_ID = {ID};
                    DELETE FROM WEB50.LNK_GATE WHERE LEFT_OBJ_ID = 'PODS_FACILITY_RATING/'||CAST({ID} AS VARCHAR(30)) OR RIGHT_OBJ_ID = 'PODS_FACILITY_RATING/'||CAST({ID} AS VARCHAR(30)); END $$;
                </query>
            </dbCommand>
        </delete>
    </data>
    <data table="FACILITY_RATING_VARIANCE" schema="PODS" id="PODS_FACILITY_RATING_VARIANCE" comment="PODS.FACILITY_RATING_VARIANCE">
        <select>
            <dbQuery idField="ID">
                <param name="USER_ID" default="-1" type="Int64"/>
                <var name="FILTER" default="1=1"/>
                <var name="LPU_ACCESS_FILTER" default="SELECT srv_district_id FROM PODS.SRV_DISTRICT_GCL"/>
                <query>
                    SELECT * FROM (SELECT EVENT_ID ID, t.* FROM PODS.FACILITY_RATING_VARIANCE t) d WHERE {FILTER}
                </query>
            </dbQuery>
        </select>
        <insert>
            <dbCommand>
				<var name="CLASS_ID" type="String" direction="Input" default="PODS_FACILITY_RATING_VARIANCE" /> 
				<var name="POLICY" default="POLICY.xml#INSERT_PODS_SEM"  />
                <var name="EVENT_GUID" default="" type="String"/>
                <var name="UPRATED_PRESSURE" default="NULL" type="Decimal"/>
                <var name="DETERMINATION_METHOD_CL" default="UNKNOWN" type="String"/>
                <var name="DETERMINATION_DATE" default="" type="DateTime"/>
                <var name="VERIFIED_BY" default="" type="String"/>
                <var name="DESCRIPTION" default="" type="String"/>
                <var name="SOURCE_GCL" default="UNKNOWN" type="String"/>
                <var name="COMMENTS" default="" type="String"/>
                <var name="ID" type="Int64" direction="Output" default="SELECT max(EVENT_ID) id FROM PODS.EVENT_RANGE"/>
                <var name="PODS_USER" type="String"/>
                <var name="USER_ID" default="-1" type="Int64"/>
                <query>
					DO $$
					DECLARE
					returnId integer;
                    BEGIN
                    INSERT INTO PODS.EVENT_RANGE (EVENT_GUID,FEATURE_ID,STATION_ID_BEGIN,STATION_ID_END,PODS_USER,CREATE_DATE,EFFECTIVE_FROM_DATE,CURRENT_INDICATOR_LF,POSITIONING_TYPE_CL)
                    VALUES('{EVENT_GUID}','FACIL_RATING_VAR',0,0,NULLIF('{PODS_USER}',''),current_timestamp,current_timestamp,'Y','UNKNOWN')
                    RETURNING EVENT_ID INTO returnId;

                    INSERT INTO PODS.FACILITY_RATING_VARIANCE(EVENT_ID,EVENT_GUID,UPRATED_PRESSURE,DETERMINATION_METHOD_CL,DETERMINATION_DATE,VERIFIED_BY,DESCRIPTION,SOURCE_GCL,COMMENTS)
                    VALUES(returnId,'{EVENT_GUID}',{UPRATED_PRESSURE},NULLIF('{DETERMINATION_METHOD_CL}',''),'{DETERMINATION_DATE}',NULLIF('{VERIFIED_BY}',''),NULLIF('{DESCRIPTION}',''),NULLIF('{SOURCE_GCL}',''),NULLIF('{COMMENTS}',''));
                    END $$;
                </query>
            </dbCommand>
        </insert>
        <update>
            <dbCommand>
				<param name="CLASS_ID" type="String" direction="Input" default="PODS_FACILITY_RATING_VARIANCE" /> 
				<var name="POLICY" default="POLICY.xml#UPDATE_PODS_SEM"  />
                <param name="EVENT_GUID" default="" type="String"/>
                <param name="UPRATED_PRESSURE" default="NULL" type="Decimal"/>
                <param name="DETERMINATION_METHOD_CL" default="UNKNOWN" type="String"/>
                <param name="DETERMINATION_DATE" default="" type="DateTime"/>
                <param name="VERIFIED_BY" default="" type="String"/>
                <param name="DESCRIPTION" default="" type="String"/>
                <param name="SOURCE_GCL" default="UNKNOWN" type="String"/>
                <param name="COMMENTS" default="" type="String"/>
                <param name="ID" type="Int64"/>
                <param name="USER_ID" default="-1" type="Int64"/>
                <query>
                    UPDATE PODS.FACILITY_RATING_VARIANCE
                    SET 
					EVENT_GUID=case when :EVENT_GUID is null then EVENT_GUID else :EVENT_GUID end,
					UPRATED_PRESSURE=case when :UPRATED_PRESSURE is null then UPRATED_PRESSURE else :UPRATED_PRESSURE end,
                    DETERMINATION_METHOD_CL=case when :DETERMINATION_METHOD_CL is null then DETERMINATION_METHOD_CL else :DETERMINATION_METHOD_CL end,
                    DETERMINATION_DATE=case when :DETERMINATION_DATE is null then DETERMINATION_DATE else :DETERMINATION_DATE end,
					VERIFIED_BY=case when :VERIFIED_BY is null then VERIFIED_BY else :VERIFIED_BY end,
                    DESCRIPTION=case when :DESCRIPTION is null then DESCRIPTION else :DESCRIPTION end,
                    SOURCE_GCL=case when :SOURCE_GCL is null then SOURCE_GCL else :SOURCE_GCL end,
                    COMMENTS=case when :COMMENTS is null then COMMENTS else :COMMENTS end
                    WHERE EVENT_ID = :ID;
                </query>
            </dbCommand>
        </update>
        <delete>
            <dbCommand>
				<var name="CLASS_ID" type="String" direction="Input" default="PODS_FACILITY_RATING_VARIANCE" /> 
				<var name="POLICY" default="POLICY.xml#DELETE_PODS_SEM"  />
                <var name="ID" type="Int64"/>
                <var name="USER_ID" default="-1" type="Int64"/>
                <query>
					DO $$
                    BEGIN
                    UPDATE PODS.EVENT_RANGE
                    SET CURRENT_INDICATOR_LF='N'
                    WHERE EVENT_ID = {ID};

                    DELETE FROM PODS.FACILITY_RATING_VARIANCE
                    WHERE EVENT_ID = {ID};
                    DELETE FROM WEB50.LNK_GATE WHERE LEFT_OBJ_ID = 'PODS_FACILITY_RATING_VARIANCE/'||CAST({ID} AS VARCHAR(30)) OR RIGHT_OBJ_ID = 'PODS_FACILITY_RATING_VARIANCE/'||CAST({ID} AS VARCHAR(30)); END $$;
                </query>
            </dbCommand>
        </delete>
    </data>
    <data table="FAIRING" schema="PODS" id="PODS_FAIRING" comment="PODS.FAIRING">
        <select>
            <dbQuery idField="ID">
                <param name="USER_ID" default="-1" type="Int64"/>
                <var name="FILTER" default="1=1"/>
                <var name="LPU_ACCESS_FILTER" default="SELECT srv_district_id FROM PODS.SRV_DISTRICT_GCL"/>
                <query>
                    SELECT * FROM (SELECT EVENT_ID ID, t.* FROM PODS.FAIRING t) d WHERE {FILTER}
                </query>
            </dbQuery>
        </select>
        <insert>
            <dbCommand>
				<var name="CLASS_ID" type="String" direction="Input" default="PODS_FAIRING" /> 
				<var name="POLICY" default="POLICY.xml#INSERT_PODS_SEM"  />
                <var name="EVENT_GUID" default="" type="String"/>
                <var name="TYPE_CL" default="UNKNOWN" type="String"/>
                <var name="COATING_TYPE_SCL" default="UNKNOWN" type="String"/>
                <var name="COATING_SUBTYPE_SCL" default="NONE" type="String"/>
                <var name="SERIAL_NUMBER" default="" type="String"/>
                <var name="PART_NUMBER" default="" type="String"/>
                <var name="DATE_INSTALLED" default="" type="DateTime"/>
                <var name="MANUFACTURER_CL" default="UNKNOWN" type="String"/>
                <var name="DATE_MANUFACTURED" default="" type="DateTime"/>
                <var name="DESCRIPTION" default="" type="String"/>
                <var name="SOURCE_GCL" default="UNKNOWN" type="String"/>
                <var name="COMMENTS" default="" type="String"/>
                <var name="ID" type="Int64" direction="Output" default="SELECT max(EVENT_ID) id FROM PODS.EVENT_RANGE"/>
                <var name="PODS_USER" type="String"/>
                <var name="USER_ID" default="-1" type="Int64"/>
                <query>
					DO $$
					DECLARE
					returnId integer;
                    BEGIN
                    INSERT INTO PODS.EVENT_RANGE (EVENT_GUID,FEATURE_ID,STATION_ID_BEGIN,STATION_ID_END,PODS_USER,CREATE_DATE,EFFECTIVE_FROM_DATE,CURRENT_INDICATOR_LF,POSITIONING_TYPE_CL)
                    VALUES('{EVENT_GUID}','FAIRING',0,0,NULLIF('{PODS_USER}',''),current_timestamp,current_timestamp,'Y','UNKNOWN')
                    RETURNING EVENT_ID INTO returnId;

                    INSERT INTO PODS.FAIRING(EVENT_ID,EVENT_GUID,TYPE_CL,COATING_TYPE_SCL,COATING_SUBTYPE_SCL,SERIAL_NUMBER,PART_NUMBER,DATE_INSTALLED,MANUFACTURER_CL,DATE_MANUFACTURED,DESCRIPTION,SOURCE_GCL,COMMENTS)
                    VALUES(returnId,'{EVENT_GUID}',NULLIF('{TYPE_CL}',''),coalesce(SUBSTR(NULLIF('{COATING_TYPE_SCL}',''),0,strpos(NULLIF('{COATING_TYPE_SCL}',''),'@')),'UNKNOWN'),coalesce(SUBSTR(NULLIF('{COATING_TYPE_SCL}',''),strpos(NULLIF('{COATING_TYPE_SCL}',''),'@')+1,length(NULLIF('{COATING_TYPE_SCL}',''))-strpos(NULLIF('{COATING_TYPE_SCL}',''),'@')),'NONE'),NULLIF('{SERIAL_NUMBER}',''),NULLIF('{PART_NUMBER}',''),'{DATE_INSTALLED}',NULLIF('{MANUFACTURER_CL}',''),'{DATE_MANUFACTURED}',NULLIF('{DESCRIPTION}',''),NULLIF('{SOURCE_GCL}',''),NULLIF('{COMMENTS}',''));
                    END $$;
                </query>
            </dbCommand>
        </insert>
        <update>
            <dbCommand>
				<param name="CLASS_ID" type="String" direction="Input" default="PODS_FAIRING" /> 
				<var name="POLICY" default="POLICY.xml#UPDATE_PODS_SEM"  />
                <param name="EVENT_GUID" default="" type="String"/>
                <param name="TYPE_CL" default="UNKNOWN" type="String"/>
                <param name="COATING_TYPE_SCL" default="UNKNOWN" type="String"/>
                <param name="COATING_SUBTYPE_SCL" default="NONE" type="String"/>
                <param name="SERIAL_NUMBER" default="" type="String"/>
                <param name="PART_NUMBER" default="" type="String"/>
                <param name="DATE_INSTALLED" default="" type="DateTime"/>
                <param name="MANUFACTURER_CL" default="UNKNOWN" type="String"/>
                <param name="DATE_MANUFACTURED" default="" type="DateTime"/>
                <param name="DESCRIPTION" default="" type="String"/>
                <param name="SOURCE_GCL" default="UNKNOWN" type="String"/>
                <param name="COMMENTS" default="" type="String"/>
                <param name="ID" type="Int64"/>
                <param name="USER_ID" default="-1" type="Int64"/>
                <query>
                     UPDATE PODS.FAIRING
                    SET 
					EVENT_GUID=case when :EVENT_GUID is null then EVENT_GUID else :EVENT_GUID c,
                    TYPE_CL=case when :TYPE_CL is null then TYPE_CL else :TYPE_CL end,
					COATING_TYPE_SCL=coalesce(SUBSTR(:COATING_TYPE_SCL,0,strpos(:COATING_TYPE_SCL,'@')),'UNKNOWN'),COATING_SUBTYPE_SCL=coalesce(SUBSTR(:COATING_TYPE_SCL,strpos(:COATING_TYPE_SCL,'@')+1,length(:COATING_TYPE_SCL)-strpos(:COATING_TYPE_SCL,'@')),'NONE'),
                    SERIAL_NUMBER=case when :SERIAL_NUMBER is null then SERIAL_NUMBER else :SERIAL_NUMBER end,
                    PART_NUMBER=case when :PART_NUMBER is null then PART_NUMBER else :PART_NUMBER end,
                    DATE_INSTALLED=case when :DATE_INSTALLED is null then DATE_INSTALLED else :DATE_INSTALLED end,
                    MANUFACTURER_CL=case when :MANUFACTURER_CL is null then MANUFACTURER_CL else :MANUFACTURER_CL end,
                    DATE_MANUFACTURED=case when :DATE_MANUFACTURED is null then DATE_MANUFACTURED else :DATE_MANUFACTURED end,
                    DESCRIPTION=case when :DESCRIPTION is null then DESCRIPTION else :DESCRIPTION end,
                    SOURCE_GCL=case when :SOURCE_GCL is null then SOURCE_GCL else :SOURCE_GCL end,
                    COMMENTS=case when :COMMENTS is null then COMMENTS else :COMMENTS end
                    WHERE EVENT_ID = :ID;
                </query>
            </dbCommand>
        </update>
        <delete>
            <dbCommand>
				<var name="CLASS_ID" type="String" direction="Input" default="PODS_FAIRING" /> 
				<var name="POLICY" default="POLICY.xml#DELETE_PODS_SEM"  />
                <var name="ID" type="Int64"/>
                <var name="USER_ID" default="-1" type="Int64"/>
                <query>
					DO $$
                    BEGIN
                    UPDATE PODS.EVENT_RANGE
                    SET CURRENT_INDICATOR_LF='N'
                    WHERE EVENT_ID = {ID};

                    DELETE FROM PODS.FAIRING
                    WHERE EVENT_ID = {ID};
                    DELETE FROM WEB50.LNK_GATE WHERE LEFT_OBJ_ID = 'PODS_FAIRING/'||CAST({ID} AS VARCHAR(30)) OR RIGHT_OBJ_ID = 'PODS_FAIRING/'||CAST({ID} AS VARCHAR(30)); END $$;
                </query>
            </dbCommand>
        </delete>
    </data>
    <data table="FLANGE" schema="PODS" id="PODS_FLANGE" comment="PODS.FLANGE">
        <select>
            <dbQuery idField="ID">
                <param name="USER_ID" default="-1" type="Int64"/>
                <var name="FILTER" default="1=1"/>
                <var name="LPU_ACCESS_FILTER" default="SELECT srv_district_id FROM PODS.SRV_DISTRICT_GCL"/>
                <query>
                    SELECT * FROM (SELECT EVENT_ID ID, t.* FROM PODS.FLANGE t) d WHERE {FILTER}
                </query>
            </dbQuery>
        </select>
        <insert>
            <dbCommand>
				<var name="CLASS_ID" type="String" direction="Input" default="PODS_FLANGE" /> 
				<var name="POLICY" default="POLICY.xml#INSERT_PODS_SEM"  />
                <var name="EVENT_GUID" default="" type="String"/>
                <var name="TYPE_CL" default="UNKNOWN" type="String"/>
                <var name="NOMINAL_DIAMETER_GCL" default="0" type="Decimal"/>
                <var name="MANUFACTURER_CL" default="UNKNOWN" type="String"/>
                <var name="DATE_MANUFACTURED" default="" type="DateTime"/>
                <var name="SPECIFICATION_CL" default="UNKNOWN" type="String"/>
                <var name="NOMINAL_PRESSURE_RATING" default="NULL" type="Decimal"/>
                <var name="MILL_TEST_PRESSURE" default="NULL" type="Decimal"/>
                <var name="MATERIAL_CL" default="UNKNOWN" type="String"/>
                <var name="DATE_INSTALLED" default="" type="DateTime"/>
                <var name="DESCRIPTION" default="" type="String"/>
                <var name="SOURCE_GCL" default="UNKNOWN" type="String"/>
                <var name="COMMENTS" default="" type="String"/>
                <var name="ID" type="Int64" direction="Output" default="SELECT max(EVENT_ID) id FROM PODS.EVENT_RANGE"/>
                <var name="PODS_USER" type="String"/>
                <var name="USER_ID" default="-1" type="Int64"/>
                <query>
					DO $$
					DECLARE
					returnId integer;
                    BEGIN
                    INSERT INTO PODS.EVENT_RANGE (EVENT_GUID,FEATURE_ID,STATION_ID_BEGIN,STATION_ID_END,PODS_USER,CREATE_DATE,EFFECTIVE_FROM_DATE,CURRENT_INDICATOR_LF,POSITIONING_TYPE_CL)
                    VALUES('{EVENT_GUID}','FLANGE',0,0,NULLIF('{PODS_USER}',''),current_timestamp,current_timestamp,'Y','UNKNOWN')
                    RETURNING EVENT_ID INTO returnId;

                    INSERT INTO PODS.FLANGE(EVENT_ID,EVENT_GUID,TYPE_CL,NOMINAL_DIAMETER_GCL,MANUFACTURER_CL,DATE_MANUFACTURED,SPECIFICATION_CL,NOMINAL_PRESSURE_RATING,MILL_TEST_PRESSURE,MATERIAL_CL,DATE_INSTALLED,DESCRIPTION,SOURCE_GCL,COMMENTS)
                    VALUES(returnId,'{EVENT_GUID}',NULLIF('{TYPE_CL}',''),{NOMINAL_DIAMETER_GCL},NULLIF('{MANUFACTURER_CL}',''),'{DATE_MANUFACTURED}',NULLIF('{SPECIFICATION_CL}',''),{NOMINAL_PRESSURE_RATING},{MILL_TEST_PRESSURE},NULLIF('{MATERIAL_CL}',''),'{DATE_INSTALLED}',NULLIF('{DESCRIPTION}',''),NULLIF('{SOURCE_GCL}',''),NULLIF('{COMMENTS}',''));
                    END $$;
                </query>
            </dbCommand>
        </insert>
        <update>
            <dbCommand>
				<param name="CLASS_ID" type="String" direction="Input" default="PODS_FLANGE" /> 
				<var name="POLICY" default="POLICY.xml#UPDATE_PODS_SEM"  />
                <param name="EVENT_GUID" default="" type="String"/>
                <param name="TYPE_CL" default="UNKNOWN" type="String"/>
                <param name="NOMINAL_DIAMETER_GCL" default="0" type="Decimal"/>
                <param name="MANUFACTURER_CL" default="UNKNOWN" type="String"/>
                <param name="DATE_MANUFACTURED" default="" type="DateTime"/>
                <param name="SPECIFICATION_CL" default="UNKNOWN" type="String"/>
                <param name="NOMINAL_PRESSURE_RATING" default="NULL" type="Decimal"/>
                <param name="MILL_TEST_PRESSURE" default="NULL" type="Decimal"/>
                <param name="MATERIAL_CL" default="UNKNOWN" type="String"/>
                <param name="DATE_INSTALLED" default="" type="DateTime"/>
                <param name="DESCRIPTION" default="" type="String"/>
                <param name="SOURCE_GCL" default="UNKNOWN" type="String"/>
                <param name="COMMENTS" default="" type="String"/>
                <param name="ID" type="Int64"/>
                <param name="USER_ID" default="-1" type="Int64"/>
                <query>
                    UPDATE PODS.FLANGE
                    SET EVENT_GUID=case when :EVENT_GUID is null then EVENT_GUID else :EVENT_GUID end,
					TYPE_CL=case when :TYPE_CL is null then TYPE_CL else :TYPE_CL end,
                    NOMINAL_DIAMETER_GCL=case when :NOMINAL_DIAMETER_GCL is null then NOMINAL_DIAMETER_GCL else :NOMINAL_DIAMETER_GCL end,
                    MANUFACTURER_CL=case when :MANUFACTURER_CL is null then MANUFACTURER_CL else :MANUFACTURER_CL end,
                    DATE_MANUFACTURED=case when :DATE_MANUFACTURED is null then DATE_MANUFACTURED else :DATE_MANUFACTURED end,
                    SPECIFICATION_CL=case when :SPECIFICATION_CL is null then SPECIFICATION_CL else :SPECIFICATION_CL end,
                    NOMINAL_PRESSURE_RATING=case when :NOMINAL_PRESSURE_RATING is null then NOMINAL_PRESSURE_RATING else :NOMINAL_PRESSURE_RATING end,
                    MILL_TEST_PRESSURE=case when :MILL_TEST_PRESSURE is null then MILL_TEST_PRESSURE else :MILL_TEST_PRESSURE end,
					MATERIAL_CL=case when :MATERIAL_CL is null then MATERIAL_CL else :MATERIAL_CL end,
                    DATE_INSTALLED=case when :DATE_INSTALLED is null then DATE_INSTALLED else :DATE_INSTALLED end,
                    DESCRIPTION=case when :DESCRIPTION is null then DESCRIPTION else :DESCRIPTION end,
                    SOURCE_GCL=case when :SOURCE_GCL is null then SOURCE_GCL else :SOURCE_GCL end,
                    COMMENTS=case when :COMMENTS is null then COMMENTS else :COMMENTS end
                    WHERE EVENT_ID = :ID;
                </query>
            </dbCommand>
        </update>
        <delete>
            <dbCommand>
				<var name="CLASS_ID" type="String" direction="Input" default="PODS_FLANGE" /> 
				<var name="POLICY" default="POLICY.xml#DELETE_PODS_SEM"  />
                <var name="ID" type="Int64"/>
                <var name="USER_ID" default="-1" type="Int64"/>
                <query>
					DO $$
                    BEGIN
                    UPDATE PODS.EVENT_RANGE
                    SET CURRENT_INDICATOR_LF='N'
                    WHERE EVENT_ID = {ID};

                    DELETE FROM PODS.FLANGE
                    WHERE EVENT_ID = {ID};
                    DELETE FROM WEB50.LNK_GATE WHERE LEFT_OBJ_ID = 'PODS_FLANGE/'||CAST({ID} AS VARCHAR(30)) OR RIGHT_OBJ_ID = 'PODS_FLANGE/'||CAST({ID} AS VARCHAR(30)); END $$;
                </query>
            </dbCommand>
        </delete>
    </data>
    <data table="FLEXIBLE_JOINT" schema="PODS" id="PODS_FLEXIBLE_JOINT" comment="PODS.FLEXIBLE_JOINT">
        <select>
            <dbQuery idField="ID">
                <param name="USER_ID" default="-1" type="Int64"/>
                <var name="FILTER" default="1=1"/>
                <var name="LPU_ACCESS_FILTER" default="SELECT srv_district_id FROM PODS.SRV_DISTRICT_GCL"/>
                <query>
                    SELECT * FROM (SELECT EVENT_ID ID, t.* FROM PODS.FLEXIBLE_JOINT t) d WHERE {FILTER}
                </query>
            </dbQuery>
        </select>
        <insert>
            <dbCommand>
				<param name="CLASS_ID" type="String" direction="Input" default="PODS_FLEXIBLE_JOINT" /> 
				<var name="POLICY" default="POLICY.xml#INSERT_PODS_SEM"  />
                <var name="EVENT_GUID" default="" type="String"/>
                <var name="FLEXIBLE_JOINT_ID" default="" type="String"/>
                <var name="SERIAL_NUMBER" default="" type="String"/>
                <var name="PART_NUMBER" default="" type="String"/>
                <var name="BODY_MATERIAL_CL" default="UNKNOWN" type="String"/>
                <var name="EXTENSION_MATERIAL_CL" default="UNKNOWN" type="String"/>
                <var name="MANUFACTURER_CL" default="UNKNOWN" type="String"/>
                <var name="DATE_MANUFACTURED" default="" type="DateTime"/>
                <var name="NOMINAL_DIAMETER_GCL" default="0" type="Decimal"/>
                <var name="NOMINAL_PRESSURE_RATING" default="NULL" type="Decimal"/>
                <var name="DESIGN_MIN_TEMPERATURE" default="NULL" type="Decimal"/>
                <var name="DESIGN_MAX_TEMPERATURE" default="NULL" type="Decimal"/>
                <var name="MILL_TEST_PRESSURE" default="NULL" type="Decimal"/>
                <var name="CONNECTION_TYPE_CL" default="UNKNOWN" type="String"/>
                <var name="NOMINAL_MAX_ROTATION_ANGLE" default="NULL" type="Decimal"/>
                <var name="DESCRIPTION" default="" type="String"/>
                <var name="SOURCE_GCL" default="UNKNOWN" type="String"/>
                <var name="COMMENTS" default="" type="String"/>
                <var name="ID" type="Int64" direction="Output" default="SELECT max(EVENT_ID) id FROM PODS.EVENT_RANGE"/>
                <var name="PODS_USER" type="String"/>
                <var name="USER_ID" default="-1" type="Int64"/>
                <query>
					DO $$
					DECLARE
					returnId integer;
                    BEGIN
                    INSERT INTO PODS.EVENT_RANGE (EVENT_GUID,FEATURE_ID,STATION_ID_BEGIN,STATION_ID_END,PODS_USER,CREATE_DATE,EFFECTIVE_FROM_DATE,CURRENT_INDICATOR_LF,POSITIONING_TYPE_CL)
                    VALUES('{EVENT_GUID}','FLEXIBLE_JOINT',0,0,NULLIF('{PODS_USER}',''),current_timestamp,current_timestamp,'Y','UNKNOWN')
                    RETURNING EVENT_ID INTO returnId;

                    INSERT INTO PODS.FLEXIBLE_JOINT(EVENT_ID,EVENT_GUID,FLEXIBLE_JOINT_ID,SERIAL_NUMBER,PART_NUMBER,BODY_MATERIAL_CL,EXTENSION_MATERIAL_CL,MANUFACTURER_CL,DATE_MANUFACTURED,NOMINAL_DIAMETER_GCL,NOMINAL_PRESSURE_RATING,DESIGN_MIN_TEMPERATURE,DESIGN_MAX_TEMPERATURE,MILL_TEST_PRESSURE,CONNECTION_TYPE_CL,NOMINAL_MAX_ROTATION_ANGLE,DESCRIPTION,SOURCE_GCL,COMMENTS)
                    VALUES(returnId,'{EVENT_GUID}',NULLIF('{ID}',''),NULLIF('{SERIAL_NUMBER}',''),NULLIF('{PART_NUMBER}',''),NULLIF('{BODY_MATERIAL_CL}',''),NULLIF('{EXTENSION_MATERIAL_CL}',''),NULLIF('{MANUFACTURER_CL}',''),'{DATE_MANUFACTURED}',{NOMINAL_DIAMETER_GCL},{NOMINAL_PRESSURE_RATING},{DESIGN_MIN_TEMPERATURE},{DESIGN_MAX_TEMPERATURE},{MILL_TEST_PRESSURE},NULLIF('{CONNECTION_TYPE_CL}',''),{NOMINAL_MAX_ROTATION_ANGLE},NULLIF('{DESCRIPTION}',''),NULLIF('{SOURCE_GCL}',''),NULLIF('{COMMENTS}',''));
                    END $$;
                </query>
            </dbCommand>
        </insert>
        <update>
            <dbCommand>
				<param name="CLASS_ID" type="String" direction="Input" default="PODS_FLEXIBLE_JOINT" /> 
				<var name="POLICY" default="POLICY.xml#UPDATE_PODS_SEM"  />
                <param name="EVENT_GUID" default="" type="String"/>
                <param name="FLEXIBLE_JOINT_ID" default="" type="String"/>
                <param name="SERIAL_NUMBER" default="" type="String"/>
                <param name="PART_NUMBER" default="" type="String"/>
                <param name="BODY_MATERIAL_CL" default="UNKNOWN" type="String"/>
                <param name="EXTENSION_MATERIAL_CL" default="UNKNOWN" type="String"/>
                <param name="MANUFACTURER_CL" default="UNKNOWN" type="String"/>
                <param name="DATE_MANUFACTURED" default="" type="DateTime"/>
                <param name="NOMINAL_DIAMETER_GCL" default="0" type="Decimal"/>
                <param name="NOMINAL_PRESSURE_RATING" default="NULL" type="Decimal"/>
                <param name="DESIGN_MIN_TEMPERATURE" default="NULL" type="Decimal"/>
                <param name="DESIGN_MAX_TEMPERATURE" default="NULL" type="Decimal"/>
                <param name="MILL_TEST_PRESSURE" default="NULL" type="Decimal"/>
                <param name="CONNECTION_TYPE_CL" default="UNKNOWN" type="String"/>
                <param name="NOMINAL_MAX_ROTATION_ANGLE" default="NULL" type="Decimal"/>
                <param name="DESCRIPTION" default="" type="String"/>
                <param name="SOURCE_GCL" default="UNKNOWN" type="String"/>
                <param name="COMMENTS" default="" type="String"/>
                <param name="ID" type="Int64"/>
                <param name="USER_ID" default="-1" type="Int64"/>
                <query>
                    UPDATE PODS.FLEXIBLE_JOINT
                    SET 
					EVENT_GUID=case when :EVENT_GUID is null then EVENT_GUID else :EVENT_GUID end,
					FLEXIBLE_JOINT_ID=case when :FLEXIBLE_JOINT_ID is null then FLEXIBLE_JOINT_ID else :FLEXIBLE_JOINT_ID end,
					SERIAL_NUMBER=case when :SERIAL_NUMBER is null then SERIAL_NUMBER else :SERIAL_NUMBER end,
                    PART_NUMBER=case when :PART_NUMBER is null then PART_NUMBER else :PART_NUMBER end,
					BODY_MATERIAL_CL=case when :BODY_MATERIAL_CL is null then BODY_MATERIAL_CL else :BODY_MATERIAL_CL end,
					EXTENSION_MATERIAL_CL=case when :EXTENSION_MATERIAL_CL is null then EXTENSION_MATERIAL_CL else :EXTENSION_MATERIAL_CL end,
					MANUFACTURER_CL=case when :MANUFACTURER_CL is null then MANUFACTURER_CL else :MANUFACTURER_CL end,
                    DATE_MANUFACTURED=case when :DATE_MANUFACTURED is null then DATE_MANUFACTURED else :DATE_MANUFACTURED end,
                    NOMINAL_DIAMETER_GCL=case when :NOMINAL_DIAMETER_GCL is null then NOMINAL_DIAMETER_GCL else :NOMINAL_DIAMETER_GCL end,
                    NOMINAL_PRESSURE_RATING=case when :NOMINAL_PRESSURE_RATING is null then NOMINAL_PRESSURE_RATING else :NOMINAL_PRESSURE_RATING end,
                    DESIGN_MIN_TEMPERATURE=case when :DESIGN_MIN_TEMPERATURE is null then DESIGN_MIN_TEMPERATURE else :DESIGN_MIN_TEMPERATURE end,
                    DESIGN_MAX_TEMPERATURE=case when :DESIGN_MAX_TEMPERATURE is null then DESIGN_MAX_TEMPERATURE else :DESIGN_MAX_TEMPERATURE end,
                    MILL_TEST_PRESSURE=case when :MILL_TEST_PRESSURE is null then MILL_TEST_PRESSURE else :MILL_TEST_PRESSURE end,
					CONNECTION_TYPE_CL=case when :CONNECTION_TYPE_CL is null then CONNECTION_TYPE_CL else :CONNECTION_TYPE_CL end,
					NOMINAL_MAX_ROTATION_ANGLE=case when :NOMINAL_MAX_ROTATION_ANGLE is null then NOMINAL_MAX_ROTATION_ANGLE else :NOMINAL_MAX_ROTATION_ANGLE end,
					DESCRIPTION=case when :DESCRIPTION is null then DESCRIPTION else :DESCRIPTION end,
                    SOURCE_GCL=case when :SOURCE_GCL is null then SOURCE_GCL else :SOURCE_GCL end,
                    COMMENTS=case when :COMMENTS is null then COMMENTS else :COMMENTS end
                    WHERE EVENT_ID = :ID;
                </query>
            </dbCommand>
        </update>
        <delete>
            <dbCommand>
				<var name="CLASS_ID" type="String" direction="Input" default="PODS_FLEXIBLE_JOINT" /> 
				<var name="POLICY" default="POLICY.xml#DELETE_PODS_SEM"  />
                <var name="ID" type="Int64"/>
                <var name="USER_ID" default="-1" type="Int64"/>
                <query>
					DO $$
                    BEGIN
                    UPDATE PODS.EVENT_RANGE
                    SET CURRENT_INDICATOR_LF='N'
                    WHERE EVENT_ID = {ID};

                    DELETE FROM PODS.FLEXIBLE_JOINT
                    WHERE EVENT_ID = {ID};
                    DELETE FROM WEB50.LNK_GATE WHERE LEFT_OBJ_ID = 'PODS_FLEXIBLE_JOINT/'||CAST({ID} AS VARCHAR(30)) OR RIGHT_OBJ_ID = 'PODS_FLEXIBLE_JOINT/'||CAST({ID} AS VARCHAR(30)); END $$;
                </query>
            </dbCommand>
        </delete>
    </data>
    <data table="FLOW_DIRECTION_RANGE" schema="PODS" id="PODS_FLOW_DIRECTION_RANGE" comment="PODS.FLOW_DIRECTION_RANGE">
        <select>
            <dbQuery idField="ID">
                <param name="USER_ID" default="-1" type="Int64"/>
                <var name="FILTER" default="1=1"/>
                <var name="LPU_ACCESS_FILTER" default="SELECT srv_district_id FROM PODS.SRV_DISTRICT_GCL"/>
                <query>
                    SELECT * FROM (SELECT EVENT_ID ID, t.* FROM PODS.FLOW_DIRECTION_RANGE t) d WHERE {FILTER}
                </query>
            </dbQuery>
        </select>
        <insert>
            <dbCommand>
				<var name="CLASS_ID" type="String" direction="Input" default="PODS_FLOW_DIRECTION_RANGE" /> 
				<var name="POLICY" default="POLICY.xml#INSERT_PODS_SEM"  />
                <var name="EVENT_GUID" default="" type="String"/>
                <var name="TYPE_CL" default="UNKNOWN" type="String"/>
                <var name="DESCRIPTION" default="" type="String"/>
                <var name="ODORANT_GRANDFATHER_LF" default="" type="String"/>
                <var name="SOURCE_GCL" default="UNKNOWN" type="String"/>
                <var name="COMMENTS" default="" type="String"/>
                <var name="ID" type="Int64" direction="Output" default="SELECT max(EVENT_ID) id FROM PODS.EVENT_RANGE"/>
                <var name="PODS_USER" type="String"/>
                <var name="USER_ID" default="-1" type="Int64"/>
                <query>
					DO $$
					DECLARE
					returnId integer;
                    BEGIN
                    INSERT INTO PODS.EVENT_RANGE (EVENT_GUID,FEATURE_ID,STATION_ID_BEGIN,STATION_ID_END,PODS_USER,CREATE_DATE,EFFECTIVE_FROM_DATE,CURRENT_INDICATOR_LF,POSITIONING_TYPE_CL)
                    VALUES('{EVENT_GUID}','FLOW_DIR_RNG',0,0,NULLIF('{PODS_USER}',''),current_timestamp,current_timestamp,'Y','UNKNOWN')
                    RETURNING EVENT_ID INTO returnId;

                    INSERT INTO PODS.FLOW_DIRECTION_RANGE(EVENT_ID,EVENT_GUID,TYPE_CL,DESCRIPTION,ODORANT_GRANDFATHER_LF,SOURCE_GCL,COMMENTS)
                    VALUES(returnId,'{EVENT_GUID}',NULLIF('{TYPE_CL}',''),NULLIF('{DESCRIPTION}',''),'{ODORANT_GRANDFATHER_LF}',NULLIF('{SOURCE_GCL}',''),NULLIF('{COMMENTS}',''));
                    END $$;
                </query>
            </dbCommand>
        </insert>
        <update>
            <dbCommand>
				<param name="CLASS_ID" type="String" direction="Input" default="PODS_FLOW_DIRECTION_RANGE" /> 
				<var name="POLICY" default="POLICY.xml#UPDATE_PODS_SEM"  />
                <param name="EVENT_GUID" default="" type="String"/>
                <param name="TYPE_CL" default="UNKNOWN" type="String"/>
                <param name="DESCRIPTION" default="" type="String"/>
                <param name="ODORANT_GRANDFATHER_LF" default="" type="String"/>
                <param name="SOURCE_GCL" default="UNKNOWN" type="String"/>
                <param name="COMMENTS" default="" type="String"/>
                <param name="ID" type="Int64"/>
                <param name="USER_ID" default="-1" type="Int64"/>
                <query>
                    UPDATE PODS.FLOW_DIRECTION_RANGE
                    SET
					EVENT_GUID=case when :EVENT_GUID is null then EVENT_GUID else :EVENT_GUID end,
                    TYPE_CL=case when :TYPE_CL is null then TYPE_CL else :TYPE_CL end,
                    DESCRIPTION=case when :DESCRIPTION is null then DESCRIPTION else :DESCRIPTION end,
					ODORANT_GRANDFATHER_LF=case when :ODORANT_GRANDFATHER_LF is null then ODORANT_GRANDFATHER_LF else :ODORANT_GRANDFATHER_LF end,
                    SOURCE_GCL=case when :SOURCE_GCL is null then SOURCE_GCL else :SOURCE_GCL end,
                    COMMENTS=case when :COMMENTS is null then COMMENTS else :COMMENTS end
                    WHERE EVENT_ID = :ID;
                </query>
            </dbCommand>
        </update>
        <delete>
            <dbCommand>
				<var name="CLASS_ID" type="String" direction="Input" default="PODS_FLOW_DIRECTION_RANGE" /> 
				<var name="POLICY" default="POLICY.xml#DELETE_PODS_SEM"  />
                <var name="ID" type="Int64"/>
                <var name="USER_ID" default="-1" type="Int64"/>
                <query>
					DO $$
                    BEGIN
                    UPDATE PODS.EVENT_RANGE
                    SET CURRENT_INDICATOR_LF='N'
                    WHERE EVENT_ID = {ID};

                    DELETE FROM PODS.FLOW_DIRECTION_RANGE
                    WHERE EVENT_ID = {ID};
                    DELETE FROM WEB50.LNK_GATE WHERE LEFT_OBJ_ID = 'PODS_FLOW_DIRECTION_RANGE/'||CAST({ID} AS VARCHAR(30)) OR RIGHT_OBJ_ID = 'PODS_FLOW_DIRECTION_RANGE/'||CAST({ID} AS VARCHAR(30)); END $$;
                </query>
            </dbCommand>
        </delete>
    </data>
    <data table="FLOW_MEASUREMENT" schema="PODS" id="PODS_FLOW_MEASUREMENT" comment="PODS.FLOW_MEASUREMENT">
        <select>
            <dbQuery idField="ID">
                <param name="USER_ID" default="-1" type="Int64"/>
                <var name="FILTER" default="1=1"/>
                <var name="LPU_ACCESS_FILTER" default="SELECT srv_district_id FROM PODS.SRV_DISTRICT_GCL"/>
                <query>
                    SELECT * FROM (SELECT EVENT_ID ID, t.* FROM PODS.FLOW_MEASUREMENT t) d WHERE {FILTER}
                </query>
            </dbQuery>
        </select>
        <insert>
            <dbCommand>
				<var name="CLASS_ID" type="String" direction="Input" default="PODS_FLOW_MEASUREMENT" /> 
				<var name="POLICY" default="POLICY.xml#INSERT_PODS_SEM"  />
                <var name="EVENT_GUID" default="" type="String"/>
                <var name="FLOW_MEASUREMENT" default="NULL" type="Decimal"/>
                <var name="UNIT_OF_MEASURE_GCL" default="UNKNOWN" type="String"/>
                <var name="DESCRIPTION" default="" type="String"/>
                <var name="SOURCE_GCL" default="UNKNOWN" type="String"/>
                <var name="COMMENTS" default="" type="String"/>
                <var name="ID" type="Int64" direction="Output" default="SELECT max(EVENT_ID) id FROM PODS.EVENT_RANGE"/>
                <var name="PODS_USER" type="String"/>
                <var name="USER_ID" default="-1" type="Int64"/>
                <query>
					DO $$
					DECLARE
					returnId integer;
                    BEGIN
                    INSERT INTO PODS.EVENT_RANGE (EVENT_GUID,FEATURE_ID,STATION_ID_BEGIN,STATION_ID_END,PODS_USER,CREATE_DATE,EFFECTIVE_FROM_DATE,CURRENT_INDICATOR_LF,POSITIONING_TYPE_CL)
                    VALUES('{EVENT_GUID}','FLOW_MEASUREMENT',0,0,NULLIF('{PODS_USER}',''),current_timestamp,current_timestamp,'Y','UNKNOWN')
                    RETURNING EVENT_ID INTO returnId;

                    INSERT INTO PODS.FLOW_MEASUREMENT(EVENT_ID,EVENT_GUID,FLOW_MEASUREMENT,UNIT_OF_MEASURE_GCL,DESCRIPTION,SOURCE_GCL,COMMENTS)
                    VALUES(returnId,'{EVENT_GUID}',{FLOW_MEASUREMENT},NULLIF('{UNIT_OF_MEASURE_GCL}',''),NULLIF('{DESCRIPTION}',''),NULLIF('{SOURCE_GCL}',''),NULLIF('{COMMENTS}',''));
                    END $$;
                </query>
            </dbCommand>
        </insert>
        <update>
            <dbCommand>
				<param name="CLASS_ID" type="String" direction="Input" default="PODS_FLOW_MEASUREMENT" /> 
				<var name="POLICY" default="POLICY.xml#UPDATE_PODS_SEM"  />
                <param name="EVENT_GUID" default="" type="String"/>
                <param name="FLOW_MEASUREMENT" default="NULL" type="Decimal"/>
                <param name="UNIT_OF_MEASURE_GCL" default="UNKNOWN" type="String"/>
                <param name="DESCRIPTION" default="" type="String"/>
                <param name="SOURCE_GCL" default="UNKNOWN" type="String"/>
                <param name="COMMENTS" default="" type="String"/>
                <param name="ID" type="Int64"/>
                <param name="USER_ID" default="-1" type="Int64"/>
                <query>
                    UPDATE PODS.FLOW_MEASUREMENT
                    SET 
					EVENT_GUID=case when :EVENT_GUID is null then EVENT_GUID else :EVENT_GUID end,
					FLOW_MEASUREMENT=case when :FLOW_MEASUREMENT is null then FLOW_MEASUREMENT else :FLOW_MEASUREMENT end,
					UNIT_OF_MEASURE_GCL=case when :UNIT_OF_MEASURE_GCL is null then UNIT_OF_MEASURE_GCL else :UNIT_OF_MEASURE_GCL end,
                    DESCRIPTION=case when :DESCRIPTION is null then DESCRIPTION else :DESCRIPTION end,
                    SOURCE_GCL=case when :SOURCE_GCL is null then SOURCE_GCL else :SOURCE_GCL end,
                    COMMENTS=case when :COMMENTS is null then COMMENTS else :COMMENTS end
                    WHERE EVENT_ID = :ID;
                </query>
            </dbCommand>
        </update>
        <delete>
            <dbCommand>
				<var name="CLASS_ID" type="String" direction="Input" default="PODS_FLOW_MEASUREMENT" /> 
				<var name="POLICY" default="POLICY.xml#DELETE_PODS_SEM"  />
                <var name="ID" type="Int64"/>
                <var name="USER_ID" default="-1" type="Int64"/>
                <query>
					DO $$
                    BEGIN
                    UPDATE PODS.EVENT_RANGE
                    SET CURRENT_INDICATOR_LF='N'
                    WHERE EVENT_ID = {ID};

                    DELETE FROM PODS.FLOW_MEASUREMENT
                    WHERE EVENT_ID = {ID};
                    DELETE FROM WEB50.LNK_GATE WHERE LEFT_OBJ_ID = 'PODS_FLOW_MEASUREMENT/'||CAST({ID} AS VARCHAR(30)) OR RIGHT_OBJ_ID = 'PODS_FLOW_MEASUREMENT/'||CAST({ID} AS VARCHAR(30)); END $$;
                </query>
            </dbCommand>
        </delete>
    </data>
    <data table="GRANDFATHER_PRESSURE" schema="PODS" id="PODS_GRANDFATHER_PRESSURE" comment="PODS.GRANDFATHER_PRESSURE">
        <select>
            <dbQuery idField="ID">
                <param name="USER_ID" default="-1" type="Int64"/>
                <var name="FILTER" default="1=1"/>
                <var name="LPU_ACCESS_FILTER" default="SELECT srv_district_id FROM PODS.SRV_DISTRICT_GCL"/>
                <query>
                    SELECT * FROM (SELECT EVENT_ID ID, t.* FROM PODS.GRANDFATHER_PRESSURE t) d WHERE {FILTER}
                </query>
            </dbQuery>
        </select>
        <insert>
            <dbCommand>
				<var name="CLASS_ID" type="String" direction="Input" default="PODS_GRANDFATHER_PRESSURE" /> 
				<var name="POLICY" default="POLICY.xml#INSERT_PODS_SEM"  />
                <var name="EVENT_GUID" default="" type="String"/>
                <var name="PRESSURE_RATING" default="NULL" type="Decimal"/>
                <var name="HIGH_PRESSURE_DATE" default="" type="DateTime"/>
                <var name="DETERMINATION_DATE" default="" type="DateTime"/>
                <var name="VERIFIED_BY" default="" type="String"/>
                <var name="DESCRIPTION" default="" type="String"/>
                <var name="SOURCE_GCL" default="UNKNOWN" type="String"/>
                <var name="COMMENTS" default="" type="String"/>
                <var name="ID" type="Int64" direction="Output" default="SELECT max(EVENT_ID) id FROM PODS.EVENT_RANGE"/>
                <var name="PODS_USER" type="String"/>
                <var name="USER_ID" default="-1" type="Int64"/>
                <query>
					DO $$
					DECLARE
					returnId integer;
                    BEGIN
                    INSERT INTO PODS.EVENT_RANGE (EVENT_GUID,FEATURE_ID,STATION_ID_BEGIN,STATION_ID_END,PODS_USER,CREATE_DATE,EFFECTIVE_FROM_DATE,CURRENT_INDICATOR_LF,POSITIONING_TYPE_CL)
                    VALUES('{EVENT_GUID}','GRNDFTHR_PRESS',0,0,NULLIF('{PODS_USER}',''),current_timestamp,current_timestamp,'Y','UNKNOWN')
                    RETURNING EVENT_ID INTO returnId;

                    INSERT INTO PODS.GRANDFATHER_PRESSURE(EVENT_ID,EVENT_GUID,PRESSURE_RATING,HIGH_PRESSURE_DATE,DETERMINATION_DATE,VERIFIED_BY,DESCRIPTION,SOURCE_GCL,COMMENTS)
                    VALUES(returnId,'{EVENT_GUID}',{PRESSURE_RATING},'{HIGH_PRESSURE_DATE}','{DETERMINATION_DATE}',NULLIF('{VERIFIED_BY}',''),NULLIF('{DESCRIPTION}',''),NULLIF('{SOURCE_GCL}',''),NULLIF('{COMMENTS}',''));
					END $$;
                </query>
            </dbCommand>
        </insert>
        <update>
            <dbCommand>
				<param name="CLASS_ID" type="String" direction="Input" default="PODS_GRANDFATHER_PRESSURE" /> 
				<var name="POLICY" default="POLICY.xml#UPDATE_PODS_SEM"  />
                <param name="EVENT_GUID" default="" type="String"/>
                <param name="PRESSURE_RATING" default="NULL" type="Decimal"/>
                <param name="HIGH_PRESSURE_DATE" default="" type="DateTime"/>
                <param name="DETERMINATION_DATE" default="" type="DateTime"/>
                <param name="VERIFIED_BY" default="" type="String"/>
                <param name="DESCRIPTION" default="" type="String"/>
                <param name="SOURCE_GCL" default="UNKNOWN" type="String"/>
                <param name="COMMENTS" default="" type="String"/>
                <param name="ID" type="Int64"/>
                <param name="USER_ID" default="-1" type="Int64"/>
                <query>
                    UPDATE PODS.GRANDFATHER_PRESSURE
                    SET 
					EVENT_GUID=case when :EVENT_GUID is null then EVENT_GUID else :EVENT_GUID end,
					PRESSURE_RATING=case when :PRESSURE_RATING is null then PRESSURE_RATING else :PRESSURE_RATING end,
					HIGH_PRESSURE_DATE=case when :HIGH_PRESSURE_DATE is null then HIGH_PRESSURE_DATE else :HIGH_PRESSURE_DATE end,
                    DETERMINATION_DATE=case when :DETERMINATION_DATE is null then DETERMINATION_DATE else :DETERMINATION_DATE end,
                    VERIFIED_BY=case when :VERIFIED_BY is null then VERIFIED_BY else :VERIFIED_BY end,
                    DESCRIPTION=case when :DESCRIPTION is null then DESCRIPTION else :DESCRIPTION end,
                    SOURCE_GCL=case when :SOURCE_GCL is null then SOURCE_GCL else :SOURCE_GCL end,
                    COMMENTS=case when :COMMENTS is null then COMMENTS else :COMMENTS end
                    WHERE EVENT_ID = :ID;
                </query>
            </dbCommand>
        </update>
        <delete>
            <dbCommand>
				<var name="CLASS_ID" type="String" direction="Input" default="PODS_GRANDFATHER_PRESSURE" /> 
				<var name="POLICY" default="POLICY.xml#DELETE_PODS_SEM"  />
                <var name="ID" type="Int64"/>
                <var name="USER_ID" default="-1" type="Int64"/>
                <query>
					DO $$
                    BEGIN
                    UPDATE PODS.EVENT_RANGE
                    SET CURRENT_INDICATOR_LF='N'
                    WHERE EVENT_ID = {ID};

                    DELETE FROM PODS.GRANDFATHER_PRESSURE
                    WHERE EVENT_ID = {ID};
                    DELETE FROM WEB50.LNK_GATE WHERE LEFT_OBJ_ID = 'PODS_GRANDFATHER_PRESSURE/'||CAST({ID} AS VARCHAR(30)) OR RIGHT_OBJ_ID = 'PODS_GRANDFATHER_PRESSURE/'||CAST({ID} AS VARCHAR(30)); END $$;
                </query>
            </dbCommand>
        </delete>
    </data>
    <data table="GROUND_BED" schema="PODS" id="PODS_GROUND_BED" comment="PODS.GROUND_BED">
        <select>
            <dbQuery idField="ID">
                <param name="USER_ID" default="-1" type="Int64"/>
                <var name="FILTER" default="1=1"/>
                <var name="LPU_ACCESS_FILTER" default="SELECT srv_district_id FROM PODS.SRV_DISTRICT_GCL"/>
                <query>
                    SELECT * FROM (SELECT EVENT_ID ID, t.* FROM PODS.GROUND_BED t) d WHERE {FILTER}
                </query>
            </dbQuery>
        </select>
        <insert>
            <dbCommand>
				<var name="CLASS_ID" type="String" direction="Input" default="PODS_GROUND_BED" /> 
				<var name="POLICY" default="POLICY.xml#INSERT_PODS_SEM"  />
                <var name="EVENT_GUID" default="" type="String"/>
                <var name="NAME" default="" type="String"/>
                <var name="INSTALLATION_CL" default="UNKNOWN" type="String"/>
                <var name="MATERIAL_CL" default="UNKNOWN" type="String"/>
                <var name="ANODES_QUANTITY" default="NULL" type="Decimal"/>
                <var name="DEPTH_OF_COVER" default="NULL" type="Decimal"/>
                <var name="DESCRIPTION" default="" type="String"/>
                <var name="TYPE_CL" default="UNKNOWN" type="String"/>
                <var name="DATE_INSTALLED" default="" type="DateTime"/>
                <var name="ANODE_SPACING" default="NULL" type="Decimal"/>
                <var name="POS_CABLE_INSULATION_TYPE_GCL" default="UNKNOWN" type="String"/>
                <var name="POS_CABLE_GAUGE_GCL" default="UNKNOWN" type="String"/>
                <var name="POS_CABLE_INSULATION_COLOR_GCL" default="UNKNOWN" type="String"/>
                <var name="BACK_FILL_MATERIAL_GCL" default="UNKNOWN" type="String"/>
                <var name="RECTIFIER_ENCLOSURE_ID" default="" type="String"/>
                <var name="HORIZONTAL_LF" default="" type="String"/>
                <var name="SOURCE_GCL" default="UNKNOWN" type="String"/>
                <var name="COMMENTS" default="" type="String"/>
                <var name="ID" type="Int64" direction="Output" default="SELECT max(EVENT_ID) id FROM PODS.EVENT_RANGE"/>
                <var name="PODS_USER" type="String"/>
                <var name="USER_ID" default="-1" type="Int64"/>
                <query>
					DO $$
					DECLARE
					returnId integer;
                    BEGIN
                    INSERT INTO PODS.EVENT_RANGE (EVENT_GUID,FEATURE_ID,STATION_ID_BEGIN,STATION_ID_END,PODS_USER,CREATE_DATE,EFFECTIVE_FROM_DATE,CURRENT_INDICATOR_LF,POSITIONING_TYPE_CL)
                    VALUES('{EVENT_GUID}','GROUND_BED',0,0,NULLIF('{PODS_USER}',''),current_timestamp,current_timestamp,'Y','UNKNOWN')
                    RETURNING EVENT_ID INTO returnId;

                    INSERT INTO PODS.GROUND_BED(EVENT_ID,EVENT_GUID,NAME,INSTALLATION_CL,MATERIAL_CL,ANODES_QUANTITY,DEPTH_OF_COVER,DESCRIPTION,TYPE_CL,DATE_INSTALLED,ANODE_SPACING,POS_CABLE_INSULATION_TYPE_GCL,POS_CABLE_GAUGE_GCL,POS_CABLE_INSULATION_COLOR_GCL,BACK_FILL_MATERIAL_GCL,RECTIFIER_ENCLOSURE_ID,HORIZONTAL_LF,SOURCE_GCL,COMMENTS)
                    VALUES(returnId,'{EVENT_GUID}',NULLIF('{NAME}',''),NULLIF('{INSTALLATION_CL}',''),NULLIF('{MATERIAL_CL}',''),{ANODES_QUANTITY},{DEPTH_OF_COVER},NULLIF('{DESCRIPTION}',''),NULLIF('{TYPE_CL}',''),'{DATE_INSTALLED}',{ANODE_SPACING},NULLIF('{POS_CABLE_INSULATION_TYPE_GCL}',''),NULLIF('{POS_CABLE_GAUGE_GCL}',''),NULLIF('{POS_CABLE_INSULATION_COLOR_GCL}',''),NULLIF('{BACK_FILL_MATERIAL_GCL}',''),NULLIF('{RECTIFIER_ENCLOSURE_ID}',''),'{HORIZONTAL_LF}',NULLIF('{SOURCE_GCL}',''),NULLIF('{COMMENTS}',''));
					END $$;
                </query>
            </dbCommand>
        </insert>
        <update>
            <dbCommand>
				<param name="CLASS_ID" type="String" direction="Input" default="PODS_GROUND_BED" /> 
				<var name="POLICY" default="POLICY.xml#UPDATE_PODS_SEM"  />
                <param name="EVENT_GUID" default="" type="String"/>
                <param name="NAME" default="" type="String"/>
                <param name="INSTALLATION_CL" default="UNKNOWN" type="String"/>
                <param name="MATERIAL_CL" default="UNKNOWN" type="String"/>
                <param name="ANODES_QUANTITY" default="NULL" type="Decimal"/>
                <param name="DEPTH_OF_COVER" default="NULL" type="Decimal"/>
                <param name="DESCRIPTION" default="" type="String"/>
                <param name="TYPE_CL" default="UNKNOWN" type="String"/>
                <param name="DATE_INSTALLED" default="" type="DateTime"/>
                <param name="ANODE_SPACING" default="NULL" type="Decimal"/>
                <param name="POS_CABLE_INSULATION_TYPE_GCL" default="UNKNOWN" type="String"/>
                <param name="POS_CABLE_GAUGE_GCL" default="UNKNOWN" type="String"/>
                <param name="POS_CABLE_INSULATION_COLOR_GCL" default="UNKNOWN" type="String"/>
                <param name="BACK_FILL_MATERIAL_GCL" default="UNKNOWN" type="String"/>
                <param name="RECTIFIER_ENCLOSURE_ID" default="" type="String"/>
                <param name="HORIZONTAL_LF" default="" type="String"/>
                <param name="SOURCE_GCL" default="UNKNOWN" type="String"/>
                <param name="COMMENTS" default="" type="String"/>
                <param name="ID" type="Int64"/>
                <param name="USER_ID" default="-1" type="Int64"/>
                <query>
                    UPDATE PODS.GROUND_BED
                    SET 
					EVENT_GUID=case when :EVENT_GUID is null then EVENT_GUID else :EVENT_GUID end,
					NAME=case when :NAME is null then NAME else :NAME end,
					INSTALLATION_CL=case when :INSTALLATION_CL is null then INSTALLATION_CL else :INSTALLATION_CL end,					
					MATERIAL_CL=case when :MATERIAL_CL is null then MATERIAL_CL else :MATERIAL_CL end,
					ANODES_QUANTITY=case when :ANODES_QUANTITY is null then ANODES_QUANTITY else :ANODES_QUANTITY end,					
                    DEPTH_OF_COVER=case when :DEPTH_OF_COVER is null then DEPTH_OF_COVER else :DEPTH_OF_COVER end,
                    DESCRIPTION=case when :DESCRIPTION is null then DESCRIPTION else :DESCRIPTION end,
                    TYPE_CL=case when :TYPE_CL is null then TYPE_CL else :TYPE_CL end,
                    DATE_INSTALLED=case when :DATE_INSTALLED is null then DATE_INSTALLED else :DATE_INSTALLED end,
					ANODE_SPACING=case when :ANODE_SPACING is null then ANODE_SPACING else :ANODE_SPACING end,
                    POS_CABLE_INSULATION_TYPE_GCL=case when :POS_CABLE_INSULATION_TYPE_GCL is null then POS_CABLE_INSULATION_TYPE_GCL else :POS_CABLE_INSULATION_TYPE_GCL end,
                    POS_CABLE_GAUGE_GCL=case when :POS_CABLE_GAUGE_GCL is null then POS_CABLE_GAUGE_GCL else :POS_CABLE_GAUGE_GCL end,
                    POS_CABLE_INSULATION_COLOR_GCL=case when :POS_CABLE_INSULATION_COLOR_GCL is null then POS_CABLE_INSULATION_COLOR_GCL else :POS_CABLE_INSULATION_COLOR_GCL end,					
                    RECTIFIER_ENCLOSURE_ID=case when :RECTIFIER_ENCLOSURE_ID is null then RECTIFIER_ENCLOSURE_ID else :RECTIFIER_ENCLOSURE_ID end,
                    HORIZONTAL_LF=case when :HORIZONTAL_LF is null then HORIZONTAL_LF else :HORIZONTAL_LF end,
                    SOURCE_GCL=case when :SOURCE_GCL is null then SOURCE_GCL else :SOURCE_GCL end,
                    COMMENTS=case when :COMMENTS is null then COMMENTS else :COMMENTS end
                    WHERE EVENT_ID = :ID;
                </query>
            </dbCommand>
        </update>
        <delete>
            <dbCommand>
				<var name="CLASS_ID" type="String" direction="Input" default="PODS_GROUND_BED" /> 
				<var name="POLICY" default="POLICY.xml#DELETE_PODS_SEM"  />
                <var name="ID" type="Int64"/>
                <var name="USER_ID" default="-1" type="Int64"/>
                <query>
					DO $$
                    BEGIN
                    UPDATE PODS.EVENT_RANGE
                    SET CURRENT_INDICATOR_LF='N'
                    WHERE EVENT_ID = {ID};

                    UPDATE PODS.PI_GROUND_BED_READING
                    SET REF_GROUND_BED_EVENT_ID = NULL
                    WHERE REF_GROUND_BED_EVENT_ID = {ID};

                    UPDATE PODS.ANODE
                    SET GROUND_BED_EVENT_ID = NULL
                    WHERE GROUND_BED_EVENT_ID = {ID};

                    DELETE
                    FROM PODS.GROUND_BED
                    WHERE EVENT_ID = {ID};

                    DELETE
                    FROM WEB50.LNK_GATE
                    WHERE LEFT_OBJ_ID = 'PODS_GROUND_BED/'||CAST({ID} AS VARCHAR(30))
                    OR RIGHT_OBJ_ID = 'PODS_GROUND_BED/'||CAST({ID} AS VARCHAR(30));

                    END $$;
                </query>
            </dbCommand>
        </delete>
    </data>
    <data table="HCA_CA_SEGMENT" schema="PODS" id="PODS_HCA_CA_SEGMENT" comment="PODS.HCA_CA_SEGMENT">
        <select>
            <dbQuery idField="ID">
                <param name="USER_ID" default="-1" type="Int64"/>
                <var name="FILTER" default="1=1"/>
                <var name="LPU_ACCESS_FILTER" default="SELECT srv_district_id FROM PODS.SRV_DISTRICT_GCL"/>
                <query>
                    SELECT * FROM (SELECT EVENT_ID ID, t.* FROM PODS.HCA_CA_SEGMENT t) d WHERE {FILTER}
                </query>
            </dbQuery>
        </select>
        <insert>
            <dbCommand>
				<var name="CLASS_ID" type="String" direction="Input" default="PODS_HCA_CA_SEGMENT" /> 
				<var name="POLICY" default="POLICY.xml#INSERT_PODS_SEM"  />
                <var name="EVENT_GUID" default="" type="String"/>
                <var name="INTERSECTION_METHOD_CL" default="UNKNOWN" type="String"/>
                <var name="RUN_ID" default="" type="String"/>
                <var name="TYPE_CL" default="UNKNOWN" type="String"/>
                <var name="DETERMINATION_DATE" default="" type="DateTime"/>
                <var name="DESCRIPTION" default="" type="String"/>
                <var name="SOURCE_GCL" default="UNKNOWN" type="String"/>
                <var name="COMMENTS" default="" type="String"/>
                <var name="ID" type="Int64" direction="Output" default="SELECT max(EVENT_ID) id FROM PODS.EVENT_RANGE"/>
                <var name="PODS_USER" type="String"/>
                <var name="USER_ID" default="-1" type="Int64"/>
                <query>
					DO $$
					DECLARE
					returnId integer;
                    BEGIN
                    INSERT INTO PODS.EVENT_RANGE (EVENT_GUID,FEATURE_ID,STATION_ID_BEGIN,STATION_ID_END,PODS_USER,CREATE_DATE,EFFECTIVE_FROM_DATE,CURRENT_INDICATOR_LF,POSITIONING_TYPE_CL)
                    VALUES('{EVENT_GUID}','HCA_CA_SEGMENT',0,0,NULLIF('{PODS_USER}',''),current_timestamp,current_timestamp,'Y','UNKNOWN')
                    RETURNING EVENT_ID INTO returnId;

                    INSERT INTO PODS.HCA_CA_SEGMENT(EVENT_ID,EVENT_GUID,INTERSECTION_METHOD_CL,RUN_ID,TYPE_CL,DETERMINATION_DATE,DESCRIPTION,SOURCE_GCL,COMMENTS)
                    VALUES(returnId,'{EVENT_GUID}',NULLIF('{INTERSECTION_METHOD_CL}',''),NULLIF('{RUN_ID}',''),NULLIF('{TYPE_CL}',''),'{DETERMINATION_DATE}',NULLIF('{DESCRIPTION}',''),NULLIF('{SOURCE_GCL}',''),NULLIF('{COMMENTS}',''));
					END $$;
                </query>
            </dbCommand>
        </insert>
        <update>
            <dbCommand>
				<param name="CLASS_ID" type="String" direction="Input" default="PODS_HCA_CA_SEGMENT" /> 
				<var name="POLICY" default="POLICY.xml#UPDATE_PODS_SEM"  />
                <param name="EVENT_GUID" default="" type="String"/>
                <param name="INTERSECTION_METHOD_CL" default="UNKNOWN" type="String"/>
                <param name="RUN_ID" default="" type="String"/>
                <param name="TYPE_CL" default="UNKNOWN" type="String"/>
                <param name="DETERMINATION_DATE" default="" type="DateTime"/>
                <param name="DESCRIPTION" default="" type="String"/>
                <param name="SOURCE_GCL" default="UNKNOWN" type="String"/>
                <param name="COMMENTS" default="" type="String"/>
                <param name="ID" type="Int64"/>
                <param name="USER_ID" default="-1" type="Int64"/>
                <query>
                    UPDATE PODS.HCA_CA_SEGMENT
                    SET 
					EVENT_GUID=case when :EVENT_GUID is null then EVENT_GUID else :EVENT_GUID end,
					RUN_ID=case when :RUN_ID is null then RUN_ID else :RUN_ID end,
					INTERSECTION_METHOD_CL=case when :INTERSECTION_METHOD_CL is null then INTERSECTION_METHOD_CL else :INTERSECTION_METHOD_CL end,
                    TYPE_CL=case when :TYPE_CL is null then TYPE_CL else :TYPE_CL end,
                    DETERMINATION_DATE=case when :DETERMINATION_DATE is null then DETERMINATION_DATE else :DETERMINATION_DATE end,
                    DESCRIPTION=case when :DESCRIPTION is null then DESCRIPTION else :DESCRIPTION end,
                    SOURCE_GCL=case when :SOURCE_GCL is null then SOURCE_GCL else :SOURCE_GCL end,
                    COMMENTS=case when :COMMENTS is null then COMMENTS else :COMMENTS end
                    WHERE EVENT_ID = :ID;
                </query>
            </dbCommand>
        </update>
        <delete>
            <dbCommand>
				<var name="CLASS_ID" type="String" direction="Input" default="PODS_HCA_CA_SEGMENT" /> 
				<var name="POLICY" default="POLICY.xml#DELETE_PODS_SEM"  />
                <var name="ID" type="Int64"/>
                <var name="USER_ID" default="-1" type="Int64"/>
                <query>
					DO $$
                    BEGIN
                    UPDATE PODS.EVENT_RANGE
                    SET CURRENT_INDICATOR_LF='N'
                    WHERE EVENT_ID = {ID};

                    DELETE FROM PODS.HCA_CA_SEGMENT
                    WHERE EVENT_ID = {ID};
                    DELETE FROM WEB50.LNK_GATE WHERE LEFT_OBJ_ID = 'PODS_HCA_CA_SEGMENT/'||CAST({ID} AS VARCHAR(30)) OR RIGHT_OBJ_ID = 'PODS_HCA_CA_SEGMENT/'||CAST({ID} AS VARCHAR(30)); END $$;
                </query>
            </dbCommand>
        </delete>
    </data>
    <data table="HORIZONTAL_DIRECTIONAL_DRILL" schema="PODS" id="PODS_HORIZONTAL_DIRECTIONAL_DRILL" comment="PODS.HORIZONTAL_DIRECTIONAL_DRILL">
        <select>
            <dbQuery idField="ID">
                <param name="USER_ID" default="-1" type="Int64"/>
                <var name="FILTER" default="1=1"/>
                <var name="LPU_ACCESS_FILTER" default="SELECT srv_district_id FROM PODS.SRV_DISTRICT_GCL"/>
                <query>
                    SELECT * FROM (SELECT EVENT_ID ID, t.* FROM PODS.HORIZONTAL_DIRECTIONAL_DRILL t) d WHERE {FILTER}
                </query>
            </dbQuery>
        </select>
        <insert>
            <dbCommand>
				<var name="CLASS_ID" type="String" direction="Input" default="PODS_HORIZONTAL_DIRECTIONAL_DRILL" /> 
				<var name="POLICY" default="POLICY.xml#INSERT_PODS_SEM"  />
                <var name="EVENT_GUID" default="" type="String"/>
                <var name="ENTRY_ANGLE" default="NULL" type="Decimal"/>
                <var name="EXIT_ANGLE" default="NULL" type="Decimal"/>
                <var name="MAX_DEPTH_POINT" default="NULL" type="Decimal"/>
                <var name="DRILL_CONTRACTOR_CL" default="UNKNOWN" type="String"/>
                <var name="RADIUS" default="NULL" type="Decimal"/>
                <var name="LENGTH_OF_BORE" default="NULL" type="Decimal"/>
                <var name="DESCRIPTION" default="" type="String"/>
                <var name="SOURCE_GCL" default="UNKNOWN" type="String"/>
                <var name="COMMENTS" default="" type="String"/>
                <var name="ID" type="Int64" direction="Output" default="SELECT max(EVENT_ID) id FROM PODS.EVENT_RANGE"/>
                <var name="PODS_USER" type="String"/>
                <var name="USER_ID" default="-1" type="Int64"/>
                <query>
					DO $$
					DECLARE
					returnId integer;
                    BEGIN
                    INSERT INTO PODS.EVENT_RANGE (EVENT_GUID,FEATURE_ID,STATION_ID_BEGIN,STATION_ID_END,PODS_USER,CREATE_DATE,EFFECTIVE_FROM_DATE,CURRENT_INDICATOR_LF,POSITIONING_TYPE_CL)
                    VALUES('{EVENT_GUID}','HORIZ_DIR_DRL',0,0,NULLIF('{PODS_USER}',''),current_timestamp,current_timestamp,'Y','UNKNOWN')
                    RETURNING EVENT_ID INTO returnId;

                    INSERT INTO PODS.HORIZONTAL_DIRECTIONAL_DRILL(EVENT_ID,EVENT_GUID,ENTRY_ANGLE,EXIT_ANGLE,MAX_DEPTH_POINT,DRILL_CONTRACTOR_CL,RADIUS,LENGTH_OF_BORE,DESCRIPTION,SOURCE_GCL,COMMENTS)
                    VALUES(returnId,'{EVENT_GUID}',{ENTRY_ANGLE},{EXIT_ANGLE},{MAX_DEPTH_POINT},NULLIF('{DRILL_CONTRACTOR_CL}',''),{RADIUS},{LENGTH_OF_BORE},NULLIF('{DESCRIPTION}',''),NULLIF('{SOURCE_GCL}',''),NULLIF('{COMMENTS}',''));
					END $$;
                </query>
            </dbCommand>
        </insert>
        <update>
            <dbCommand>
				<param name="CLASS_ID" type="String" direction="Input" default="PODS_HORIZONTAL_DIRECTIONAL_DRILL" /> 
				<var name="POLICY" default="POLICY.xml#UPDATE_PODS_SEM"  />
                <param name="EVENT_GUID" default="" type="String"/>
                <param name="ENTRY_ANGLE" default="NULL" type="Decimal"/>
                <param name="EXIT_ANGLE" default="NULL" type="Decimal"/>
                <param name="MAX_DEPTH_POINT" default="NULL" type="Decimal"/>
                <param name="DRILL_CONTRACTOR_CL" default="UNKNOWN" type="String"/>
                <param name="RADIUS" default="NULL" type="Decimal"/>
                <param name="LENGTH_OF_BORE" default="NULL" type="Decimal"/>
                <param name="DESCRIPTION" default="" type="String"/>
                <param name="SOURCE_GCL" default="UNKNOWN" type="String"/>
                <param name="COMMENTS" default="" type="String"/>
                <param name="ID" type="Int64"/>
                <param name="USER_ID" default="-1" type="Int64"/>
                <query>
                    UPDATE PODS.HORIZONTAL_DIRECTIONAL_DRILL
                    SET 
					EVENT_GUID=case when :EVENT_GUID is null then EVENT_GUID else :EVENT_GUID end,
					ENTRY_ANGLE=case when :ENTRY_ANGLE is null then ENTRY_ANGLE else :ENTRY_ANGLE end,
					EXIT_ANGLE=case when :EXIT_ANGLE is null then EXIT_ANGLE else :EXIT_ANGLE end,
					MAX_DEPTH_POINT=case when :MAX_DEPTH_POINT is null then MAX_DEPTH_POINT else :MAX_DEPTH_POINT end,
					DRILL_CONTRACTOR_CL=case when :DRILL_CONTRACTOR_CL is null then DRILL_CONTRACTOR_CL else :DRILL_CONTRACTOR_CL end,
                    RADIUS=case when :RADIUS is null then RADIUS else :RADIUS end,
					LENGTH_OF_BORE=case when :LENGTH_OF_BORE is null then LENGTH_OF_BORE else :LENGTH_OF_BORE end,
                    DESCRIPTION=case when :DESCRIPTION is null then DESCRIPTION else :DESCRIPTION end,
                    SOURCE_GCL=case when :SOURCE_GCL is null then SOURCE_GCL else :SOURCE_GCL end,
                    COMMENTS=case when :COMMENTS is null then COMMENTS else :COMMENTS end
                    WHERE EVENT_ID = :ID;
                </query>
            </dbCommand>
        </update>
        <delete>
            <dbCommand>
				<var name="CLASS_ID" type="String" direction="Input" default="PODS_HORIZONTAL_DIRECTIONAL_DRILL" /> 
				<var name="POLICY" default="POLICY.xml#DELETE_PODS_SEM"  />
                <var name="ID" type="Int64"/>
                <var name="USER_ID" default="-1" type="Int64"/>
                <query>
					DO $$
                    BEGIN
                    UPDATE PODS.EVENT_RANGE
                    SET CURRENT_INDICATOR_LF='N'
                    WHERE EVENT_ID = {ID};

                    DELETE FROM PODS.HORIZONTAL_DIRECTIONAL_DRILL
                    WHERE EVENT_ID = {ID};
                    DELETE FROM WEB50.LNK_GATE WHERE LEFT_OBJ_ID = 'PODS_HORIZONTAL_DIRECTIONAL_DRILL/'||CAST({ID} AS VARCHAR(30)) OR RIGHT_OBJ_ID = 'PODS_HORIZONTAL_DIRECTIONAL_DRILL/'||CAST({ID} AS VARCHAR(30)); END $$;
                </query>
            </dbCommand>
        </delete>
    </data>
    <data table="ILI_CLUSTER" schema="PODS" id="PODS_ILI_CLUSTER" comment="PODS.ILI_CLUSTER">
        <select>
            <dbQuery idField="ID">
                <param name="USER_ID" default="-1" type="Int64"/>
                <var name="FILTER" default="1=1"/>
                <var name="LPU_ACCESS_FILTER" default="SELECT srv_district_id FROM PODS.SRV_DISTRICT_GCL"/>
                <query>
                    SELECT *
                    FROM (SELECT t.ili_cluster_id ID, t.*,c.cluster_comment,
                    c.r_595_2011_repair_method, c.r_595_2011_depth_abrasion,
                    c.r_595_2011_square_abrasion, c.r_595_2011_length_pipe_repair,
                    c.r_595_2011_comment, c.sto_112_2007_assurance_factor,
                    c.sto_112_2007_destruct_pressure, c.sto_112_2007_allow_pressure,
                    c.sto_112_2007_performance_eval,
                    c.sto_173_2007_critical_pressure, c.sto_173_2007_danger_degree,
                    c.sto_173_2007_safe_pressure, c.sto_292_2007_danger_rank,
                    c.sto_401_2009_fail_probability,ca.r_620_2011_date_test, ca.r_620_2011_date_repair,
                    ca.sto_112_2007_work_press_koef, ca.sto_112_2007_compress_strength,
                    ca.sto_112_2007_length_koef, ca.ltg_thickness_measured,
                    ca.ltg_corrosion_speed, ca.ltg_time_from_last_repair,
                    ca.ltg_thickness_to_destroy, ca.ltg_residual_life,
                    ca.ltg_min_thickness_allow, ca.ltg_actual_res_thickness,
                    ca.ltg_probab_corrosion_speed, ca.ltg_depth_to_destroy,
                    ca.ltg_time_to_destroy, ca.ltg_repair_method, ca.pipe_params
                    FROM pods.ili_cluster t LEFT JOIN pods.sto_ili_cluster_calc c
                    ON c.ili_cluster_id = t.ili_cluster_id
                    LEFT JOIN pods.sto_ili_cluster_calc_adv ca
                    ON ca.ili_cluster_id = t.ili_cluster_id
                    ) d  WHERE {FILTER}
                </query>
            </dbQuery>
        </select>
        <insert>
            <dbCommand>
				<var name="CLASS_ID" type="String" direction="Input" default="PODS_ILI_CLUSTER" /> 
				<var name="POLICY" default="POLICY.xml#INSERT_PODS_SEM"  />
                <var name="ILI_CLUSTER_GUID" default="" type="String"/>
                <var name="EVENT_GUID" default="" type="String"/>
                <var name="DESCRIPTION" default="" type="String"/>
                <var name="CREATE_DATE" default="" type="DateTime"/>
                <var name="AVG_BPR_CALCULATED" default="NULL" type="Decimal"/>
                <var name="AVG_BPR_PIG" default="NULL" type="Decimal"/>
                <var name="AVG_BPR_VARIANCE" default="NULL" type="Decimal"/>
                <var name="AVG_DEPTH" default="NULL" type="Decimal"/>
                <var name="AVG_LENGTH" default="NULL" type="Decimal"/>
                <var name="AVG_MAX_DIAMETER" default="0" type="Decimal"/>
                <var name="AVG_MIN_DIAMETER" default="0" type="Decimal"/>
                <var name="AVG_ORIENTATION" default="" type="String"/>
                <var name="AVG_RPR_CALCULATED" default="NULL" type="Decimal"/>
                <var name="AVG_RPR_PIG" default="NULL" type="Decimal"/>
                <var name="AVG_RPR_VARIANCE" default="NULL" type="Decimal"/>
                <var name="AVG_WIDTH" default="NULL" type="Decimal"/>
                <var name="R85_BURST_PRESSURE" default="NULL" type="Decimal"/>
                <var name="EFFECTIVE_LENGTH" default="NULL" type="Decimal"/>
                <var name="EFFECTIVE_WIDTH" default="NULL" type="Decimal"/>
                <var name="EFFECTIVE_AREA" default="" type="String"/>
                <var name="SAFETY_FACTOR" default="NULL" type="Decimal"/>
                <var name="ANOMALY_COUNT" default="NULL" type="Decimal"/>
                <var name="MAX_WALL_LOSS" default="NULL" type="Decimal"/>
                <var name="ILI_INSPECTION_ID" default="NULL" type="Decimal"/>
                <var name="ILI_INSPECTION_GUID" default="" type="String"/>
                <var name="SOURCE_GCL" default="UNKNOWN" type="String"/>
                <var name="COMMENTS" default="" type="String"/>
                <var name="ID" type="Int64" direction="Output" default="SELECT max(EVENT_ID) id FROM PODS.EVENT_RANGE"/>
                <var name="PODS_USER" type="String"/>
                <var name="USER_ID" default="-1" type="Int64"/>
                <query>
					DO $$
					DECLARE
					returnId integer;
                    BEGIN
                    INSERT INTO PODS.EVENT_RANGE (EVENT_GUID,FEATURE_ID,STATION_ID_BEGIN,STATION_ID_END,PODS_USER,CREATE_DATE,EFFECTIVE_FROM_DATE,CURRENT_INDICATOR_LF,POSITIONING_TYPE_CL)
                    VALUES('{EVENT_GUID}','ILI_CLUSTER',0,0,NULLIF('{PODS_USER}',''),current_timestamp,current_timestamp,'Y','UNKNOWN')
                    RETURNING EVENT_ID INTO returnId;

                    INSERT INTO PODS.ILI_CLUSTER(EVENT_ID,ILI_CLUSTER_GUID,EVENT_GUID,DESCRIPTION,CREATE_DATE,AVG_BPR_CALCULATED,AVG_BPR_PIG,AVG_BPR_VARIANCE,AVG_DEPTH,AVG_LENGTH,AVG_MAX_DIAMETER,AVG_MIN_DIAMETER,AVG_ORIENTATION,AVG_RPR_CALCULATED,AVG_RPR_PIG,AVG_RPR_VARIANCE,AVG_WIDTH,R85_BURST_PRESSURE,EFFECTIVE_LENGTH,EFFECTIVE_WIDTH,EFFECTIVE_AREA,SAFETY_FACTOR,ANOMALY_COUNT,MAX_WALL_LOSS,ILI_INSPECTION_ID,ILI_INSPECTION_GUID,SOURCE_GCL,COMMENTS)
                    VALUES(returnId,'{ILI_CLUSTER_GUID}','{EVENT_GUID}',NULLIF('{DESCRIPTION}',''),'{CREATE_DATE}',{AVG_BPR_CALCULATED},{AVG_BPR_PIG},{AVG_BPR_VARIANCE},{AVG_DEPTH},{AVG_LENGTH},{AVG_MAX_DIAMETER},{AVG_MIN_DIAMETER},NULLIF('{AVG_ORIENTATION}',''),{AVG_RPR_CALCULATED},{AVG_RPR_PIG},{AVG_RPR_VARIANCE},{AVG_WIDTH},{R85_BURST_PRESSURE},{EFFECTIVE_LENGTH},{EFFECTIVE_WIDTH},'{EFFECTIVE_AREA}',{SAFETY_FACTOR},{ANOMALY_COUNT},{MAX_WALL_LOSS},{ILI_INSPECTION_ID},'{ILI_INSPECTION_GUID}',NULLIF('{SOURCE_GCL}',''),NULLIF('{COMMENTS}',''));
					END $$;
                </query>
            </dbCommand>
        </insert>
        <update>
            <dbCommand>
				<param name="CLASS_ID" type="String" direction="Input" default="PODS_ILI_CLUSTER" /> 
				<var name="POLICY" default="POLICY.xml#UPDATE_PODS_SEM"  />
                <param name="ILI_CLUSTER_GUID" default="" type="String"/>
                <param name="EVENT_GUID" default="" type="String"/>
                <param name="DESCRIPTION" default="" type="String"/>
                <param name="CREATE_DATE" default="" type="DateTime"/>
                <param name="AVG_BPR_CALCULATED" default="NULL" type="Decimal"/>
                <param name="AVG_BPR_PIG" default="NULL" type="Decimal"/>
                <param name="AVG_BPR_VARIANCE" default="NULL" type="Decimal"/>
                <param name="AVG_DEPTH" default="NULL" type="Decimal"/>
                <param name="AVG_LENGTH" default="NULL" type="Decimal"/>
                <param name="AVG_MAX_DIAMETER" default="0" type="Decimal"/>
                <param name="AVG_MIN_DIAMETER" default="0" type="Decimal"/>
                <param name="AVG_ORIENTATION" default="" type="String"/>
                <param name="AVG_RPR_CALCULATED" default="NULL" type="Decimal"/>
                <param name="AVG_RPR_PIG" default="NULL" type="Decimal"/>
                <param name="AVG_RPR_VARIANCE" default="NULL" type="Decimal"/>
                <param name="AVG_WIDTH" default="NULL" type="Decimal"/>
                <param name="R85_BURST_PRESSURE" default="NULL" type="Decimal"/>
                <param name="EFFECTIVE_LENGTH" default="NULL" type="Decimal"/>
                <param name="EFFECTIVE_WIDTH" default="NULL" type="Decimal"/>
                <param name="EFFECTIVE_AREA" default="" type="String"/>
                <param name="SAFETY_FACTOR" default="NULL" type="Decimal"/>
                <param name="ANOMALY_COUNT" default="NULL" type="Decimal"/>
                <param name="MAX_WALL_LOSS" default="NULL" type="Decimal"/>
                <param name="ILI_INSPECTION_ID" default="NULL" type="Decimal"/>
                <param name="ILI_INSPECTION_GUID" default="" type="String"/>
                <param name="SOURCE_GCL" default="UNKNOWN" type="String"/>
                <param name="COMMENTS" default="" type="String"/>
                <param name="ID" type="Int64"/>
                <param name="USER_ID" default="-1" type="Int64"/>
                <query>
                    UPDATE PODS.ILI_CLUSTER
                    SET 
					ILI_CLUSTER_GUID=:ILI_CLUSTER_GUID,EVENT_GUID=case when :EVENT_GUID is null then EVENT_GUID else :EVENT_GUID end,
                    DESCRIPTION=case when :DESCRIPTION is null then DESCRIPTION else :DESCRIPTION end,
                    CREATE_DATE=case when :CREATE_DATE is null then CREATE_DATE else :CREATE_DATE end,
                    AVG_BPR_CALCULATED=case when :AVG_BPR_CALCULATED is null then AVG_BPR_CALCULATED else :AVG_BPR_CALCULATED end,
                    AVG_BPR_PIG=case when :AVG_BPR_PIG is null then AVG_BPR_PIG else :AVG_BPR_PIG end,
                    AVG_BPR_VARIANCE=case when :AVG_BPR_VARIANCE is null then AVG_BPR_VARIANCE else :AVG_BPR_VARIANCE end,
                    AVG_DEPTH=case when :AVG_DEPTH is null then AVG_DEPTH else :AVG_DEPTH end,
                    AVG_LENGTH=case when :AVG_LENGTH is null then AVG_LENGTH else :AVG_LENGTH end,
                    AVG_MAX_DIAMETER=case when :AVG_MAX_DIAMETER is null then AVG_MAX_DIAMETER else :AVG_MAX_DIAMETER end,
                    AVG_MIN_DIAMETER=case when :AVG_MIN_DIAMETER is null then AVG_MIN_DIAMETER else :AVG_MIN_DIAMETER end,
                    AVG_ORIENTATION=case when :AVG_ORIENTATION is null then AVG_ORIENTATION else :AVG_ORIENTATION end,
                    AVG_RPR_CALCULATED=case when :AVG_RPR_CALCULATED is null then AVG_RPR_CALCULATED else :AVG_RPR_CALCULATED end,
                    AVG_RPR_PIG=case when :AVG_RPR_PIG is null then AVG_RPR_PIG else :AVG_RPR_PIG end,
                    AVG_RPR_VARIANCE=case when :AVG_RPR_VARIANCE is null then AVG_RPR_VARIANCE else :AVG_RPR_VARIANCE end,
                    AVG_WIDTH=case when :AVG_WIDTH is null then AVG_WIDTH else :AVG_WIDTH end,
                    R85_BURST_PRESSURE=case when :R85_BURST_PRESSURE is null then R85_BURST_PRESSURE else :R85_BURST_PRESSURE end,
                    EFFECTIVE_LENGTH=case when :EFFECTIVE_LENGTH is null then EFFECTIVE_LENGTH else :EFFECTIVE_LENGTH end,
                    EFFECTIVE_WIDTH=case when :EFFECTIVE_WIDTH is null then EFFECTIVE_WIDTH else :EFFECTIVE_WIDTH end,
                    EFFECTIVE_AREA=case when :EFFECTIVE_AREA is null then EFFECTIVE_AREA else :EFFECTIVE_AREA end,
                    SAFETY_FACTOR=case when :SAFETY_FACTOR is null then SAFETY_FACTOR else :SAFETY_FACTOR end,
                    ANOMALY_COUNT=case when :ANOMALY_COUNT is null then ANOMALY_COUNT else :ANOMALY_COUNT end,
                    MAX_WALL_LOSS=case when :MAX_WALL_LOSS is null then MAX_WALL_LOSS else :MAX_WALL_LOSS end,
                    ILI_INSPECTION_ID=case when :ILI_INSPECTION_ID is null then ILI_INSPECTION_ID else :ILI_INSPECTION_ID end,
                    ILI_INSPECTION_GUID=case when :ILI_INSPECTION_GUID is null then ILI_INSPECTION_GUID else :ILI_INSPECTION_GUID end,
                    SOURCE_GCL=case when :SOURCE_GCL is null then SOURCE_GCL else :SOURCE_GCL end,
                    COMMENTS=case when :COMMENTS is null then COMMENTS else :COMMENTS end
                    WHERE ILI_CLUSTER_ID = :ID;
                </query>
            </dbCommand>
        </update>
        <delete>
            <dbCommand>
				<var name="CLASS_ID" type="String" direction="Input" default="PODS_ILI_CLUSTER" /> 
				<var name="POLICY" default="POLICY.xml#DELETE_PODS_SEM"  />
                <var name="ID" type="Int64"/>
                <var name="USER_ID" default="-1" type="Int64"/>
                <query>
					DO $$
                    BEGIN
                    UPDATE PODS.EVENT_RANGE
                    SET CURRENT_INDICATOR_LF='N'
                    WHERE EVENT_ID = (SELECT EVENT_ID FROM PODS.ILI_CLUSTER WHERE ILI_CLUSTER_ID = {ID});

                    UPDATE PODS.STO_ILI_DATA_CALC
                    SET ILI_CLUSTER_ID = NULL
                    WHERE ILI_CLUSTER_ID = {ID};

                    UPDATE PODS.STO_ILI_DATA_CALC_ADV
                    SET ILI_CLUSTER_ID = NULL
                    WHERE ILI_CLUSTER_ID = {ID};

                    DELETE
                    FROM PODS.STO_ILI_CLUSTER_CALC_ADV
                    WHERE ILI_CLUSTER_ID = {ID};

                    DELETE
                    FROM PODS.STO_ILI_CLUSTER_CALC
                    WHERE ILI_CLUSTER_ID = {ID};

                    DELETE
                    FROM PODS.STO_ILI_CLUSTER_CALC_ADV
                    WHERE ILI_CLUSTER_ID = {ID};


                    UPDATE PODS.ILI_DATA
                    SET ILI_CLUSTER_ID = NULL
                    WHERE ILI_CLUSTER_ID = {ID};

                    DELETE
                    FROM PODS.ILI_CLUSTER
                    WHERE ILI_CLUSTER_ID = {ID};

                    DELETE
                    FROM WEB50.LNK_GATE
                    WHERE LEFT_OBJ_ID = 'PODS_ILI_CLUSTER/'||CAST({ID} AS VARCHAR(30))
                    OR RIGHT_OBJ_ID = 'PODS_ILI_CLUSTER/'||CAST({ID} AS VARCHAR(30));

                    END $$;
                </query>
            </dbCommand>
        </delete>
    </data>
    <data table="ILI_PIPE_LENGTH" schema="PODS" id="PODS_ILI_PIPE_LENGTH" comment="PODS.ILI_PIPE_LENGTH">
        <select>
            <dbQuery idField="ID">
                <param name="USER_ID" default="-1" type="Int64"/>
                <var name="FILTER" default="1=1"/>
                <var name="LPU_ACCESS_FILTER" default="SELECT srv_district_id FROM PODS.SRV_DISTRICT_GCL"/>
                <query>
                    SELECT * FROM (SELECT EVENT_ID ID, t.* FROM PODS.ILI_PIPE_LENGTH t) d WHERE {FILTER}
                </query>
            </dbQuery>
        </select>
        <insert>
            <dbCommand>
				<var name="CLASS_ID" type="String" direction="Input" default="PODS_ILI_PIPE_LENGTH" /> 
				<var name="POLICY" default="POLICY.xml#INSERT_PODS_SEM"  />
                <var name="ILI_PIPE_LENGTH_GUID" default="" type="String"/>
                <var name="EVENT_GUID" default="" type="String"/>
                <var name="DESCRIPTION" default="" type="String"/>
                <var name="WELD_NUMBER" default="" type="String"/>
                <var name="SEQUENCE_NUMBER" default="NULL" type="Decimal"/>
                <var name="START_ODOMETER" default="NULL" type="Decimal"/>
                <var name="END_ODOMETER" default="NULL" type="Decimal"/>
                <var name="START_COORDINATE_ID" default="NULL" type="Decimal"/>
                <var name="START_COORDINATE_GUID" default="" type="String"/>
                <var name="END_COORDINATE_ID" default="NULL" type="Decimal"/>
                <var name="END_COORDINATE_GUID" default="" type="String"/>
                <var name="SEAM_ORIENTATION_DEG" default="NULL" type="Decimal"/>
                <var name="MEASURED_WALL_THICKNESS" default="0" type="Decimal"/>
                <var name="NOMINAL_WALL_THICKNESS" default="0" type="Decimal"/>
                <var name="ILI_INSPECTION_ID" default="NULL" type="Decimal"/>
                <var name="ILI_INSPECTION_GUID" default="" type="String"/>
                <var name="REF_EVENT_ID" default="NULL" type="Decimal"/>
                <var name="REF_EVENT_GUID" default="" type="String"/>
                <var name="SOURCE_GCL" default="UNKNOWN" type="String"/>
                <var name="COMMENTS" default="" type="String"/>
                <var name="ID" type="Int64" direction="Output" default="SELECT max(EVENT_ID) id FROM PODS.EVENT_RANGE"/>
                <var name="PODS_USER" type="String"/>
                <var name="USER_ID" default="-1" type="Int64"/>
                <query>
					DO $$
					DECLARE
					returnId integer;
                    BEGIN
                    INSERT INTO PODS.EVENT_RANGE (EVENT_GUID,FEATURE_ID,STATION_ID_BEGIN,STATION_ID_END,PODS_USER,CREATE_DATE,EFFECTIVE_FROM_DATE,CURRENT_INDICATOR_LF,POSITIONING_TYPE_CL)
                    VALUES('{EVENT_GUID}','ILI_PIPE_LENGTH',0,0,NULLIF('{PODS_USER}',''),current_timestamp,current_timestamp,'Y','UNKNOWN')
                    RETURNING EVENT_ID INTO returnId;

                    INSERT INTO PODS.ILI_PIPE_LENGTH(EVENT_ID,ILI_PIPE_LENGTH_GUID,EVENT_GUID,DESCRIPTION,WELD_NUMBER,SEQUENCE_NUMBER,START_ODOMETER,END_ODOMETER,START_COORDINATE_ID,START_COORDINATE_GUID,END_COORDINATE_ID,END_COORDINATE_GUID,SEAM_ORIENTATION_DEG,MEASURED_WALL_THICKNESS,NOMINAL_WALL_THICKNESS,ILI_INSPECTION_ID,ILI_INSPECTION_GUID,REF_EVENT_ID,REF_EVENT_GUID,SOURCE_GCL,COMMENTS)
                    VALUES(returnId,'{ILI_PIPE_LENGTH_GUID}','{EVENT_GUID}',NULLIF('{DESCRIPTION}',''),NULLIF('{WELD_NUMBER}',''),{SEQUENCE_NUMBER},{START_ODOMETER},{END_ODOMETER},{START_COORDINATE_ID},'{START_COORDINATE_GUID}',{END_COORDINATE_ID},'{END_COORDINATE_GUID}',{SEAM_ORIENTATION_DEG},{MEASURED_WALL_THICKNESS},{NOMINAL_WALL_THICKNESS},{ILI_INSPECTION_ID},'{ILI_INSPECTION_GUID}',{REF_EVENT_ID},'{REF_EVENT_GUID}',NULLIF('{SOURCE_GCL}',''),NULLIF('{COMMENTS}',''));
					END $$;
                </query>
            </dbCommand>
        </insert>
        <update>
            <dbCommand>
				<param name="CLASS_ID" type="String" direction="Input" default="PODS_ILI_PIPE_LENGTH" /> 
				<var name="POLICY" default="POLICY.xml#UPDATE_PODS_SEM"  />
                <param name="ILI_PIPE_LENGTH_GUID" default="" type="String"/>
                <param name="EVENT_GUID" default="" type="String"/>
                <param name="DESCRIPTION" default="" type="String"/>
                <param name="WELD_NUMBER" default="" type="String"/>
                <param name="SEQUENCE_NUMBER" default="NULL" type="Decimal"/>
                <param name="START_ODOMETER" default="NULL" type="Decimal"/>
                <param name="END_ODOMETER" default="NULL" type="Decimal"/>
                <param name="START_COORDINATE_ID" default="NULL" type="Decimal"/>
                <param name="START_COORDINATE_GUID" default="" type="String"/>
                <param name="END_COORDINATE_ID" default="NULL" type="Decimal"/>
                <param name="END_COORDINATE_GUID" default="" type="String"/>
                <param name="SEAM_ORIENTATION_DEG" default="NULL" type="Decimal"/>
                <param name="MEASURED_WALL_THICKNESS" default="0" type="Decimal"/>
                <param name="NOMINAL_WALL_THICKNESS" default="0" type="Decimal"/>
                <param name="ILI_INSPECTION_ID" default="NULL" type="Decimal"/>
                <param name="ILI_INSPECTION_GUID" default="" type="String"/>
                <param name="REF_EVENT_ID" default="NULL" type="Decimal"/>
                <param name="REF_EVENT_GUID" default="" type="String"/>
                <param name="SOURCE_GCL" default="UNKNOWN" type="String"/>
                <param name="COMMENTS" default="" type="String"/>
                <param name="ID" type="Int64"/>
                <param name="USER_ID" default="-1" type="Int64"/>
                <query>
                    UPDATE PODS.ILI_PIPE_LENGTH
                    SET 
					ILI_PIPE_LENGTH_GUID=case when :ILI_PIPE_LENGTH_GUID is null then ILI_PIPE_LENGTH_GUID else :ILI_PIPE_LENGTH_GUID end,
					EVENT_GUID=case when :EVENT_GUID is null then EVENT_GUID else :EVENT_GUID end,
                    DESCRIPTION=case when :DESCRIPTION is null then DESCRIPTION else :DESCRIPTION end,
					WELD_NUMBER=case when :WELD_NUMBER is null then WELD_NUMBER else :WELD_NUMBER end,
					SEQUENCE_NUMBER=case when :SEQUENCE_NUMBER is null then SEQUENCE_NUMBER else :SEQUENCE_NUMBER end,
                    START_ODOMETER=case when :START_ODOMETER is null then START_ODOMETER else :START_ODOMETER end,
					END_ODOMETER=case when :END_ODOMETER is null then END_ODOMETER else :END_ODOMETER end,
					START_COORDINATE_ID=case when :START_COORDINATE_ID is null then START_COORDINATE_ID else :START_COORDINATE_ID end,
					START_COORDINATE_GUID=case when :START_COORDINATE_GUID is null then START_COORDINATE_GUID else :START_COORDINATE_GUID end,
					END_COORDINATE_ID=case when :END_COORDINATE_ID is null then END_COORDINATE_ID else :END_COORDINATE_ID end,
					END_COORDINATE_GUID=case when :END_COORDINATE_GUID is null then END_COORDINATE_GUID else :END_COORDINATE_GUID end,
					SEAM_ORIENTATION_DEG=case when :SEAM_ORIENTATION_DEG is null then SEAM_ORIENTATION_DEG else :SEAM_ORIENTATION_DEG end,
					MEASURED_WALL_THICKNESS=case when :MEASURED_WALL_THICKNESS is null then MEASURED_WALL_THICKNESS else :MEASURED_WALL_THICKNESS end,
					NOMINAL_WALL_THICKNESS=case when :NOMINAL_WALL_THICKNESS is null then NOMINAL_WALL_THICKNESS else :NOMINAL_WALL_THICKNESS end,
                    ILI_INSPECTION_ID=case when :ILI_INSPECTION_ID is null then ILI_INSPECTION_ID else :ILI_INSPECTION_ID end,
                    ILI_INSPECTION_GUID=case when :ILI_INSPECTION_GUID is null then ILI_INSPECTION_GUID else :ILI_INSPECTION_GUID end,
					REF_EVENT_ID=case when :REF_EVENT_ID is null then REF_EVENT_ID else :REF_EVENT_ID end,
					REF_EVENT_GUID=case when :REF_EVENT_GUID is null then REF_EVENT_GUID else :REF_EVENT_GUID end,
                    SOURCE_GCL=case when :SOURCE_GCL is null then SOURCE_GCL else :SOURCE_GCL end,
                    COMMENTS=case when :COMMENTS is null then COMMENTS else :COMMENTS end
                    WHERE EVENT_ID = :ID;
                </query>
            </dbCommand>
        </update>
        <delete>
            <dbCommand>
				<var name="CLASS_ID" type="String" direction="Input" default="PODS_ILI_PIPE_LENGTH" /> 
				<var name="POLICY" default="POLICY.xml#DELETE_PODS_SEM"  />
                <var name="ID" type="Int64"/>
                <var name="USER_ID" default="-1" type="Int64"/>
                <query>
					DO $$
                    BEGIN
                    UPDATE PODS.EVENT_RANGE
                    SET CURRENT_INDICATOR_LF='N'
                    WHERE EVENT_ID = {ID};

                    DELETE FROM PODS.ILI_PIPE_LENGTH
                    WHERE EVENT_ID = {ID};
                    DELETE FROM WEB50.LNK_GATE WHERE LEFT_OBJ_ID = 'PODS_ILI_PIPE_LENGTH/'||CAST({ID} AS VARCHAR(30)) OR RIGHT_OBJ_ID = 'PODS_ILI_PIPE_LENGTH/'||CAST({ID} AS VARCHAR(30)); END $$;
                </query>
            </dbCommand>
        </delete>
    </data>
    <data table="ILI_RANGE" schema="PODS" id="PODS_ILI_RANGE" comment="PODS.ILI_RANGE">
        <select>
            <dbQuery idField="ID">
                <param name="USER_ID" default="-1" type="Int64"/>
                <var name="FILTER" default="1=1"/>
                <var name="LPU_ACCESS_FILTER" default="SELECT srv_district_id FROM PODS.SRV_DISTRICT_GCL"/>
                <query>
                    SELECT * FROM (SELECT EVENT_ID ID, t.* FROM PODS.ILI_RANGE t) d WHERE {FILTER}
                </query>
            </dbQuery>
        </select>
        <insert>
            <dbCommand>
				<var name="CLASS_ID" type="String" direction="Input" default="PODS_ILI_RANGE" /> 
				<var name="POLICY" default="POLICY.xml#INSERT_PODS_SEM"  />
                <var name="EVENT_GUID" default="" type="String"/>
                <var name="SMART_PIGGABLE_LF" default="" type="String"/>
                <var name="PIGGABLE_LF" default="" type="String"/>
                <var name="DATE_LAST_PIGGED" default="" type="DateTime"/>
                <var name="DESCRIPTION" default="" type="String"/>
                <var name="SOURCE_GCL" default="UNKNOWN" type="String"/>
                <var name="COMMENTS" default="" type="String"/>
                <var name="ID" type="Int64" direction="Output" default="SELECT max(EVENT_ID) id FROM PODS.EVENT_RANGE"/>
                <var name="PODS_USER" type="String"/>
                <var name="USER_ID" default="-1" type="Int64"/>
                <query>
					DO $$
					DECLARE
					returnId integer;
                    BEGIN
                    INSERT INTO PODS.EVENT_RANGE (EVENT_GUID,FEATURE_ID,STATION_ID_BEGIN,STATION_ID_END,PODS_USER,CREATE_DATE,EFFECTIVE_FROM_DATE,CURRENT_INDICATOR_LF,POSITIONING_TYPE_CL)
                    VALUES('{EVENT_GUID}','ILI_RANGE',0,0,NULLIF('{PODS_USER}',''),current_timestamp,current_timestamp,'Y','UNKNOWN')
                    RETURNING EVENT_ID INTO returnId;

                    INSERT INTO PODS.ILI_RANGE(EVENT_ID,EVENT_GUID,SMART_PIGGABLE_LF,PIGGABLE_LF,DATE_LAST_PIGGED,DESCRIPTION,SOURCE_GCL,COMMENTS)
                    VALUES(returnId,'{EVENT_GUID}','{SMART_PIGGABLE_LF}','{PIGGABLE_LF}','{DATE_LAST_PIGGED}',NULLIF('{DESCRIPTION}',''),NULLIF('{SOURCE_GCL}',''),NULLIF('{COMMENTS}',''));
					END $$;
                </query>
            </dbCommand>
        </insert>
        <update>
            <dbCommand>
				<param name="CLASS_ID" type="String" direction="Input" default="PODS_ILI_RANGE" /> 
				<var name="POLICY" default="POLICY.xml#UPDATE_PODS_SEM"  />
                <param name="EVENT_GUID" default="" type="String"/>
                <param name="SMART_PIGGABLE_LF" default="" type="String"/>
                <param name="PIGGABLE_LF" default="" type="String"/>
                <param name="DATE_LAST_PIGGED" default="" type="DateTime"/>
                <param name="DESCRIPTION" default="" type="String"/>
                <param name="SOURCE_GCL" default="UNKNOWN" type="String"/>
                <param name="COMMENTS" default="" type="String"/>
                <param name="ID" type="Int64"/>
                <param name="USER_ID" default="-1" type="Int64"/>
                <query>
                    UPDATE PODS.ILI_RANGE
                    SET 
					EVENT_GUID=case when :EVENT_GUID is null then EVENT_GUID else :EVENT_GUID end,
					SMART_PIGGABLE_LF=case when :SMART_PIGGABLE_LF is null then SMART_PIGGABLE_LF else :SMART_PIGGABLE_LF end,
					PIGGABLE_LF=case when :PIGGABLE_LF is null then PIGGABLE_LF else :PIGGABLE_LF end,
					DATE_LAST_PIGGED=case when :DATE_LAST_PIGGED is null then DATE_LAST_PIGGED else :DATE_LAST_PIGGED end,
                    DESCRIPTION=case when :DESCRIPTION is null then DESCRIPTION else :DESCRIPTION end,
                    SOURCE_GCL=case when :SOURCE_GCL is null then SOURCE_GCL else :SOURCE_GCL end,
                    COMMENTS=case when :COMMENTS is null then COMMENTS else :COMMENTS end
                    WHERE EVENT_ID = :ID;
                </query>
            </dbCommand>
        </update>
        <delete>
            <dbCommand>
				<var name="CLASS_ID" type="String" direction="Input" default="PODS_ILI_RANGE" /> 
				<var name="POLICY" default="POLICY.xml#DELETE_PODS_SEM"  />
                <var name="ID" type="Int64"/>
                <var name="USER_ID" default="-1" type="Int64"/>
                <query>
					DO $$
                    BEGIN
                    UPDATE PODS.EVENT_RANGE
                    SET CURRENT_INDICATOR_LF='N'
                    WHERE EVENT_ID = {ID};

                    DELETE FROM PODS.ILI_RANGE
                    WHERE EVENT_ID = {ID};
                    DELETE FROM WEB50.LNK_GATE WHERE LEFT_OBJ_ID = 'PODS_ILI_RANGE/'||CAST({ID} AS VARCHAR(30)) OR RIGHT_OBJ_ID = 'PODS_ILI_RANGE/'||CAST({ID} AS VARCHAR(30)); END $$;
                </query>
            </dbCommand>
        </delete>
    </data>
    <data table="INJECTOR" schema="PODS" id="PODS_INJECTOR" comment="PODS.INJECTOR">
        <select>
            <dbQuery idField="ID">
                <param name="USER_ID" default="-1" type="Int64"/>
                <var name="FILTER" default="1=1"/>
                <var name="LPU_ACCESS_FILTER" default="SELECT srv_district_id FROM PODS.SRV_DISTRICT_GCL"/>
                <query>
                    SELECT * FROM (SELECT EVENT_ID ID, t.* FROM PODS.INJECTOR t) d WHERE {FILTER}
                </query>
            </dbQuery>
        </select>
        <insert>
            <dbCommand>
				<var name="CLASS_ID" type="String" direction="Input" default="PODS_INJECTOR" /> 
				<var name="POLICY" default="POLICY.xml#INSERT_PODS_SEM"  />
                <var name="EVENT_GUID" default="" type="String"/>
                <var name="TYPE_CL" default="UNKNOWN" type="String"/>
                <var name="DATE_INSTALLED" default="" type="DateTime"/>
                <var name="DESCRIPTION" default="" type="String"/>
                <var name="SOURCE_GCL" default="UNKNOWN" type="String"/>
                <var name="COMMENTS" default="" type="String"/>
                <var name="ID" type="Int64" direction="Output" default="SELECT max(EVENT_ID) id FROM PODS.EVENT_RANGE"/>
                <var name="PODS_USER" type="String"/>
                <var name="USER_ID" default="-1" type="Int64"/>
                <query>
					DO $$
					DECLARE
					returnId integer;
                    BEGIN
                    INSERT INTO PODS.EVENT_RANGE (EVENT_GUID,FEATURE_ID,STATION_ID_BEGIN,STATION_ID_END,PODS_USER,CREATE_DATE,EFFECTIVE_FROM_DATE,CURRENT_INDICATOR_LF,POSITIONING_TYPE_CL)
                    VALUES('{EVENT_GUID}','INJECTOR',0,0,NULLIF('{PODS_USER}',''),current_timestamp,current_timestamp,'Y','UNKNOWN')
                    RETURNING EVENT_ID INTO returnId;

                    INSERT INTO PODS.INJECTOR(EVENT_ID,EVENT_GUID,TYPE_CL,DATE_INSTALLED,DESCRIPTION,SOURCE_GCL,COMMENTS)
                    VALUES(returnId,'{EVENT_GUID}',NULLIF('{TYPE_CL}',''),'{DATE_INSTALLED}',NULLIF('{DESCRIPTION}',''),NULLIF('{SOURCE_GCL}',''),NULLIF('{COMMENTS}',''));
					END $$;
                </query>
            </dbCommand>
        </insert>
        <update>
            <dbCommand>
				<param name="CLASS_ID" type="String" direction="Input" default="PODS_INJECTOR" /> 
				<var name="POLICY" default="POLICY.xml#UPDATE_PODS_SEM"  />
                <param name="EVENT_GUID" default="" type="String"/>
                <param name="TYPE_CL" default="UNKNOWN" type="String"/>
                <param name="DATE_INSTALLED" default="" type="DateTime"/>
                <param name="DESCRIPTION" default="" type="String"/>
                <param name="SOURCE_GCL" default="UNKNOWN" type="String"/>
                <param name="COMMENTS" default="" type="String"/>
                <param name="ID" type="Int64"/>
                <param name="USER_ID" default="-1" type="Int64"/>
                <query>
                    UPDATE PODS.INJECTOR
                    SET EVENT_GUID=case when :EVENT_GUID is null then EVENT_GUID else :EVENT_GUID end,
                    TYPE_CL=case when :TYPE_CL is null then TYPE_CL else :TYPE_CL end,
                    DATE_INSTALLED=case when :DATE_INSTALLED is null then DATE_INSTALLED else :DATE_INSTALLED end,
                    DESCRIPTION=case when :DESCRIPTION is null then DESCRIPTION else :DESCRIPTION end,
                    SOURCE_GCL=case when :SOURCE_GCL is null then SOURCE_GCL else :SOURCE_GCL end,
                    COMMENTS=case when :COMMENTS is null then COMMENTS else :COMMENTS end
                    WHERE EVENT_ID = :ID;
                </query>
            </dbCommand>
        </update>
        <delete>
            <dbCommand>
				<var name="CLASS_ID" type="String" direction="Input" default="PODS_INJECTOR" /> 
				<var name="POLICY" default="POLICY.xml#DELETE_PODS_SEM"  />
                <var name="ID" type="Int64"/>
                <var name="USER_ID" default="-1" type="Int64"/>
                <query>
					DO $$
                    BEGIN
                    UPDATE PODS.EVENT_RANGE
                    SET CURRENT_INDICATOR_LF='N'
                    WHERE EVENT_ID = {ID};

                    DELETE FROM PODS.INJECTOR
                    WHERE EVENT_ID = {ID};
                    DELETE FROM WEB50.LNK_GATE WHERE LEFT_OBJ_ID = 'PODS_INJECTOR/'||CAST({ID} AS VARCHAR(30)) OR RIGHT_OBJ_ID = 'PODS_INJECTOR/'||CAST({ID} AS VARCHAR(30)); END $$;
                </query>
            </dbCommand>
        </delete>
    </data>
    <data table="INSPECTION_INTERVAL" schema="PODS" id="PODS_INSPECTION_INTERVAL" comment="PODS.INSPECTION_INTERVAL">
        <select>
            <dbQuery idField="ID">
                <param name="USER_ID" default="-1" type="Int64"/>
                <var name="FILTER" default="1=1"/>
                <var name="LPU_ACCESS_FILTER" default="SELECT srv_district_id FROM PODS.SRV_DISTRICT_GCL"/>
                <query>
                    SELECT * FROM (SELECT EVENT_ID ID, t.* FROM PODS.INSPECTION_INTERVAL t) d WHERE {FILTER}
                </query>
            </dbQuery>
        </select>
        <insert>
            <dbCommand>
				<var name="CLASS_ID" type="String" direction="Input" default="PODS_INSPECTION_INTERVAL" /> 
				<var name="POLICY" default="POLICY.xml#INSERT_PODS_SEM"  />
                <var name="EVENT_GUID" default="" type="String"/>
                <var name="INTERVAL_CL" default="UNKNOWN" type="String"/>
                <var name="SOURCE_GCL" default="UNKNOWN" type="String"/>
                <var name="COMMENTS" default="" type="String"/>
                <var name="DESCRIPTION" default="" type="String"/>
                <var name="ID" type="Int64" direction="Output" default="SELECT max(EVENT_ID) id FROM PODS.EVENT_RANGE"/>
                <var name="PODS_USER" type="String"/>
                <var name="USER_ID" default="-1" type="Int64"/>
                <query>
					DO $$
					DECLARE
					returnId integer;
                    BEGIN
                    INSERT INTO PODS.EVENT_RANGE (EVENT_GUID,FEATURE_ID,STATION_ID_BEGIN,STATION_ID_END,PODS_USER,CREATE_DATE,EFFECTIVE_FROM_DATE,CURRENT_INDICATOR_LF,POSITIONING_TYPE_CL)
                    VALUES('{EVENT_GUID}','INSP_INTERV',0,0,NULLIF('{PODS_USER}',''),current_timestamp,current_timestamp,'Y','UNKNOWN')
                    RETURNING EVENT_ID INTO returnId;

                    INSERT INTO PODS.INSPECTION_INTERVAL(EVENT_ID,EVENT_GUID,INTERVAL_CL,SOURCE_GCL,COMMENTS,DESCRIPTION)
                    VALUES(returnId,'{EVENT_GUID}','{INTERVAL_CL}',NULLIF('{SOURCE_GCL}',''),NULLIF('{COMMENTS}',''),NULLIF('{DESCRIPTION}',''));
					END $$;
                </query>
            </dbCommand>
        </insert>
        <update>
            <dbCommand>
				<param name="CLASS_ID" type="String" direction="Input" default="PODS_INSPECTION_INTERVAL" /> 
				<var name="POLICY" default="POLICY.xml#UPDATE_PODS_SEM"  />
                <param name="EVENT_GUID" default="" type="String"/>
                <param name="INTERVAL_CL" default="UNKNOWN" type="String"/>
                <param name="SOURCE_GCL" default="UNKNOWN" type="String"/>
                <param name="COMMENTS" default="" type="String"/>
                <param name="DESCRIPTION" default="" type="String"/>
                <param name="ID" type="Int64"/>
                <param name="USER_ID" default="-1" type="Int64"/>
                <query>
                    UPDATE PODS.INSPECTION_INTERVAL
                    SET 
					EVENT_GUID=case when :EVENT_GUID is null then EVENT_GUID else :EVENT_GUID end,
					INTERVAL_CL=case when :INTERVAL_CL is null then INTERVAL_CL else :INTERVAL_CL end,
                    SOURCE_GCL=case when :SOURCE_GCL is null then SOURCE_GCL else :SOURCE_GCL end,
                    COMMENTS=case when :COMMENTS is null then COMMENTS else :COMMENTS end,
					DESCRIPTION=case when :COMMENTS is null then COMMENTS else :COMMENTS end
                    WHERE EVENT_ID = :ID;
                </query>
            </dbCommand>
        </update>
        <delete>
            <dbCommand>
				<var name="CLASS_ID" type="String" direction="Input" default="PODS_INSPECTION_INTERVAL" /> 
				<var name="POLICY" default="POLICY.xml#DELETE_PODS_SEM"  />
                <var name="ID" type="Int64"/>
                <var name="USER_ID" default="-1" type="Int64"/>
                <query>
					DO $$
                    BEGIN
                    UPDATE PODS.EVENT_RANGE
                    SET CURRENT_INDICATOR_LF='N'
                    WHERE EVENT_ID = {ID};

                    DELETE FROM PODS.INSPECTION_INTERVAL
                    WHERE EVENT_ID = {ID};
                    DELETE FROM WEB50.LNK_GATE WHERE LEFT_OBJ_ID = 'PODS_INSPECTION_INTERVAL/'||CAST({ID} AS VARCHAR(30)) OR RIGHT_OBJ_ID = 'PODS_INSPECTION_INTERVAL/'||CAST({ID} AS VARCHAR(30)); END $$;
                </query>
            </dbCommand>
        </delete>
    </data>
    <data table="INTERFACE_DETECTOR" schema="PODS" id="PODS_INTERFACE_DETECTOR" comment="PODS.INTERFACE_DETECTOR">
        <select>
            <dbQuery idField="ID">
                <param name="USER_ID" default="-1" type="Int64"/>
                <var name="FILTER" default="1=1"/>
                <var name="LPU_ACCESS_FILTER" default="SELECT srv_district_id FROM PODS.SRV_DISTRICT_GCL"/>
                <query>
                    SELECT * FROM (SELECT EVENT_ID ID, t.* FROM PODS.INTERFACE_DETECTOR t) d WHERE {FILTER}
                </query>
            </dbQuery>
        </select>
        <insert>
            <dbCommand>
				<var name="CLASS_ID" type="String" direction="Input" default="PODS_INTERFACE_DETECTOR" /> 
				<var name="POLICY" default="POLICY.xml#INSERT_PODS_SEM"  />
                <var name="EVENT_GUID" default="" type="String"/>
                <var name="MANUFACTURER_CL" default="UNKNOWN" type="String"/>
                <var name="TYPE_CL" default="UNKNOWN" type="String"/>
                <var name="DATE_INSTALLED" default="" type="DateTime"/>
                <var name="DESCRIPTION" default="" type="String"/>
                <var name="SOURCE_GCL" default="UNKNOWN" type="String"/>
                <var name="COMMENTS" default="" type="String"/>
                <var name="ID" type="Int64" direction="Output" default="SELECT max(EVENT_ID) id FROM PODS.EVENT_RANGE"/>
                <var name="PODS_USER" type="String"/>
                <var name="USER_ID" default="-1" type="Int64"/>
                <query>
					DO $$
					DECLARE
					returnId integer;
                    BEGIN
                    INSERT INTO PODS.EVENT_RANGE (EVENT_GUID,FEATURE_ID,STATION_ID_BEGIN,STATION_ID_END,PODS_USER,CREATE_DATE,EFFECTIVE_FROM_DATE,CURRENT_INDICATOR_LF,POSITIONING_TYPE_CL)
                    VALUES('{EVENT_GUID}','INTERF_DET',0,0,NULLIF('{PODS_USER}',''),current_timestamp,current_timestamp,'Y','UNKNOWN')
                    RETURNING EVENT_ID INTO returnId;

                    INSERT INTO PODS.INTERFACE_DETECTOR(EVENT_ID,EVENT_GUID,MANUFACTURER_CL,TYPE_CL,DATE_INSTALLED,DESCRIPTION,SOURCE_GCL,COMMENTS)
                    VALUES(returnId,'{EVENT_GUID}',NULLIF('{MANUFACTURER_CL}',''),NULLIF('{TYPE_CL}',''),'{DATE_INSTALLED}',NULLIF('{DESCRIPTION}',''),NULLIF('{SOURCE_GCL}',''),NULLIF('{COMMENTS}',''));
					END $$;
                </query>
            </dbCommand>
        </insert>
        <update>
            <dbCommand>
				<param name="CLASS_ID" type="String" direction="Input" default="PODS_INTERFACE_DETECTOR" /> 
				<var name="POLICY" default="POLICY.xml#UPDATE_PODS_SEM"  />
                <param name="EVENT_GUID" default="" type="String"/>
                <param name="MANUFACTURER_CL" default="UNKNOWN" type="String"/>
                <param name="TYPE_CL" default="UNKNOWN" type="String"/>
                <param name="DATE_INSTALLED" default="" type="DateTime"/>
                <param name="DESCRIPTION" default="" type="String"/>
                <param name="SOURCE_GCL" default="UNKNOWN" type="String"/>
                <param name="COMMENTS" default="" type="String"/>
                <param name="ID" type="Int64"/>
                <param name="USER_ID" default="-1" type="Int64"/>
                <query>
                    UPDATE PODS.INTERFACE_DETECTOR
                    SET EVENT_GUID=case when :EVENT_GUID is null then EVENT_GUID else :EVENT_GUID end,
                    MANUFACTURER_CL=case when :MANUFACTURER_CL is null then MANUFACTURER_CL else :MANUFACTURER_CL end,
                    TYPE_CL=case when :TYPE_CL is null then TYPE_CL else :TYPE_CL end,
                    DATE_INSTALLED=case when :DATE_INSTALLED is null then DATE_INSTALLED else :DATE_INSTALLED end,
                    DESCRIPTION=case when :DESCRIPTION is null then DESCRIPTION else :DESCRIPTION end,
                    SOURCE_GCL=case when :SOURCE_GCL is null then SOURCE_GCL else :SOURCE_GCL end,
                    COMMENTS=case when :COMMENTS is null then COMMENTS else :COMMENTS end
                    WHERE EVENT_ID = :ID;
                </query>
            </dbCommand>
        </update>
        <delete>
            <dbCommand>
				<var name="CLASS_ID" type="String" direction="Input" default="PODS_INTERFACE_DETECTOR" /> 
				<var name="POLICY" default="POLICY.xml#DELETE_PODS_SEM"  />
                <var name="ID" type="Int64"/>
                <var name="USER_ID" default="-1" type="Int64"/>
                <query>
					DO $$
                    BEGIN
                    UPDATE PODS.EVENT_RANGE
                    SET CURRENT_INDICATOR_LF='N'
                    WHERE EVENT_ID = {ID};

                    DELETE FROM PODS.INTERFACE_DETECTOR
                    WHERE EVENT_ID = {ID};
                    DELETE FROM WEB50.LNK_GATE WHERE LEFT_OBJ_ID = 'PODS_INTERFACE_DETECTOR/'||CAST({ID} AS VARCHAR(30)) OR RIGHT_OBJ_ID = 'PODS_INTERFACE_DETECTOR/'||CAST({ID} AS VARCHAR(30)); END $$;
                </query>
            </dbCommand>
        </delete>
    </data>
    <data table="INTERNAL_COATING" schema="PODS" id="PODS_INTERNAL_COATING" comment="PODS.INTERNAL_COATING">
        <select>
            <dbQuery idField="ID">
                <param name="USER_ID" default="-1" type="Int64"/>
                <var name="FILTER" default="1=1"/>
                <var name="LPU_ACCESS_FILTER" default="SELECT srv_district_id FROM PODS.SRV_DISTRICT_GCL"/>
                <query>
                    SELECT * FROM (SELECT t.EVENT_ID ID, t.event_id, t.event_guid, t.type_scl||'@'||t.subtype_scl TYPE_SCL, t.coating_material_gcl, t.coating_manufacturer_cl, t.product_name, t.date_applied, t.description, t.source_gcl, t."comments"
FROM pods.internal_coating t) d WHERE {FILTER}
                </query>
            </dbQuery>
        </select>
        <insert>
            <dbCommand>
				<var name="CLASS_ID" type="String" direction="Input" default="PODS_INTERNAL_COATING" /> 
				<var name="POLICY" default="POLICY.xml#INSERT_PODS_SEM"  />
                <var name="EVENT_GUID" default="" type="String"/>
                <var name="TYPE_SCL" default="UNKNOWN" type="String"/>
                <var name="SUBTYPE_SCL" default="NONE" type="String"/>
                <var name="COATING_MATERIAL_GCL" default="UNKNOWN" type="String"/>
                <var name="COATING_MANUFACTURER_CL" default="UNKNOWN" type="String"/>
                <var name="PRODUCT_NAME" default="" type="String"/>
                <var name="DATE_APPLIED" default="" type="DateTime"/>
                <var name="DESCRIPTION" default="" type="String"/>
                <var name="SOURCE_GCL" default="UNKNOWN" type="String"/>
                <var name="COMMENTS" default="" type="String"/>
                <var name="ID" type="Int64" direction="Output" default="SELECT max(EVENT_ID) id FROM PODS.EVENT_RANGE"/>
                <var name="PODS_USER" type="String"/>
                <var name="USER_ID" default="-1" type="Int64"/>
                <query>
					DO $$
					DECLARE
					returnId integer;
                    BEGIN
                    INSERT INTO PODS.EVENT_RANGE (EVENT_GUID,FEATURE_ID,STATION_ID_BEGIN,STATION_ID_END,PODS_USER,CREATE_DATE,EFFECTIVE_FROM_DATE,CURRENT_INDICATOR_LF,POSITIONING_TYPE_CL)
                    VALUES('{EVENT_GUID}','INTERNAL_COATING',0,0,NULLIF('{PODS_USER}',''),current_timestamp,current_timestamp,'Y','UNKNOWN')
                    RETURNING EVENT_ID INTO returnId;

                    INSERT INTO PODS.INTERNAL_COATING(EVENT_ID,EVENT_GUID,TYPE_SCL,SUBTYPE_SCL,COATING_MATERIAL_GCL,COATING_MANUFACTURER_CL,PRODUCT_NAME,DATE_APPLIED,DESCRIPTION,SOURCE_GCL,COMMENTS)
                    VALUES(returnId,'{EVENT_GUID}',coalesce(SUBSTR('{TYPE_SCL}',0,strpos('{TYPE_SCL}','@')),'UNKNOWN'),coalesce(SUBSTR('{TYPE_SCL}',strpos('{TYPE_SCL}','@')+1,length('{TYPE_SCL}')-strpos('{TYPE_SCL}','@')),'NONE'),NULLIF('{COATING_MATERIAL_GCL}',''),NULLIF('{COATING_MANUFACTURER_CL}',''),NULLIF('{PRODUCT_NAME}',''),'{DATE_APPLIED}',NULLIF('{DESCRIPTION}',''),NULLIF('{SOURCE_GCL}',''),NULLIF('{COMMENTS}',''));
					END $$;
                </query>
            </dbCommand>
        </insert>
        <update>
            <dbCommand>
				<param name="CLASS_ID" type="String" direction="Input" default="PODS_INTERNAL_COATING" /> 
				<var name="POLICY" default="POLICY.xml#UPDATE_PODS_SEM"  />
                <param name="EVENT_GUID" default="" type="String"/>
                <param name="TYPE_SCL" default="UNKNOWN" type="String"/>
                <param name="SUBTYPE_SCL" default="NONE" type="String"/>
                <param name="COATING_MATERIAL_GCL" default="UNKNOWN" type="String"/>
                <param name="COATING_MANUFACTURER_CL" default="UNKNOWN" type="String"/>
                <param name="PRODUCT_NAME" default="" type="String"/>
                <param name="DATE_APPLIED" default="" type="DateTime"/>
                <param name="DESCRIPTION" default="" type="String"/>
                <param name="SOURCE_GCL" default="UNKNOWN" type="String"/>
                <param name="COMMENTS" default="" type="String"/>
                <param name="ID" type="Int64"/>
                <param name="USER_ID" default="-1" type="Int64"/>
                <query>
                    UPDATE PODS.INTERNAL_COATING
                    SET 
					EVENT_GUID=case when :EVENT_GUID is null then EVENT_GUID else :EVENT_GUID end,
					TYPE_SCL=coalesce(SUBSTR(:TYPE_SCL,0,strpos(:TYPE_SCL,'@')),'UNKNOWN'),SUBTYPE_SCL=coalesce(SUBSTR(:TYPE_SCL,strpos(:TYPE_SCL,'@')+1,length(:TYPE_SCL)-strpos(:TYPE_SCL,'@')),'NONE'),
                    COATING_MATERIAL_GCL=case when :COATING_MATERIAL_GCL is null then COATING_MATERIAL_GCL else :COATING_MATERIAL_GCL end,
					COATING_MANUFACTURER_CL=case when :COATING_MANUFACTURER_CL is null then COATING_MANUFACTURER_CL else :COATING_MANUFACTURER_CL end,
                    PRODUCT_NAME=case when :PRODUCT_NAME is null then PRODUCT_NAME else :PRODUCT_NAME end,
                    DATE_APPLIED=case when :DATE_APPLIED is null then DATE_APPLIED else :DATE_APPLIED end,
                    DESCRIPTION=case when :DESCRIPTION is null then DESCRIPTION else :DESCRIPTION end,
                    SOURCE_GCL=case when :SOURCE_GCL is null then SOURCE_GCL else :SOURCE_GCL end,
                    COMMENTS=case when :COMMENTS is null then COMMENTS else :COMMENTS end
                    WHERE EVENT_ID = :ID;
                </query>
            </dbCommand>
        </update>
        <delete>
            <dbCommand>
				<var name="CLASS_ID" type="String" direction="Input" default="PODS_INTERNAL_COATING" /> 
				<var name="POLICY" default="POLICY.xml#DELETE_PODS_SEM"  />
                <var name="ID" type="Int64"/>
                <var name="USER_ID" default="-1" type="Int64"/>
                <query>
					DO $$
                    BEGIN
                    UPDATE PODS.EVENT_RANGE
                    SET CURRENT_INDICATOR_LF='N'
                    WHERE EVENT_ID = {ID};

                    DELETE FROM PODS.INTERNAL_COATING
                    WHERE EVENT_ID = {ID};
                    DELETE FROM WEB50.LNK_GATE WHERE LEFT_OBJ_ID = 'PODS_INTERNAL_COATING/'||CAST({ID} AS VARCHAR(30)) OR RIGHT_OBJ_ID = 'PODS_INTERNAL_COATING/'||CAST({ID} AS VARCHAR(30)); END $$;
                </query>
            </dbCommand>
        </delete>
    </data>
    <data table="JUNCTION_BOX" schema="PODS" id="PODS_JUNCTION_BOX" comment="PODS.JUNCTION_BOX">
        <select>
            <dbQuery idField="ID">
                <param name="USER_ID" default="-1" type="Int64"/>
                <var name="FILTER" default="1=1"/>
                <var name="LPU_ACCESS_FILTER" default="SELECT srv_district_id FROM PODS.SRV_DISTRICT_GCL"/>
                <query>
                    SELECT * FROM (SELECT EVENT_ID ID, t.* FROM PODS.JUNCTION_BOX t) d WHERE {FILTER}
                </query>
            </dbQuery>
        </select>
        <insert>
            <dbCommand>
				<var name="CLASS_ID" type="String" direction="Input" default="PODS_JUNCTION_BOX" /> 
				<var name="POLICY" default="POLICY.xml#INSERT_PODS_SEM"  />
                <var name="EVENT_GUID" default="" type="String"/>
                <var name="BOX_SIZE" default="" type="String"/>
                <var name="WEATHERPROOF" default="" type="String"/>
                <var name="NEMA_RATING" default="" type="String"/>
                <var name="DATE_INSTALLED" default="" type="DateTime"/>
                <var name="DESCRIPTION" default="" type="String"/>
                <var name="POLE" default="" type="String"/>
                <var name="NUMBER_OF_WIRES" default="NULL" type="Decimal"/>
                <var name="NAME" default="" type="String"/>
                <var name="ANODE_CONNECTED_LF" default="" type="String"/>
                <var name="RECTIFIER_CONNECTED_LF" default="" type="String"/>
                <var name="GROUND_BED_CONNECTED_LF" default="" type="String"/>
                <var name="SOURCE_GCL" default="UNKNOWN" type="String"/>
                <var name="COMMENTS" default="" type="String"/>
                <var name="ID" type="Int64" direction="Output" default="SELECT max(EVENT_ID) id FROM PODS.EVENT_RANGE"/>
                <var name="PODS_USER" type="String"/>
                <var name="USER_ID" default="-1" type="Int64"/>
                <query>
					DO $$
					DECLARE
					returnId integer;
                    BEGIN
                    INSERT INTO PODS.EVENT_RANGE (EVENT_GUID,FEATURE_ID,STATION_ID_BEGIN,STATION_ID_END,PODS_USER,CREATE_DATE,EFFECTIVE_FROM_DATE,CURRENT_INDICATOR_LF,POSITIONING_TYPE_CL)
                    VALUES('{EVENT_GUID}','JUNCTION_BOX',0,0,NULLIF('{PODS_USER}',''),current_timestamp,current_timestamp,'Y','UNKNOWN')
                    RETURNING EVENT_ID INTO returnId;

                    INSERT INTO PODS.JUNCTION_BOX(EVENT_ID,EVENT_GUID,BOX_SIZE,WEATHERPROOF,NEMA_RATING,DATE_INSTALLED,DESCRIPTION,POLE,NUMBER_OF_WIRES,NAME,ANODE_CONNECTED_LF,RECTIFIER_CONNECTED_LF,GROUND_BED_CONNECTED_LF,SOURCE_GCL,COMMENTS)
                    VALUES(returnId,'{EVENT_GUID}',NULLIF('{BOX_SIZE}',''),'{WEATHERPROOF}',NULLIF('{NEMA_RATING}',''),'{DATE_INSTALLED}',NULLIF('{DESCRIPTION}',''),NULLIF('{POLE}',''),{NUMBER_OF_WIRES},NULLIF('{NAME}',''),'{ANODE_CONNECTED_LF}','{RECTIFIER_CONNECTED_LF}','{GROUND_BED_CONNECTED_LF}',NULLIF('{SOURCE_GCL}',''),NULLIF('{COMMENTS}',''));
					END $$;
                </query>
            </dbCommand>
        </insert>
        <update>
            <dbCommand>
				<param name="CLASS_ID" type="String" direction="Input" default="PODS_JUNCTION_BOX" /> 
				<var name="POLICY" default="POLICY.xml#UPDATE_PODS_SEM"  />
                <param name="EVENT_GUID" default="" type="String"/>
                <param name="BOX_SIZE" default="" type="String"/>
                <param name="WEATHERPROOF" default="" type="String"/>
                <param name="NEMA_RATING" default="" type="String"/>
                <param name="DATE_INSTALLED" default="" type="DateTime"/>
                <param name="DESCRIPTION" default="" type="String"/>
                <param name="POLE" default="" type="String"/>
                <param name="NUMBER_OF_WIRES" default="NULL" type="Decimal"/>
                <param name="NAME" default="" type="String"/>
                <param name="ANODE_CONNECTED_LF" default="" type="String"/>
                <param name="RECTIFIER_CONNECTED_LF" default="" type="String"/>
                <param name="GROUND_BED_CONNECTED_LF" default="" type="String"/>
                <param name="SOURCE_GCL" default="UNKNOWN" type="String"/>
                <param name="COMMENTS" default="" type="String"/>
                <param name="ID" type="Int64"/>
                <param name="USER_ID" default="-1" type="Int64"/>
                <query>
                    UPDATE PODS.JUNCTION_BOX
                    SET 
					EVENT_GUID=case when :EVENT_GUID is null then EVENT_GUID else :EVENT_GUID end,
					BOX_SIZE=case when :BOX_SIZE is null then BOX_SIZE else :BOX_SIZE end,
					WEATHERPROOF=case when :WEATHERPROOF is null then WEATHERPROOF else :WEATHERPROOF end,
					NEMA_RATING=case when :NEMA_RATING is null then NEMA_RATING else :NEMA_RATING end,
                    DATE_INSTALLED=case when :DATE_INSTALLED is null then DATE_INSTALLED else :DATE_INSTALLED end,
                    DESCRIPTION=case when :DESCRIPTION is null then DESCRIPTION else :DESCRIPTION end,
					POLE=case when :POLE is null then POLE else :POLE end,
					NUMBER_OF_WIRES=case when :NUMBER_OF_WIRES is null then NUMBER_OF_WIRES else :NUMBER_OF_WIRES end,
					NAME=case when :NAME is null then NAME else :NAME end,
					ANODE_CONNECTED_LF=case when :ANODE_CONNECTED_LF is null then ANODE_CONNECTED_LF else :ANODE_CONNECTED_LF end,
					RECTIFIER_CONNECTED_LF=case when :RECTIFIER_CONNECTED_LF is null then RECTIFIER_CONNECTED_LF else :RECTIFIER_CONNECTED_LF end,
					GROUND_BED_CONNECTED_LF=case when :GROUND_BED_CONNECTED_LF is null then GROUND_BED_CONNECTED_LF else :GROUND_BED_CONNECTED_LF end,
                    SOURCE_GCL=case when :SOURCE_GCL is null then SOURCE_GCL else :SOURCE_GCL end,
                    COMMENTS=case when :COMMENTS is null then COMMENTS else :COMMENTS end
                    WHERE EVENT_ID = :ID;
                </query>
            </dbCommand>
        </update>
        <delete>
            <dbCommand>
				<var name="CLASS_ID" type="String" direction="Input" default="PODS_JUNCTION_BOX" /> 
				<var name="POLICY" default="POLICY.xml#DELETE_PODS_SEM"  />
                <var name="ID" type="Int64"/>
                <var name="USER_ID" default="-1" type="Int64"/>
                <query>
					DO $$
                    BEGIN
                    UPDATE PODS.EVENT_RANGE
                    SET CURRENT_INDICATOR_LF='N'
                    WHERE EVENT_ID = {ID};

                    DELETE FROM PODS.JUNCTION_BOX
                    WHERE EVENT_ID = {ID};
                    DELETE FROM WEB50.LNK_GATE WHERE LEFT_OBJ_ID = 'PODS_JUNCTION_BOX/'||CAST({ID} AS VARCHAR(30)) OR RIGHT_OBJ_ID = 'PODS_JUNCTION_BOX/'||CAST({ID} AS VARCHAR(30)); END $$;
                </query>
            </dbCommand>
        </delete>
    </data>
    <data table="LAND_USE" schema="PODS" id="PODS_LAND_USE" comment="PODS.LAND_USE">
        <select>
            <dbQuery idField="ID">
                <param name="USER_ID" default="-1" type="Int64"/>
                <var name="FILTER" default="1=1"/>
                <var name="LPU_ACCESS_FILTER" default="SELECT srv_district_id FROM PODS.SRV_DISTRICT_GCL"/>
                <query>
                    SELECT * FROM (SELECT EVENT_ID ID, t.* FROM PODS.LAND_USE t) d WHERE {FILTER}
                </query>
            </dbQuery>
        </select>
        <insert>
            <dbCommand>
				<var name="CLASS_ID" type="String" direction="Input" default="PODS_LAND_USE" /> 
				<var name="POLICY" default="POLICY.xml#INSERT_PODS_SEM"  />
                <var name="EVENT_GUID" default="" type="String"/>
                <var name="USE_CL" default="UNKNOWN" type="String"/>
                <var name="DESCRIPTION" default="" type="String"/>
                <var name="SOURCE_GCL" default="UNKNOWN" type="String"/>
                <var name="COMMENTS" default="" type="String"/>
                <var name="ID" type="Int64" direction="Output" default="SELECT max(EVENT_ID) id FROM PODS.EVENT_RANGE"/>
                <var name="PODS_USER" type="String"/>
                <var name="USER_ID" default="-1" type="Int64"/>
                <query>
					DO $$
					DECLARE
					returnId integer;
                    BEGIN
                    INSERT INTO PODS.EVENT_RANGE (EVENT_GUID,FEATURE_ID,STATION_ID_BEGIN,STATION_ID_END,PODS_USER,CREATE_DATE,EFFECTIVE_FROM_DATE,CURRENT_INDICATOR_LF,POSITIONING_TYPE_CL)
                    VALUES('{EVENT_GUID}','LAND_USE',0,0,NULLIF('{PODS_USER}',''),current_timestamp,current_timestamp,'Y','UNKNOWN')
                    RETURNING EVENT_ID INTO returnId;

                    INSERT INTO PODS.LAND_USE(EVENT_ID,EVENT_GUID,USE_CL,DESCRIPTION,SOURCE_GCL,COMMENTS)
                    VALUES(returnId,'{EVENT_GUID}',NULLIF('{USE_CL}',''),NULLIF('{DESCRIPTION}',''),NULLIF('{SOURCE_GCL}',''),NULLIF('{COMMENTS}',''));
					END $$;
                </query>
            </dbCommand>
        </insert>
        <update>
            <dbCommand>
				<param name="CLASS_ID" type="String" direction="Input" default="PODS_LAND_USE" /> 
				<var name="POLICY" default="POLICY.xml#UPDATE_PODS_SEM"  />
                <param name="EVENT_GUID" default="" type="String"/>
                <param name="USE_CL" default="UNKNOWN" type="String"/>
                <param name="DESCRIPTION" default="" type="String"/>
                <param name="SOURCE_GCL" default="UNKNOWN" type="String"/>
                <param name="COMMENTS" default="" type="String"/>
                <param name="ID" type="Int64"/>
                <param name="USER_ID" default="-1" type="Int64"/>
                <query>
                    UPDATE PODS.LAND_USE
                    SET 
					EVENT_GUID=case when :EVENT_GUID is null then EVENT_GUID else :EVENT_GUID end,
					USE_CL=case when :USE_CL is null then USE_CL else :USE_CL end,
                    DESCRIPTION=case when :DESCRIPTION is null then DESCRIPTION else :DESCRIPTION end,
                    SOURCE_GCL=case when :SOURCE_GCL is null then SOURCE_GCL else :SOURCE_GCL end,
                    COMMENTS=case when :COMMENTS is null then COMMENTS else :COMMENTS end
                    WHERE EVENT_ID = :ID;
                </query>
            </dbCommand>
        </update>
        <delete>
            <dbCommand>
				<var name="CLASS_ID" type="String" direction="Input" default="PODS_LAND_USE" /> 
				<var name="POLICY" default="POLICY.xml#DELETE_PODS_SEM"  />
                <var name="ID" type="Int64"/>
                <var name="USER_ID" default="-1" type="Int64"/>
                <query>
					DO $$
                    BEGIN
                    UPDATE PODS.EVENT_RANGE
                    SET CURRENT_INDICATOR_LF='N'
                    WHERE EVENT_ID = {ID};

                    DELETE FROM PODS.LAND_USE
                    WHERE EVENT_ID = {ID};
                    DELETE FROM WEB50.LNK_GATE WHERE LEFT_OBJ_ID = 'PODS_LAND_USE/'||CAST({ID} AS VARCHAR(30)) OR RIGHT_OBJ_ID = 'PODS_LAND_USE/'||CAST({ID} AS VARCHAR(30)); END $$;
                </query>
            </dbCommand>
        </delete>
    </data>
    <data table="LAUNCHER_RECEIVER" schema="PODS" id="PODS_LAUNCHER_RECEIVER" comment="PODS.LAUNCHER_RECEIVER">
        <select>
            <dbQuery idField="ID">
                <param name="USER_ID" default="-1" type="Int64"/>
                <var name="FILTER" default="1=1"/>
                <var name="LPU_ACCESS_FILTER" default="SELECT srv_district_id FROM PODS.SRV_DISTRICT_GCL"/>
                <query>
                    SELECT * FROM (SELECT EVENT_ID ID, t.* FROM PODS.LAUNCHER_RECEIVER t) d WHERE {FILTER}
                </query>
            </dbQuery>
        </select>
        <insert>
            <dbCommand>
				<var name="CLASS_ID" type="String" direction="Input" default="PODS_LAUNCHER_RECEIVER" /> 
				<var name="POLICY" default="POLICY.xml#INSERT_PODS_SEM"  />
                <var name="EVENT_GUID" default="" type="String"/>
                <var name="TYPE_CL" default="UNKNOWN" type="String"/>
                <var name="NAME" default="" type="String"/>
                <var name="DATE_INSTALLED" default="" type="DateTime"/>
                <var name="DESCRIPTION" default="" type="String"/>
                <var name="CLOSURE_VALVE_LENGTH" default="NULL" type="Decimal"/>
                <var name="CLOSURE_REDUCER_LENGTH" default="NULL" type="Decimal"/>
                <var name="TRAY_LENGTH" default="NULL" type="Decimal"/>
                <var name="SAG_RADIUS" default="NULL" type="Decimal"/>
                <var name="OVERBEND_RADIUS" default="NULL" type="Decimal"/>
                <var name="WORKSHOP_NEAR_TRAP_LF" default="" type="String"/>
                <var name="TRAP_PRESSURE_RATING" default="NULL" type="Decimal"/>
                <var name="TRAP_CLOSURE_TYPE_CL" default="UNKNOWN" type="String"/>
                <var name="TRAP_STATUS_CL" default="UNKNOWN" type="String"/>
                <var name="ELECTRICITY_AVAILABLE_LF" default="" type="String"/>
                <var name="HOIST_AVAILABLE_LF" default="" type="String"/>
                <var name="TRAP_ANGLE" default="NULL" type="Decimal"/>
                <var name="TRAP_HEIGHT" default="NULL" type="Decimal"/>
                <var name="TRAP_VALVE_DIAMETER_GCL" default="0" type="Decimal"/>
                <var name="TRAP_VALVE_TYPE_GCL" default="UNKNOWN" type="String"/>
                <var name="KICKER_BYPASS_LOCATION_CL" default="UNKNOWN" type="String"/>
                <var name="KICKER_BYPASS_DIAMETER_GCL" default="0" type="Decimal"/>
                <var name="BRIDLE_DIAMETER_GCL" default="0" type="Decimal"/>
                <var name="REDUCER_VALVE_LENGTH" default="NULL" type="Decimal"/>
                <var name="REDUCER_WALL_THICKNESS_GCL" default="0" type="Decimal"/>
                <var name="REDUCER_TYPE_GCL" default="UNKNOWN" type="String"/>
                <var name="REDUCER_LENGTH" default="NULL" type="Decimal"/>
                <var name="AXIAL_CLEARANCE_WIDTH" default="NULL" type="Decimal"/>
                <var name="AXIAL_CLEARANCE_LENGTH" default="NULL" type="Decimal"/>
                <var name="OVERBORE_DIAMETER_GCL" default="0" type="Decimal"/>
                <var name="CLOSURE_BRIDLE_LENGTH" default="NULL" type="Decimal"/>
                <var name="SOURCE_GCL" default="UNKNOWN" type="String"/>
                <var name="COMMENTS" default="" type="String"/>
                <var name="ID" type="Int64" direction="Output" default="SELECT max(EVENT_ID) id FROM PODS.EVENT_RANGE"/>
                <var name="PODS_USER" type="String"/>
                <var name="USER_ID" default="-1" type="Int64"/>
                <query>
					DO $$
					DECLARE
					returnId integer;
                    BEGIN
                    INSERT INTO PODS.EVENT_RANGE (EVENT_GUID,FEATURE_ID,STATION_ID_BEGIN,STATION_ID_END,PODS_USER,CREATE_DATE,EFFECTIVE_FROM_DATE,CURRENT_INDICATOR_LF,POSITIONING_TYPE_CL)
                    VALUES('{EVENT_GUID}','LAUNC_REC',0,0,NULLIF('{PODS_USER}',''),current_timestamp,current_timestamp,'Y','UNKNOWN')
                    RETURNING EVENT_ID INTO returnId;

                    INSERT INTO PODS.LAUNCHER_RECEIVER(EVENT_ID,EVENT_GUID,TYPE_CL,NAME,DATE_INSTALLED,DESCRIPTION,CLOSURE_VALVE_LENGTH,CLOSURE_REDUCER_LENGTH,TRAY_LENGTH,SAG_RADIUS,OVERBEND_RADIUS,WORKSHOP_NEAR_TRAP_LF,TRAP_PRESSURE_RATING,TRAP_CLOSURE_TYPE_CL,TRAP_STATUS_CL,ELECTRICITY_AVAILABLE_LF,HOIST_AVAILABLE_LF,TRAP_ANGLE,TRAP_HEIGHT,TRAP_VALVE_DIAMETER_GCL,TRAP_VALVE_TYPE_GCL,KICKER_BYPASS_LOCATION_CL,KICKER_BYPASS_DIAMETER_GCL,BRIDLE_DIAMETER_GCL,REDUCER_VALVE_LENGTH,REDUCER_WALL_THICKNESS_GCL,REDUCER_TYPE_GCL,REDUCER_LENGTH,AXIAL_CLEARANCE_WIDTH,AXIAL_CLEARANCE_LENGTH,OVERBORE_DIAMETER_GCL,CLOSURE_BRIDLE_LENGTH,SOURCE_GCL,COMMENTS)
                    VALUES(returnId,'{EVENT_GUID}',NULLIF('{TYPE_CL}',''),NULLIF('{NAME}',''),'{DATE_INSTALLED}',NULLIF('{DESCRIPTION}',''),{CLOSURE_VALVE_LENGTH},{CLOSURE_REDUCER_LENGTH},{TRAY_LENGTH},{SAG_RADIUS},{OVERBEND_RADIUS},'{WORKSHOP_NEAR_TRAP_LF}',{TRAP_PRESSURE_RATING},NULLIF('{TRAP_CLOSURE_TYPE_CL}',''),NULLIF('{TRAP_STATUS_CL}',''),'{ELECTRICITY_AVAILABLE_LF}','{HOIST_AVAILABLE_LF}',{TRAP_ANGLE},{TRAP_HEIGHT},{TRAP_VALVE_DIAMETER_GCL},NULLIF('{TRAP_VALVE_TYPE_GCL}',''),NULLIF('{KICKER_BYPASS_LOCATION_CL}',''),{KICKER_BYPASS_DIAMETER_GCL},{BRIDLE_DIAMETER_GCL},{REDUCER_VALVE_LENGTH},{REDUCER_WALL_THICKNESS_GCL},NULLIF('{REDUCER_TYPE_GCL}',''),{REDUCER_LENGTH},{AXIAL_CLEARANCE_WIDTH},{AXIAL_CLEARANCE_LENGTH},{OVERBORE_DIAMETER_GCL},{CLOSURE_BRIDLE_LENGTH},NULLIF('{SOURCE_GCL}',''),NULLIF('{COMMENTS}',''));
					END $$;
                </query>
            </dbCommand>
        </insert>
        <update>
            <dbCommand>
				<param name="CLASS_ID" type="String" direction="Input" default="PODS_LAUNCHER_RECEIVER" /> 
				<var name="POLICY" default="POLICY.xml#UPDATE_PODS_SEM"  />
                <param name="EVENT_GUID" default="" type="String"/>
                <param name="TYPE_CL" default="UNKNOWN" type="String"/>
                <param name="NAME" default="" type="String"/>
                <param name="DATE_INSTALLED" default="" type="DateTime"/>
                <param name="DESCRIPTION" default="" type="String"/>
                <param name="CLOSURE_VALVE_LENGTH" default="NULL" type="Decimal"/>
                <param name="CLOSURE_REDUCER_LENGTH" default="NULL" type="Decimal"/>
                <param name="TRAY_LENGTH" default="NULL" type="Decimal"/>
                <param name="SAG_RADIUS" default="NULL" type="Decimal"/>
                <param name="OVERBEND_RADIUS" default="NULL" type="Decimal"/>
                <param name="WORKSHOP_NEAR_TRAP_LF" default="" type="String"/>
                <param name="TRAP_PRESSURE_RATING" default="NULL" type="Decimal"/>
                <param name="TRAP_CLOSURE_TYPE_CL" default="UNKNOWN" type="String"/>
                <param name="TRAP_STATUS_CL" default="UNKNOWN" type="String"/>
                <param name="ELECTRICITY_AVAILABLE_LF" default="" type="String"/>
                <param name="HOIST_AVAILABLE_LF" default="" type="String"/>
                <param name="TRAP_ANGLE" default="NULL" type="Decimal"/>
                <param name="TRAP_HEIGHT" default="NULL" type="Decimal"/>
                <param name="TRAP_VALVE_DIAMETER_GCL" default="0" type="Decimal"/>
                <param name="TRAP_VALVE_TYPE_GCL" default="UNKNOWN" type="String"/>
                <param name="KICKER_BYPASS_LOCATION_CL" default="UNKNOWN" type="String"/>
                <param name="KICKER_BYPASS_DIAMETER_GCL" default="0" type="Decimal"/>
                <param name="BRIDLE_DIAMETER_GCL" default="0" type="Decimal"/>
                <param name="REDUCER_VALVE_LENGTH" default="NULL" type="Decimal"/>
                <param name="REDUCER_WALL_THICKNESS_GCL" default="0" type="Decimal"/>
                <param name="REDUCER_TYPE_GCL" default="UNKNOWN" type="String"/>
                <param name="REDUCER_LENGTH" default="NULL" type="Decimal"/>
                <param name="AXIAL_CLEARANCE_WIDTH" default="NULL" type="Decimal"/>
                <param name="AXIAL_CLEARANCE_LENGTH" default="NULL" type="Decimal"/>
                <param name="OVERBORE_DIAMETER_GCL" default="0" type="Decimal"/>
                <param name="CLOSURE_BRIDLE_LENGTH" default="NULL" type="Decimal"/>
                <param name="SOURCE_GCL" default="UNKNOWN" type="String"/>
                <param name="COMMENTS" default="" type="String"/>
                <param name="ID" type="Int64"/>
                <param name="USER_ID" default="-1" type="Int64"/>
                <query>
                    UPDATE PODS.LAUNCHER_RECEIVER
                    SET 
					EVENT_GUID=case when :EVENT_GUID is null then EVENT_GUID else :EVENT_GUID end,
                    TYPE_CL=case when :TYPE_CL is null then TYPE_CL else :TYPE_CL end,
					NAME=case when :NAME is null then NAME else :NAME end,
                    DATE_INSTALLED=case when :DATE_INSTALLED is null then DATE_INSTALLED else :DATE_INSTALLED end,
                    DESCRIPTION=case when :DESCRIPTION is null then DESCRIPTION else :DESCRIPTION end,
                    CLOSURE_VALVE_LENGTH=case when :CLOSURE_VALVE_LENGTH is null then CLOSURE_VALVE_LENGTH else :CLOSURE_VALVE_LENGTH end,
                    CLOSURE_REDUCER_LENGTH=case when :CLOSURE_REDUCER_LENGTH is null then CLOSURE_REDUCER_LENGTH else :CLOSURE_REDUCER_LENGTH end,
                    TRAY_LENGTH=case when :TRAY_LENGTH is null then TRAY_LENGTH else :TRAY_LENGTH end,
                    SAG_RADIUS=case when :SAG_RADIUS is null then SAG_RADIUS else :SAG_RADIUS end,
                    OVERBEND_RADIUS=case when :OVERBEND_RADIUS is null then OVERBEND_RADIUS else :OVERBEND_RADIUS end,
                    WORKSHOP_NEAR_TRAP_LF=case when :WORKSHOP_NEAR_TRAP_LF is null then WORKSHOP_NEAR_TRAP_LF else :WORKSHOP_NEAR_TRAP_LF end,
                    TRAP_PRESSURE_RATING=case when :TRAP_PRESSURE_RATING is null then TRAP_PRESSURE_RATING else :TRAP_PRESSURE_RATING end,
                    TRAP_CLOSURE_TYPE_CL=case when :TRAP_CLOSURE_TYPE_CL is null then TRAP_CLOSURE_TYPE_CL else :TRAP_CLOSURE_TYPE_CL end,
                    TRAP_STATUS_CL=case when :TRAP_STATUS_CL is null then TRAP_STATUS_CL else :TRAP_STATUS_CL end,
                    ELECTRICITY_AVAILABLE_LF=case when :ELECTRICITY_AVAILABLE_LF is null then ELECTRICITY_AVAILABLE_LF else :ELECTRICITY_AVAILABLE_LF end,
                    HOIST_AVAILABLE_LF=case when :HOIST_AVAILABLE_LF is null then HOIST_AVAILABLE_LF else :HOIST_AVAILABLE_LF end,
                    TRAP_ANGLE=case when :TRAP_ANGLE is null then TRAP_ANGLE else :TRAP_ANGLE end,
                    TRAP_HEIGHT=case when :TRAP_HEIGHT is null then TRAP_HEIGHT else :TRAP_HEIGHT end,
                    TRAP_VALVE_DIAMETER_GCL=case when :TRAP_VALVE_DIAMETER_GCL is null then TRAP_VALVE_DIAMETER_GCL else :TRAP_VALVE_DIAMETER_GCL end,
                    TRAP_VALVE_TYPE_GCL=case when :TRAP_VALVE_TYPE_GCL is null then TRAP_VALVE_TYPE_GCL else :TRAP_VALVE_TYPE_GCL end,
                    KICKER_BYPASS_LOCATION_CL=case when :KICKER_BYPASS_LOCATION_CL is null then KICKER_BYPASS_LOCATION_CL else :KICKER_BYPASS_LOCATION_CL end,
                    KICKER_BYPASS_DIAMETER_GCL=case when :KICKER_BYPASS_DIAMETER_GCL is null then KICKER_BYPASS_DIAMETER_GCL else :KICKER_BYPASS_DIAMETER_GCL end,
                    BRIDLE_DIAMETER_GCL=case when :BRIDLE_DIAMETER_GCL is null then BRIDLE_DIAMETER_GCL else :BRIDLE_DIAMETER_GCL end,
                    REDUCER_VALVE_LENGTH=case when :REDUCER_VALVE_LENGTH is null then REDUCER_VALVE_LENGTH else :REDUCER_VALVE_LENGTH end,
                    REDUCER_WALL_THICKNESS_GCL=case when :REDUCER_WALL_THICKNESS_GCL is null then REDUCER_WALL_THICKNESS_GCL else :REDUCER_WALL_THICKNESS_GCL end,
                    REDUCER_TYPE_GCL=case when :REDUCER_TYPE_GCL is null then REDUCER_TYPE_GCL else :REDUCER_TYPE_GCL end,
                    REDUCER_LENGTH=case when :REDUCER_LENGTH is null then REDUCER_LENGTH else :REDUCER_LENGTH end,
                    AXIAL_CLEARANCE_WIDTH=case when :AXIAL_CLEARANCE_WIDTH is null then AXIAL_CLEARANCE_WIDTH else :AXIAL_CLEARANCE_WIDTH end,
                    AXIAL_CLEARANCE_LENGTH=case when :AXIAL_CLEARANCE_LENGTH is null then AXIAL_CLEARANCE_LENGTH else :AXIAL_CLEARANCE_LENGTH end,
                    OVERBORE_DIAMETER_GCL=case when :OVERBORE_DIAMETER_GCL is null then OVERBORE_DIAMETER_GCL else :OVERBORE_DIAMETER_GCL end,
                    CLOSURE_BRIDLE_LENGTH=case when :CLOSURE_BRIDLE_LENGTH is null then CLOSURE_BRIDLE_LENGTH else :CLOSURE_BRIDLE_LENGTH end,
                    SOURCE_GCL=case when :SOURCE_GCL is null then SOURCE_GCL else :SOURCE_GCL end,
                    COMMENTS=case when :COMMENTS is null then COMMENTS else :COMMENTS end
                    WHERE EVENT_ID = :ID;
                </query>
            </dbCommand>
        </update>
        <delete>
            <dbCommand>
				<var name="CLASS_ID" type="String" direction="Input" default="PODS_LAUNCHER_RECEIVER" /> 
				<var name="POLICY" default="POLICY.xml#DELETE_PODS_SEM"  />
                <var name="ID" type="Int64"/>
                <var name="USER_ID" default="-1" type="Int64"/>
                <query>
					DO $$
                    BEGIN
                    UPDATE PODS.EVENT_RANGE
                    SET CURRENT_INDICATOR_LF='N'
                    WHERE EVENT_ID = {ID};

                    UPDATE PODS.ILI_INSPECTION_RANGE
                    SET RECEIVER_EVENT_ID = NULL
                    WHERE RECEIVER_EVENT_ID = {ID};

                    UPDATE PODS.ILI_INSPECTION_RANGE
                    SET LAUNCHER_EVENT_ID = NULL
                    WHERE LAUNCHER_EVENT_ID = {ID};

                    DELETE
                    FROM PODS.LAUNCHER_RECEIVER
                    WHERE EVENT_ID = {ID};

                    DELETE
                    FROM WEB50.LNK_GATE
                    WHERE LEFT_OBJ_ID = 'PODS_LAUNCHER_RECEIVER/'||CAST({ID} AS VARCHAR(30))
                    OR RIGHT_OBJ_ID = 'PODS_LAUNCHER_RECEIVER/'||CAST({ID} AS VARCHAR(30));

                    END $$;
                </query>
            </dbCommand>
        </delete>
    </data>
    <data table="LEAK_HISTORY" schema="PODS" id="PODS_LEAK_HISTORY" comment="PODS.LEAK_HISTORY">
        <select>
            <dbQuery idField="ID">
                <param name="USER_ID" default="-1" type="Int64"/>
                <var name="FILTER" default="1=1"/>
                <var name="LPU_ACCESS_FILTER" default="SELECT srv_district_id FROM PODS.SRV_DISTRICT_GCL"/>
                <query>
                    SELECT * FROM (SELECT EVENT_ID ID, t.* FROM PODS.LEAK_HISTORY t) d WHERE {FILTER}
                </query>
            </dbQuery>
        </select>
        <insert>
            <dbCommand>
				<var name="CLASS_ID" type="String" direction="Input" default="PODS_LEAK_HISTORY" /> 
				<var name="POLICY" default="POLICY.xml#INSERT_PODS_SEM"  />
                <var name="LEAK_GUID" default="" type="String"/>
                <var name="EVENT_GUID" default="" type="String"/>
                <var name="LEAK_DATE" default="" type="DateTime"/>
                <var name="TELEPHONIC_REPORT_DATE" default="" type="DateTime"/>
                <var name="NRC_REPORT_NUMBER" default="NULL" type="Decimal"/>
                <var name="ENVIRONMENTAL_REMEDIATION_COST" default="NULL" type="Decimal"/>
                <var name="CITY" default="" type="String"/>
                <var name="STATE_GCL" default="UNKNOWN" type="String"/>
                <var name="ZIP" default="NULL" type="Decimal"/>
                <var name="LEAK_REPORT_DATE" default="" type="DateTime"/>
                <var name="PRODUCT_TYPE_SCL" default="" type="String"/>
                <var name="PRODUCT_SUBTYPE_SCL" default="" type="String"/>
                <var name="VOLUME_LOST" default="NULL" type="Decimal"/>
                <var name="PRIMARY_CAUSE_CL" default="UNKNOWN" type="String"/>
                <var name="LOST_PRODUCT_COST" default="NULL" type="Decimal"/>
                <var name="BUSINESS_INTERRUPTION_COST" default="NULL" type="Decimal"/>
                <var name="DESCRIPTION" default="" type="String"/>
                <var name="SOURCE_GCL" default="UNKNOWN" type="String"/>
                <var name="COMMENTS" default="" type="String"/>
                <var name="ID" type="Int64" direction="Output" default="SELECT max(EVENT_ID) id FROM PODS.EVENT_RANGE"/>
                <var name="PODS_USER" type="String"/>
                <var name="USER_ID" default="-1" type="Int64"/>
                <query>
					DO $$
					DECLARE
					returnId integer;
                    BEGIN
                    INSERT INTO PODS.EVENT_RANGE (EVENT_GUID,FEATURE_ID,STATION_ID_BEGIN,STATION_ID_END,PODS_USER,CREATE_DATE,EFFECTIVE_FROM_DATE,CURRENT_INDICATOR_LF,POSITIONING_TYPE_CL)
                    VALUES('{EVENT_GUID}','LEAK_HISTORY',0,0,NULLIF('{PODS_USER}',''),current_timestamp,current_timestamp,'Y','UNKNOWN')
                    RETURNING EVENT_ID INTO returnId;

                    INSERT INTO PODS.LEAK_HISTORY(EVENT_ID,LEAK_GUID,EVENT_GUID,LEAK_DATE,TELEPHONIC_REPORT_DATE,NRC_REPORT_NUMBER,ENVIRONMENTAL_REMEDIATION_COST,CITY,STATE_GCL,ZIP,LEAK_REPORT_DATE,PRODUCT_TYPE_SCL,PRODUCT_SUBTYPE_SCL,VOLUME_LOST,PRIMARY_CAUSE_CL,LOST_PRODUCT_COST,BUSINESS_INTERRUPTION_COST,DESCRIPTION,SOURCE_GCL,COMMENTS)
                    VALUES(returnId,'{LEAK_GUID}','{EVENT_GUID}','{LEAK_DATE}','{TELEPHONIC_REPORT_DATE}',{NRC_REPORT_NUMBER},{ENVIRONMENTAL_REMEDIATION_COST},NULLIF('{CITY}',''),NULLIF('{STATE_GCL}',''),{ZIP},'{LEAK_REPORT_DATE}',coalesce(SUBSTR(NULLIF('{PRODUCT_TYPE_SCL}',''),0,strpos(NULLIF('{PRODUCT_TYPE_SCL}',''),'@')),'UNKNOWN'),coalesce(SUBSTR(NULLIF('{PRODUCT_TYPE_SCL}',''),strpos(NULLIF('{PRODUCT_TYPE_SCL}',''),'@')+1,length(NULLIF('{PRODUCT_TYPE_SCL}',''))-strpos(NULLIF('{PRODUCT_TYPE_SCL}',''),'@')),'NONE'),{VOLUME_LOST},'{PRIMARY_CAUSE_CL}',{LOST_PRODUCT_COST},{BUSINESS_INTERRUPTION_COST},NULLIF('{DESCRIPTION}',''),NULLIF('{SOURCE_GCL}',''),NULLIF('{COMMENTS}',''));
					END $$;
                </query>
            </dbCommand>
        </insert>
        <update>
            <dbCommand>
				<param name="CLASS_ID" type="String" direction="Input" default="PODS_LEAK_HISTORY" /> 
				<var name="POLICY" default="POLICY.xml#UPDATE_PODS_SEM"  />
                <param name="LEAK_GUID" default="" type="String"/>
                <param name="EVENT_GUID" default="" type="String"/>
                <param name="LEAK_DATE" default="" type="DateTime"/>
                <param name="TELEPHONIC_REPORT_DATE" default="" type="DateTime"/>
                <param name="NRC_REPORT_NUMBER" default="NULL" type="Decimal"/>
                <param name="ENVIRONMENTAL_REMEDIATION_COST" default="NULL" type="Decimal"/>
                <param name="CITY" default="" type="String"/>
                <param name="STATE_GCL" default="UNKNOWN" type="String"/>
                <param name="ZIP" default="NULL" type="Decimal"/>
                <param name="LEAK_REPORT_DATE" default="" type="DateTime"/>
                <param name="PRODUCT_TYPE_SCL" default="" type="String"/>
                <param name="PRODUCT_SUBTYPE_SCL" default="" type="String"/>
                <param name="VOLUME_LOST" default="NULL" type="Decimal"/>
                <param name="PRIMARY_CAUSE_CL" default="UNKNOWN" type="String"/>
                <param name="LOST_PRODUCT_COST" default="NULL" type="Decimal"/>
                <param name="BUSINESS_INTERRUPTION_COST" default="NULL" type="Decimal"/>
                <param name="DESCRIPTION" default="" type="String"/>
                <param name="SOURCE_GCL" default="UNKNOWN" type="String"/>
                <param name="COMMENTS" default="" type="String"/>
                <param name="ID" type="Int64"/>
                <param name="USER_ID" default="-1" type="Int64"/>
                <query>
                    UPDATE PODS.LEAK_HISTORY
                    SET 
					LEAK_GUID=case when :LEAK_GUID is null then LEAK_GUID else :LEAK_GUID end,
					EVENT_GUID=case when :EVENT_GUID is null then EVENT_GUID else :EVENT_GUID end,
					LEAK_DATE=case when :LEAK_DATE is null then LEAK_DATE else :LEAK_DATE end,
					TELEPHONIC_REPORT_DATE=case when :TELEPHONIC_REPORT_DATE is null then TELEPHONIC_REPORT_DATE else :TELEPHONIC_REPORT_DATE end,
					NRC_REPORT_NUMBER=case when :NRC_REPORT_NUMBER is null then NRC_REPORT_NUMBER else :NRC_REPORT_NUMBER end,
					ENVIRONMENTAL_REMEDIATION_COST=case when :ENVIRONMENTAL_REMEDIATION_COST is null then ENVIRONMENTAL_REMEDIATION_COST else :ENVIRONMENTAL_REMEDIATION_COST end,
					CITY=case when :CITY is null then CITY else :CITY end,
					STATE_GCL=case when :STATE_GCL is null then STATE_GCL else :STATE_GCL end,
					ZIP=case when :ZIP is null then ZIP else :ZIP end,
					LEAK_REPORT_DATE=case when :LEAK_REPORT_DATE is null then LEAK_REPORT_DATE else :LEAK_REPORT_DATE end,
					PRODUCT_TYPE_SCL=coalesce(SUBSTR(:PRODUCT_TYPE_SCL,0,strpos(:PRODUCT_TYPE_SCL,'@')),'UNKNOWN'),PRODUCT_SUBTYPE_SCL=coalesce(SUBSTR(:PRODUCT_TYPE_SCL,strpos(:PRODUCT_TYPE_SCL,'@')+1,length(:PRODUCT_TYPE_SCL)-strpos(:PRODUCT_TYPE_SCL,'@')),'NONE'),
					VOLUME_LOST=case when :VOLUME_LOST is null then VOLUME_LOST else :VOLUME_LOST end,
					PRIMARY_CAUSE_CL=case when :PRIMARY_CAUSE_CL is null then PRIMARY_CAUSE_CL else :PRIMARY_CAUSE_CL end,
					LOST_PRODUCT_COST=case when :LOST_PRODUCT_COST is null then LOST_PRODUCT_COST else :LOST_PRODUCT_COST end,
					BUSINESS_INTERRUPTION_COST=case when :BUSINESS_INTERRUPTION_COST is null then BUSINESS_INTERRUPTION_COST else :BUSINESS_INTERRUPTION_COST end,
					DESCRIPTION=case when :DESCRIPTION is null then DESCRIPTION else :DESCRIPTION end,
                    SOURCE_GCL=case when :SOURCE_GCL is null then SOURCE_GCL else :SOURCE_GCL end,
                    COMMENTS=case when :COMMENTS is null then COMMENTS else :COMMENTS end
                    WHERE EVENT_ID = :ID;
                </query>
            </dbCommand>
        </update>
        <delete>
            <dbCommand>
				<var name="CLASS_ID" type="String" direction="Input" default="PODS_LEAK_HISTORY" /> 
				<var name="POLICY" default="POLICY.xml#DELETE_PODS_SEM"  />
                <var name="ID" type="Int64"/>
                <var name="USER_ID" default="-1" type="Int64"/>
                <query>
					DO $$
                    BEGIN

                    UPDATE PODS.EVENT_RANGE
                    SET CURRENT_INDICATOR_LF='N'
                    WHERE EVENT_ID = (SELECT EVENT_ID
                    FROM PODS.LEAK_HISTORY_EVENT
                    WHERE LEAK_ID = (SELECT LEAK_ID
                    FROM PODS.LEAK_HISTORY
                    WHERE EVENT_ID ={ID}));

                    DELETE
                    FROM WEB50.LNK_GATE
                    WHERE LEFT_OBJ_ID IN (SELECT 'PODS_LEAK_HISTORY_EVENT/'||CAST(LEAK_ID AS VARCHAR(30))||';'||CAST(EVENT_ID AS VARCHAR(30))
                    FROM PODS.LEAK_HISTORY_EVENT
                    WHERE LEAK_ID = (SELECT LEAK_ID
                    FROM PODS.LEAK_HISTORY
                    WHERE EVENT_ID ={ID}))
                    OR RIGHT_OBJ_ID IN (SELECT 'PODS_LEAK_HISTORY_EVENT/'||CAST(LEAK_ID AS VARCHAR(30))||';'||CAST(EVENT_ID AS VARCHAR(30))
                    FROM PODS.LEAK_HISTORY_EVENT
                    WHERE LEAK_ID = (SELECT LEAK_ID
                    FROM PODS.LEAK_HISTORY
                    WHERE EVENT_ID ={ID}));

                    DELETE
                    FROM PODS.LEAK_HISTORY_EVENT
                    WHERE LEAK_ID = (SELECT LEAK_ID
                    FROM PODS.LEAK_HISTORY
                    WHERE EVENT_ID ={ID});

                    UPDATE PODS.EVENT_RANGE
                    SET CURRENT_INDICATOR_LF='N'
                    WHERE EVENT_ID = {ID};

                    DELETE
                    FROM PODS.LEAK_HISTORY
                    WHERE EVENT_ID = {ID};

                    DELETE
                    FROM WEB50.LNK_GATE
                    WHERE LEFT_OBJ_ID = 'PODS_LEAK_HISTORY/'||CAST({ID} AS VARCHAR(30))
                    OR RIGHT_OBJ_ID = 'PODS_LEAK_HISTORY/'||CAST({ID} AS VARCHAR(30));

                    END $$;
                </query>
            </dbCommand>
        </delete>
    </data>
    <data table="LEGACY_LINE_BOUNDARY" schema="PODS" id="PODS_LEGACY_LINE_BOUNDARY" comment="PODS.LEGACY_LINE_BOUNDARY">
        <select>
            <dbQuery idField="ID">
                <param name="USER_ID" default="-1" type="Int64"/>
                <var name="FILTER" default="1=1"/>
                <var name="LPU_ACCESS_FILTER" default="SELECT srv_district_id FROM PODS.SRV_DISTRICT_GCL"/>
                <query>
                    SELECT * FROM (SELECT EVENT_ID ID, t.* FROM PODS.LEGACY_LINE_BOUNDARY t) d WHERE {FILTER}
                </query>
            </dbQuery>
        </select>
        <insert>
            <dbCommand>
				<var name="CLASS_ID" type="String" direction="Input" default="PODS_LEGACY_LINE_BOUNDARY" /> 
				<var name="POLICY" default="POLICY.xml#INSERT_PODS_SEM"  />
                <var name="EVENT_GUID" default="" type="String"/>
                <var name="LEGACY_LINE_ID" default="0" type="Decimal"/>
                <var name="LEGACY_LINE_GUID" default="" type="String"/>
                <var name="DESCRIPTION" default="" type="String"/>
                <var name="SOURCE_GCL" default="UNKNOWN" type="String"/>
                <var name="COMMENTS" default="" type="String"/>
                <var name="ID" type="Int64" direction="Output" default="SELECT max(EVENT_ID) id FROM PODS.EVENT_RANGE"/>
                <var name="PODS_USER" type="String"/>
                <var name="USER_ID" default="-1" type="Int64"/>
                <query>
					DO $$
					DECLARE
					returnId integer;
                    BEGIN
                    INSERT INTO PODS.EVENT_RANGE (EVENT_GUID,FEATURE_ID,STATION_ID_BEGIN,STATION_ID_END,PODS_USER,CREATE_DATE,EFFECTIVE_FROM_DATE,CURRENT_INDICATOR_LF,POSITIONING_TYPE_CL)
                    VALUES('{EVENT_GUID}','LEG_LINE_BND',0,0,NULLIF('{PODS_USER}',''),current_timestamp,current_timestamp,'Y','UNKNOWN')
                    RETURNING EVENT_ID INTO returnId;

                    INSERT INTO PODS.LEGACY_LINE_BOUNDARY(EVENT_ID,EVENT_GUID,LEGACY_LINE_ID,LEGACY_LINE_GUID,DESCRIPTION,SOURCE_GCL,COMMENTS)
                    VALUES(returnId,'{EVENT_GUID}',{LEGACY_LINE_ID},'{LEGACY_LINE_GUID}',NULLIF('{DESCRIPTION}',''),NULLIF('{SOURCE_GCL}',''),NULLIF('{COMMENTS}',''));
					END $$;
                </query>
            </dbCommand>
        </insert>
        <update>
            <dbCommand>
				<param name="CLASS_ID" type="String" direction="Input" default="PODS_LEGACY_LINE_BOUNDARY" /> 
				<var name="POLICY" default="POLICY.xml#UPDATE_PODS_SEM"  />
                <param name="EVENT_GUID" default="" type="String"/>
                <param name="LEGACY_LINE_ID" default="0" type="Decimal"/>
                <param name="LEGACY_LINE_GUID" default="" type="String"/>
                <param name="DESCRIPTION" default="" type="String"/>
                <param name="SOURCE_GCL" default="UNKNOWN" type="String"/>
                <param name="COMMENTS" default="" type="String"/>
                <param name="ID" type="Int64"/>
                <param name="USER_ID" default="-1" type="Int64"/>
                <query>
                    UPDATE PODS.LEGACY_LINE_BOUNDARY
                    SET 
					EVENT_GUID=case when :EVENT_GUID is null then EVENT_GUID else :EVENT_GUID end,
					LEGACY_LINE_ID=case when :LEGACY_LINE_ID is null then LEGACY_LINE_ID else :LEGACY_LINE_ID end,
					LEGACY_LINE_GUID=case when :LEGACY_LINE_GUID is null then LEGACY_LINE_GUID else :LEGACY_LINE_GUID end,
                    DESCRIPTION=case when :DESCRIPTION is null then DESCRIPTION else :DESCRIPTION end,
                    SOURCE_GCL=case when :SOURCE_GCL is null then SOURCE_GCL else :SOURCE_GCL end,
                    COMMENTS=case when :COMMENTS is null then COMMENTS else :COMMENTS end
                    WHERE EVENT_ID = :ID;
                </query>
            </dbCommand>
        </update>
        <delete>
            <dbCommand>
				<var name="CLASS_ID" type="String" direction="Input" default="PODS_LEGACY_LINE_BOUNDARY" /> 
				<var name="POLICY" default="POLICY.xml#DELETE_PODS_SEM"  />
                <var name="ID" type="Int64"/>
                <var name="USER_ID" default="-1" type="Int64"/>
                <query>
					DO $$
                    BEGIN
                    UPDATE PODS.EVENT_RANGE
                    SET CURRENT_INDICATOR_LF='N'
                    WHERE EVENT_ID = {ID};

                    DELETE FROM PODS.LEGACY_LINE_BOUNDARY
                    WHERE EVENT_ID = {ID};
                    DELETE FROM WEB50.LNK_GATE WHERE LEFT_OBJ_ID = 'PODS_LEGACY_LINE_BOUNDARY/'||CAST({ID} AS VARCHAR(30)) OR RIGHT_OBJ_ID = 'PODS_LEGACY_LINE_BOUNDARY/'||CAST({ID} AS VARCHAR(30)); END $$;
                </query>
            </dbCommand>
        </delete>
    </data>
    <data table="MAINTENANCE" schema="PODS" id="PODS_MAINTENANCE" comment="PODS.MAINTENANCE">
        <select>
            <dbQuery idField="ID">
                <param name="USER_ID" default="-1" type="Int64"/>
                <var name="FILTER" default="1=1"/>
                <var name="LPU_ACCESS_FILTER" default="SELECT srv_district_id FROM PODS.SRV_DISTRICT_GCL"/>
                <query>
                    SELECT * FROM (SELECT EVENT_ID ID, t.* FROM PODS.MAINTENANCE t) d WHERE {FILTER}
                </query>
            </dbQuery>
        </select>
        <insert>
            <dbCommand>
				<var name="CLASS_ID" type="String" direction="Input" default="PODS_MAINTENANCE" /> 
				<var name="POLICY" default="POLICY.xml#INSERT_PODS_SEM"  />
                <var name="MAINT_GUID" default="" type="String"/>
                <var name="EVENT_GUID" default="" type="String"/>
                <var name="TYPE_CL" default="UNKNOWN" type="String"/>
                <var name="MAINT_DATE" default="" type="DateTime"/>
                <var name="MAINT_COST" default="NULL" type="Decimal"/>
                <var name="REMEDIATION_COST" default="NULL" type="Decimal"/>
                <var name="WORK_ORDER_ID" default="NULL" type="Decimal"/>
                <var name="WORK_ORDER_GUID" default="" type="String"/>
                <var name="DESCRIPTION" default="" type="String"/>
                <var name="SOURCE_GCL" default="UNKNOWN" type="String"/>
                <var name="COMMENTS" default="" type="String"/>
                <var name="ID" type="Int64" direction="Output" default="SELECT max(EVENT_ID) id FROM PODS.EVENT_RANGE"/>
                <var name="PODS_USER" type="String"/>
                <var name="USER_ID" default="-1" type="Int64"/>
                <query>
					DO $$
					DECLARE
					returnId integer;
                    BEGIN
                    INSERT INTO PODS.EVENT_RANGE (EVENT_GUID,FEATURE_ID,STATION_ID_BEGIN,STATION_ID_END,PODS_USER,CREATE_DATE,EFFECTIVE_FROM_DATE,CURRENT_INDICATOR_LF,POSITIONING_TYPE_CL)
                    VALUES('{EVENT_GUID}','MAINTENANCE',0,0,NULLIF('{PODS_USER}',''),current_timestamp,current_timestamp,'Y','UNKNOWN')
                    RETURNING EVENT_ID INTO returnId;

                    INSERT INTO PODS.MAINTENANCE(EVENT_ID,MAINT_GUID,EVENT_GUID,TYPE_CL,MAINT_DATE,MAINT_COST,REMEDIATION_COST,WORK_ORDER_ID,WORK_ORDER_GUID,DESCRIPTION,SOURCE_GCL,COMMENTS)
                    VALUES(returnId,'{MAINT_GUID}','{EVENT_GUID}',NULLIF('{TYPE_CL}',''),'{MAINT_DATE}',{MAINT_COST},{REMEDIATION_COST},{WORK_ORDER_ID},'{WORK_ORDER_GUID}',NULLIF('{DESCRIPTION}',''),NULLIF('{SOURCE_GCL}',''),NULLIF('{COMMENTS}',''));
					END $$;
                </query>
            </dbCommand>
        </insert>
        <update>
            <dbCommand>
				<param name="CLASS_ID" type="String" direction="Input" default="PODS_MAINTENANCE" /> 
				<var name="POLICY" default="POLICY.xml#UPDATE_PODS_SEM"  />
                <param name="MAINT_GUID" default="" type="String"/>
                <param name="EVENT_GUID" default="" type="String"/>
                <param name="TYPE_CL" default="UNKNOWN" type="String"/>
                <param name="MAINT_DATE" default="" type="DateTime"/>
                <param name="MAINT_COST" default="NULL" type="Decimal"/>
                <param name="REMEDIATION_COST" default="NULL" type="Decimal"/>
                <param name="WORK_ORDER_ID" default="NULL" type="Decimal"/>
                <param name="WORK_ORDER_GUID" default="" type="String"/>
                <param name="DESCRIPTION" default="" type="String"/>
                <param name="SOURCE_GCL" default="UNKNOWN" type="String"/>
                <param name="COMMENTS" default="" type="String"/>
                <param name="ID" type="Int64"/>
                <param name="USER_ID" default="-1" type="Int64"/>
                <query>
                    UPDATE PODS.MAINTENANCE
                    SET MAINT_GUID=:MAINT_GUID,EVENT_GUID=case when :EVENT_GUID is null then EVENT_GUID else :EVENT_GUID end,
                    TYPE_CL=case when :TYPE_CL is null then TYPE_CL else :TYPE_CL end,
					MAINT_DATE=case when :MAINT_DATE is null then MAINT_DATE else :MAINT_DATE end,
					MAINT_COST=case when :MAINT_COST is null then MAINT_COST else :MAINT_COST end,
					REMEDIATION_COST=case when :REMEDIATION_COST is null then REMEDIATION_COST else :REMEDIATION_COST end,
					WORK_ORDER_ID=case when :WORK_ORDER_ID is null then WORK_ORDER_ID else :WORK_ORDER_ID end,
					WORK_ORDER_GUID=case when :WORK_ORDER_GUID is null then WORK_ORDER_GUID else :WORK_ORDER_GUID end,
                    DESCRIPTION=case when :DESCRIPTION is null then DESCRIPTION else :DESCRIPTION end,
                    SOURCE_GCL=case when :SOURCE_GCL is null then SOURCE_GCL else :SOURCE_GCL end,
                    COMMENTS=case when :COMMENTS is null then COMMENTS else :COMMENTS end
                    WHERE EVENT_ID = :ID;
                </query>
            </dbCommand>
        </update>
        <delete>
            <dbCommand>
				<var name="CLASS_ID" type="String" direction="Input" default="PODS_MAINTENANCE" /> 
				<var name="POLICY" default="POLICY.xml#DELETE_PODS_SEM"  />
                <var name="ID" type="Int64"/>
                <var name="USER_ID" default="-1" type="Int64"/>
                <query>
					DO $$
                    BEGIN
                    UPDATE PODS.EVENT_RANGE
                    SET CURRENT_INDICATOR_LF='N'
                    WHERE EVENT_ID = (SELECT EVENT_ID
                    FROM PODS.MAINTENANCE_EVENT
                    WHERE MAINT_ID = (SELECT MAINT_ID
                    FROM PODS.MAINTENANCE
                    WHERE EVENT_ID = {ID}));

                    DELETE
                    FROM WEB50.LNK_GATE
                    WHERE LEFT_OBJ_ID IN (SELECT 'PODS_MAINTENANCE_EVENT/'||CAST(MAINT_ID AS VARCHAR(30))
                    ||';'||CAST(EVENT_ID  AS VARCHAR(30))
                    FROM PODS.MAINTENANCE_EVENT
                    WHERE MAINT_ID  = (SELECT MAINT_ID
                    FROM PODS.MAINTENANCE
                    WHERE EVENT_ID = {ID}))
                    OR RIGHT_OBJ_ID IN (SELECT 'PODS_MAINTENANCE_EVENT/'||CAST(MAINT_ID  AS VARCHAR(30))
                    ||';'||CAST(EVENT_ID  AS VARCHAR(30))
                    FROM PODS.MAINTENANCE_EVENT
                    WHERE MAINT_ID  = (SELECT MAINT_ID
                    FROM PODS.MAINTENANCE
                    WHERE EVENT_ID = {ID}));

                    DELETE
                    FROM PODS.MAINTENANCE_EVENT
                    WHERE MAINT_ID = (SELECT MAINT_ID
                    FROM PODS.MAINTENANCE
                    WHERE EVENT_ID = {ID});

                    UPDATE PODS.EVENT_RANGE
                    SET CURRENT_INDICATOR_LF='N'
                    WHERE EVENT_ID = {ID};

                    DELETE
                    FROM PODS.MAINTENANCE
                    WHERE EVENT_ID = {ID};

                    DELETE
                    FROM WEB50.LNK_GATE
                    WHERE LEFT_OBJ_ID = 'PODS_MAINTENANCE/'||CAST({ID} AS VARCHAR(30))
                    OR RIGHT_OBJ_ID = 'PODS_MAINTENANCE/'||CAST({ID} AS VARCHAR(30));

                    END $$;
                </query>
            </dbCommand>
        </delete>
    </data>
    <data table="MAOP_RATING" schema="PODS" id="PODS_MAOP_RATING" comment="PODS.MAOP_RATING">
        <select>
            <dbQuery idField="ID">
                <param name="USER_ID" default="-1" type="Int64"/>
                <var name="FILTER" default="1=1"/>
                <var name="LPU_ACCESS_FILTER" default="SELECT srv_district_id FROM PODS.SRV_DISTRICT_GCL"/>
                <query>
                    SELECT * FROM (SELECT EVENT_ID ID, t.* FROM PODS.MAOP_RATING t) d WHERE {FILTER}
                </query>
            </dbQuery>
        </select>
        <insert>
            <dbCommand>
				<var name="CLASS_ID" type="String" direction="Input" default="PODS_MAOP_RATING" /> 
				<var name="POLICY" default="POLICY.xml#INSERT_PODS_SEM"  />
                <var name="EVENT_GUID" default="" type="String"/>
                <var name="MAOP_RATING" default="NULL" type="Decimal"/>
                <var name="MOP" default="NULL" type="Decimal"/>
                <var name="DETERMINATION_METHOD_CL" default="UNKNOWN" type="String"/>
                <var name="DETERMINATION_DATE" default="" type="DateTime"/>
                <var name="VERIFIED_BY" default="" type="String"/>
                <var name="ESTABLISHED_BY" default="" type="String"/>
                <var name="LIMITING_FACTORS" default="" type="String"/>
                <var name="DESCRIPTION" default="" type="String"/>
                <var name="SOURCE_GCL" default="UNKNOWN" type="String"/>
                <var name="COMMENTS" default="" type="String"/>
                <var name="ID" type="Int64" direction="Output" default="SELECT max(EVENT_ID) id FROM PODS.EVENT_RANGE"/>
                <var name="PODS_USER" type="String"/>
                <var name="USER_ID" default="-1" type="Int64"/>
                <query>
					DO $$
					DECLARE
					returnId integer;
                    BEGIN
                    INSERT INTO PODS.EVENT_RANGE (EVENT_GUID,FEATURE_ID,STATION_ID_BEGIN,STATION_ID_END,PODS_USER,CREATE_DATE,EFFECTIVE_FROM_DATE,CURRENT_INDICATOR_LF,POSITIONING_TYPE_CL)
                    VALUES('{EVENT_GUID}','MAOP_RATING',0,0,NULLIF('{PODS_USER}',''),current_timestamp,current_timestamp,'Y','UNKNOWN')
                    RETURNING EVENT_ID INTO returnId;

                    INSERT INTO PODS.MAOP_RATING(EVENT_ID,EVENT_GUID,MAOP_RATING,MOP,DETERMINATION_METHOD_CL,DETERMINATION_DATE,VERIFIED_BY,ESTABLISHED_BY,LIMITING_FACTORS,DESCRIPTION,SOURCE_GCL,COMMENTS)
                    VALUES(returnId,'{EVENT_GUID}',{MAOP_RATING},{MOP},NULLIF('{DETERMINATION_METHOD_CL}',''),'{DETERMINATION_DATE}',NULLIF('{VERIFIED_BY}',''),NULLIF('{ESTABLISHED_BY}',''),NULLIF('{LIMITING_FACTORS}',''),NULLIF('{DESCRIPTION}',''),NULLIF('{SOURCE_GCL}',''),NULLIF('{COMMENTS}',''));
					END $$;
                </query>
            </dbCommand>
        </insert>
        <update>
            <dbCommand>
				<param name="CLASS_ID" type="String" direction="Input" default="PODS_MAOP_RATING" /> 
				<var name="POLICY" default="POLICY.xml#UPDATE_PODS_SEM"  />
                <param name="EVENT_GUID" default="" type="String"/>
                <param name="MAOP_RATING" default="NULL" type="Decimal"/>
                <param name="MOP" default="NULL" type="Decimal"/>
                <param name="DETERMINATION_METHOD_CL" default="UNKNOWN" type="String"/>
                <param name="DETERMINATION_DATE" default="" type="DateTime"/>
                <param name="VERIFIED_BY" default="" type="String"/>
                <param name="ESTABLISHED_BY" default="" type="String"/>
                <param name="LIMITING_FACTORS" default="" type="String"/>
                <param name="DESCRIPTION" default="" type="String"/>
                <param name="SOURCE_GCL" default="UNKNOWN" type="String"/>
                <param name="COMMENTS" default="" type="String"/>
                <param name="ID" type="Int64"/>
                <param name="USER_ID" default="-1" type="Int64"/>
                <query>
                    UPDATE PODS.MAOP_RATING
                    SET 
					EVENT_GUID=case when :EVENT_GUID is null then EVENT_GUID else :EVENT_GUID end,
                    MAOP_RATING=case when :MAOP_RATING is null then MAOP_RATING else :MAOP_RATING end,
                    MOP=case when :MOP is null then MOP else :MOP end,
                    DETERMINATION_METHOD_CL=case when :DETERMINATION_METHOD_CL is null then DETERMINATION_METHOD_CL else :DETERMINATION_METHOD_CL end,
                    DETERMINATION_DATE=case when :DETERMINATION_DATE is null then DETERMINATION_DATE else :DETERMINATION_DATE end,
                    VERIFIED_BY=case when :VERIFIED_BY is null then VERIFIED_BY else :VERIFIED_BY end,
					ESTABLISHED_BY=case when :ESTABLISHED_BY is null then ESTABLISHED_BY else :ESTABLISHED_BY end,
					LIMITING_FACTORS=case when :LIMITING_FACTORS is null then LIMITING_FACTORS else :LIMITING_FACTORS end,
                    DESCRIPTION=case when :DESCRIPTION is null then DESCRIPTION else :DESCRIPTION end,
                    SOURCE_GCL=case when :SOURCE_GCL is null then SOURCE_GCL else :SOURCE_GCL end,
                    COMMENTS=case when :COMMENTS is null then COMMENTS else :COMMENTS end
                    WHERE EVENT_ID = :ID;
                </query>
            </dbCommand>
        </update>
        <delete>
            <dbCommand>
				<var name="CLASS_ID" type="String" direction="Input" default="PODS_MAOP_RATING" /> 
				<var name="POLICY" default="POLICY.xml#DELETE_PODS_SEM"  />
                <var name="ID" type="Int64"/>
                <var name="USER_ID" default="-1" type="Int64"/>
                <query>
					DO $$
                    BEGIN
                    UPDATE PODS.EVENT_RANGE
                    SET CURRENT_INDICATOR_LF='N'
                    WHERE EVENT_ID = {ID};

                    DELETE FROM PODS.MAOP_RATING
                    WHERE EVENT_ID = {ID};
                    DELETE FROM WEB50.LNK_GATE WHERE LEFT_OBJ_ID = 'PODS_MAOP_RATING/'||CAST({ID} AS VARCHAR(30)) OR RIGHT_OBJ_ID = 'PODS_MAOP_RATING/'||CAST({ID} AS VARCHAR(30)); END $$;
                </query>
            </dbCommand>
        </delete>
    </data>
    <data table="METER" schema="PODS" id="PODS_METER" comment="PODS.METER">
        <select>
            <dbQuery idField="ID">
                <param name="USER_ID" default="-1" type="Int64"/>
                <var name="FILTER" default="1=1"/>
                <var name="LPU_ACCESS_FILTER" default="SELECT srv_district_id FROM PODS.SRV_DISTRICT_GCL"/>
                <query>
                    SELECT * FROM (SELECT EVENT_ID ID, t.* FROM PODS.METER t) d WHERE {FILTER}
                </query>
            </dbQuery>
        </select>
        <insert>
            <dbCommand>
				<var name="CLASS_ID" type="String" direction="Input" default="PODS_METER" /> 
				<var name="POLICY" default="POLICY.xml#INSERT_PODS_SEM"  />
                <var name="EVENT_GUID" default="" type="String"/>
                <var name="TYPE_CL" default="UNKNOWN" type="String"/>
                <var name="METER_NUMBER" default="" type="String"/>
                <var name="SERIAL_NUMBER" default="" type="String"/>
                <var name="MANUFACTURER_CL" default="UNKNOWN" type="String"/>
                <var name="SPECIFICATION_CL" default="UNKNOWN" type="String"/>
                <var name="NOMINAL_PRESSURE_RATING" default="NULL" type="Decimal"/>
                <var name="MILL_TEST_PRESSURE" default="NULL" type="Decimal"/>
                <var name="DATE_MANUFACTURED" default="" type="DateTime"/>
                <var name="VANES_LF" default="" type="String"/>
                <var name="DATE_INSTALLED" default="" type="DateTime"/>
                <var name="DESCRIPTION" default="" type="String"/>
                <var name="SOURCE_GCL" default="UNKNOWN" type="String"/>
                <var name="COMMENTS" default="" type="String"/>
                <var name="ID" type="Int64" direction="Output" default="SELECT max(EVENT_ID) id FROM PODS.EVENT_RANGE"/>
                <var name="PODS_USER" type="String"/>
                <var name="USER_ID" default="-1" type="Int64"/>
                <query>
					DO $$
					DECLARE
					returnId integer;
                    BEGIN
                    INSERT INTO PODS.EVENT_RANGE (EVENT_GUID,FEATURE_ID,STATION_ID_BEGIN,STATION_ID_END,PODS_USER,CREATE_DATE,EFFECTIVE_FROM_DATE,CURRENT_INDICATOR_LF,POSITIONING_TYPE_CL)
                    VALUES('{EVENT_GUID}','METER',0,0,NULLIF('{PODS_USER}',''),current_timestamp,current_timestamp,'Y','UNKNOWN')
                    RETURNING EVENT_ID INTO returnId;

                    INSERT INTO PODS.METER(EVENT_ID,EVENT_GUID,TYPE_CL,METER_NUMBER,SERIAL_NUMBER,MANUFACTURER_CL,SPECIFICATION_CL,NOMINAL_PRESSURE_RATING,MILL_TEST_PRESSURE,DATE_MANUFACTURED,VANES_LF,DATE_INSTALLED,DESCRIPTION,SOURCE_GCL,COMMENTS)
                    VALUES(returnId,'{EVENT_GUID}',NULLIF('{TYPE_CL}',''),NULLIF('{METER_NUMBER}',''),NULLIF('{SERIAL_NUMBER}',''),NULLIF('{MANUFACTURER_CL}',''),NULLIF('{SPECIFICATION_CL}',''),{NOMINAL_PRESSURE_RATING},{MILL_TEST_PRESSURE},'{DATE_MANUFACTURED}','{VANES_LF}','{DATE_INSTALLED}',NULLIF('{DESCRIPTION}',''),NULLIF('{SOURCE_GCL}',''),NULLIF('{COMMENTS}',''));
					END $$;
                </query>
            </dbCommand>
        </insert>
        <update>
            <dbCommand>
				<param name="CLASS_ID" type="String" direction="Input" default="PODS_METER" /> 
				<var name="POLICY" default="POLICY.xml#UPDATE_PODS_SEM"  />
                <param name="EVENT_GUID" default="" type="String"/>
                <param name="TYPE_CL" default="UNKNOWN" type="String"/>
                <param name="METER_NUMBER" default="" type="String"/>
                <param name="SERIAL_NUMBER" default="" type="String"/>
                <param name="MANUFACTURER_CL" default="UNKNOWN" type="String"/>
                <param name="SPECIFICATION_CL" default="UNKNOWN" type="String"/>
                <param name="NOMINAL_PRESSURE_RATING" default="NULL" type="Decimal"/>
                <param name="MILL_TEST_PRESSURE" default="NULL" type="Decimal"/>
                <param name="DATE_MANUFACTURED" default="" type="DateTime"/>
                <param name="VANES_LF" default="" type="String"/>
                <param name="DATE_INSTALLED" default="" type="DateTime"/>
                <param name="DESCRIPTION" default="" type="String"/>
                <param name="SOURCE_GCL" default="UNKNOWN" type="String"/>
                <param name="COMMENTS" default="" type="String"/>
                <param name="ID" type="Int64"/>
                <param name="USER_ID" default="-1" type="Int64"/>
                <query>
                    UPDATE PODS.METER
                    SET EVENT_GUID=case when :EVENT_GUID is null then EVENT_GUID else :EVENT_GUID end,
                    TYPE_CL=case when :TYPE_CL is null then TYPE_CL else :TYPE_CL end,
					METER_NUMBER=case when :METER_NUMBER is null then METER_NUMBER else :METER_NUMBER end,
                    SERIAL_NUMBER=case when :SERIAL_NUMBER is null then SERIAL_NUMBER else :SERIAL_NUMBER end,
                    MANUFACTURER_CL=case when :MANUFACTURER_CL is null then MANUFACTURER_CL else :MANUFACTURER_CL end,
                    SPECIFICATION_CL=case when :SPECIFICATION_CL is null then SPECIFICATION_CL else :SPECIFICATION_CL end,
                    NOMINAL_PRESSURE_RATING=case when :NOMINAL_PRESSURE_RATING is null then NOMINAL_PRESSURE_RATING else :NOMINAL_PRESSURE_RATING end,
                    MILL_TEST_PRESSURE=case when :MILL_TEST_PRESSURE is null then MILL_TEST_PRESSURE else :MILL_TEST_PRESSURE end,
                    DATE_MANUFACTURED=case when :DATE_MANUFACTURED is null then DATE_MANUFACTURED else :DATE_MANUFACTURED end,
					VANES_LF=case when :VANES_LF is null then VANES_LF else :VANES_LF end,
                    DATE_INSTALLED=case when :DATE_INSTALLED is null then DATE_INSTALLED else :DATE_INSTALLED end,
                    DESCRIPTION=case when :DESCRIPTION is null then DESCRIPTION else :DESCRIPTION end,
                    SOURCE_GCL=case when :SOURCE_GCL is null then SOURCE_GCL else :SOURCE_GCL end,
                    COMMENTS=case when :COMMENTS is null then COMMENTS else :COMMENTS end
                    WHERE EVENT_ID = :ID;
                </query>
            </dbCommand>
        </update>
        <delete>
            <dbCommand>
				<var name="CLASS_ID" type="String" direction="Input" default="PODS_METER" /> 
				<var name="POLICY" default="POLICY.xml#DELETE_PODS_SEM"  />
                <var name="ID" type="Int64"/>
                <var name="USER_ID" default="-1" type="Int64"/>
                <query>
					DO $$
                    BEGIN
                    UPDATE PODS.EVENT_RANGE
                    SET CURRENT_INDICATOR_LF='N'
                    WHERE EVENT_ID = {ID};

                    DELETE FROM PODS.METER
                    WHERE EVENT_ID = {ID};
                    DELETE FROM WEB50.LNK_GATE WHERE LEFT_OBJ_ID = 'PODS_METER/'||CAST({ID} AS VARCHAR(30)) OR RIGHT_OBJ_ID = 'PODS_METER/'||CAST({ID} AS VARCHAR(30)); END $$;
                </query>
            </dbCommand>
        </delete>
    </data>
    <data table="METER_STATION" schema="PODS" id="PODS_METER_STATION" comment="PODS.METER_STATION">
        <select>
            <dbQuery idField="ID">
                <param name="USER_ID" default="-1" type="Int64"/>
                <var name="FILTER" default="1=1"/>
                <var name="LPU_ACCESS_FILTER" default="SELECT srv_district_id FROM PODS.SRV_DISTRICT_GCL"/>
                <query>
                    SELECT * FROM (SELECT EVENT_ID ID, t.* FROM PODS.METER_STATION t) d WHERE {FILTER}
                </query>
            </dbQuery>
        </select>
        <insert>
            <dbCommand>
				<var name="CLASS_ID" type="String" direction="Input" default="PODS_METER_STATION" /> 
				<var name="POLICY" default="POLICY.xml#INSERT_PODS_SEM"  />
                <var name="EVENT_GUID" default="" type="String"/>
                <var name="STATION_NUMBER" default="" type="String"/>
                <var name="LEASE_NAME" default="" type="String"/>
                <var name="LEASE_OPERATOR" default="" type="String"/>
                <var name="TYPE_CL" default="UNKNOWN" type="String"/>
                <var name="STATUS_CL" default="UNKNOWN" type="String"/>
                <var name="CLASS_CL" default="UNKNOWN" type="String"/>
                <var name="DESCRIPTION" default="" type="String"/>
                <var name="SOURCE_GCL" default="UNKNOWN" type="String"/>
                <var name="COMMENTS" default="" type="String"/>
                <var name="ID" type="Int64" direction="Output" default="SELECT max(EVENT_ID) id FROM PODS.EVENT_RANGE"/>
                <var name="PODS_USER" type="String"/>
                <var name="USER_ID" default="-1" type="Int64"/>
                <query>
					DO $$
					DECLARE
					returnId integer;
                    BEGIN
                    INSERT INTO PODS.EVENT_RANGE (EVENT_GUID,FEATURE_ID,STATION_ID_BEGIN,STATION_ID_END,PODS_USER,CREATE_DATE,EFFECTIVE_FROM_DATE,CURRENT_INDICATOR_LF,POSITIONING_TYPE_CL)
                    VALUES('{EVENT_GUID}','METER_STATION',0,0,NULLIF('{PODS_USER}',''),current_timestamp,current_timestamp,'Y','UNKNOWN')
                    RETURNING EVENT_ID INTO returnId;

                    INSERT INTO PODS.METER_STATION(EVENT_ID,EVENT_GUID,STATION_NUMBER,LEASE_NAME,LEASE_OPERATOR,TYPE_CL,STATUS_CL,CLASS_CL,DESCRIPTION,SOURCE_GCL,COMMENTS)
                    VALUES(returnId,'{EVENT_GUID}',NULLIF('{STATION_NUMBER}',''),NULLIF('{LEASE_NAME}',''),NULLIF('{LEASE_OPERATOR}',''),NULLIF('{TYPE_CL}',''),NULLIF('{STATUS_CL}',''),NULLIF('{CLASS_CL}',''),NULLIF('{DESCRIPTION}',''),NULLIF('{SOURCE_GCL}',''),NULLIF('{COMMENTS}',''));
					END $$;
                </query>
            </dbCommand>
        </insert>
        <update>
            <dbCommand>
				<param name="CLASS_ID" type="String" direction="Input" default="PODS_METER_STATION" /> 
				<var name="POLICY" default="POLICY.xml#UPDATE_PODS_SEM"  />
                <param name="EVENT_GUID" default="" type="String"/>
                <param name="STATION_NUMBER" default="" type="String"/>
                <param name="LEASE_NAME" default="" type="String"/>
                <param name="LEASE_OPERATOR" default="" type="String"/>
                <param name="TYPE_CL" default="UNKNOWN" type="String"/>
                <param name="STATUS_CL" default="UNKNOWN" type="String"/>
                <param name="CLASS_CL" default="UNKNOWN" type="String"/>
                <param name="DESCRIPTION" default="" type="String"/>
                <param name="SOURCE_GCL" default="UNKNOWN" type="String"/>
                <param name="COMMENTS" default="" type="String"/>
                <param name="ID" type="Int64"/>
                <param name="USER_ID" default="-1" type="Int64"/>
                <query>
                    UPDATE PODS.METER_STATION
                    SET EVENT_GUID=case when :EVENT_GUID is null then EVENT_GUID else :EVENT_GUID end,
                    STATION_NUMBER=case when :STATION_NUMBER is null then STATION_NUMBER else :STATION_NUMBER end,
                    LEASE_NAME=case when :LEASE_NAME is null then LEASE_NAME else :LEASE_NAME end,
                    LEASE_OPERATOR=case when :LEASE_OPERATOR is null then LEASE_OPERATOR else :LEASE_OPERATOR end,
                    TYPE_CL=case when :TYPE_CL is null then TYPE_CL else :TYPE_CL end,
                    STATUS_CL=case when :STATUS_CL is null then STATUS_CL else :STATUS_CL end,
                    CLASS_CL=case when :CLASS_CL is null then CLASS_CL else :CLASS_CL end,
                    DESCRIPTION=case when :DESCRIPTION is null then DESCRIPTION else :DESCRIPTION end,
                    SOURCE_GCL=case when :SOURCE_GCL is null then SOURCE_GCL else :SOURCE_GCL end,
                    COMMENTS=case when :COMMENTS is null then COMMENTS else :COMMENTS end
                    WHERE EVENT_ID = :ID;
                </query>
            </dbCommand>
        </update>
        <delete>
            <dbCommand>
				<var name="CLASS_ID" type="String" direction="Input" default="PODS_METER_STATION" /> 
				<var name="POLICY" default="POLICY.xml#DELETE_PODS_SEM"  />
                <var name="ID" type="Int64"/>
                <var name="USER_ID" default="-1" type="Int64"/>
                <query>
					DO $$
                    BEGIN
                    UPDATE PODS.EVENT_RANGE
                    SET CURRENT_INDICATOR_LF='N'
                    WHERE EVENT_ID = {ID};

                    DELETE FROM PODS.METER_STATION
                    WHERE EVENT_ID = {ID};
                    DELETE FROM WEB50.LNK_GATE WHERE LEFT_OBJ_ID = 'PODS_METER_STATION/'||CAST({ID} AS VARCHAR(30)) OR RIGHT_OBJ_ID = 'PODS_METER_STATION/'||CAST({ID} AS VARCHAR(30)); END $$;
                </query>
            </dbCommand>
        </delete>
    </data>
    <data table="NETWORK_SEGMENT" schema="PODS" id="PODS_NETWORK_SEGMENT" comment="PODS.NETWORK_SEGMENT">
        <select>
            <dbQuery idField="ID">
                <param name="USER_ID" default="-1" type="Int64"/>
                <var name="FILTER" default="1=1"/>
                <var name="LPU_ACCESS_FILTER" default="SELECT srv_district_id FROM PODS.SRV_DISTRICT_GCL"/>
                <query>
                    SELECT * FROM (SELECT EVENT_ID ID, t.* FROM PODS.NETWORK_SEGMENT t) d WHERE {FILTER}
                </query>
            </dbQuery>
        </select>
        <insert>
            <dbCommand>
				<var name="CLASS_ID" type="String" direction="Input" default="PODS_NETWORK_SEGMENT" /> 
				<var name="POLICY" default="POLICY.xml#INSERT_PODS_SEM"  />
                <var name="EVENT_GUID" default="" type="String"/>
                <var name="FROM_JUNCTION_ID" default="NULL" type="Decimal"/>
                <var name="FROM_JUNCTION_GUID" default="" type="String"/>
                <var name="TO_JUNCTION_ID" default="NULL" type="Decimal"/>
                <var name="TO_JUNCTION_GUID" default="" type="String"/>
                <var name="DESCRIPTION" default="" type="String"/>
                <var name="COMMENTS" default="" type="String"/>
                <var name="ID" type="Int64" direction="Output" default="SELECT max(EVENT_ID) id FROM PODS.EVENT_RANGE"/>
                <var name="PODS_USER" type="String"/>
                <var name="USER_ID" default="-1" type="Int64"/>
                <query>
					DO $$
					DECLARE
					returnId integer;
                    BEGIN
                    INSERT INTO PODS.EVENT_RANGE (EVENT_GUID,FEATURE_ID,STATION_ID_BEGIN,STATION_ID_END,PODS_USER,CREATE_DATE,EFFECTIVE_FROM_DATE,CURRENT_INDICATOR_LF,POSITIONING_TYPE_CL)
                    VALUES('{EVENT_GUID}','NETWORK_SEGMENT',0,0,NULLIF('{PODS_USER}',''),current_timestamp,current_timestamp,'Y','UNKNOWN')
                    RETURNING EVENT_ID INTO returnId;

                    INSERT INTO PODS.NETWORK_SEGMENT(EVENT_ID,EVENT_GUID,FROM_JUNCTION_ID,FROM_JUNCTION_GUID,TO_JUNCTION_ID,TO_JUNCTION_GUID,DESCRIPTION,COMMENTS)
                    VALUES(returnId,'{EVENT_GUID}',{FROM_JUNCTION_ID},'{FROM_JUNCTION_GUID}',{TO_JUNCTION_ID},'{TO_JUNCTION_GUID}',NULLIF('{DESCRIPTION}',''),NULLIF('{COMMENTS}',''));
					END $$;
                </query>
            </dbCommand>
        </insert>
        <update>
            <dbCommand>
				<param name="CLASS_ID" type="String" direction="Input" default="PODS_NETWORK_SEGMENT" /> 
				<var name="POLICY" default="POLICY.xml#UPDATE_PODS_SEM"  />
                <param name="EVENT_GUID" default="" type="String"/>
                <param name="FROM_JUNCTION_ID" default="NULL" type="Decimal"/>
                <param name="FROM_JUNCTION_GUID" default="" type="String"/>
                <param name="TO_JUNCTION_ID" default="NULL" type="Decimal"/>
                <param name="TO_JUNCTION_GUID" default="" type="String"/>
                <param name="DESCRIPTION" default="" type="String"/>
                <param name="COMMENTS" default="" type="String"/>
                <param name="ID" type="Int64"/>
                <param name="USER_ID" default="-1" type="Int64"/>
                <query>
                    UPDATE PODS.NETWORK_SEGMENT
                    SET
					EVENT_GUID=case when :EVENT_GUID is null then EVENT_GUID else :EVENT_GUID end,
					FROM_JUNCTION_ID=case when :FROM_JUNCTION_ID is null then FROM_JUNCTION_ID else :FROM_JUNCTION_ID end,
					FROM_JUNCTION_GUID=case when :FROM_JUNCTION_GUID is null then FROM_JUNCTION_GUID else :FROM_JUNCTION_GUID end,
					TO_JUNCTION_ID=case when :TO_JUNCTION_ID is null then TO_JUNCTION_ID else :TO_JUNCTION_ID end,
					TO_JUNCTION_GUID=case when :TO_JUNCTION_GUID is null then TO_JUNCTION_GUID else :TO_JUNCTION_GUID end,
                    DESCRIPTION=case when :DESCRIPTION is null then DESCRIPTION else :DESCRIPTION end,
                    COMMENTS=case when :COMMENTS is null then COMMENTS else :COMMENTS end
                    WHERE EVENT_ID = :ID;
                </query>
            </dbCommand>
        </update>
        <delete>
            <dbCommand>
				<var name="CLASS_ID" type="String" direction="Input" default="PODS_NETWORK_SEGMENT" /> 
				<var name="POLICY" default="POLICY.xml#DELETE_PODS_SEM"  />
                <var name="ID" type="Int64"/>
                <var name="USER_ID" default="-1" type="Int64"/>
                <query>
					DO $$
                    BEGIN
                    UPDATE PODS.EVENT_RANGE
                    SET CURRENT_INDICATOR_LF='N'
                    WHERE EVENT_ID = {ID};

                    DELETE FROM PODS.NETWORK_SEGMENT
                    WHERE EVENT_ID = {ID};
                    DELETE FROM WEB50.LNK_GATE WHERE LEFT_OBJ_ID = 'PODS_NETWORK_SEGMENT/'||CAST({ID} AS VARCHAR(30)) OR RIGHT_OBJ_ID = 'PODS_NETWORK_SEGMENT/'||CAST({ID} AS VARCHAR(30)); END $$;
                </query>
            </dbCommand>
        </delete>
    </data>
    <data table="ODORANT_MEASUREMENT" schema="PODS" id="PODS_ODORANT_MEASUREMENT" comment="PODS.ODORANT_MEASUREMENT">
        <select>
            <dbQuery idField="ID">
                <param name="USER_ID" default="-1" type="Int64"/>
                <var name="FILTER" default="1=1"/>
                <var name="LPU_ACCESS_FILTER" default="SELECT srv_district_id FROM PODS.SRV_DISTRICT_GCL"/>
                <query>
                    SELECT * FROM (SELECT EVENT_ID ID, t.* FROM PODS.ODORANT_MEASUREMENT t) d WHERE {FILTER}
                </query>
            </dbQuery>
        </select>
        <insert>
            <dbCommand>
				<var name="CLASS_ID" type="String" direction="Input" default="PODS_ODORANT_MEASUREMENT" /> 
				<var name="POLICY" default="POLICY.xml#INSERT_PODS_SEM"  />
                <var name="EVENT_GUID" default="" type="String"/>
                <var name="TYPE_CL" default="UNKNOWN" type="String"/>
                <var name="MEASUREMENT_STATION_NAME" default="" type="String"/>
                <var name="MEASUREMENT" default="NULL" type="Decimal"/>
                <var name="DETERMINATION_DATE" default="" type="DateTime"/>
                <var name="DESCRIPTION" default="" type="String"/>
                <var name="SOURCE_GCL" default="UNKNOWN" type="String"/>
                <var name="COMMENTS" default="" type="String"/>
                <var name="ID" type="Int64" direction="Output" default="SELECT max(EVENT_ID) id FROM PODS.EVENT_RANGE"/>
                <var name="PODS_USER" type="String"/>
                <var name="USER_ID" default="-1" type="Int64"/>
                <query>
					DO $$
					DECLARE
					returnId integer;
                    BEGIN
                    INSERT INTO PODS.EVENT_RANGE (EVENT_GUID,FEATURE_ID,STATION_ID_BEGIN,STATION_ID_END,PODS_USER,CREATE_DATE,EFFECTIVE_FROM_DATE,CURRENT_INDICATOR_LF,POSITIONING_TYPE_CL)
                    VALUES('{EVENT_GUID}','ODOR_MEAS',0,0,NULLIF('{PODS_USER}',''),current_timestamp,current_timestamp,'Y','UNKNOWN')
                    RETURNING EVENT_ID INTO returnId;

                    INSERT INTO PODS.ODORANT_MEASUREMENT(EVENT_ID,EVENT_GUID,TYPE_CL,MEASUREMENT_STATION_NAME,MEASUREMENT,DETERMINATION_DATE,DESCRIPTION,SOURCE_GCL,COMMENTS)
                    VALUES(returnId,'{EVENT_GUID}',NULLIF('{TYPE_CL}',''),NULLIF('{MEASUREMENT_STATION_NAME}',''),{MEASUREMENT},'{DETERMINATION_DATE}',NULLIF('{DESCRIPTION}',''),NULLIF('{SOURCE_GCL}',''),NULLIF('{COMMENTS}',''));
					END $$;
                </query>
            </dbCommand>
        </insert>
        <update>
            <dbCommand>
				<param name="CLASS_ID" type="String" direction="Input" default="PODS_ODORANT_MEASUREMENT" /> 
				<var name="POLICY" default="POLICY.xml#UPDATE_PODS_SEM"  />
                <param name="EVENT_GUID" default="" type="String"/>
                <param name="TYPE_CL" default="UNKNOWN" type="String"/>
                <param name="MEASUREMENT_STATION_NAME" default="" type="String"/>
                <param name="MEASUREMENT" default="NULL" type="Decimal"/>
                <param name="DETERMINATION_DATE" default="" type="DateTime"/>
                <param name="DESCRIPTION" default="" type="String"/>
                <param name="SOURCE_GCL" default="UNKNOWN" type="String"/>
                <param name="COMMENTS" default="" type="String"/>
                <param name="ID" type="Int64"/>
                <param name="USER_ID" default="-1" type="Int64"/>
                <query>
                    UPDATE PODS.ODORANT_MEASUREMENT
                    SET EVENT_GUID=case when :EVENT_GUID is null then EVENT_GUID else :EVENT_GUID end,
                    TYPE_CL=case when :TYPE_CL is null then TYPE_CL else :TYPE_CL end,
					MEASUREMENT_STATION_NAME=case when :MEASUREMENT_STATION_NAME is null then MEASUREMENT_STATION_NAME else :MEASUREMENT_STATION_NAME end,
                    MEASUREMENT=case when :MEASUREMENT is null then MEASUREMENT else :MEASUREMENT end,
                    DETERMINATION_DATE=case when :DETERMINATION_DATE is null then DETERMINATION_DATE else :DETERMINATION_DATE end,
                    DESCRIPTION=case when :DESCRIPTION is null then DESCRIPTION else :DESCRIPTION end,
                    SOURCE_GCL=case when :SOURCE_GCL is null then SOURCE_GCL else :SOURCE_GCL end,
                    COMMENTS=case when :COMMENTS is null then COMMENTS else :COMMENTS end
                    WHERE EVENT_ID = :ID;
                </query>
            </dbCommand>
        </update>
        <delete>
            <dbCommand>
				<var name="CLASS_ID" type="String" direction="Input" default="PODS_ODORANT_MEASUREMENT" /> 
				<var name="POLICY" default="POLICY.xml#DELETE_PODS_SEM"  />
                <var name="ID" type="Int64"/>
                <var name="USER_ID" default="-1" type="Int64"/>
                <query>
					DO $$
                    BEGIN
                    UPDATE PODS.EVENT_RANGE
                    SET CURRENT_INDICATOR_LF='N'
                    WHERE EVENT_ID = {ID};

                    DELETE FROM PODS.ODORANT_MEASUREMENT
                    WHERE EVENT_ID = {ID};
                    DELETE FROM WEB50.LNK_GATE WHERE LEFT_OBJ_ID = 'PODS_ODORANT_MEASUREMENT/'||CAST({ID} AS VARCHAR(30)) OR RIGHT_OBJ_ID = 'PODS_ODORANT_MEASUREMENT/'||CAST({ID} AS VARCHAR(30)); END $$;
                </query>
            </dbCommand>
        </delete>
    </data>
    <data table="ODORANT_RANGE" schema="PODS" id="PODS_ODORANT_RANGE" comment="PODS.ODORANT_RANGE">
        <select>
            <dbQuery idField="ID">
                <param name="USER_ID" default="-1" type="Int64"/>
                <var name="FILTER" default="1=1"/>
                <var name="LPU_ACCESS_FILTER" default="SELECT srv_district_id FROM PODS.SRV_DISTRICT_GCL"/>
                <query>
                    SELECT * FROM (SELECT EVENT_ID ID, t.* FROM PODS.ODORANT_RANGE t) d WHERE {FILTER}
                </query>
            </dbQuery>
        </select>
        <insert>
            <dbCommand>
				<var name="CLASS_ID" type="String" direction="Input" default="PODS_ODORANT_RANGE" /> 
				<var name="POLICY" default="POLICY.xml#INSERT_PODS_SEM"  />
                <var name="EVENT_GUID" default="" type="String"/>
                <var name="TYPE_CL" default="UNKNOWN" type="String"/>
                <var name="DESCRIPTION" default="" type="String"/>
                <var name="ODORANT_GRANDFATHER_LF" default="" type="String"/>
                <var name="SOURCE_GCL" default="UNKNOWN" type="String"/>
                <var name="COMMENTS" default="" type="String"/>
                <var name="ID" type="Int64" direction="Output" default="SELECT max(EVENT_ID) id FROM PODS.EVENT_RANGE"/>
                <var name="PODS_USER" type="String"/>
                <var name="USER_ID" default="-1" type="Int64"/>
                <query>
					DO $$
					DECLARE
					returnId integer;
                    BEGIN
                    INSERT INTO PODS.EVENT_RANGE (EVENT_GUID,FEATURE_ID,STATION_ID_BEGIN,STATION_ID_END,PODS_USER,CREATE_DATE,EFFECTIVE_FROM_DATE,CURRENT_INDICATOR_LF,POSITIONING_TYPE_CL)
                    VALUES('{EVENT_GUID}','ODORANT_RANGE',0,0,NULLIF('{PODS_USER}',''),current_timestamp,current_timestamp,'Y','UNKNOWN')
                    RETURNING EVENT_ID INTO returnId;

                    INSERT INTO PODS.ODORANT_RANGE(EVENT_ID,EVENT_GUID,TYPE_CL,DESCRIPTION,ODORANT_GRANDFATHER_LF,SOURCE_GCL,COMMENTS)
                    VALUES(returnId,'{EVENT_GUID}',NULLIF('{TYPE_CL}',''),NULLIF('{DESCRIPTION}',''),'{ODORANT_GRANDFATHER_LF}',NULLIF('{SOURCE_GCL}',''),NULLIF('{COMMENTS}',''));
					END $$;
                </query>
            </dbCommand>
        </insert>
        <update>
            <dbCommand>
				<param name="CLASS_ID" type="String" direction="Input" default="PODS_ODORANT_RANGE" /> 
				<var name="POLICY" default="POLICY.xml#UPDATE_PODS_SEM"  />
                <param name="EVENT_GUID" default="" type="String"/>
                <param name="TYPE_CL" default="UNKNOWN" type="String"/>
                <param name="DESCRIPTION" default="" type="String"/>
                <param name="ODORANT_GRANDFATHER_LF" default="" type="String"/>
                <param name="SOURCE_GCL" default="UNKNOWN" type="String"/>
                <param name="COMMENTS" default="" type="String"/>
                <param name="ID" type="Int64"/>
                <param name="USER_ID" default="-1" type="Int64"/>
                <query>
                    UPDATE PODS.ODORANT_RANGE
                    SET EVENT_GUID=case when :EVENT_GUID is null then EVENT_GUID else :EVENT_GUID end,
                    TYPE_CL=case when :TYPE_CL is null then TYPE_CL else :TYPE_CL end,
                    DESCRIPTION=case when :DESCRIPTION is null then DESCRIPTION else :DESCRIPTION end,
                    ODORANT_GRANDFATHER_LF=case when :ODORANT_GRANDFATHER_LF is null then ODORANT_GRANDFATHER_LF else :ODORANT_GRANDFATHER_LF end,
                    SOURCE_GCL=case when :SOURCE_GCL is null then SOURCE_GCL else :SOURCE_GCL end,
                    COMMENTS=case when :COMMENTS is null then COMMENTS else :COMMENTS end
                    WHERE EVENT_ID = :ID;
                </query>
            </dbCommand>
        </update>
        <delete>
            <dbCommand>
				<var name="CLASS_ID" type="String" direction="Input" default="PODS_ODORANT_RANGE" /> 
				<var name="POLICY" default="POLICY.xml#DELETE_PODS_SEM"  />
                <var name="ID" type="Int64"/>
                <var name="USER_ID" default="-1" type="Int64"/>
                <query>
					DO $$
                    BEGIN
                    UPDATE PODS.EVENT_RANGE
                    SET CURRENT_INDICATOR_LF='N'
                    WHERE EVENT_ID = {ID};

                    DELETE FROM PODS.ODORANT_RANGE
                    WHERE EVENT_ID = {ID};
                    DELETE FROM WEB50.LNK_GATE WHERE LEFT_OBJ_ID = 'PODS_ODORANT_RANGE/'||CAST({ID} AS VARCHAR(30)) OR RIGHT_OBJ_ID = 'PODS_ODORANT_RANGE/'||CAST({ID} AS VARCHAR(30)); END $$;
                </query>
            </dbCommand>
        </delete>
    </data>
    <data table="OFFSHORE_RISER" schema="PODS" id="PODS_OFFSHORE_RISER" comment="PODS.OFFSHORE_RISER">
        <select>
            <dbQuery idField="ID">
                <param name="USER_ID" default="-1" type="Int64"/>
                <var name="FILTER" default="1=1"/>
                <var name="LPU_ACCESS_FILTER" default="SELECT srv_district_id FROM PODS.SRV_DISTRICT_GCL"/>
                <query>
                    SELECT * FROM (SELECT EVENT_ID ID, t.* FROM PODS.OFFSHORE_RISER t) d WHERE {FILTER}
                </query>
            </dbQuery>
        </select>
        <insert>
            <dbCommand>
				<var name="CLASS_ID" type="String" direction="Input" default="PODS_OFFSHORE_RISER" /> 
				<var name="POLICY" default="POLICY.xml#INSERT_PODS_SEM"  />
                <var name="EVENT_GUID" default="" type="String"/>
                <var name="TYPE_CL" default="UNKNOWN" type="String"/>
                <var name="PART_NUMBER" default="" type="String"/>
                <var name="SERIAL_NUMBER" default="" type="String"/>
                <var name="NOMINAL_DIAMETER_GCL" default="0" type="Decimal"/>
                <var name="NOMINAL_WALL_THICKNESS_GCL" default="0" type="Decimal"/>
                <var name="MATERIAL_GRADE_CL" default="UNKNOWN" type="String"/>
                <var name="DESIGN_FACTOR" default="NULL" type="Decimal"/>
                <var name="DEPARTURE_ANGLE" default="NULL" type="Decimal"/>
                <var name="MANUFACTURER_CL" default="UNKNOWN" type="String"/>
                <var name="DATE_MANUFACTURED" default="" type="DateTime"/>
                <var name="MAXIMUM_DEPTH" default="NULL" type="Decimal"/>
                <var name="DEPTH_AT_TOUCHDOWN" default="NULL" type="Decimal"/>
                <var name="DATE_INSTALLED" default="" type="DateTime"/>
                <var name="MATERIAL_CL" default="UNKNOWN" type="String"/>
                <var name="SPECIFICATION_CL" default="UNKNOWN" type="String"/>
                <var name="PIPE_LONG_SEAM_GCL" default="UNKNOWN" type="String"/>
                <var name="NOMINAL_PRESSURE_RATING" default="NULL" type="Decimal"/>
                <var name="MILL_TEST_PRESSURE" default="NULL" type="Decimal"/>
                <var name="DESCRIPTION" default="" type="String"/>
                <var name="SOURCE_GCL" default="UNKNOWN" type="String"/>
                <var name="COMMENTS" default="" type="String"/>
                <var name="ID" type="Int64" direction="Output" default="SELECT max(EVENT_ID) id FROM PODS.EVENT_RANGE"/>
                <var name="PODS_USER" type="String"/>
                <var name="USER_ID" default="-1" type="Int64"/>
                <query>
					DO $$
					DECLARE
					returnId integer;
                    BEGIN
                    INSERT INTO PODS.EVENT_RANGE (EVENT_GUID,FEATURE_ID,STATION_ID_BEGIN,STATION_ID_END,PODS_USER,CREATE_DATE,EFFECTIVE_FROM_DATE,CURRENT_INDICATOR_LF,POSITIONING_TYPE_CL)
                    VALUES('{EVENT_GUID}','OFFSHORE_RISER',0,0,NULLIF('{PODS_USER}',''),current_timestamp,current_timestamp,'Y','UNKNOWN')
                    RETURNING EVENT_ID INTO returnId;

                    INSERT INTO PODS.OFFSHORE_RISER(EVENT_ID,EVENT_GUID,TYPE_CL,PART_NUMBER,SERIAL_NUMBER,NOMINAL_DIAMETER_GCL,NOMINAL_WALL_THICKNESS_GCL,MATERIAL_GRADE_CL,DESIGN_FACTOR,DEPARTURE_ANGLE,MANUFACTURER_CL,DATE_MANUFACTURED,MAXIMUM_DEPTH,DEPTH_AT_TOUCHDOWN,DATE_INSTALLED,MATERIAL_CL,SPECIFICATION_CL,PIPE_LONG_SEAM_GCL,NOMINAL_PRESSURE_RATING,MILL_TEST_PRESSURE,DESCRIPTION,SOURCE_GCL,COMMENTS)
                    VALUES(returnId,'{EVENT_GUID}',NULLIF('{TYPE_CL}',''),NULLIF('{PART_NUMBER}',''),NULLIF('{SERIAL_NUMBER}',''),{NOMINAL_DIAMETER_GCL},{NOMINAL_WALL_THICKNESS_GCL},NULLIF('{MATERIAL_GRADE_CL}',''),{DESIGN_FACTOR},{DEPARTURE_ANGLE},NULLIF('{MANUFACTURER_CL}',''),'{DATE_MANUFACTURED}',{MAXIMUM_DEPTH},{DEPTH_AT_TOUCHDOWN},'{DATE_INSTALLED}',NULLIF('{MATERIAL_CL}',''),NULLIF('{SPECIFICATION_CL}',''),NULLIF('{PIPE_LONG_SEAM_GCL}',''),{NOMINAL_PRESSURE_RATING},{MILL_TEST_PRESSURE},NULLIF('{DESCRIPTION}',''),NULLIF('{SOURCE_GCL}',''),NULLIF('{COMMENTS}',''));
					END $$;
                </query>
            </dbCommand>
        </insert>
        <update>
            <dbCommand>
				<param name="CLASS_ID" type="String" direction="Input" default="PODS_OFFSHORE_RISER" /> 
				<var name="POLICY" default="POLICY.xml#UPDATE_PODS_SEM"  />
                <param name="EVENT_GUID" default="" type="String"/>
                <param name="TYPE_CL" default="UNKNOWN" type="String"/>
                <param name="PART_NUMBER" default="" type="String"/>
                <param name="SERIAL_NUMBER" default="" type="String"/>
                <param name="NOMINAL_DIAMETER_GCL" default="0" type="Decimal"/>
                <param name="NOMINAL_WALL_THICKNESS_GCL" default="0" type="Decimal"/>
                <param name="MATERIAL_GRADE_CL" default="UNKNOWN" type="String"/>
                <param name="DESIGN_FACTOR" default="NULL" type="Decimal"/>
                <param name="DEPARTURE_ANGLE" default="NULL" type="Decimal"/>
                <param name="MANUFACTURER_CL" default="UNKNOWN" type="String"/>
                <param name="DATE_MANUFACTURED" default="" type="DateTime"/>
                <param name="MAXIMUM_DEPTH" default="NULL" type="Decimal"/>
                <param name="DEPTH_AT_TOUCHDOWN" default="NULL" type="Decimal"/>
                <param name="DATE_INSTALLED" default="" type="DateTime"/>
                <param name="MATERIAL_CL" default="UNKNOWN" type="String"/>
                <param name="SPECIFICATION_CL" default="UNKNOWN" type="String"/>
                <param name="PIPE_LONG_SEAM_GCL" default="UNKNOWN" type="String"/>
                <param name="NOMINAL_PRESSURE_RATING" default="NULL" type="Decimal"/>
                <param name="MILL_TEST_PRESSURE" default="NULL" type="Decimal"/>
                <param name="DESCRIPTION" default="" type="String"/>
                <param name="SOURCE_GCL" default="UNKNOWN" type="String"/>
                <param name="COMMENTS" default="" type="String"/>
                <param name="ID" type="Int64"/>
                <param name="USER_ID" default="-1" type="Int64"/>
                <query>
                    UPDATE PODS.OFFSHORE_RISER
                    SET 
					EVENT_GUID=case when :EVENT_GUID is null then EVENT_GUID else :EVENT_GUID end,
                    TYPE_CL=case when :TYPE_CL is null then TYPE_CL else :TYPE_CL end,
                    PART_NUMBER=case when :PART_NUMBER is null then PART_NUMBER else :PART_NUMBER end,
                    SERIAL_NUMBER=case when :SERIAL_NUMBER is null then SERIAL_NUMBER else :SERIAL_NUMBER end,
                    NOMINAL_DIAMETER_GCL=case when :NOMINAL_DIAMETER_GCL is null then NOMINAL_DIAMETER_GCL else :NOMINAL_DIAMETER_GCL end,
                    NOMINAL_WALL_THICKNESS_GCL=case when :NOMINAL_WALL_THICKNESS_GCL is null then NOMINAL_WALL_THICKNESS_GCL else :NOMINAL_WALL_THICKNESS_GCL end,
					MATERIAL_GRADE_CL=case when :MATERIAL_GRADE_CL is null then MATERIAL_GRADE_CL else :MATERIAL_GRADE_CL end,
					DESIGN_FACTOR=case when :DESIGN_FACTOR is null then DESIGN_FACTOR else :DESIGN_FACTOR end,
					DEPARTURE_ANGLE=case when :DEPARTURE_ANGLE is null then DEPARTURE_ANGLE else :DEPARTURE_ANGLE end,
                    MANUFACTURER_CL=case when :MANUFACTURER_CL is null then MANUFACTURER_CL else :MANUFACTURER_CL end,
                    DATE_MANUFACTURED=case when :DATE_MANUFACTURED is null then DATE_MANUFACTURED else :DATE_MANUFACTURED end,
					MAXIMUM_DEPTH=case when :MAXIMUM_DEPTH is null then MAXIMUM_DEPTH else :MAXIMUM_DEPTH end,
					DEPTH_AT_TOUCHDOWN=case when :DEPTH_AT_TOUCHDOWN is null then DEPTH_AT_TOUCHDOWN else :DEPTH_AT_TOUCHDOWN end,
                    DATE_INSTALLED=case when :DATE_INSTALLED is null then DATE_INSTALLED else :DATE_INSTALLED end,
					MATERIAL_CL=case when :MATERIAL_CL is null then MATERIAL_CL else :MATERIAL_CL end,
                    SPECIFICATION_CL=case when :SPECIFICATION_CL is null then SPECIFICATION_CL else :SPECIFICATION_CL end,
                    PIPE_LONG_SEAM_GCL=case when :PIPE_LONG_SEAM_GCL is null then PIPE_LONG_SEAM_GCL else :PIPE_LONG_SEAM_GCL end,
                    NOMINAL_PRESSURE_RATING=case when :NOMINAL_PRESSURE_RATING is null then NOMINAL_PRESSURE_RATING else :NOMINAL_PRESSURE_RATING end,
                    MILL_TEST_PRESSURE=case when :MILL_TEST_PRESSURE is null then MILL_TEST_PRESSURE else :MILL_TEST_PRESSURE end,
                    DESCRIPTION=case when :DESCRIPTION is null then DESCRIPTION else :DESCRIPTION end,
                    SOURCE_GCL=case when :SOURCE_GCL is null then SOURCE_GCL else :SOURCE_GCL end,
                    COMMENTS=case when :COMMENTS is null then COMMENTS else :COMMENTS end
                    WHERE EVENT_ID = :ID;
                </query>
            </dbCommand>
        </update>
        <delete>
            <dbCommand>
				<var name="CLASS_ID" type="String" direction="Input" default="PODS_OFFSHORE_RISER" /> 
				<var name="POLICY" default="POLICY.xml#DELETE_PODS_SEM"  />
                <var name="ID" type="Int64"/>
                <var name="USER_ID" default="-1" type="Int64"/>
                <query>
					DO $$
                    BEGIN
                    UPDATE PODS.EVENT_RANGE
                    SET CURRENT_INDICATOR_LF='N'
                    WHERE EVENT_ID = {ID};

                    DELETE FROM PODS.OFFSHORE_RISER
                    WHERE EVENT_ID = {ID};
                    DELETE FROM WEB50.LNK_GATE WHERE LEFT_OBJ_ID = 'PODS_OFFSHORE_RISER/'||CAST({ID} AS VARCHAR(30)) OR RIGHT_OBJ_ID = 'PODS_OFFSHORE_RISER/'||CAST({ID} AS VARCHAR(30)); END $$;
                </query>
            </dbCommand>
        </delete>
    </data>
    <data table="OWNER_OPERATOR_RANGE" schema="PODS" id="PODS_OWNER_OPERATOR_RANGE" comment="PODS.OWNER_OPERATOR_RANGE">
        <select>
            <dbQuery idField="ID">
                <param name="USER_ID" default="-1" type="Int64"/>
                <var name="FILTER" default="1=1"/>
                <var name="LPU_ACCESS_FILTER" default="SELECT srv_district_id FROM PODS.SRV_DISTRICT_GCL"/>
                <query>
                    SELECT * FROM (SELECT EVENT_ID ID, t.* FROM PODS.OWNER_OPERATOR_RANGE t) d WHERE {FILTER}
                </query>
            </dbQuery>
        </select>
        <insert>
            <dbCommand>
				<var name="CLASS_ID" type="String" direction="Input" default="PODS_OWNER_OPERATOR_RANGE" /> 
				<var name="POLICY" default="POLICY.xml#INSERT_PODS_SEM"  />
                <var name="EVENT_GUID" default="" type="String"/>
                <var name="COMPANY_GCL" default="UNKNOWN" type="String"/>
                <var name="TYPE_CL" default="UNKNOWN" type="String"/>
                <var name="PERCENT_INTEREST" default="NULL" type="Decimal"/>
                <var name="DESCRIPTION" default="" type="String"/>
                <var name="SOURCE_GCL" default="UNKNOWN" type="String"/>
                <var name="COMMENTS" default="" type="String"/>
                <var name="ID" type="Int64" direction="Output" default="SELECT max(EVENT_ID) id FROM PODS.EVENT_RANGE"/>
                <var name="PODS_USER" type="String"/>
                <var name="USER_ID" default="-1" type="Int64"/>
                <query>
					DO $$
					DECLARE
					returnId integer;
                    BEGIN
                    INSERT INTO PODS.EVENT_RANGE (EVENT_GUID,FEATURE_ID,STATION_ID_BEGIN,STATION_ID_END,PODS_USER,CREATE_DATE,EFFECTIVE_FROM_DATE,CURRENT_INDICATOR_LF,POSITIONING_TYPE_CL)
                    VALUES('{EVENT_GUID}','OWNER_OPER_RNG',0,0,NULLIF('{PODS_USER}',''),current_timestamp,current_timestamp,'Y','UNKNOWN')
                    RETURNING EVENT_ID INTO returnId;

                    INSERT INTO PODS.OWNER_OPERATOR_RANGE(EVENT_ID,EVENT_GUID,COMPANY_GCL,TYPE_CL,PERCENT_INTEREST,DESCRIPTION,SOURCE_GCL,COMMENTS)
                    VALUES(returnId,'{EVENT_GUID}',NULLIF('{COMPANY_GCL}',''),NULLIF('{TYPE_CL}',''),{PERCENT_INTEREST},NULLIF('{DESCRIPTION}',''),NULLIF('{SOURCE_GCL}',''),NULLIF('{COMMENTS}',''));
					END $$;
                </query>
            </dbCommand>
        </insert>
        <update>
            <dbCommand>
				<param name="CLASS_ID" type="String" direction="Input" default="PODS_OWNER_OPERATOR_RANGE" /> 
				<var name="POLICY" default="POLICY.xml#UPDATE_PODS_SEM"  />
                <param name="EVENT_GUID" default="" type="String"/>
                <param name="COMPANY_GCL" default="UNKNOWN" type="String"/>
                <param name="TYPE_CL" default="UNKNOWN" type="String"/>
                <param name="PERCENT_INTEREST" default="NULL" type="Decimal"/>
                <param name="DESCRIPTION" default="" type="String"/>
                <param name="SOURCE_GCL" default="UNKNOWN" type="String"/>
                <param name="COMMENTS" default="" type="String"/>
                <param name="ID" type="Int64"/>
                <param name="USER_ID" default="-1" type="Int64"/>
                <query>
                    UPDATE PODS.OWNER_OPERATOR_RANGE
                    SET 
					EVENT_GUID=case when :EVENT_GUID is null then EVENT_GUID else :EVENT_GUID end,
                    COMPANY_GCL=case when :COMPANY_GCL is null then COMPANY_GCL else :COMPANY_GCL end,
                    TYPE_CL=case when :TYPE_CL is null then TYPE_CL else :TYPE_CL end,
					PERCENT_INTEREST=case when :PERCENT_INTEREST is null then PERCENT_INTEREST else :PERCENT_INTEREST end,
                    DESCRIPTION=case when :DESCRIPTION is null then DESCRIPTION else :DESCRIPTION end,
                    SOURCE_GCL=case when :SOURCE_GCL is null then SOURCE_GCL else :SOURCE_GCL end,
                    COMMENTS=case when :COMMENTS is null then COMMENTS else :COMMENTS end
                    WHERE EVENT_ID = :ID;
                </query>
            </dbCommand>
        </update>
        <delete>
            <dbCommand>
				<var name="CLASS_ID" type="String" direction="Input" default="PODS_OWNER_OPERATOR_RANGE" /> 
				<var name="POLICY" default="POLICY.xml#DELETE_PODS_SEM"  />
                <var name="ID" type="Int64"/>
                <var name="USER_ID" default="-1" type="Int64"/>
                <query>
					DO $$
                    BEGIN
                    UPDATE PODS.EVENT_RANGE
                    SET CURRENT_INDICATOR_LF='N'
                    WHERE EVENT_ID = {ID};

                    DELETE FROM PODS.OWNER_OPERATOR_RANGE
                    WHERE EVENT_ID = {ID};
                    DELETE FROM WEB50.LNK_GATE WHERE LEFT_OBJ_ID = 'PODS_OWNER_OPERATOR_RANGE/'||CAST({ID} AS VARCHAR(30)) OR RIGHT_OBJ_ID = 'PODS_OWNER_OPERATOR_RANGE/'||CAST({ID} AS VARCHAR(30)); 
					END $$;
                </query>
            </dbCommand>
        </delete>
    </data>
    <data table="PHYSICAL_INSPECTION" schema="PODS" id="PODS_PHYSICAL_INSPECTION" comment="PODS.PHYSICAL_INSPECTION">
        <select>
            <dbQuery idField="ID">
                <param name="USER_ID" default="-1" type="Int64"/>
                <var name="FILTER" default="1=1"/>
                <var name="LPU_ACCESS_FILTER" default="SELECT srv_district_id FROM PODS.SRV_DISTRICT_GCL"/>
                <query>
                    SELECT * FROM (SELECT EVENT_ID ID, t.* FROM PODS.PHYSICAL_INSPECTION t) d WHERE {FILTER}
                </query>
            </dbQuery>
        </select>
        <insert>
            <dbCommand>
				<var name="CLASS_ID" type="String" direction="Input" default="PODS_PHYSICAL_INSPECTION" /> 
				<var name="POLICY" default="POLICY.xml#INSERT_PODS_SEM"  />
                <var name="EVENT_GUID" default="" type="String"/>
                <var name="REASON_CL" default="UNKNOWN" type="String"/>
                <var name="CLASS_CL" default="UNKNOWN" type="String"/>
                <var name="INSPECTION_START_DATE" default="" type="DateTime"/>
                <var name="INSPECTION_END_DATE" default="" type="DateTime"/>
                <var name="PERFORMED_BY" default="" type="String"/>
                <var name="INSPECTION_TYPE_GCL" default="UNKNOWN" type="String"/>
                <var name="PHYSICAL_INSPECTION_IDENTIFIER" default="" type="String"/>
                <var name="DESCRIPTION" default="" type="String"/>
                <var name="SOURCE_GCL" default="UNKNOWN" type="String"/>
                <var name="COMMENTS" default="" type="String"/>
                <var name="ID" type="Int64" direction="Output" default="SELECT max(EVENT_ID) id FROM PODS.EVENT_RANGE"/>
                <var name="PODS_USER" type="String"/>
                <var name="USER_ID" default="-1" type="Int64"/>
                <query>
					DO $$
					DECLARE
					returnId integer;
                    BEGIN
                    INSERT INTO PODS.EVENT_RANGE (EVENT_GUID,FEATURE_ID,STATION_ID_BEGIN,STATION_ID_END,PODS_USER,CREATE_DATE,EFFECTIVE_FROM_DATE,CURRENT_INDICATOR_LF,POSITIONING_TYPE_CL)
                    VALUES('{EVENT_GUID}','PHYS_INSP',0,0,NULLIF('{PODS_USER}',''),current_timestamp,current_timestamp,'Y','UNKNOWN')
                    RETURNING EVENT_ID INTO returnId;

                    INSERT INTO PODS.PHYSICAL_INSPECTION(EVENT_ID,EVENT_GUID,REASON_CL,CLASS_CL,INSPECTION_START_DATE,INSPECTION_END_DATE,PERFORMED_BY,INSPECTION_TYPE_GCL,PHYSICAL_INSPECTION_IDENTIFIER,DESCRIPTION,SOURCE_GCL,COMMENTS)
                    VALUES(returnId,'{EVENT_GUID}',NULLIF('{REASON_CL}',''),NULLIF('{CLASS_CL}',''),'{INSPECTION_START_DATE}','{INSPECTION_END_DATE}',NULLIF('{PERFORMED_BY}',''),NULLIF('{INSPECTION_TYPE_GCL}',''),NULLIF('{PHYSICAL_INSPECTION_IDENTIFIER}',''),NULLIF('{DESCRIPTION}',''),NULLIF('{SOURCE_GCL}',''),NULLIF('{COMMENTS}',''));
					END $$;
                </query>
            </dbCommand>
        </insert>
        <update>
            <dbCommand>
				<param name="CLASS_ID" type="String" direction="Input" default="PODS_PHYSICAL_INSPECTION" /> 
				<var name="POLICY" default="POLICY.xml#UPDATE_PODS_SEM"  />
                <param name="EVENT_GUID" default="" type="String"/>
                <param name="REASON_CL" default="UNKNOWN" type="String"/>
                <param name="CLASS_CL" default="UNKNOWN" type="String"/>
                <param name="INSPECTION_START_DATE" default="" type="DateTime"/>
                <param name="INSPECTION_END_DATE" default="" type="DateTime"/>
                <param name="PERFORMED_BY" default="" type="String"/>
                <param name="INSPECTION_TYPE_GCL" default="UNKNOWN" type="String"/>
                <param name="PHYSICAL_INSPECTION_IDENTIFIER" default="" type="String"/>
                <param name="DESCRIPTION" default="" type="String"/>
                <param name="SOURCE_GCL" default="UNKNOWN" type="String"/>
                <param name="COMMENTS" default="" type="String"/>
                <param name="ID" type="Int64"/>
                <param name="USER_ID" default="-1" type="Int64"/>
                <query>
                    UPDATE PODS.PHYSICAL_INSPECTION
                    SET 
					EVENT_GUID=case when :EVENT_GUID is null then EVENT_GUID else :EVENT_GUID end,
                    REASON_CL=case when :REASON_CL is null then REASON_CL else :REASON_CL end,
                    REASON_CL=case when :REASON_CL is null then REASON_CL else :REASON_CL end,
                    CLASS_CL=case when :CLASS_CL is null then CLASS_CL else :CLASS_CL end,
                    INSPECTION_START_DATE=case when :INSPECTION_START_DATE is null then INSPECTION_START_DATE else :INSPECTION_START_DATE end,
                    INSPECTION_END_DATE=case when :INSPECTION_END_DATE is null then INSPECTION_END_DATE else :INSPECTION_END_DATE end,
                    PERFORMED_BY=case when :PERFORMED_BY is null then PERFORMED_BY else :PERFORMED_BY end,
                    INSPECTION_TYPE_GCL=case when :INSPECTION_TYPE_GCL is null then INSPECTION_TYPE_GCL else :INSPECTION_TYPE_GCL end,
                    PHYSICAL_INSPECTION_IDENTIFIER=case when :PHYSICAL_INSPECTION_IDENTIFIER is null then PHYSICAL_INSPECTION_IDENTIFIER else :PHYSICAL_INSPECTION_IDENTIFIER end,
                    DESCRIPTION=case when :DESCRIPTION is null then DESCRIPTION else :DESCRIPTION end,
                    SOURCE_GCL=case when :SOURCE_GCL is null then SOURCE_GCL else :SOURCE_GCL end,
                    COMMENTS=case when :COMMENTS is null then COMMENTS else :COMMENTS end
                    WHERE EVENT_ID = :ID;
                </query>
            </dbCommand>
        </update>
        <delete>
            <dbCommand>
				<var name="CLASS_ID" type="String" direction="Input" default="PODS_PHYSICAL_INSPECTION" /> 
				<var name="POLICY" default="POLICY.xml#DELETE_PODS_SEM"  />
                <var name="ID" type="Int64"/>
                <var name="USER_ID" default="-1" type="Int64"/>
                <query>
					DO $$
					DECLARE


                    BEGIN

                    UPDATE PODS.EVENT_RANGE
                    SET CURRENT_INDICATOR_LF='N'
                    WHERE EVENT_ID in (SELECT EVENT_ID
                    FROM PODS.PI_ANODE_READING
                    WHERE PI_CP_EVENT_ID IN (SELECT EVENT_ID
                    FROM PODS.PI_CP_INSPECTION
                    WHERE PI_EVENT_ID = {ID}));

                    DELETE
                    FROM WEB50.LNK_GATE
                    WHERE LEFT_OBJ_ID IN (SELECT 'PODS_PI_ANODE_READING/'||CAST(EVENT_ID AS VARCHAR(30))
                    FROM PODS.PI_ANODE_READING
                    WHERE PI_CP_EVENT_ID IN (SELECT EVENT_ID
                    FROM PODS.PI_CP_INSPECTION
                    WHERE PI_EVENT_ID = {ID}))
                    OR RIGHT_OBJ_ID IN (SELECT 'PODS_PI_ANODE_READING/'||CAST(EVENT_ID AS VARCHAR(30))
                    FROM PODS.PI_ANODE_READING
                    WHERE PI_CP_EVENT_ID IN (SELECT EVENT_ID
                    FROM PODS.PI_CP_INSPECTION
                    WHERE PI_EVENT_ID = {ID}));

                    BEGIN
                    /* Чистим GATE с расчетом на будущее, пока эта таблица не заполняется */
                    EXECUTE $OP$DELETE
                    FROM GIS_INTEGRATION50.GATE
                    WHERE TABLE_NAME = 'PI_ANODE_READING'
                    AND KEY_FIELDS = 'EVENT_ID'
                    AND KEY_VALUES in (SELECT EVENT_ID
                    FROM PODS.PI_ANODE_READING
                    WHERE PI_CP_EVENT_ID IN (SELECT EVENT_ID
                    FROM PODS.PI_CP_INSPECTION
                    WHERE PI_EVENT_ID =$1))$OP$
                    USING {ID};
                    EXCEPTION WHEN undefined_table
                    THEN NULL;
                    WHEN OTHERS
                    THEN RAISE;
                    END;

                    DELETE
                    FROM PODS.PI_ANODE_READING
                    WHERE PI_CP_EVENT_ID IN (SELECT EVENT_ID
                    FROM PODS.PI_CP_INSPECTION
                    WHERE PI_EVENT_ID = {ID});


                    UPDATE PODS.EVENT_RANGE
                    SET CURRENT_INDICATOR_LF='N'
                    WHERE EVENT_ID in (SELECT EVENT_ID
                    FROM PODS.PI_BOND_READING
                    WHERE PI_CP_EVENT_ID IN (SELECT EVENT_ID
                    FROM PODS.PI_CP_INSPECTION
                    WHERE PI_EVENT_ID = {ID}));

                    DELETE
                    FROM WEB50.LNK_GATE
                    WHERE LEFT_OBJ_ID IN (SELECT 'PODS_PI_BOND_READING/'||CAST(EVENT_ID AS VARCHAR(30))
                    FROM PODS.PI_BOND_READING
                    WHERE PI_CP_EVENT_ID IN (SELECT EVENT_ID
                    FROM PODS.PI_CP_INSPECTION
                    WHERE PI_EVENT_ID = {ID}))
                    OR RIGHT_OBJ_ID IN (SELECT 'PODS_PI_BOND_READING/'||CAST(EVENT_ID AS VARCHAR(30))
                    FROM PODS.PI_BOND_READING
                    WHERE PI_CP_EVENT_ID IN (SELECT EVENT_ID
                    FROM PODS.PI_CP_INSPECTION
                    WHERE PI_EVENT_ID = {ID}));

                    BEGIN
                    /* Чистим GATE с расчетом на будущее, пока эта таблица не заполняется */
                    EXECUTE $OP$DELETE
                    FROM GIS_INTEGRATION50.GATE
                    WHERE TABLE_NAME = 'PI_BOND_READING'
                    AND KEY_FIELDS = 'EVENT_ID'
                    AND KEY_VALUES in (SELECT EVENT_ID
                    FROM PODS.PI_BOND_READING
                    WHERE PI_CP_EVENT_ID IN (SELECT EVENT_ID
                    FROM PODS.PI_CP_INSPECTION
                    WHERE PI_EVENT_ID =$1))$OP$
                    USING {ID};
                    EXCEPTION WHEN undefined_table
                    THEN NULL;
                    WHEN OTHERS
                    THEN RAISE;
                    END;

                    DELETE
                    FROM PODS.PI_BOND_READING
                    WHERE PI_CP_EVENT_ID IN (SELECT EVENT_ID
                    FROM PODS.PI_CP_INSPECTION
                    WHERE PI_EVENT_ID = {ID});

                    UPDATE PODS.EVENT_RANGE
                    SET CURRENT_INDICATOR_LF='N'
                    WHERE EVENT_ID in (SELECT EVENT_ID
                    FROM PODS.PI_CASING_READING
                    WHERE PI_CP_EVENT_ID IN (SELECT EVENT_ID
                    FROM PODS.PI_CP_INSPECTION
                    WHERE PI_EVENT_ID = {ID}));

                    DELETE
                    FROM WEB50.LNK_GATE
                    WHERE LEFT_OBJ_ID IN (SELECT 'PODS_PI_CASING_READING/'||CAST(EVENT_ID AS VARCHAR(30))
                    FROM PODS.PI_CASING_READING
                    WHERE PI_CP_EVENT_ID  IN (SELECT EVENT_ID
                    FROM PODS.PI_CP_INSPECTION
                    WHERE PI_EVENT_ID = {ID}))
                    OR RIGHT_OBJ_ID IN (SELECT 'PODS_PI_CASING_READING/'||CAST(EVENT_ID AS VARCHAR(30))
                    FROM PODS.PI_CASING_READING
                    WHERE PI_CP_EVENT_ID  IN (SELECT EVENT_ID
                    FROM PODS.PI_CP_INSPECTION
                    WHERE PI_EVENT_ID = {ID}));

                    BEGIN
                    /* Чистим GATE с расчетом на будущее, пока эта таблица не заполняется */
                    EXECUTE $OP$DELETE
                    FROM GIS_INTEGRATION50.GATE
                    WHERE TABLE_NAME = 'PI_CASING_READING'
                    AND KEY_FIELDS = 'EVENT_ID'
                    AND KEY_VALUES in (SELECT EVENT_ID
                    FROM PODS.PI_CASING_READING
                    WHERE PI_CP_EVENT_ID IN (SELECT EVENT_ID
                    FROM PODS.PI_CP_INSPECTION
                    WHERE PI_EVENT_ID =$1))$OP$
                    USING {ID};
                    EXCEPTION WHEN undefined_table
                    THEN NULL;
                    WHEN OTHERS
                    THEN RAISE;
                    END;

                    DELETE
                    FROM PODS.PI_CASING_READING
                    WHERE PI_CP_EVENT_ID IN (SELECT EVENT_ID
                    FROM PODS.PI_CP_INSPECTION
                    WHERE PI_EVENT_ID = {ID});


                    UPDATE PODS.EVENT_RANGE
                    SET CURRENT_INDICATOR_LF='N'
                    WHERE EVENT_ID in (SELECT EVENT_ID
                    FROM PODS.PI_CIS_READING
                    WHERE PI_CP_EVENT_ID IN (SELECT EVENT_ID
                    FROM PODS.PI_CP_INSPECTION
                    WHERE PI_EVENT_ID = {ID}));

                    DELETE
                    FROM WEB50.LNK_GATE
                    WHERE LEFT_OBJ_ID IN (SELECT 'PODS_PI_CIS_READING/'||CAST(EVENT_ID AS VARCHAR(30))
                    FROM PODS.PI_CIS_READING
                    WHERE PI_CP_EVENT_ID IN (SELECT EVENT_ID
                    FROM PODS.PI_CP_INSPECTION
                    WHERE PI_EVENT_ID = {ID}))
                    OR RIGHT_OBJ_ID IN (SELECT 'PODS_PI_CIS_READING/'||CAST(EVENT_ID AS VARCHAR(30))
                    FROM PODS.PI_CIS_READING
                    WHERE PI_CP_EVENT_ID IN (SELECT EVENT_ID
                    FROM PODS.PI_CP_INSPECTION
                    WHERE PI_EVENT_ID = {ID}));

                    BEGIN
                    /* Чистим GATE с расчетом на будущее, пока эта таблица не заполняется */
                    EXECUTE $OP$DELETE
                    FROM GIS_INTEGRATION50.GATE
                    WHERE TABLE_NAME = 'PI_CIS_READING'
                    AND KEY_FIELDS = 'EVENT_ID'
                    AND KEY_VALUES in (SELECT EVENT_ID
                    FROM PODS.PI_CIS_READING
                    WHERE PI_CP_EVENT_ID IN (SELECT EVENT_ID
                    FROM PODS.PI_CP_INSPECTION
                    WHERE PI_EVENT_ID =$1))$OP$
                    USING {ID};
                    EXCEPTION WHEN undefined_table
                    THEN NULL;
                    WHEN OTHERS
                    THEN RAISE;
                    END;

                    DELETE
                    FROM PODS.PI_CIS_READING
                    WHERE PI_CP_EVENT_ID IN (SELECT EVENT_ID
                    FROM PODS.PI_CP_INSPECTION
                    WHERE PI_EVENT_ID = {ID});

                    UPDATE PODS.EVENT_RANGE
                    SET CURRENT_INDICATOR_LF='N'
                    WHERE EVENT_ID in (SELECT EVENT_ID
                    FROM PODS.PI_CP_READING
                    WHERE PI_CP_EVENT_ID IN (SELECT EVENT_ID
                    FROM PODS.PI_CP_INSPECTION
                    WHERE PI_EVENT_ID = {ID}));

                    DELETE
                    FROM WEB50.LNK_GATE
                    WHERE LEFT_OBJ_ID IN (SELECT 'PODS_PI_CP_READING/'||CAST(EVENT_ID AS VARCHAR(30))
                    FROM PODS.PI_CP_READING
                    WHERE PI_CP_EVENT_ID IN (SELECT EVENT_ID
                    FROM PODS.PI_CP_INSPECTION
                    WHERE PI_EVENT_ID = {ID}))
                    OR RIGHT_OBJ_ID IN (SELECT 'PODS_PI_CP_READING/'||CAST(EVENT_ID AS VARCHAR(30))
                    FROM PODS.PI_CP_READING
                    WHERE PI_CP_EVENT_ID IN (SELECT EVENT_ID
                    FROM PODS.PI_CP_INSPECTION
                    WHERE PI_EVENT_ID = {ID}));

                    BEGIN
                    /* Чистим GATE эта таблица заполняется */
                    EXECUTE $OP$DELETE
                    FROM GIS_INTEGRATION50.GATE
                    WHERE TABLE_NAME = 'PI_CP_READING'
                    AND KEY_FIELDS = 'EVENT_ID'
                    AND KEY_VALUES in (SELECT EVENT_ID
                    FROM PODS.PI_CP_READING
                    WHERE PI_CP_EVENT_ID IN (SELECT EVENT_ID
                    FROM PODS.PI_CP_INSPECTION
                    WHERE PI_EVENT_ID =$1))$OP$
                    USING {ID};
                    EXCEPTION WHEN undefined_table
                    THEN NULL;
                    WHEN OTHERS
                    THEN RAISE;
                    END;

                    DELETE
                    FROM PODS.PI_CP_READING
                    WHERE PI_CP_EVENT_ID IN (SELECT EVENT_ID
                    FROM PODS.PI_CP_INSPECTION
                    WHERE PI_EVENT_ID = {ID});

                    UPDATE PODS.EVENT_RANGE
                    SET CURRENT_INDICATOR_LF='N'
                    WHERE EVENT_ID in (SELECT EVENT_ID
                    FROM PODS.PI_GROUND_BED_READING
                    WHERE PI_CP_EVENT_ID  IN (SELECT EVENT_ID
                    FROM PODS.PI_CP_INSPECTION
                    WHERE PI_EVENT_ID = {ID}));

                    DELETE
                    FROM WEB50.LNK_GATE
                    WHERE LEFT_OBJ_ID IN (SELECT 'PODS_PI_GROUND_BED_READING/'||CAST(EVENT_ID AS VARCHAR(30))
                    FROM PODS.PI_GROUND_BED_READING
                    WHERE PI_CP_EVENT_ID IN (SELECT EVENT_ID
                    FROM PODS.PI_CP_INSPECTION
                    WHERE PI_EVENT_ID = {ID}))
                    OR RIGHT_OBJ_ID IN (SELECT 'PODS_PI_GROUND_BED_READING/'||CAST(EVENT_ID AS VARCHAR(30))
                    FROM PODS.PI_GROUND_BED_READING
                    WHERE PI_CP_EVENT_ID IN (SELECT EVENT_ID
                    FROM PODS.PI_CP_INSPECTION
                    WHERE PI_EVENT_ID = {ID}));

                    BEGIN
                    /* Чистим GATE с расчетом на будущее, пока эта таблица не заполняется */
                    EXECUTE $OP$DELETE
                    FROM GIS_INTEGRATION50.GATE
                    WHERE TABLE_NAME = 'PI_GROUND_BED_READING'
                    AND KEY_FIELDS = 'EVENT_ID'
                    AND KEY_VALUES in (SELECT EVENT_ID
                    FROM PODS.PI_GROUND_BED_READING
                    WHERE PI_CP_EVENT_ID IN (SELECT EVENT_ID
                    FROM PODS.PI_CP_INSPECTION
                    WHERE PI_EVENT_ID =$1))$OP$
                    USING {ID};
                    EXCEPTION WHEN undefined_table
                    THEN NULL;
                    WHEN OTHERS
                    THEN RAISE;
                    END;

                    DELETE
                    FROM PODS.PI_GROUND_BED_READING
                    WHERE PI_CP_EVENT_ID IN (SELECT EVENT_ID
                    FROM PODS.PI_CP_INSPECTION
                    WHERE PI_EVENT_ID = {ID});

                    UPDATE PODS.EVENT_RANGE
                    SET CURRENT_INDICATOR_LF='N'
                    WHERE EVENT_ID in (SELECT EVENT_ID
                    FROM PODS.PI_RECTIFIER_READING
                    WHERE PI_CP_EVENT_ID IN (SELECT EVENT_ID
                    FROM PODS.PI_CP_INSPECTION
                    WHERE PI_EVENT_ID = {ID}));

                    DELETE
                    FROM WEB50.LNK_GATE
                    WHERE LEFT_OBJ_ID IN (SELECT 'PODS_PI_RECTIFIER_READING/'||CAST(EVENT_ID AS VARCHAR(30))
                    FROM PODS.PI_RECTIFIER_READING
                    WHERE PI_CP_EVENT_ID IN (SELECT EVENT_ID
                    FROM PODS.PI_CP_INSPECTION
                    WHERE PI_EVENT_ID = {ID}))
                    OR RIGHT_OBJ_ID IN (SELECT 'PODS_PI_RECTIFIER_READING/'||CAST(EVENT_ID AS VARCHAR(30))
                    FROM PODS.PI_RECTIFIER_READING
                    WHERE PI_CP_EVENT_ID IN (SELECT EVENT_ID
                    FROM PODS.PI_CP_INSPECTION
                    WHERE PI_EVENT_ID = {ID}));

                    BEGIN
                    /*  Чистим GATE с расчетом на будущее, пока эта таблица не заполняется */
                    EXECUTE $OP$DELETE
                    FROM GIS_INTEGRATION50.GATE
                    WHERE TABLE_NAME = 'PI_RECTIFIER_READING'
                    AND KEY_FIELDS = 'EVENT_ID'
                    AND KEY_VALUES in (SELECT EVENT_ID
                    FROM PODS.PI_RECTIFIER_READING
                    WHERE PI_CP_EVENT_ID IN (SELECT EVENT_ID
                    FROM PODS.PI_CP_INSPECTION
                    WHERE PI_EVENT_ID =$1))$OP$
                    USING {ID};
                    EXCEPTION WHEN undefined_table
                    THEN NULL;
                    WHEN OTHERS
                    THEN RAISE;
                    END;

                    DELETE
                    FROM PODS.PI_RECTIFIER_READING
                    WHERE PI_CP_EVENT_ID IN (SELECT EVENT_ID
                    FROM PODS.PI_CP_INSPECTION
                    WHERE PI_EVENT_ID = {ID});

                    UPDATE PODS.EVENT_RANGE
                    SET CURRENT_INDICATOR_LF='N'
                    WHERE EVENT_ID IN (SELECT EVENT_ID
                    FROM PODS.PI_CP_INSPECTION
                    WHERE PI_EVENT_ID = {ID});

                    DELETE
                    FROM WEB50.LNK_GATE
                    WHERE LEFT_OBJ_ID IN (SELECT 'PODS_PI_CP_INSPECTION/'||CAST(EVENT_ID AS VARCHAR(30))
                    FROM PODS.PI_CP_INSPECTION
                    WHERE PI_EVENT_ID = {ID})
                    OR RIGHT_OBJ_ID IN (SELECT 'PODS_PI_CP_INSPECTION/'||CAST(EVENT_ID AS VARCHAR(30))
                    FROM PODS.PI_CP_INSPECTION
                    WHERE PI_EVENT_ID = {ID});
                    BEGIN
                    /*  Чистим GATE  эта таблица заполняется */
                    EXECUTE $OP$DELETE
                    FROM GIS_INTEGRATION50.GATE
                    WHERE TABLE_NAME = 'PI_CP_INSPECTION'
                    AND KEY_FIELDS = 'EVENT_ID'
                    AND KEY_VALUES in (SELECT EVENT_ID
                    FROM PODS.PI_CP_INSPECTION
                    WHERE PI_EVENT_ID =$1)$OP$
                    USING {ID};
                    EXCEPTION WHEN undefined_table
                    THEN NULL;
                    WHEN OTHERS
                    THEN RAISE;
                    END;

                    DELETE
                    FROM PODS.PI_CP_INSPECTION
                    WHERE PI_EVENT_ID = {ID};

                    UPDATE PODS.EVENT_RANGE
                    SET CURRENT_INDICATOR_LF='N'
                    WHERE EVENT_ID in (SELECT EVENT_ID
                    FROM PODS.PI_ADJACENT_CONSTRUCTION
                    WHERE PI_EVENT_ID = {ID});

                    DELETE
                    FROM WEB50.LNK_GATE
                    WHERE LEFT_OBJ_ID IN (SELECT 'PODS_PI_ADJACENT_CONSTRUCTION/'||CAST(EVENT_ID AS VARCHAR(30))
                    FROM PODS.PI_ADJACENT_CONSTRUCTION
                    WHERE PI_EVENT_ID = {ID})
                    OR RIGHT_OBJ_ID IN (SELECT 'PODS_PI_ADJACENT_CONSTRUCTION/'||CAST(EVENT_ID AS VARCHAR(30))
                    FROM PODS.PI_ADJACENT_CONSTRUCTION
                    WHERE PI_EVENT_ID = {ID});

                    BEGIN
                    /*  Чистим GATE с расчетом на будущее, пока эта таблица не заполняется */
                    EXECUTE $OP$DELETE
                    FROM GIS_INTEGRATION50.GATE
                    WHERE TABLE_NAME = 'PI_ADJACENT_CONSTRUCTION'
                    AND KEY_FIELDS = 'EVENT_ID'
                    AND KEY_VALUES in (SELECT EVENT_ID
                    FROM PODS.PI_ADJACENT_CONSTRUCTION
                    WHERE PI_EVENT_ID =$1)$OP$
                    USING {ID};
                    EXCEPTION WHEN undefined_table
                    THEN NULL;
                    WHEN OTHERS
                    THEN RAISE;
                    END;


                    DELETE
                    FROM PODS.PI_ADJACENT_CONSTRUCTION
                    WHERE PI_EVENT_ID = {ID};

                    UPDATE PODS.EVENT_RANGE
                    SET CURRENT_INDICATOR_LF='N'
                    WHERE EVENT_ID in (SELECT EVENT_ID
                    FROM PODS.PI_COATING_DATA
                    WHERE PI_EVENT_ID = {ID});

                    DELETE
                    FROM WEB50.LNK_GATE
                    WHERE LEFT_OBJ_ID IN (SELECT 'PODS_PI_COATING_DATA/'||CAST(EVENT_ID AS VARCHAR(30))
                    FROM PODS.PI_COATING_DATA
                    WHERE PI_EVENT_ID = {ID})
                    OR RIGHT_OBJ_ID IN (SELECT 'PODS_PI_COATING_DATA/'||CAST(EVENT_ID AS VARCHAR(30))
                    FROM PODS.PI_COATING_DATA
                    WHERE PI_EVENT_ID = {ID});

                    BEGIN
                    /*  Чистим GATE с расчетом на будущее, пока эта таблица не заполняется */
                    EXECUTE $OP$DELETE
                    FROM GIS_INTEGRATION50.GATE
                    WHERE TABLE_NAME = 'PI_COATING_DATA'
                    AND KEY_FIELDS = 'EVENT_ID'
                    AND KEY_VALUES in (SELECT EVENT_ID
                    FROM PODS.PI_COATING_DATA
                    WHERE PI_EVENT_ID =$1)$OP$
                    USING {ID};
                    EXCEPTION WHEN undefined_table
                    THEN NULL;
                    WHEN OTHERS
                    THEN RAISE;
                    END;

                    DELETE
                    FROM PODS.PI_COATING_DATA
                    WHERE PI_EVENT_ID = {ID};

                    UPDATE PODS.EVENT_RANGE
                    SET CURRENT_INDICATOR_LF='N'
                    WHERE EVENT_ID in (SELECT EVENT_ID
                    FROM PODS.PI_CORROSION
                    WHERE PI_EVENT_ID = {ID});

                    DELETE
                    FROM WEB50.LNK_GATE
                    WHERE LEFT_OBJ_ID IN (SELECT 'PODS_PI_CORROSION/'||CAST(EVENT_ID AS VARCHAR(30))
                    FROM PODS.PI_CORROSION
                    WHERE PI_EVENT_ID = {ID})
                    OR RIGHT_OBJ_ID IN (SELECT 'PODS_PI_CORROSION/'||CAST(EVENT_ID AS VARCHAR(30))
                    FROM PODS.PI_CORROSION
                    WHERE PI_EVENT_ID = {ID});

                    BEGIN
                    /*  Чистим GATE с расчетом на будущее, пока эта таблица не заполняется */
                    EXECUTE $OP$DELETE
                    FROM GIS_INTEGRATION50.GATE
                    WHERE TABLE_NAME = 'PI_CORROSION'
                    AND KEY_FIELDS = 'EVENT_ID'
                    AND KEY_VALUES in (SELECT EVENT_ID
                    FROM PODS.PI_CORROSION
                    WHERE PI_EVENT_ID =$1)$OP$
                    USING {ID};
                    EXCEPTION WHEN undefined_table
                    THEN NULL;
                    WHEN OTHERS
                    THEN RAISE;
                    END;

                    DELETE
                    FROM PODS.PI_CORROSION
                    WHERE PI_EVENT_ID = {ID};


                    UPDATE PODS.EVENT_RANGE
                    SET CURRENT_INDICATOR_LF='N'
                    WHERE EVENT_ID in (SELECT EVENT_ID
                    FROM PODS.PI_CRACK
                    WHERE PI_EVENT_ID = {ID});

                    DELETE
                    FROM WEB50.LNK_GATE
                    WHERE LEFT_OBJ_ID IN (SELECT 'PODS_PI_CRACK/'||CAST(EVENT_ID AS VARCHAR(30))
                    FROM PODS.PI_CRACK
                    WHERE PI_EVENT_ID = {ID})
                    OR RIGHT_OBJ_ID IN (SELECT 'PODS_PI_CRACK/'||CAST(EVENT_ID AS VARCHAR(30))
                    FROM PODS.PI_CRACK
                    WHERE PI_EVENT_ID = {ID});

                    BEGIN
                    /*  Чистим GATE с расчетом на будущее, пока эта таблица не заполняется */
                    EXECUTE $OP$DELETE
                    FROM GIS_INTEGRATION50.GATE
                    WHERE TABLE_NAME = 'PI_CRACK'
                    AND KEY_FIELDS = 'EVENT_ID'
                    AND KEY_VALUES in (SELECT EVENT_ID
                    FROM PODS.PI_CRACK
                    WHERE PI_EVENT_ID =$1)$OP$
                    USING {ID};
                    EXCEPTION WHEN undefined_table
                    THEN NULL;
                    WHEN OTHERS
                    THEN RAISE;
                    END;

                    DELETE
                    FROM PODS.PI_CRACK
                    WHERE PI_EVENT_ID = {ID};


                    UPDATE PODS.EVENT_RANGE
                    SET CURRENT_INDICATOR_LF='N'
                    WHERE EVENT_ID in (SELECT EVENT_ID
                    FROM PODS.PI_DEBRIS
                    WHERE PI_EVENT_ID = {ID});

                    DELETE
                    FROM WEB50.LNK_GATE
                    WHERE LEFT_OBJ_ID IN (SELECT 'PODS_PI_DEBRIS/'||CAST(EVENT_ID AS VARCHAR(30))
                    FROM PODS.PI_DEBRIS
                    WHERE PI_EVENT_ID = {ID})
                    OR RIGHT_OBJ_ID IN (SELECT 'PODS_PI_DEBRIS/'||CAST(EVENT_ID AS VARCHAR(30))
                    FROM PODS.PI_DEBRIS
                    WHERE PI_EVENT_ID = {ID});
                    BEGIN
                    /*  Чистим GATE с расчетом на будущее, пока эта таблица не заполняется */
                    EXECUTE $OP$DELETE
                    FROM GIS_INTEGRATION50.GATE
                    WHERE TABLE_NAME = 'PI_DEBRIS'
                    AND KEY_FIELDS = 'EVENT_ID'
                    AND KEY_VALUES in (SELECT EVENT_ID
                    FROM PODS.PI_DEBRIS
                    WHERE PI_EVENT_ID =$1)$OP$
                    USING {ID};
                    EXCEPTION WHEN undefined_table
                    THEN NULL;
                    WHEN OTHERS
                    THEN RAISE;
                    END;

                    DELETE
                    FROM PODS.PI_DEBRIS
                    WHERE PI_EVENT_ID = {ID};

                    UPDATE PODS.EVENT_RANGE
                    SET CURRENT_INDICATOR_LF='N'
                    WHERE EVENT_ID in (SELECT EVENT_ID
                    FROM PODS.PI_ENVIRONMENT
                    WHERE PI_EVENT_ID = {ID});

                    DELETE
                    FROM WEB50.LNK_GATE
                    WHERE LEFT_OBJ_ID IN (SELECT 'PODS_PI_ENVIRONMENT/'||CAST(EVENT_ID AS VARCHAR(30))
                    FROM PODS.PI_ENVIRONMENT
                    WHERE PI_EVENT_ID = {ID})
                    OR RIGHT_OBJ_ID IN (SELECT 'PODS_PI_ENVIRONMENT/'||CAST(EVENT_ID AS VARCHAR(30))
                    FROM PODS.PI_ENVIRONMENT
                    WHERE PI_EVENT_ID = {ID});

                    BEGIN
                    /*  Чистим GATE с расчетом на будущее, пока эта таблица не заполняется */
                    EXECUTE $OP$DELETE
                    FROM GIS_INTEGRATION50.GATE
                    WHERE TABLE_NAME = 'PI_ENVIRONMENT'
                    AND KEY_FIELDS = 'EVENT_ID'
                    AND KEY_VALUES in (SELECT EVENT_ID
                    FROM PODS.PI_ENVIRONMENT
                    WHERE PI_EVENT_ID =$1)$OP$
                    USING {ID};
                    EXCEPTION WHEN undefined_table
                    THEN NULL;
                    WHEN OTHERS
                    THEN RAISE;
                    END;

                    DELETE
                    FROM PODS.PI_ENVIRONMENT
                    WHERE PI_EVENT_ID = {ID};

                    UPDATE PODS.EVENT_RANGE
                    SET CURRENT_INDICATOR_LF='N'
                    WHERE EVENT_ID in (SELECT EVENT_ID
                    FROM PODS.PI_EXCAVATION
                    WHERE PI_EVENT_ID = {ID});

                    DELETE
                    FROM WEB50.LNK_GATE
                    WHERE LEFT_OBJ_ID IN (SELECT 'PODS_PI_EXCAVATION/'||CAST(EVENT_ID AS VARCHAR(30))
                    FROM PODS.PI_EXCAVATION
                    WHERE PI_EVENT_ID = {ID})
                    OR RIGHT_OBJ_ID IN (SELECT 'PODS_PI_EXCAVATION/'||CAST(EVENT_ID AS VARCHAR(30))
                    FROM PODS.PI_EXCAVATION
                    WHERE PI_EVENT_ID = {ID});

                    BEGIN
                    /* Чистим GATE с расчетом на будущее, пока эта таблица не заполняется */
                    EXECUTE $OP$DELETE
                    FROM GIS_INTEGRATION50.GATE
                    WHERE TABLE_NAME = 'PI_EXCAVATION'
                    AND KEY_FIELDS = 'EVENT_ID'
                    AND KEY_VALUES in (SELECT EVENT_ID
                    FROM PODS.PI_EXCAVATION
                    WHERE PI_EVENT_ID =$1)$OP$
                    USING {ID};
                    EXCEPTION WHEN undefined_table
                    THEN NULL;
                    WHEN OTHERS
                    THEN RAISE;
                    END;

                    DELETE
                    FROM PODS.PI_EXCAVATION
                    WHERE PI_EVENT_ID = {ID};

                    UPDATE PODS.EVENT_RANGE
                    SET CURRENT_INDICATOR_LF='N'
                    WHERE EVENT_ID in (SELECT EVENT_ID
                    FROM PODS.PI_GIRTH_WELD
                    WHERE PI_EVENT_ID = {ID});

                    DELETE
                    FROM WEB50.LNK_GATE
                    WHERE LEFT_OBJ_ID IN (SELECT 'PODS_PI_GIRTH_WELD/'||CAST(EVENT_ID AS VARCHAR(30))
                    FROM PODS.PI_GIRTH_WELD
                    WHERE PI_EVENT_ID = {ID})
                    OR RIGHT_OBJ_ID IN (SELECT 'PODS_PI_GIRTH_WELD/'||CAST(EVENT_ID AS VARCHAR(30))
                    FROM PODS.PI_GIRTH_WELD
                    WHERE PI_EVENT_ID = {ID});

                    BEGIN
                    /* Чистим GATE с расчетом на будущее, пока эта таблица не заполняется */
                    EXECUTE $OP$DELETE
                    FROM GIS_INTEGRATION50.GATE
                    WHERE TABLE_NAME = 'PI_GIRTH_WELD'
                    AND KEY_FIELDS = 'EVENT_ID'
                    AND KEY_VALUES in (SELECT EVENT_ID
                    FROM PODS.PI_GIRTH_WELD
                    WHERE PI_EVENT_ID =$1)$OP$
                    USING {ID};
                    EXCEPTION WHEN undefined_table
                    THEN NULL;
                    WHEN OTHERS
                    THEN RAISE;
                    END;

                    DELETE
                    FROM PODS.PI_GIRTH_WELD
                    WHERE PI_EVENT_ID = {ID};

                    UPDATE PODS.EVENT_RANGE
                    SET CURRENT_INDICATOR_LF='N'
                    WHERE EVENT_ID in (SELECT EVENT_ID
                    FROM PODS.PI_LEAK_SURVEY
                    WHERE PI_EVENT_ID = {ID});

                    DELETE
                    FROM WEB50.LNK_GATE
                    WHERE LEFT_OBJ_ID IN (SELECT 'PODS_PI_LEAK_SURVEY/'||CAST(EVENT_ID AS VARCHAR(30))
                    FROM PODS.PI_LEAK_SURVEY
                    WHERE PI_EVENT_ID = {ID})
                    OR RIGHT_OBJ_ID IN (SELECT 'PODS_PI_LEAK_SURVEY/'||CAST(EVENT_ID AS VARCHAR(30))
                    FROM PODS.PI_LEAK_SURVEY
                    WHERE PI_EVENT_ID = {ID});

                    BEGIN
                    /* Чистим GATE с расчетом на будущее, пока эта таблица не заполняется */
                    EXECUTE $OP$DELETE
                    FROM GIS_INTEGRATION50.GATE
                    WHERE TABLE_NAME = 'PI_LEAK_SURVEY'
                    AND KEY_FIELDS = 'EVENT_ID'
                    AND KEY_VALUES in (SELECT EVENT_ID
                    FROM PODS.PI_LEAK_SURVEY
                    WHERE PI_EVENT_ID =$1)$OP$
                    USING {ID};
                    EXCEPTION WHEN undefined_table
                    THEN NULL;
                    WHEN OTHERS
                    THEN RAISE;
                    END;

                    DELETE
                    FROM PODS.PI_LEAK_SURVEY
                    WHERE PI_EVENT_ID = {ID};

                    UPDATE PODS.EVENT_RANGE
                    SET CURRENT_INDICATOR_LF='N'
                    WHERE EVENT_ID in (SELECT EVENT_ID
                    FROM PODS.PI_LEAK_SURVEY_READING
                    WHERE PI_EVENT_ID = {ID});

                    DELETE
                    FROM WEB50.LNK_GATE
                    WHERE LEFT_OBJ_ID IN (SELECT 'PODS_PI_LEAK_SURVEY_READING/'||CAST(EVENT_ID AS VARCHAR(30))
                    FROM PODS.PI_LEAK_SURVEY_READING
                    WHERE PI_EVENT_ID = {ID})
                    OR RIGHT_OBJ_ID IN (SELECT 'PODS_PI_LEAK_SURVEY_READING/'||CAST(EVENT_ID AS VARCHAR(30))
                    FROM PODS.PI_LEAK_SURVEY_READING
                    WHERE PI_EVENT_ID = {ID});

                    BEGIN
                    /* Чистим GATE с расчетом на будущее, пока эта таблица не заполняется */
                    EXECUTE $OP$DELETE
                    FROM GIS_INTEGRATION50.GATE
                    WHERE TABLE_NAME = 'PI_LEAK_SURVEY_READING'
                    AND KEY_FIELDS = 'EVENT_ID'
                    AND KEY_VALUES in (SELECT EVENT_ID
                    FROM PODS.PI_LEAK_SURVEY_READING
                    WHERE PI_EVENT_ID =$1)$OP$
                    USING {ID};
                    EXCEPTION WHEN undefined_table
                    THEN NULL;
                    WHEN OTHERS
                    THEN RAISE;
                    END;

                    DELETE
                    FROM PODS.PI_LEAK_SURVEY_READING
                    WHERE PI_EVENT_ID = {ID};

                    UPDATE PODS.EVENT_RANGE
                    SET CURRENT_INDICATOR_LF='N'
                    WHERE EVENT_ID in (SELECT EVENT_ID
                    FROM PODS.PI_LONG_WELD
                    WHERE PI_EVENT_ID = {ID});

                    DELETE
                    FROM WEB50.LNK_GATE
                    WHERE LEFT_OBJ_ID IN (SELECT 'PODS_PI_LONG_WELD/'||CAST(EVENT_ID AS VARCHAR(30))
                    FROM PODS.PI_LONG_WELD
                    WHERE PI_EVENT_ID = {ID})
                    OR RIGHT_OBJ_ID IN (SELECT 'PODS_PI_LONG_WELD/'||CAST(EVENT_ID AS VARCHAR(30))
                    FROM PODS.PI_LONG_WELD
                    WHERE PI_EVENT_ID = {ID});

                    BEGIN
                    /*  Чистим GATE с расчетом на будущее, пока эта таблица не заполняется */
                    EXECUTE $OP$DELETE
                    FROM GIS_INTEGRATION50.GATE
                    WHERE TABLE_NAME = 'PI_LONG_WELD'
                    AND KEY_FIELDS = 'EVENT_ID'
                    AND KEY_VALUES in (SELECT EVENT_ID
                    FROM PODS.PI_LONG_WELD
                    WHERE PI_EVENT_ID =$1)$OP$
                    USING {ID};
                    EXCEPTION WHEN undefined_table
                    THEN NULL;
                    WHEN OTHERS
                    THEN RAISE;
                    END;

                    DELETE
                    FROM PODS.PI_LONG_WELD
                    WHERE PI_EVENT_ID = {ID};

                    UPDATE PODS.EVENT_RANGE
                    SET CURRENT_INDICATOR_LF='N'
                    WHERE EVENT_ID in (SELECT EVENT_ID
                    FROM PODS.PI_MARINE_GROWTH
                    WHERE PI_EVENT_ID = {ID});

                    DELETE
                    FROM WEB50.LNK_GATE
                    WHERE LEFT_OBJ_ID IN (SELECT 'PODS_PI_MARINE_GROWTH/'||CAST(EVENT_ID AS VARCHAR(30))
                    FROM PODS.PI_MARINE_GROWTH
                    WHERE PI_EVENT_ID = {ID})
                    OR RIGHT_OBJ_ID IN (SELECT 'PODS_PI_MARINE_GROWTH/'||CAST(EVENT_ID AS VARCHAR(30))
                    FROM PODS.PI_MARINE_GROWTH
                    WHERE PI_EVENT_ID = {ID});

                    BEGIN
                    /*  Чистим GATE с расчетом на будущее, пока эта таблица не заполняется */
                    EXECUTE $OP$DELETE
                    FROM GIS_INTEGRATION50.GATE
                    WHERE TABLE_NAME = 'PI_MARINE_GROWTH'
                    AND KEY_FIELDS = 'EVENT_ID'
                    AND KEY_VALUES in (SELECT EVENT_ID
                    FROM PODS.PI_MARINE_GROWTH
                    WHERE PI_EVENT_ID =$1)$OP$
                    USING {ID};
                    EXCEPTION WHEN undefined_table
                    THEN NULL;
                    WHEN OTHERS
                    THEN RAISE;
                    END;

                    DELETE
                    FROM PODS.PI_MARINE_GROWTH
                    WHERE PI_EVENT_ID = {ID};

                    UPDATE PODS.EVENT_RANGE
                    SET CURRENT_INDICATOR_LF='N'
                    WHERE EVENT_ID in (SELECT EVENT_ID
                    FROM PODS.PI_MATERIAL_DEFECT
                    WHERE PI_EVENT_ID = {ID});

                    DELETE
                    FROM WEB50.LNK_GATE
                    WHERE LEFT_OBJ_ID IN (SELECT 'PODS_PI_MATERIAL_DEFECT/'||CAST(EVENT_ID AS VARCHAR(30))
                    FROM PODS.PI_MATERIAL_DEFECT
                    WHERE PI_EVENT_ID = {ID})
                    OR RIGHT_OBJ_ID IN (SELECT 'PODS_PI_MATERIAL_DEFECT/'||CAST(EVENT_ID AS VARCHAR(30))
                    FROM PODS.PI_MATERIAL_DEFECT
                    WHERE PI_EVENT_ID = {ID});

                    BEGIN
                    /*  Чистим GATE с расчетом на будущее, пока эта таблица не заполняется */
                    EXECUTE $OP$DELETE
                    FROM GIS_INTEGRATION50.GATE
                    WHERE TABLE_NAME = 'PI_MATERIAL_DEFECT'
                    AND KEY_FIELDS = 'EVENT_ID'
                    AND KEY_VALUES in (SELECT EVENT_ID
                    FROM PODS.PI_MATERIAL_DEFECT
                    WHERE PI_EVENT_ID =$1)$OP$
                    USING {ID};
                    EXCEPTION WHEN undefined_table
                    THEN NULL;
                    WHEN OTHERS
                    THEN RAISE;
                    END;

                    DELETE
                    FROM PODS.PI_MATERIAL_DEFECT
                    WHERE PI_EVENT_ID = {ID};

                    UPDATE PODS.EVENT_RANGE
                    SET CURRENT_INDICATOR_LF='N'
                    WHERE EVENT_ID in (SELECT EVENT_ID
                    FROM PODS.PI_MECHANICAL_DAMAGE
                    WHERE PI_EVENT_ID = {ID});

                    DELETE
                    FROM WEB50.LNK_GATE
                    WHERE LEFT_OBJ_ID IN (SELECT 'PODS_PI_MECHANICAL_DAMAGE/'||CAST(EVENT_ID AS VARCHAR(30))
                    FROM PODS.PI_MECHANICAL_DAMAGE
                    WHERE PI_EVENT_ID = {ID})
                    OR RIGHT_OBJ_ID IN (SELECT 'PODS_PI_MECHANICAL_DAMAGE/'||CAST(EVENT_ID AS VARCHAR(30))
                    FROM PODS.PI_MECHANICAL_DAMAGE
                    WHERE PI_EVENT_ID = {ID});

                    BEGIN
                    /*  Чистим GATE с расчетом на будущее, пока эта таблица не заполняется */
                    EXECUTE $OP$DELETE
                    FROM GIS_INTEGRATION50.GATE
                    WHERE TABLE_NAME = 'PI_MECHANICAL_DAMAGE'
                    AND KEY_FIELDS = 'EVENT_ID'
                    AND KEY_VALUES in (SELECT EVENT_ID
                    FROM PODS.PI_MECHANICAL_DAMAGE
                    WHERE PI_EVENT_ID =$1)$OP$
                    USING {ID};
                    EXCEPTION WHEN undefined_table
                    THEN NULL;
                    WHEN OTHERS
                    THEN RAISE;
                    END;

                    DELETE
                    FROM PODS.PI_MECHANICAL_DAMAGE
                    WHERE PI_EVENT_ID = {ID};

                    UPDATE PODS.EVENT_RANGE
                    SET CURRENT_INDICATOR_LF='N'
                    WHERE EVENT_ID in (SELECT EVENT_ID
                    FROM PODS.PI_METAL_LOSS
                    WHERE PI_EVENT_ID = {ID});

                    DELETE
                    FROM WEB50.LNK_GATE
                    WHERE LEFT_OBJ_ID IN (SELECT 'PODS_PI_METAL_LOSS/'||CAST(EVENT_ID AS VARCHAR(30))
                    FROM PODS.PI_METAL_LOSS
                    WHERE PI_EVENT_ID = {ID})
                    OR RIGHT_OBJ_ID IN (SELECT 'PODS_PI_METAL_LOSS/'||CAST(EVENT_ID AS VARCHAR(30))
                    FROM PODS.PI_METAL_LOSS
                    WHERE PI_EVENT_ID = {ID});

                    BEGIN
                    /*  Чистим GATE с расчетом на будущее, пока эта таблица не заполняется */
                    EXECUTE $OP$DELETE
                    FROM GIS_INTEGRATION50.GATE
                    WHERE TABLE_NAME = 'PI_METAL_LOSS'
                    AND KEY_FIELDS = 'EVENT_ID'
                    AND KEY_VALUES in (SELECT EVENT_ID
                    FROM PODS.PI_METAL_LOSS
                    WHERE PI_EVENT_ID =$1)$OP$
                    USING {ID};
                    EXCEPTION WHEN undefined_table
                    THEN NULL;
                    WHEN OTHERS
                    THEN RAISE;
                    END;

                    DELETE
                    FROM PODS.PI_METAL_LOSS
                    WHERE PI_EVENT_ID = {ID};

                    UPDATE PODS.EVENT_RANGE
                    SET CURRENT_INDICATOR_LF='N'
                    WHERE EVENT_ID in (SELECT EVENT_ID
                    FROM PODS.PI_PIPE_CONDITION
                    WHERE PI_EVENT_ID = {ID});

                    DELETE
                    FROM WEB50.LNK_GATE
                    WHERE LEFT_OBJ_ID IN (SELECT 'PODS_PI_PIPE_CONDITION/'||CAST(EVENT_ID AS VARCHAR(30))
                    FROM PODS.PI_PIPE_CONDITION
                    WHERE PI_EVENT_ID = {ID})
                    OR RIGHT_OBJ_ID IN (SELECT 'PODS_PI_PIPE_CONDITION/'||CAST(EVENT_ID AS VARCHAR(30))
                    FROM PODS.PI_PIPE_CONDITION
                    WHERE PI_EVENT_ID = {ID});

                    BEGIN
                    /*  Чистим GATE с расчетом на будущее, пока эта таблица не заполняется */
                    EXECUTE $OP$DELETE
                    FROM GIS_INTEGRATION50.GATE
                    WHERE TABLE_NAME = 'PI_PIPE_CONDITION'
                    AND KEY_FIELDS = 'EVENT_ID'
                    AND KEY_VALUES in (SELECT EVENT_ID
                    FROM PODS.PI_PIPE_CONDITION
                    WHERE PI_EVENT_ID =$1)$OP$
                    USING {ID};
                    EXCEPTION WHEN undefined_table
                    THEN NULL;
                    WHEN OTHERS
                    THEN RAISE;
                    END;

                    DELETE
                    FROM PODS.PI_PIPE_CONDITION
                    WHERE PI_EVENT_ID = {ID};

                    UPDATE PODS.EVENT_RANGE
                    SET CURRENT_INDICATOR_LF='N'
                    WHERE EVENT_ID in (SELECT EVENT_ID
                    FROM PODS.PI_PIPELINE_MOVEMENT
                    WHERE PI_EVENT_ID = {ID});

                    DELETE
                    FROM WEB50.LNK_GATE
                    WHERE LEFT_OBJ_ID IN (SELECT 'PODS_PI_PIPELINE_MOVEMENT/'||CAST(EVENT_ID AS VARCHAR(30))
                    FROM PODS.PI_PIPELINE_MOVEMENT
                    WHERE PI_EVENT_ID = {ID})
                    OR RIGHT_OBJ_ID IN (SELECT 'PODS_PI_PIPELINE_MOVEMENT/'||CAST(EVENT_ID AS VARCHAR(30))
                    FROM PODS.PI_PIPELINE_MOVEMENT
                    WHERE PI_EVENT_ID = {ID});

                    BEGIN
                    /*  Чистим GATE с расчетом на будущее, пока эта таблица не заполняется */
                    EXECUTE $OP$DELETE
                    FROM GIS_INTEGRATION50.GATE
                    WHERE TABLE_NAME = 'PI_PIPELINE_MOVEMENT'
                    AND KEY_FIELDS = 'EVENT_ID'
                    AND KEY_VALUES in (SELECT EVENT_ID
                    FROM PODS.PI_PIPELINE_MOVEMENT
                    WHERE PI_EVENT_ID =$1)$OP$
                    USING {ID};
                    EXCEPTION WHEN undefined_table
                    THEN NULL;
                    WHEN OTHERS
                    THEN RAISE;
                    END;

                    DELETE
                    FROM PODS.PI_PIPELINE_MOVEMENT
                    WHERE PI_EVENT_ID = {ID};

                    UPDATE PODS.EVENT_RANGE
                    SET CURRENT_INDICATOR_LF='N'
                    WHERE EVENT_ID in (SELECT EVENT_ID
                    FROM PODS.PI_RELIEF_VALVE
                    WHERE PI_EVENT_ID = {ID});

                    DELETE
                    FROM WEB50.LNK_GATE
                    WHERE LEFT_OBJ_ID IN (SELECT 'PODS_PI_RELIEF_VALVE/'||CAST(EVENT_ID AS VARCHAR(30))
                    FROM PODS.PI_RELIEF_VALVE
                    WHERE PI_EVENT_ID = {ID})
                    OR RIGHT_OBJ_ID IN (SELECT 'PODS_PI_RELIEF_VALVE/'||CAST(EVENT_ID AS VARCHAR(30))
                    FROM PODS.PI_RELIEF_VALVE
                    WHERE PI_EVENT_ID = {ID});

                    BEGIN
                    /*  Чистим GATE с расчетом на будущее, пока эта таблица не заполняется */
                    EXECUTE $OP$DELETE
                    FROM GIS_INTEGRATION50.GATE
                    WHERE TABLE_NAME = 'PI_RELIEF_VALVE'
                    AND KEY_FIELDS = 'EVENT_ID'
                    AND KEY_VALUES in (SELECT EVENT_ID
                    FROM PODS.PI_RELIEF_VALVE
                    WHERE PI_EVENT_ID =$1)$OP$
                    USING {ID};
                    EXCEPTION WHEN undefined_table
                    THEN NULL;
                    WHEN OTHERS
                    THEN RAISE;
                    END;

                    DELETE
                    FROM PODS.PI_RELIEF_VALVE
                    WHERE PI_EVENT_ID = {ID};


                    UPDATE PODS.EVENT_RANGE
                    SET CURRENT_INDICATOR_LF='N'
                    WHERE EVENT_ID in (SELECT EVENT_ID
                    FROM PODS.PI_RIGHT_OF_WAY
                    WHERE PI_EVENT_ID = {ID});

                    DELETE
                    FROM WEB50.LNK_GATE
                    WHERE LEFT_OBJ_ID IN (SELECT 'PODS_PI_RIGHT_OF_WAY/'||CAST(EVENT_ID AS VARCHAR(30))
                    FROM PODS.PI_RIGHT_OF_WAY
                    WHERE PI_EVENT_ID = {ID})
                    OR RIGHT_OBJ_ID IN (SELECT 'PODS_PI_RIGHT_OF_WAY/'||CAST(EVENT_ID AS VARCHAR(30))
                    FROM PODS.PI_RIGHT_OF_WAY
                    WHERE PI_EVENT_ID = {ID});

                    BEGIN
                    /*  Чистим GATE с расчетом на будущее, пока эта таблица не заполняется */
                    EXECUTE $OP$DELETE
                    FROM GIS_INTEGRATION50.GATE
                    WHERE TABLE_NAME = 'PI_RIGHT_OF_WAY'
                    AND KEY_FIELDS = 'EVENT_ID'
                    AND KEY_VALUES in (SELECT EVENT_ID
                    FROM PODS.PI_RIGHT_OF_WAY
                    WHERE PI_EVENT_ID =$1)$OP$
                    USING {ID};
                    EXCEPTION WHEN undefined_table
                    THEN NULL;
                    WHEN OTHERS
                    THEN RAISE;
                    END;

                    DELETE
                    FROM PODS.PI_RIGHT_OF_WAY
                    WHERE PI_EVENT_ID = {ID};

                    UPDATE PODS.EVENT_RANGE
                    SET CURRENT_INDICATOR_LF='N'
                    WHERE EVENT_ID in (SELECT EVENT_ID
                    FROM PODS.PI_SUBSEA_INSPECTION
                    WHERE PI_EVENT_ID = {ID});

                    DELETE
                    FROM WEB50.LNK_GATE
                    WHERE LEFT_OBJ_ID IN (SELECT 'PODS_PI_SUBSEA_INSPECTION/'||CAST(EVENT_ID AS VARCHAR(30))
                    FROM PODS.PI_SUBSEA_INSPECTION
                    WHERE PI_EVENT_ID = {ID})
                    OR RIGHT_OBJ_ID IN (SELECT 'PODS_PI_SUBSEA_INSPECTION/'||CAST(EVENT_ID AS VARCHAR(30))
                    FROM PODS.PI_SUBSEA_INSPECTION
                    WHERE PI_EVENT_ID = {ID});

                    BEGIN
                    /*  Чистим GATE с расчетом на будущее, пока эта таблица не заполняется */
                    EXECUTE $OP$DELETE
                    FROM GIS_INTEGRATION50.GATE
                    WHERE TABLE_NAME = 'PI_SUBSEA_INSPECTION'
                    AND KEY_FIELDS = 'EVENT_ID'
                    AND KEY_VALUES in (SELECT EVENT_ID
                    FROM PODS.PI_SUBSEA_INSPECTION
                    WHERE PI_EVENT_ID =$1)$OP$
                    USING {ID};
                    EXCEPTION WHEN undefined_table
                    THEN NULL;
                    WHEN OTHERS
                    THEN RAISE;
                    END;

                    DELETE
                    FROM PODS.PI_SUBSEA_INSPECTION
                    WHERE PI_EVENT_ID = {ID};

                    UPDATE PODS.EVENT_RANGE
                    SET CURRENT_INDICATOR_LF='N'
                    WHERE EVENT_ID in (SELECT EVENT_ID
                    FROM PODS.PI_SOIL
                    WHERE PI_EVENT_ID = {ID});

                    DELETE
                    FROM WEB50.LNK_GATE
                    WHERE LEFT_OBJ_ID IN (SELECT 'PODS_PI_SOIL/'||CAST(EVENT_ID AS VARCHAR(30))
                    FROM PODS.PI_SOIL
                    WHERE PI_EVENT_ID = {ID})
                    OR RIGHT_OBJ_ID IN (SELECT 'PODS_PI_SOIL/'||CAST(EVENT_ID AS VARCHAR(30))
                    FROM PODS.PI_SOIL
                    WHERE PI_EVENT_ID = {ID});

                    BEGIN
                    /*  Чистим GATE с расчетом на будущее, пока эта таблица не заполняется */
                    EXECUTE $OP$DELETE
                    FROM GIS_INTEGRATION50.GATE
                    WHERE TABLE_NAME = 'PI_SOIL'
                    AND KEY_FIELDS = 'EVENT_ID'
                    AND KEY_VALUES in (SELECT EVENT_ID
                    FROM PODS.PI_SOIL
                    WHERE PI_EVENT_ID =$1)$OP$
                    USING {ID};
                    EXCEPTION WHEN undefined_table
                    THEN NULL;
                    WHEN OTHERS
                    THEN RAISE;
                    END;

                    DELETE
                    FROM PODS.PI_SOIL
                    WHERE PI_EVENT_ID = {ID};

                    UPDATE PODS.EVENT_RANGE
                    SET CURRENT_INDICATOR_LF='N'
                    WHERE EVENT_ID in (SELECT EVENT_ID
                    FROM PODS.PI_TANK
                    WHERE PI_EVENT_ID = {ID});

                    DELETE
                    FROM WEB50.LNK_GATE
                    WHERE LEFT_OBJ_ID IN (SELECT 'PODS_PI_TANK/'||CAST(EVENT_ID AS VARCHAR(30))
                    FROM PODS.PI_TANK
                    WHERE PI_EVENT_ID = {ID})
                    OR RIGHT_OBJ_ID IN (SELECT 'PODS_PI_TANK/'||CAST(EVENT_ID AS VARCHAR(30))
                    FROM PODS.PI_TANK
                    WHERE PI_EVENT_ID = {ID});

                    BEGIN
                    /*  Чистим GATE с расчетом на будущее, пока эта таблица не заполняется */
                    EXECUTE $OP$DELETE
                    FROM GIS_INTEGRATION50.GATE
                    WHERE TABLE_NAME = 'PI_TANK'
                    AND KEY_FIELDS = 'EVENT_ID'
                    AND KEY_VALUES in (SELECT EVENT_ID
                    FROM PODS.PI_TANK
                    WHERE PI_EVENT_ID =$1)$OP$
                    USING {ID};
                    EXCEPTION WHEN undefined_table
                    THEN NULL;
                    WHEN OTHERS
                    THEN RAISE;
                    END;

                    DELETE
                    FROM PODS.PI_TANK
                    WHERE PI_EVENT_ID = {ID};

                    UPDATE PODS.EVENT_RANGE
                    SET CURRENT_INDICATOR_LF='N'
                    WHERE EVENT_ID in (SELECT EVENT_ID
                    FROM PODS.PI_WATER
                    WHERE PI_EVENT_ID = {ID});

                    DELETE
                    FROM WEB50.LNK_GATE
                    WHERE LEFT_OBJ_ID IN (SELECT 'PODS_PI_WATER/'||CAST(EVENT_ID AS VARCHAR(30))
                    FROM PODS.PI_WATER
                    WHERE PI_EVENT_ID = {ID})
                    OR RIGHT_OBJ_ID IN (SELECT 'PODS_PI_WATER/'||CAST(EVENT_ID AS VARCHAR(30))
                    FROM PODS.PI_WATER
                    WHERE PI_EVENT_ID = {ID});

                    BEGIN
                    /*  Чистим GATE с расчетом на будущее, пока эта таблица не заполняется */
                    EXECUTE $OP$DELETE
                    FROM GIS_INTEGRATION50.GATE
                    WHERE TABLE_NAME = 'PI_WATER'
                    AND KEY_FIELDS = 'EVENT_ID'
                    AND KEY_VALUES in (SELECT EVENT_ID
                    FROM PODS.PI_WATER
                    WHERE PI_EVENT_ID =$1)$OP$
                    USING {ID};
                    EXCEPTION WHEN undefined_table
                    THEN NULL;
                    WHEN OTHERS
                    THEN RAISE;
                    END;

                    DELETE
                    FROM PODS.PI_WATER
                    WHERE PI_EVENT_ID = {ID};

                    UPDATE PODS.EVENT_RANGE
                    SET CURRENT_INDICATOR_LF='N'
                    WHERE EVENT_ID = {ID};

                    DELETE
                    FROM PODS.PHYSICAL_INSPECTION
                    WHERE EVENT_ID = {ID};

                    DELETE
                    FROM WEB50.LNK_GATE
                    WHERE LEFT_OBJ_ID = 'PODS_PHYSICAL_INSPECTION/'||CAST({ID} AS VARCHAR(30))
                    OR RIGHT_OBJ_ID = 'PODS_PHYSICAL_INSPECTION/'||CAST({ID} AS VARCHAR(30));

                    BEGIN
                    /*  Чистим GATE с расчетом на будущее, пока эта таблица не заполняется */
                    EXECUTE $OP$DELETE
                    FROM GIS_INTEGRATION50.GATE
                    WHERE TABLE_NAME = 'PHYSICAL_INSPECTION'
                    AND KEY_FIELDS = 'EVENT_ID'
                    AND KEY_VALUES =$1$OP$
                    USING {ID};
                    EXCEPTION WHEN undefined_table
                    THEN NULL;
                    WHEN OTHERS
                    THEN RAISE;
                    END;

                    END $$;

                </query>
            </dbCommand>
        </delete>
    </data>
    <data table="PI_ADJACENT_CONSTRUCTION" schema="PODS" id="PODS_PI_ADJACENT_CONSTRUCTION" comment="PODS.PI_ADJACENT_CONSTRUCTION">
        <select>
            <dbQuery idField="ID">
                <param name="USER_ID" default="-1" type="Int64"/>
                <var name="FILTER" default="1=1"/>
                <var name="LPU_ACCESS_FILTER" default="SELECT srv_district_id FROM PODS.SRV_DISTRICT_GCL"/>
                <query>
                    SELECT * FROM (SELECT EVENT_ID ID, t.* FROM PODS.PI_ADJACENT_CONSTRUCTION t) d WHERE {FILTER}
                </query>
            </dbQuery>
        </select>
        <insert>
            <dbCommand>
				<var name="CLASS_ID" type="String" direction="Input" default="PODS_PI_ADJACENT_CONSTRUCTION" /> 
				<var name="POLICY" default="POLICY.xml#INSERT_PODS_SEM"  />
                <var name="EVENT_GUID" default="" type="String"/>
                <var name="INSPECTION_DATE" default="" type="DateTime"/>
                <var name="NEAREST_FACILITY_CL" default="UNKNOWN" type="String"/>
                <var name="DISTANCE_TO_FACILITY" default="NULL" type="Decimal"/>
                <var name="DIRECTION_TO_FACILITY_GCL" default="UNKNOWN" type="String"/>
                <var name="MARKER_TYPE_GCL" default="UNKNOWN" type="String"/>
                <var name="PERSON_NOTIFIED" default="" type="String"/>
                <var name="DESCRIPTION_OF_CONSTRUCTION" default="" type="String"/>
                <var name="ESTIMATED_OCCUPANCY" default="NULL" type="Decimal"/>
                <var name="PI_EVENT_ID" default="NULL" type="Decimal"/>
                <var name="PI_EVENT_GUID" default="" type="String"/>
                <var name="DESCRIPTION" default="" type="String"/>
                <var name="SOURCE_GCL" default="UNKNOWN" type="String"/>
                <var name="COMMENTS" default="" type="String"/>
                <var name="ID" type="Int64" direction="Output" default="SELECT max(EVENT_ID) id FROM PODS.EVENT_RANGE"/>
                <var name="PODS_USER" type="String"/>
                <var name="USER_ID" default="-1" type="Int64"/>
                <query>
					DO $$
					DECLARE
					returnId integer;
                    BEGIN
                    INSERT INTO PODS.EVENT_RANGE (EVENT_GUID,FEATURE_ID,STATION_ID_BEGIN,STATION_ID_END,PODS_USER,CREATE_DATE,EFFECTIVE_FROM_DATE,CURRENT_INDICATOR_LF,POSITIONING_TYPE_CL)
                    VALUES('{EVENT_GUID}','PI_ADJ_CONSTR',0,0,NULLIF('{PODS_USER}',''),current_timestamp,current_timestamp,'Y','UNKNOWN')
                    RETURNING EVENT_ID INTO returnId;

                    INSERT INTO PODS.PI_ADJACENT_CONSTRUCTION(EVENT_ID,EVENT_GUID,INSPECTION_DATE,NEAREST_FACILITY_CL,DISTANCE_TO_FACILITY,DIRECTION_TO_FACILITY_GCL,MARKER_TYPE_GCL,PERSON_NOTIFIED,DESCRIPTION_OF_CONSTRUCTION,ESTIMATED_OCCUPANCY,PI_EVENT_ID,PI_EVENT_GUID,DESCRIPTION,SOURCE_GCL,COMMENTS)
                    VALUES(returnId,'{EVENT_GUID}','{INSPECTION_DATE}',NULLIF('{NEAREST_FACILITY_CL}',''),{DISTANCE_TO_FACILITY},NULLIF('{DIRECTION_TO_FACILITY_GCL}',''),NULLIF('{MARKER_TYPE_GCL}',''),NULLIF('{PERSON_NOTIFIED}',''),NULLIF('{DESCRIPTION_OF_CONSTRUCTION}',''),{ESTIMATED_OCCUPANCY},{PI_EVENT_ID},'{PI_EVENT_GUID}',NULLIF('{DESCRIPTION}',''),NULLIF('{SOURCE_GCL}',''),NULLIF('{COMMENTS}',''));
					END $$;
                </query>
            </dbCommand>
        </insert>
        <update>
            <dbCommand>
				<param name="CLASS_ID" type="String" direction="Input" default="PODS_PI_ADJACENT_CONSTRUCTION" /> 
				<var name="POLICY" default="POLICY.xml#UPDATE_PODS_SEM"  />
                <param name="EVENT_GUID" default="" type="String"/>
                <param name="INSPECTION_DATE" default="" type="DateTime"/>
                <param name="NEAREST_FACILITY_CL" default="UNKNOWN" type="String"/>
                <param name="DISTANCE_TO_FACILITY" default="NULL" type="Decimal"/>
                <param name="DIRECTION_TO_FACILITY_GCL" default="UNKNOWN" type="String"/>
                <param name="MARKER_TYPE_GCL" default="UNKNOWN" type="String"/>
                <param name="PERSON_NOTIFIED" default="" type="String"/>
                <param name="DESCRIPTION_OF_CONSTRUCTION" default="" type="String"/>
                <param name="ESTIMATED_OCCUPANCY" default="NULL" type="Decimal"/>
                <param name="PI_EVENT_ID" default="NULL" type="Decimal"/>
                <param name="PI_EVENT_GUID" default="" type="String"/>
                <param name="DESCRIPTION" default="" type="String"/>
                <param name="SOURCE_GCL" default="UNKNOWN" type="String"/>
                <param name="COMMENTS" default="" type="String"/>
                <param name="ID" type="Int64"/>
                <param name="USER_ID" default="-1" type="Int64"/>
                <query>
                    UPDATE PODS.PI_ADJACENT_CONSTRUCTION
                    SET EVENT_GUID=case when :EVENT_GUID is null then EVENT_GUID else :EVENT_GUID end,
                    INSPECTION_DATE=case when :INSPECTION_DATE is null then INSPECTION_DATE else :INSPECTION_DATE end,
					NEAREST_FACILITY_CL=case when :NEAREST_FACILITY_CL is null then NEAREST_FACILITY_CL else :NEAREST_FACILITY_CL end,
					DISTANCE_TO_FACILITY=case when :DISTANCE_TO_FACILITY is null then DISTANCE_TO_FACILITY else :DISTANCE_TO_FACILITY end,
					DIRECTION_TO_FACILITY_GCL=case when :DIRECTION_TO_FACILITY_GCL is null then DIRECTION_TO_FACILITY_GCL else :DIRECTION_TO_FACILITY_GCL end,
					MARKER_TYPE_GCL=case when :MARKER_TYPE_GCL is null then MARKER_TYPE_GCL else :MARKER_TYPE_GCL end,
					PERSON_NOTIFIED=case when :PERSON_NOTIFIED is null then PERSON_NOTIFIED else :PERSON_NOTIFIED end,
					DESCRIPTION_OF_CONSTRUCTION=case when :DESCRIPTION_OF_CONSTRUCTION is null then DESCRIPTION_OF_CONSTRUCTION else :DESCRIPTION_OF_CONSTRUCTION end,
					ESTIMATED_OCCUPANCY=case when :ESTIMATED_OCCUPANCY is null then ESTIMATED_OCCUPANCY else :ESTIMATED_OCCUPANCY end,
					PI_EVENT_ID=case when :PI_EVENT_ID is null then PI_EVENT_ID else :PI_EVENT_ID end,
					PI_EVENT_GUID=case when :PI_EVENT_GUID is null then PI_EVENT_GUID else :PI_EVENT_GUID end,
                    DESCRIPTION=case when :DESCRIPTION is null then DESCRIPTION else :DESCRIPTION end,
                    SOURCE_GCL=case when :SOURCE_GCL is null then SOURCE_GCL else :SOURCE_GCL end,
                    COMMENTS=case when :COMMENTS is null then COMMENTS else :COMMENTS end
                    WHERE EVENT_ID = :ID;
                </query>
            </dbCommand>
        </update>
        <delete>
            <dbCommand>
				<var name="CLASS_ID" type="String" direction="Input" default="PODS_PI_ADJACENT_CONSTRUCTION" /> 
				<var name="POLICY" default="POLICY.xml#DELETE_PODS_SEM"  />
                <var name="ID" type="Int64"/>
                <var name="USER_ID" default="-1" type="Int64"/>
                <query>
					DO $$
                    BEGIN
                    UPDATE PODS.EVENT_RANGE
                    SET CURRENT_INDICATOR_LF='N'
                    WHERE EVENT_ID = {ID};

                    DELETE FROM PODS.PI_ADJACENT_CONSTRUCTION
                    WHERE EVENT_ID = {ID};
                    DELETE FROM WEB50.LNK_GATE WHERE LEFT_OBJ_ID = 'PODS_PI_ADJACENT_CONSTRUCTION/'||CAST({ID} AS VARCHAR(30)) OR RIGHT_OBJ_ID = 'PODS_PI_ADJACENT_CONSTRUCTION/'||CAST({ID} AS VARCHAR(30)); 
					END $$;
                </query>
            </dbCommand>
        </delete>
    </data>
    <data table="PI_ANODE_READING" schema="PODS" id="PODS_PI_ANODE_READING" comment="PODS.PI_ANODE_READING">
        <select>
            <dbQuery idField="ID">
                <param name="USER_ID" default="-1" type="Int64"/>
                <var name="FILTER" default="1=1"/>
                <var name="LPU_ACCESS_FILTER" default="SELECT srv_district_id FROM PODS.SRV_DISTRICT_GCL"/>
                <query>
                    SELECT * FROM (SELECT EVENT_ID ID, t.* FROM PODS.PI_ANODE_READING t) d WHERE {FILTER}
                </query>
            </dbQuery>
        </select>
        <insert>
            <dbCommand>
				<var name="CLASS_ID" type="String" direction="Input" default="PODS_PI_ANODE_READING" /> 
				<var name="POLICY" default="POLICY.xml#INSERT_PODS_SEM"  />
                <var name="EVENT_GUID" default="" type="String"/>
                <var name="INSPECTION_DATE" default="" type="DateTime"/>
                <var name="DESCRIPTION" default="" type="String"/>
                <var name="POTENTIAL_READING" default="NULL" type="Decimal"/>
                <var name="CURRENT_READING" default="NULL" type="Decimal"/>
                <var name="RESISTANCE_READING" default="NULL" type="Decimal"/>
                <var name="PI_CP_EVENT_ID" default="NULL" type="Decimal"/>
                <var name="PI_CP_EVENT_GUID" default="" type="String"/>
                <var name="REF_ANODE_EVENT_ID" default="NULL" type="Decimal"/>
                <var name="REF_ANODE_EVENT_GUID" default="" type="String"/>
                <var name="SOURCE_GCL" default="UNKNOWN" type="String"/>
                <var name="COMMENTS" default="" type="String"/>
                <var name="ID" type="Int64" direction="Output" default="SELECT max(EVENT_ID) id FROM PODS.EVENT_RANGE"/>
                <var name="PODS_USER" type="String"/>
                <var name="USER_ID" default="-1" type="Int64"/>
                <query>
					DO $$
					DECLARE
					returnId integer;
                    BEGIN
                    INSERT INTO PODS.EVENT_RANGE (EVENT_GUID,FEATURE_ID,STATION_ID_BEGIN,STATION_ID_END,PODS_USER,CREATE_DATE,EFFECTIVE_FROM_DATE,CURRENT_INDICATOR_LF,POSITIONING_TYPE_CL)
                    VALUES('{EVENT_GUID}','PI_ANODE_READING',0,0,NULLIF('{PODS_USER}',''),current_timestamp,current_timestamp,'Y','UNKNOWN')
                    RETURNING EVENT_ID INTO returnId;

                    INSERT INTO PODS.PI_ANODE_READING(EVENT_ID,EVENT_GUID,INSPECTION_DATE,DESCRIPTION,POTENTIAL_READING,CURRENT_READING,RESISTANCE_READING,PI_CP_EVENT_ID,PI_CP_EVENT_GUID,REF_ANODE_EVENT_ID,REF_ANODE_EVENT_GUID,SOURCE_GCL,COMMENTS)
                    VALUES(returnId,'{EVENT_GUID}','{INSPECTION_DATE}',NULLIF('{DESCRIPTION}',''),{POTENTIAL_READING},{CURRENT_READING},{RESISTANCE_READING},{PI_CP_EVENT_ID},'{PI_CP_EVENT_GUID}',{REF_ANODE_EVENT_ID},'{REF_ANODE_EVENT_GUID}',NULLIF('{SOURCE_GCL}',''),NULLIF('{COMMENTS}',''));
					END $$;
                </query>
            </dbCommand>
        </insert>
        <update>
            <dbCommand>
				<param name="CLASS_ID" type="String" direction="Input" default="PODS_PI_ANODE_READING" /> 
				<var name="POLICY" default="POLICY.xml#UPDATE_PODS_SEM"  />
                <param name="EVENT_GUID" default="" type="String"/>
                <param name="INSPECTION_DATE" default="" type="DateTime"/>
                <param name="DESCRIPTION" default="" type="String"/>
                <param name="POTENTIAL_READING" default="NULL" type="Decimal"/>
                <param name="CURRENT_READING" default="NULL" type="Decimal"/>
                <param name="RESISTANCE_READING" default="NULL" type="Decimal"/>
                <param name="PI_CP_EVENT_ID" default="NULL" type="Decimal"/>
                <param name="PI_CP_EVENT_GUID" default="" type="String"/>
                <param name="REF_ANODE_EVENT_ID" default="NULL" type="Decimal"/>
                <param name="REF_ANODE_EVENT_GUID" default="" type="String"/>
                <param name="SOURCE_GCL" default="UNKNOWN" type="String"/>
                <param name="COMMENTS" default="" type="String"/>
                <param name="ID" type="Int64"/>
                <param name="USER_ID" default="-1" type="Int64"/>
                <query>
                    UPDATE PODS.PI_ANODE_READING
                    SET 
					EVENT_GUID=case when :EVENT_GUID is null then EVENT_GUID else :EVENT_GUID end,
                    INSPECTION_DATE=case when :INSPECTION_DATE is null then INSPECTION_DATE else :INSPECTION_DATE end,
                    DESCRIPTION=case when :DESCRIPTION is null then DESCRIPTION else :DESCRIPTION end,
					POTENTIAL_READING=case when :POTENTIAL_READING is null then POTENTIAL_READING else :POTENTIAL_READING end,
					CURRENT_READING=case when :CURRENT_READING is null then CURRENT_READING else :CURRENT_READING end,
					RESISTANCE_READING=case when :RESISTANCE_READING is null then RESISTANCE_READING else :RESISTANCE_READING end,
					PI_CP_EVENT_ID=case when :PI_CP_EVENT_ID is null then PI_CP_EVENT_ID else :PI_CP_EVENT_ID end,
					PI_CP_EVENT_GUID=case when :PI_CP_EVENT_GUID is null then PI_CP_EVENT_GUID else :PI_CP_EVENT_GUID end,
					REF_ANODE_EVENT_ID=case when :REF_ANODE_EVENT_ID is null then REF_ANODE_EVENT_ID else :REF_ANODE_EVENT_ID end,
					REF_ANODE_EVENT_GUID=case when :REF_ANODE_EVENT_GUID is null then REF_ANODE_EVENT_GUID else :REF_ANODE_EVENT_GUID end,
                    SOURCE_GCL=case when :SOURCE_GCL is null then SOURCE_GCL else :SOURCE_GCL end,
                    COMMENTS=case when :COMMENTS is null then COMMENTS else :COMMENTS end
                    WHERE EVENT_ID = :ID;
                </query>
            </dbCommand>
        </update>
        <delete>
            <dbCommand>
				<var name="CLASS_ID" type="String" direction="Input" default="PODS_PI_ANODE_READING" /> 
				<var name="POLICY" default="POLICY.xml#DELETE_PODS_SEM"  />
                <var name="ID" type="Int64"/>
                <var name="USER_ID" default="-1" type="Int64"/>
                <query>
					DO $$
                    BEGIN
                    UPDATE PODS.EVENT_RANGE
                    SET CURRENT_INDICATOR_LF='N'
                    WHERE EVENT_ID = {ID};

                    DELETE FROM PODS.PI_ANODE_READING
                    WHERE EVENT_ID = {ID};
                    DELETE FROM WEB50.LNK_GATE WHERE LEFT_OBJ_ID = 'PODS_PI_ANODE_READING/'||CAST({ID} AS VARCHAR(30)) OR RIGHT_OBJ_ID = 'PODS_PI_ANODE_READING/'||CAST({ID} AS VARCHAR(30));
					END $$;
                </query>
            </dbCommand>
        </delete>
    </data>
    <data table="PI_BOND_READING" schema="PODS" id="PODS_PI_BOND_READING" comment="PODS.PI_BOND_READING">
        <select>
            <dbQuery idField="ID">
                <param name="USER_ID" default="-1" type="Int64"/>
                <var name="FILTER" default="1=1"/>
                <var name="LPU_ACCESS_FILTER" default="SELECT srv_district_id FROM PODS.SRV_DISTRICT_GCL"/>
                <query>
                    SELECT * FROM (SELECT EVENT_ID ID, t.* FROM PODS.PI_BOND_READING t) d WHERE {FILTER}
                </query>
            </dbQuery>
        </select>
        <insert>
            <dbCommand>
				<var name="CLASS_ID" type="String" direction="Input" default="PODS_PI_BOND_READING" /> 
				<var name="POLICY" default="POLICY.xml#INSERT_PODS_SEM"  />
                <var name="EVENT_GUID" default="" type="String"/>
                <var name="INSPECTION_DATE" default="" type="DateTime"/>
                <var name="DESCRIPTION" default="" type="String"/>
                <var name="POTENTIAL_READING" default="NULL" type="Decimal"/>
                <var name="CURRENT_READING" default="NULL" type="Decimal"/>
                <var name="RESISTANCE_READING" default="NULL" type="Decimal"/>
                <var name="PI_CP_EVENT_ID" default="NULL" type="Decimal"/>
                <var name="PI_CP_EVENT_GUID" default="" type="String"/>
                <var name="REF_BOND_LEAD_EVENT_ID" default="NULL" type="Decimal"/>
                <var name="REF_BOND_LEAD_EVENT_GUID" default="" type="String"/>
                <var name="SOURCE_GCL" default="UNKNOWN" type="String"/>
                <var name="COMMENTS" default="" type="String"/>
                <var name="ID" type="Int64" direction="Output" default="SELECT max(EVENT_ID) id FROM PODS.EVENT_RANGE"/>
                <var name="PODS_USER" type="String"/>
                <var name="USER_ID" default="-1" type="Int64"/>
                <query>
					DO $$
					DECLARE
					returnId integer;
                    BEGIN
                    INSERT INTO PODS.EVENT_RANGE (EVENT_GUID,FEATURE_ID,STATION_ID_BEGIN,STATION_ID_END,PODS_USER,CREATE_DATE,EFFECTIVE_FROM_DATE,CURRENT_INDICATOR_LF,POSITIONING_TYPE_CL)
                    VALUES('{EVENT_GUID}','PI_BOND_READING',0,0,NULLIF('{PODS_USER}',''),current_timestamp,current_timestamp,'Y','UNKNOWN')
                    RETURNING EVENT_ID INTO returnId;

                    INSERT INTO PODS.PI_BOND_READING(EVENT_ID,EVENT_GUID,INSPECTION_DATE,DESCRIPTION,POTENTIAL_READING,CURRENT_READING,RESISTANCE_READING,PI_CP_EVENT_ID,PI_CP_EVENT_GUID,REF_BOND_LEAD_EVENT_ID,REF_BOND_LEAD_EVENT_GUID,SOURCE_GCL,COMMENTS)
                    VALUES(returnId,'{EVENT_GUID}','{INSPECTION_DATE}',NULLIF('{DESCRIPTION}',''),{POTENTIAL_READING},{CURRENT_READING},{RESISTANCE_READING},{PI_CP_EVENT_ID},'{PI_CP_EVENT_GUID}',{REF_BOND_LEAD_EVENT_ID},'{REF_BOND_LEAD_EVENT_GUID}',NULLIF('{SOURCE_GCL}',''),NULLIF('{COMMENTS}',''));
					END $$;
                </query>
            </dbCommand>
        </insert>
        <update>
            <dbCommand>
				<param name="CLASS_ID" type="String" direction="Input" default="PODS_PI_BOND_READING" /> 
				<var name="POLICY" default="POLICY.xml#UPDATE_PODS_SEM"  />
                <param name="EVENT_GUID" default="" type="String"/>
                <param name="INSPECTION_DATE" default="" type="DateTime"/>
                <param name="DESCRIPTION" default="" type="String"/>
                <param name="POTENTIAL_READING" default="NULL" type="Decimal"/>
                <param name="CURRENT_READING" default="NULL" type="Decimal"/>
                <param name="RESISTANCE_READING" default="NULL" type="Decimal"/>
                <param name="PI_CP_EVENT_ID" default="NULL" type="Decimal"/>
                <param name="PI_CP_EVENT_GUID" default="" type="String"/>
                <param name="REF_BOND_LEAD_EVENT_ID" default="NULL" type="Decimal"/>
                <param name="REF_BOND_LEAD_EVENT_GUID" default="" type="String"/>
                <param name="SOURCE_GCL" default="UNKNOWN" type="String"/>
                <param name="COMMENTS" default="" type="String"/>
                <param name="ID" type="Int64"/>
                <param name="USER_ID" default="-1" type="Int64"/>
                <query>
                    UPDATE PODS.PI_BOND_READING
                    SET 
					EVENT_GUID=case when :EVENT_GUID is null then EVENT_GUID else :EVENT_GUID end,
                    INSPECTION_DATE=case when :INSPECTION_DATE is null then INSPECTION_DATE else :INSPECTION_DATE end,
                    DESCRIPTION=case when :DESCRIPTION is null then DESCRIPTION else :DESCRIPTION end,
                    POTENTIAL_READING=case when :POTENTIAL_READING is null then POTENTIAL_READING else :POTENTIAL_READING end,
                    CURRENT_READING=case when :CURRENT_READING is null then CURRENT_READING else :CURRENT_READING end,
                    RESISTANCE_READING=case when :RESISTANCE_READING is null then RESISTANCE_READING else :RESISTANCE_READING end,
                    PI_CP_EVENT_ID=case when :PI_CP_EVENT_ID is null then PI_CP_EVENT_ID else :PI_CP_EVENT_ID end,
                    PI_CP_EVENT_GUID=case when :PI_CP_EVENT_GUID is null then PI_CP_EVENT_GUID else :PI_CP_EVENT_GUID end,
					REF_BOND_LEAD_EVENT_ID=case when :REF_BOND_LEAD_EVENT_ID is null then REF_BOND_LEAD_EVENT_ID else :REF_BOND_LEAD_EVENT_ID end,
					EF_BOND_LEAD_EVENT_GUID=case when :EF_BOND_LEAD_EVENT_GUID is null then EF_BOND_LEAD_EVENT_GUID else :EF_BOND_LEAD_EVENT_GUID end,
                    SOURCE_GCL=case when :SOURCE_GCL is null then SOURCE_GCL else :SOURCE_GCL end,
                    COMMENTS=case when :COMMENTS is null then COMMENTS else :COMMENTS end
                    WHERE EVENT_ID = :ID;
                </query>
            </dbCommand>
        </update>
        <delete>
            <dbCommand>
				<var name="CLASS_ID" type="String" direction="Input" default="PODS_PI_BOND_READING" /> 
				<var name="POLICY" default="POLICY.xml#DELETE_PODS_SEM"  />
                <var name="ID" type="Int64"/>
                <var name="USER_ID" default="-1" type="Int64"/>
                <query>
					DO $$
                    BEGIN
                    UPDATE PODS.EVENT_RANGE
                    SET CURRENT_INDICATOR_LF='N'
                    WHERE EVENT_ID = {ID};

                    DELETE FROM PODS.PI_BOND_READING
                    WHERE EVENT_ID = {ID};
                    DELETE FROM WEB50.LNK_GATE WHERE LEFT_OBJ_ID = 'PODS_PI_BOND_READING/'||CAST({ID} AS VARCHAR(30)) OR RIGHT_OBJ_ID = 'PODS_PI_BOND_READING/'||CAST({ID} AS VARCHAR(30)); END $$;
                </query>
            </dbCommand>
        </delete>
    </data>
    <data table="PI_CASING_READING" schema="PODS" id="PODS_PI_CASING_READING" comment="PODS.PI_CASING_READING">
        <select>
            <dbQuery idField="ID">
                <param name="USER_ID" default="-1" type="Int64"/>
                <var name="FILTER" default="1=1"/>
                <var name="LPU_ACCESS_FILTER" default="SELECT srv_district_id FROM PODS.SRV_DISTRICT_GCL"/>
                <query>
                    SELECT * FROM (SELECT EVENT_ID ID, t.* FROM PODS.PI_CASING_READING t) d WHERE {FILTER}
                </query>
            </dbQuery>
        </select>
        <insert>
            <dbCommand>
				<var name="CLASS_ID" type="String" direction="Input" default="PODS_PI_CASING_READING" /> 
				<var name="POLICY" default="POLICY.xml#INSERT_PODS_SEM"  />
                <var name="EVENT_GUID" default="" type="String"/>
                <var name="INSPECTION_DATE" default="" type="DateTime"/>
                <var name="DESCRIPTION" default="" type="String"/>
                <var name="SHORTED_LF" default="" type="String"/>
                <var name="CURRENT_READING" default="NULL" type="Decimal"/>
                <var name="POTENTIAL_READING" default="NULL" type="Decimal"/>
                <var name="RESISTANCE_READING" default="NULL" type="Decimal"/>
                <var name="PI_CP_EVENT_ID" default="NULL" type="Decimal"/>
                <var name="PI_CP_EVENT_GUID" default="" type="String"/>
                <var name="REF_CASING_EVENT_ID" default="NULL" type="Decimal"/>
                <var name="REF_CASING_EVENT_GUID" default="" type="String"/>
                <var name="SOURCE_GCL" default="UNKNOWN" type="String"/>
                <var name="COMMENTS" default="" type="String"/>
                <var name="ID" type="Int64" direction="Output" default="SELECT max(EVENT_ID) id FROM PODS.EVENT_RANGE"/>
                <var name="PODS_USER" type="String"/>
                <var name="USER_ID" default="-1" type="Int64"/>
                <query>
					DO $$
					DECLARE
					returnId integer;
                    BEGIN
                    INSERT INTO PODS.EVENT_RANGE (EVENT_GUID,FEATURE_ID,STATION_ID_BEGIN,STATION_ID_END,PODS_USER,CREATE_DATE,EFFECTIVE_FROM_DATE,CURRENT_INDICATOR_LF,POSITIONING_TYPE_CL)
                    VALUES('{EVENT_GUID}','PI_CASING_READ',0,0,NULLIF('{PODS_USER}',''),current_timestamp,current_timestamp,'Y','UNKNOWN')
                    RETURNING EVENT_ID INTO returnId;

                    INSERT INTO PODS.PI_CASING_READING(EVENT_ID,EVENT_GUID,INSPECTION_DATE,DESCRIPTION,SHORTED_LF,CURRENT_READING,POTENTIAL_READING,RESISTANCE_READING,PI_CP_EVENT_ID,PI_CP_EVENT_GUID,REF_CASING_EVENT_ID,REF_CASING_EVENT_GUID,SOURCE_GCL,COMMENTS)
                    VALUES(returnId,'{EVENT_GUID}','{INSPECTION_DATE}',NULLIF('{DESCRIPTION}',''),'{SHORTED_LF}',{CURRENT_READING},{POTENTIAL_READING},{RESISTANCE_READING},{PI_CP_EVENT_ID},'{PI_CP_EVENT_GUID}',{REF_CASING_EVENT_ID},'{REF_CASING_EVENT_GUID}',NULLIF('{SOURCE_GCL}',''),NULLIF('{COMMENTS}',''));
					END $$;
                </query>
            </dbCommand>
        </insert>
        <update>
            <dbCommand>
				<param name="CLASS_ID" type="String" direction="Input" default="PODS_PI_CASING_READING" /> 
				<var name="POLICY" default="POLICY.xml#UPDATE_PODS_SEM"  />
                <param name="EVENT_GUID" default="" type="String"/>
                <param name="INSPECTION_DATE" default="" type="DateTime"/>
                <param name="DESCRIPTION" default="" type="String"/>
                <param name="SHORTED_LF" default="" type="String"/>
                <param name="CURRENT_READING" default="NULL" type="Decimal"/>
                <param name="POTENTIAL_READING" default="NULL" type="Decimal"/>
                <param name="RESISTANCE_READING" default="NULL" type="Decimal"/>
                <param name="PI_CP_EVENT_ID" default="NULL" type="Decimal"/>
                <param name="PI_CP_EVENT_GUID" default="" type="String"/>
                <param name="REF_CASING_EVENT_ID" default="NULL" type="Decimal"/>
                <param name="REF_CASING_EVENT_GUID" default="" type="String"/>
                <param name="SOURCE_GCL" default="UNKNOWN" type="String"/>
                <param name="COMMENTS" default="" type="String"/>
                <param name="ID" type="Int64"/>
                <param name="USER_ID" default="-1" type="Int64"/>
                <query>
                    UPDATE PODS.PI_CASING_READING
                    SET EVENT_GUID=case when :EVENT_GUID is null then EVENT_GUID else :EVENT_GUID end,
                    INSPECTION_DATE=case when :INSPECTION_DATE is null then INSPECTION_DATE else :INSPECTION_DATE end,
                    DESCRIPTION=case when :DESCRIPTION is null then DESCRIPTION else :DESCRIPTION end,
					SHORTED_LF=case when :SHORTED_LF is null then SHORTED_LF else :SHORTED_LF end,
                    CURRENT_READING=case when :CURRENT_READING is null then CURRENT_READING else :CURRENT_READING end,
                    POTENTIAL_READING=case when :POTENTIAL_READING is null then POTENTIAL_READING else :POTENTIAL_READING end,
                    RESISTANCE_READING=case when :RESISTANCE_READING is null then RESISTANCE_READING else :RESISTANCE_READING end,
                    PI_CP_EVENT_ID=case when :PI_CP_EVENT_ID is null then PI_CP_EVENT_ID else :PI_CP_EVENT_ID end,
                    PI_CP_EVENT_GUID=case when :PI_CP_EVENT_GUID is null then PI_CP_EVENT_GUID else :PI_CP_EVENT_GUID end,
					REF_CASING_EVENT_ID=case when :REF_CASING_EVENT_ID is null then REF_CASING_EVENT_ID else :REF_CASING_EVENT_ID end,
					REF_CASING_EVENT_GUID=case when :REF_CASING_EVENT_GUID is null then REF_CASING_EVENT_GUID else :REF_CASING_EVENT_GUID end,
                    SOURCE_GCL=case when :SOURCE_GCL is null then SOURCE_GCL else :SOURCE_GCL end,
                    COMMENTS=case when :COMMENTS is null then COMMENTS else :COMMENTS end
                    WHERE EVENT_ID = :ID;
                </query>
            </dbCommand>
        </update>
        <delete>
            <dbCommand>
				<var name="CLASS_ID" type="String" direction="Input" default="PODS_PI_CASING_READING" /> 
				<var name="POLICY" default="POLICY.xml#DELETE_PODS_SEM"  />
                <var name="ID" type="Int64"/>
                <var name="USER_ID" default="-1" type="Int64"/>
                <query>
					DO $$
                    BEGIN
                    UPDATE PODS.EVENT_RANGE
                    SET CURRENT_INDICATOR_LF='N'
                    WHERE EVENT_ID = {ID};

                    DELETE FROM PODS.PI_CASING_READING
                    WHERE EVENT_ID = {ID};
                    DELETE FROM WEB50.LNK_GATE WHERE LEFT_OBJ_ID = 'PODS_PI_CASING_READING/'||CAST({ID} AS VARCHAR(30)) OR RIGHT_OBJ_ID = 'PODS_PI_CASING_READING/'||CAST({ID} AS VARCHAR(30));
					END $$;
                </query>
            </dbCommand>
        </delete>
    </data>
    <data table="PI_CIS_READING" schema="PODS" id="PODS_PI_CIS_READING" comment="PODS.PI_CIS_READING">
        <select>
            <dbQuery idField="ID">
                <param name="USER_ID" default="-1" type="Int64"/>
                <var name="FILTER" default="1=1"/>
                <var name="LPU_ACCESS_FILTER" default="SELECT srv_district_id FROM PODS.SRV_DISTRICT_GCL"/>
                <query>
                    SELECT * FROM (SELECT EVENT_ID ID, t.* FROM PODS.PI_CIS_READING t) d WHERE {FILTER}
                </query>
            </dbQuery>
        </select>
        <insert>
            <dbCommand>
				<var name="CLASS_ID" type="String" direction="Input" default="PODS_PI_CIS_READING" /> 
				<var name="POLICY" default="POLICY.xml#INSERT_PODS_SEM"  />
                <var name="EVENT_GUID" default="" type="String"/>
                <var name="INSPECTION_DATE" default="" type="DateTime"/>
                <var name="PS_ON" default="NULL" type="Decimal"/>
                <var name="PS_OFF" default="NULL" type="Decimal"/>
                <var name="STATIC" default="NULL" type="Decimal"/>
                <var name="DC_POTENTIAL_VOLTS" default="NULL" type="Decimal"/>
                <var name="PI_CP_EVENT_ID" default="NULL" type="Decimal"/>
                <var name="PI_CP_EVENT_GUID" default="" type="String"/>
                <var name="DESCRIPTION" default="" type="String"/>
                <var name="SOURCE_GCL" default="UNKNOWN" type="String"/>
                <var name="COMMENTS" default="" type="String"/>
                <var name="GRAD_ON" default="NULL" type="Decimal"/>
                <var name="GRAD_OFF" default="NULL" type="Decimal"/>
                <var name="D_GRAD" default="NULL" type="Decimal"/>
                <var name="DD_GRAD" default="NULL" type="Decimal"/>
                <var name="ID" type="Int64" direction="Output" default="SELECT max(EVENT_ID) id FROM PODS.EVENT_RANGE"/>
                <var name="PODS_USER" type="String"/>
                <var name="USER_ID" default="-1" type="Int64"/>
<var name="GRAD_VKL_RIGHT" default="NULL" type="Decimal"/>
<var name="GRAD_VKL_LEFT" default="NULL" type="Decimal"/>
<var name="UTZ_VIKL" default="NULL" type="Decimal"/>
<var name="UTZ_VKL" default="NULL" type="Decimal"/>
<var name="UPOL" default="NULL" type="Decimal"/>
                <query>
					DO $$
					DECLARE
					returnId integer;
                    BEGIN
                    INSERT INTO PODS.EVENT_RANGE (EVENT_GUID,FEATURE_ID,STATION_ID_BEGIN,STATION_ID_END,PODS_USER,CREATE_DATE,EFFECTIVE_FROM_DATE,CURRENT_INDICATOR_LF,POSITIONING_TYPE_CL)
                    VALUES(NULLIF('{EVENT_GUID}',''),'PI_CIS_READING',0,0,NULLIF(NULLIF('{PODS_USER}',''),''),current_timestamp,current_timestamp,'Y','UNKNOWN')
                    RETURNING EVENT_ID INTO returnId;

                    INSERT INTO PODS.PI_CIS_READING(EVENT_ID,EVENT_GUID,INSPECTION_DATE,PS_ON,PS_OFF,STATIC,DC_POTENTIAL_VOLTS,PI_CP_EVENT_ID,PI_CP_EVENT_GUID,DESCRIPTION,SOURCE_GCL,COMMENTS,GRAD_ON,GRAD_OFF,D_GRAD,DD_GRAD,GRAD_VKL_RIGHT, GRAD_VKL_LEFT, UTZ_VIKL, UTZ_VKL , UPOL)
                    VALUES(returnId,NULLIF('{EVENT_GUID}',''),'{INSPECTION_DATE}',{PS_ON},{PS_OFF},{STATIC},{DC_POTENTIAL_VOLTS},{PI_CP_EVENT_ID},NULLIF('{PI_CP_EVENT_GUID}',''),NULLIF(NULLIF('{DESCRIPTION}',''),''),NULLIF(NULLIF('{SOURCE_GCL}',''),''),NULLIF(NULLIF('{COMMENTS}',''),''),{GRAD_ON},{GRAD_OFF},{D_GRAD},{DD_GRAD},{GRAD_VKL_RIGHT}, {GRAD_VKL_LEFT}, {UTZ_VIKL}, {UTZ_VKL}, {UPOL});
					END $$;
                </query>
            </dbCommand>
        </insert>
        <update>
            <dbCommand>
				<param name="CLASS_ID" type="String" direction="Input" default="PODS_PI_CIS_READING" /> 
				<var name="POLICY" default="POLICY.xml#UPDATE_PODS_SEM"  />
                <param name="EVENT_GUID" default="" type="String"/>
                <param name="INSPECTION_DATE" default="" type="DateTime"/>
                <param name="PS_ON" default="NULL" type="Decimal"/>
                <param name="PS_OFF" default="NULL" type="Decimal"/>
                <param name="STATIC" default="NULL" type="Decimal"/>
                <param name="DC_POTENTIAL_VOLTS" default="NULL" type="Decimal"/>
                <param name="PI_CP_EVENT_ID" default="NULL" type="Decimal"/>
                <param name="PI_CP_EVENT_GUID" default="" type="String"/>
                <param name="DESCRIPTION" default="" type="String"/>
                <param name="SOURCE_GCL" default="UNKNOWN" type="String"/>
                <param name="COMMENTS" default="" type="String"/>
                <param name="GRAD_ON" default="NULL" type="Decimal"/>
                <param name="GRAD_OFF" default="NULL" type="Decimal"/>
                <param name="D_GRAD" default="NULL" type="Decimal"/>
                <param name="DD_GRAD" default="NULL" type="Decimal"/>
                <param name="ID" type="Int64"/>
                <param name="USER_ID" default="-1" type="Int64"/>
                <query>
                    UPDATE PODS.PI_CIS_READING
                    SET 
					EVENT_GUID=case when :EVENT_GUID is null then EVENT_GUID else :EVENT_GUID end,
                    INSPECTION_DATE=case when :INSPECTION_DATE is null then INSPECTION_DATE else :INSPECTION_DATE end,
					PS_OFF=case when :PS_OFF is null then PS_OFF else :PS_OFF end,
					STATIC=case when :STATIC is null then STATIC else :STATIC end,
					DC_POTENTIAL_VOLTS=case when :DC_POTENTIAL_VOLTS is null then DC_POTENTIAL_VOLTS else :DC_POTENTIAL_VOLTS end,
                    PI_CP_EVENT_ID=case when :PI_CP_EVENT_ID is null then PI_CP_EVENT_ID else :PI_CP_EVENT_ID end,
                    PI_CP_EVENT_GUID=case when :PI_CP_EVENT_GUID is null then PI_CP_EVENT_GUID else :PI_CP_EVENT_GUID end,
                    DESCRIPTION=case when :DESCRIPTION is null then DESCRIPTION else :DESCRIPTION end,
                    SOURCE_GCL=case when :SOURCE_GCL is null then SOURCE_GCL else :SOURCE_GCL end,
                    COMMENTS=case when :COMMENTS is null then COMMENTS else :COMMENTS end,
					GRAD_ON=case when :GRAD_ON is null then GRAD_ON else :GRAD_ON end,
					GRAD_OFF=case when :GRAD_OFF is null then GRAD_OFF else :GRAD_OFF end,
					D_GRAD=case when :D_GRAD is null then D_GRAD else :D_GRAD end,
					PS_ON=case when :PS_ON is null then PS_ON else :PS_ON end
                    WHERE EVENT_ID = :ID;
                </query>
            </dbCommand>
        </update>
        <delete>
            <dbCommand>
				<var name="CLASS_ID" type="String" direction="Input" default="PODS_PI_CIS_READING" /> 
				<var name="POLICY" default="POLICY.xml#DELETE_PODS_SEM"  />
                <var name="ID" type="Int64"/>
                <var name="USER_ID" default="-1" type="Int64"/>
				  <query>	
					DO $$
					DECLARE
                   
                    BEGIN
                    UPDATE PODS.EVENT_RANGE
                    SET CURRENT_INDICATOR_LF='N'
                    WHERE EVENT_ID = {ID};

                    DELETE FROM PODS.PI_CIS_READING
                    WHERE EVENT_ID = {ID};

                    DELETE
                    FROM WEB50.LNK_GATE
                    WHERE LEFT_OBJ_ID = 'PODS_PI_CIS_READING/'||CAST({ID} AS VARCHAR(30))
                    OR RIGHT_OBJ_ID = 'PODS_PI_CIS_READING/'||CAST({ID} AS VARCHAR(30));

                    DELETE
                    FROM GIS_INTEGRATION50.GATE
                    WHERE TABLE_NAME in ('PI_CIS_READING')
                    AND KEY_FIELDS = 'EVENT_ID'
                    AND KEY_VALUES ={ID}::text;
                    

                    END $$;

                </query>
            </dbCommand>
        </delete>
    </data>
    <data table="PI_COATING_DATA" schema="PODS" id="PODS_PI_COATING_DATA" comment="PODS.PI_COATING_DATA">
        <select>
            <dbQuery idField="ID">
                <param name="USER_ID" default="-1" type="Int64"/>
                <var name="FILTER" default="1=1"/>
                <var name="LPU_ACCESS_FILTER" default="SELECT srv_district_id FROM PODS.SRV_DISTRICT_GCL"/>
                <query>
                    SELECT * FROM (SELECT EVENT_ID ID, t.* FROM PODS.PI_COATING_DATA t) d WHERE {FILTER}
                </query>
            </dbQuery>
        </select>
        <insert>
            <dbCommand>
				<var name="CLASS_ID" type="String" direction="Input" default="PODS_PI_COATING_DATA" /> 
				<var name="POLICY" default="POLICY.xml#INSERT_PODS_SEM"  />
                <var name="EVENT_GUID" default="" type="String"/>
                <var name="INSPECTION_DATE" default="" type="DateTime"/>
                <var name="COATING_TYPE_SCL" default="" type="String"/>
                <var name="COATING_SUBTYPE_SCL" default="" type="String"/>
                <var name="CONDITION_CL" default="UNKNOWN" type="String"/>
                <var name="DEFECT_TYPE_CL" default="UNKNOWN" type="String"/>
                <var name="MOISTURE_UNDER_COATING_LF" default="" type="String"/>
                <var name="AXIAL_LENGTH" default="NULL" type="Decimal"/>
                <var name="CIRCUM_LENGTH" default="NULL" type="Decimal"/>
                <var name="MAX_WIDTH" default="NULL" type="Decimal"/>
                <var name="DISBOND_DRY_LF" default="" type="String"/>
                <var name="LONG_SEAM_TENT_LEFT" default="NULL" type="Decimal"/>
                <var name="LONG_SEAM_TENT_RIGHT" default="NULL" type="Decimal"/>
                <var name="THICKNESS_AT_0" default="NULL" type="Decimal"/>
                <var name="THICKNESS_AT_45" default="NULL" type="Decimal"/>
                <var name="THICKNESS_AT_90" default="NULL" type="Decimal"/>
                <var name="THICKNESS_AT_135" default="NULL" type="Decimal"/>
                <var name="THICKNESS_AT_180" default="NULL" type="Decimal"/>
                <var name="THICKNESS_AT_225" default="NULL" type="Decimal"/>
                <var name="THICKNESS_AT_270" default="NULL" type="Decimal"/>
                <var name="THICKNESS_AT_315" default="NULL" type="Decimal"/>
                <var name="PI_EVENT_ID" default="NULL" type="Decimal"/>
                <var name="PI_EVENT_GUID" default="" type="String"/>
                <var name="DESCRIPTION" default="" type="String"/>
                <var name="SOURCE_GCL" default="UNKNOWN" type="String"/>
                <var name="COMMENTS" default="" type="String"/>
                <var name="ID" type="Int64" direction="Output" default="SELECT max(EVENT_ID) id FROM PODS.EVENT_RANGE"/>
                <var name="PODS_USER" type="String"/>
                <var name="USER_ID" default="-1" type="Int64"/>
                <query>
					DO $$
					DECLARE
					returnId integer;
                    BEGIN
                    INSERT INTO PODS.EVENT_RANGE (EVENT_GUID,FEATURE_ID,STATION_ID_BEGIN,STATION_ID_END,PODS_USER,CREATE_DATE,EFFECTIVE_FROM_DATE,CURRENT_INDICATOR_LF,POSITIONING_TYPE_CL)
                    VALUES('{EVENT_GUID}','PI_COATING_DATA',0,0,NULLIF('{PODS_USER}',''),current_timestamp,current_timestamp,'Y','UNKNOWN')
                    RETURNING EVENT_ID INTO returnId;

                    INSERT INTO PODS.PI_COATING_DATA(EVENT_ID,EVENT_GUID,INSPECTION_DATE,COATING_TYPE_SCL,COATING_SUBTYPE_SCL,CONDITION_CL,DEFECT_TYPE_CL,MOISTURE_UNDER_COATING_LF,AXIAL_LENGTH,CIRCUM_LENGTH,MAX_WIDTH,DISBOND_DRY_LF,LONG_SEAM_TENT_LEFT,LONG_SEAM_TENT_RIGHT,THICKNESS_AT_0,THICKNESS_AT_45,THICKNESS_AT_90,THICKNESS_AT_135,THICKNESS_AT_180,THICKNESS_AT_225,THICKNESS_AT_270,THICKNESS_AT_315,PI_EVENT_ID,PI_EVENT_GUID,DESCRIPTION,SOURCE_GCL,COMMENTS)
                    VALUES(returnId,'{EVENT_GUID}','{INSPECTION_DATE}',coalesce(SUBSTR(NULLIF('{COATING_TYPE_SCL}',''),0,strpos(NULLIF('{COATING_TYPE_SCL}',''),'@')),'UNKNOWN'),coalesce(SUBSTR(NULLIF('{COATING_TYPE_SCL}',''),strpos(NULLIF('{COATING_TYPE_SCL}',''),'@')+1,length(NULLIF('{COATING_TYPE_SCL}',''))-strpos(NULLIF('{COATING_TYPE_SCL}',''),'@')),'NONE'),NULLIF('{CONDITION_CL}',''),NULLIF('{DEFECT_TYPE_CL}',''),'{MOISTURE_UNDER_COATING_LF}',{AXIAL_LENGTH},{CIRCUM_LENGTH},{MAX_WIDTH},'{DISBOND_DRY_LF}',{LONG_SEAM_TENT_LEFT},{LONG_SEAM_TENT_RIGHT},{THICKNESS_AT_0},{THICKNESS_AT_45},{THICKNESS_AT_90},{THICKNESS_AT_135},{THICKNESS_AT_180},{THICKNESS_AT_225},{THICKNESS_AT_270},{THICKNESS_AT_315},{PI_EVENT_ID},'{PI_EVENT_GUID}',NULLIF('{DESCRIPTION}',''),NULLIF('{SOURCE_GCL}',''),NULLIF('{COMMENTS}',''));
					END $$;
                </query>
            </dbCommand>
        </insert>
        <update>
            <dbCommand>
				<param name="CLASS_ID" type="String" direction="Input" default="PODS_PI_COATING_DATA" /> 
				<var name="POLICY" default="POLICY.xml#UPDATE_PODS_SEM"  />
                <param name="EVENT_GUID" default="" type="String"/>
                <param name="INSPECTION_DATE" default="" type="DateTime"/>
                <param name="COATING_TYPE_SCL" default="" type="String"/>
                <param name="COATING_SUBTYPE_SCL" default="" type="String"/>
                <param name="CONDITION_CL" default="UNKNOWN" type="String"/>
                <param name="DEFECT_TYPE_CL" default="UNKNOWN" type="String"/>
                <param name="MOISTURE_UNDER_COATING_LF" default="" type="String"/>
                <param name="AXIAL_LENGTH" default="NULL" type="Decimal"/>
                <param name="CIRCUM_LENGTH" default="NULL" type="Decimal"/>
                <param name="MAX_WIDTH" default="NULL" type="Decimal"/>
                <param name="DISBOND_DRY_LF" default="" type="String"/>
                <param name="LONG_SEAM_TENT_LEFT" default="NULL" type="Decimal"/>
                <param name="LONG_SEAM_TENT_RIGHT" default="NULL" type="Decimal"/>
                <param name="THICKNESS_AT_0" default="NULL" type="Decimal"/>
                <param name="THICKNESS_AT_45" default="NULL" type="Decimal"/>
                <param name="THICKNESS_AT_90" default="NULL" type="Decimal"/>
                <param name="THICKNESS_AT_135" default="NULL" type="Decimal"/>
                <param name="THICKNESS_AT_180" default="NULL" type="Decimal"/>
                <param name="THICKNESS_AT_225" default="NULL" type="Decimal"/>
                <param name="THICKNESS_AT_270" default="NULL" type="Decimal"/>
                <param name="THICKNESS_AT_315" default="NULL" type="Decimal"/>
                <param name="PI_EVENT_ID" default="NULL" type="Decimal"/>
                <param name="PI_EVENT_GUID" default="" type="String"/>
                <param name="DESCRIPTION" default="" type="String"/>
                <param name="SOURCE_GCL" default="UNKNOWN" type="String"/>
                <param name="COMMENTS" default="" type="String"/>
                <param name="ID" type="Int64"/>
                <param name="USER_ID" default="-1" type="Int64"/>
                <query>
                    UPDATE PODS.PI_COATING_DATA
                    SET 
					EVENT_GUID=case when :EVENT_GUID is null then EVENT_GUID else :EVENT_GUID end,
                    INSPECTION_DATE=case when :INSPECTION_DATE is null then INSPECTION_DATE else :INSPECTION_DATE end,
					COATING_TYPE_SCL=coalesce(SUBSTR(:COATING_TYPE_SCL,0,strpos(:COATING_TYPE_SCL,'@')),'UNKNOWN'),
					COATING_SUBTYPE_SCL=coalesce(SUBSTR(:COATING_TYPE_SCL,strpos(:COATING_TYPE_SCL,'@')+1,length(:COATING_TYPE_SCL)-strpos(:COATING_TYPE_SCL,'@')),'NONE'),
					CONDITION_CL=case when :CONDITION_CL is null then CONDITION_CL else :CONDITION_CL end,
					DEFECT_TYPE_CL=case when :DEFECT_TYPE_CL is null then DEFECT_TYPE_CL else :DEFECT_TYPE_CL end,
					MOISTURE_UNDER_COATING_LF=case when :MOISTURE_UNDER_COATING_LF is null then MOISTURE_UNDER_COATING_LF else :MOISTURE_UNDER_COATING_LF end,
					AXIAL_LENGTH=case when :AXIAL_LENGTH is null then AXIAL_LENGTH else :AXIAL_LENGTH end,
					CIRCUM_LENGTH=case when :CIRCUM_LENGTH is null then CIRCUM_LENGTH else :CIRCUM_LENGTH end,
					MAX_WIDTH=case when :MAX_WIDTH is null then MAX_WIDTH else :MAX_WIDTH end,
					DISBOND_DRY_LF=case when :DISBOND_DRY_LF is null then DISBOND_DRY_LF else :DISBOND_DRY_LF end,
					LONG_SEAM_TENT_LEFT=case when :LONG_SEAM_TENT_LEFT is null then LONG_SEAM_TENT_LEFT else :LONG_SEAM_TENT_LEFT end,
					LONG_SEAM_TENT_RIGHT=case when :LONG_SEAM_TENT_RIGHT is null then LONG_SEAM_TENT_RIGHT else :LONG_SEAM_TENT_RIGHT end,
					THICKNESS_AT_0=case when :THICKNESS_AT_0 is null then THICKNESS_AT_0 else :THICKNESS_AT_0 end,
					THICKNESS_AT_45=case when :THICKNESS_AT_45 is null then THICKNESS_AT_45 else :THICKNESS_AT_45 end,
					THICKNESS_AT_90=case when :THICKNESS_AT_90 is null then THICKNESS_AT_90 else :THICKNESS_AT_90 end,
					THICKNESS_AT_135=case when :THICKNESS_AT_135 is null then THICKNESS_AT_135 else :THICKNESS_AT_135 end,
					THICKNESS_AT_180=case when :THICKNESS_AT_180 is null then THICKNESS_AT_180 else :THICKNESS_AT_180 end,
					THICKNESS_AT_225=case when :THICKNESS_AT_225 is null then THICKNESS_AT_225 else :THICKNESS_AT_225 end,
					THICKNESS_AT_270=case when :THICKNESS_AT_270 is null then THICKNESS_AT_270 else :THICKNESS_AT_270 end,
					THICKNESS_AT_315=case when :THICKNESS_AT_315 is null then THICKNESS_AT_315 else :THICKNESS_AT_315 end,
                    PI_EVENT_ID=case when :PI_EVENT_ID is null then PI_EVENT_ID else :PI_EVENT_ID end,
                    PI_EVENT_GUID=case when :PI_EVENT_GUID is null then PI_EVENT_GUID else :PI_EVENT_GUID end,
                    DESCRIPTION=case when :DESCRIPTION is null then DESCRIPTION else :DESCRIPTION end,
                    SOURCE_GCL=case when :SOURCE_GCL is null then SOURCE_GCL else :SOURCE_GCL end,
                    COMMENTS=case when :COMMENTS is null then COMMENTS else :COMMENTS end
                    WHERE EVENT_ID = :ID;
                </query>
            </dbCommand>
        </update>
        <delete>
            <dbCommand>
				<var name="CLASS_ID" type="String" direction="Input" default="PODS_PI_COATING_DATA" /> 
				<var name="POLICY" default="POLICY.xml#DELETE_PODS_SEM"  />
                <var name="ID" type="Int64"/>
                <var name="USER_ID" default="-1" type="Int64"/>
                <query>
					DO $$
                    BEGIN
                    UPDATE PODS.EVENT_RANGE
                    SET CURRENT_INDICATOR_LF='N'
                    WHERE EVENT_ID = {ID};

                    DELETE FROM PODS.PI_COATING_DATA
                    WHERE EVENT_ID = {ID};
                    DELETE FROM WEB50.LNK_GATE WHERE LEFT_OBJ_ID = 'PODS_PI_COATING_DATA/'||CAST({ID} AS VARCHAR(30)) OR RIGHT_OBJ_ID = 'PODS_PI_COATING_DATA/'||CAST({ID} AS VARCHAR(30));
                    END $$;
                </query>
            </dbCommand>
        </delete>
    </data>
    <data table="PI_CORROSION" schema="PODS" id="PODS_PI_CORROSION" comment="PODS.PI_CORROSION">
        <select>
            <dbQuery idField="ID">
                <param name="USER_ID" default="-1" type="Int64"/>
                <var name="FILTER" default="1=1"/>
                <var name="LPU_ACCESS_FILTER" default="SELECT srv_district_id FROM PODS.SRV_DISTRICT_GCL"/>
                <query>
                    SELECT * FROM (SELECT EVENT_ID ID, t.* FROM PODS.PI_CORROSION t) d WHERE {FILTER}
                </query>
            </dbQuery>
        </select>
        <insert>
            <dbCommand>
				<var name="CLASS_ID" type="String" direction="Input" default="PODS_PI_CORROSION" /> 
				<var name="POLICY" default="POLICY.xml#INSERT_PODS_SEM"  />
                <var name="EVENT_GUID" default="" type="String"/>
                <var name="INSPECTION_DATE" default="" type="DateTime"/>
                <var name="REF_GIRTH_WELD" default="NULL" type="Decimal"/>
                <var name="DIST_FROM_GIRTH_WELD" default="NULL" type="Decimal"/>
                <var name="FEATURE_NUMBER" default="" type="String"/>
                <var name="ORIENTATION" default="NULL" type="Decimal"/>
                <var name="SITE_ID" default="0" type="Decimal"/>
                <var name="DEFECT_TYPE_CL" default="UNKNOWN" type="String"/>
                <var name="AXIAL_LENGTH" default="NULL" type="Decimal"/>
                <var name="CIRCUM_LENGTH" default="NULL" type="Decimal"/>
                <var name="MAX_WIDTH" default="NULL" type="Decimal"/>
                <var name="DISBOND_DRY_LF" default="" type="String"/>
                <var name="LONG_SEAM_TENT_LEFT" default="NULL" type="Decimal"/>
                <var name="LONG_SEAM_TENT_RIGHT" default="NULL" type="Decimal"/>
                <var name="DEPOSIT_DESCRIPTION" default="" type="String"/>
                <var name="SURFACE_CL" default="UNKNOWN" type="String"/>
                <var name="PI_EVENT_ID" default="NULL" type="Decimal"/>
                <var name="PI_EVENT_GUID" default="" type="String"/>
                <var name="DESCRIPTION" default="" type="String"/>
                <var name="SOURCE_GCL" default="UNKNOWN" type="String"/>
                <var name="COMMENTS" default="" type="String"/>
                <var name="ID" type="Int64" direction="Output" default="SELECT max(EVENT_ID) id FROM PODS.EVENT_RANGE"/>
                <var name="PODS_USER" type="String"/>
                <var name="USER_ID" default="-1" type="Int64"/>
                <query>
					DO $$
					DECLARE
					returnId integer;
                    BEGIN
                    INSERT INTO PODS.EVENT_RANGE (EVENT_GUID,FEATURE_ID,STATION_ID_BEGIN,STATION_ID_END,PODS_USER,CREATE_DATE,EFFECTIVE_FROM_DATE,CURRENT_INDICATOR_LF,POSITIONING_TYPE_CL)
                    VALUES('{EVENT_GUID}','PI_CORROSION',0,0,NULLIF('{PODS_USER}',''),current_timestamp,current_timestamp,'Y','UNKNOWN')
                    RETURNING EVENT_ID INTO returnId;

                    INSERT INTO PODS.PI_CORROSION(EVENT_ID,EVENT_GUID,INSPECTION_DATE,REF_GIRTH_WELD,DIST_FROM_GIRTH_WELD,FEATURE_NUMBER,ORIENTATION,SITE_ID,DEFECT_TYPE_CL,AXIAL_LENGTH,CIRCUM_LENGTH,MAX_WIDTH,DISBOND_DRY_LF,LONG_SEAM_TENT_LEFT,LONG_SEAM_TENT_RIGHT,DEPOSIT_DESCRIPTION,SURFACE_CL,PI_EVENT_ID,PI_EVENT_GUID,DESCRIPTION,SOURCE_GCL,COMMENTS)
                    VALUES(returnId,'{EVENT_GUID}','{INSPECTION_DATE}',{REF_GIRTH_WELD},{DIST_FROM_GIRTH_WELD},NULLIF('{FEATURE_NUMBER}',''),{ORIENTATION},{SITE_ID},NULLIF('{DEFECT_TYPE_CL}',''),{AXIAL_LENGTH},{CIRCUM_LENGTH},{MAX_WIDTH},'{DISBOND_DRY_LF}',{LONG_SEAM_TENT_LEFT},{LONG_SEAM_TENT_RIGHT},NULLIF('{DEPOSIT_DESCRIPTION}',''),NULLIF('{SURFACE_CL}',''),{PI_EVENT_ID},'{PI_EVENT_GUID}',NULLIF('{DESCRIPTION}',''),NULLIF('{SOURCE_GCL}',''),NULLIF('{COMMENTS}',''));
					END $$;
                </query>
            </dbCommand>
        </insert>
        <update>
            <dbCommand>
				<param name="CLASS_ID" type="String" direction="Input" default="PODS_PI_CORROSION" /> 
				<var name="POLICY" default="POLICY.xml#UPDATE_PODS_SEM"  />
                <param name="EVENT_GUID" default="" type="String"/>
                <param name="INSPECTION_DATE" default="" type="DateTime"/>
                <param name="REF_GIRTH_WELD" default="NULL" type="Decimal"/>
                <param name="DIST_FROM_GIRTH_WELD" default="NULL" type="Decimal"/>
                <param name="FEATURE_NUMBER" default="" type="String"/>
                <param name="ORIENTATION" default="NULL" type="Decimal"/>
                <param name="SITE_ID" default="0" type="Decimal"/>
                <param name="DEFECT_TYPE_CL" default="UNKNOWN" type="String"/>
                <param name="AXIAL_LENGTH" default="NULL" type="Decimal"/>
                <param name="CIRCUM_LENGTH" default="NULL" type="Decimal"/>
                <param name="MAX_WIDTH" default="NULL" type="Decimal"/>
                <param name="DISBOND_DRY_LF" default="" type="String"/>
                <param name="LONG_SEAM_TENT_LEFT" default="NULL" type="Decimal"/>
                <param name="LONG_SEAM_TENT_RIGHT" default="NULL" type="Decimal"/>
                <param name="DEPOSIT_DESCRIPTION" default="" type="String"/>
                <param name="SURFACE_CL" default="UNKNOWN" type="String"/>
                <param name="PI_EVENT_ID" default="NULL" type="Decimal"/>
                <param name="PI_EVENT_GUID" default="" type="String"/>
                <param name="DESCRIPTION" default="" type="String"/>
                <param name="SOURCE_GCL" default="UNKNOWN" type="String"/>
                <param name="COMMENTS" default="" type="String"/>
                <param name="ID" type="Int64"/>
                <param name="USER_ID" default="-1" type="Int64"/>
                <query>
                    UPDATE PODS.PI_CORROSION
                    SET 
					EVENT_GUID=case when :EVENT_GUID is null then EVENT_GUID else :EVENT_GUID end,
                    INSPECTION_DATE=case when :INSPECTION_DATE is null then INSPECTION_DATE else :INSPECTION_DATE end,
                    REF_GIRTH_WELD=case when :REF_GIRTH_WELD is null then REF_GIRTH_WELD else :REF_GIRTH_WELD end,
                    DIST_FROM_GIRTH_WELD=case when :DIST_FROM_GIRTH_WELD is null then DIST_FROM_GIRTH_WELD else :DIST_FROM_GIRTH_WELD end,
                    FEATURE_NUMBER=case when :FEATURE_NUMBER is null then FEATURE_NUMBER else :FEATURE_NUMBER end,
                    ORIENTATION=case when :ORIENTATION is null then ORIENTATION else :ORIENTATION end,
                    SITE_ID=case when :SITE_ID is null then SITE_ID else :SITE_ID end,
                    DEFECT_TYPE_CL=case when :DEFECT_TYPE_CL is null then DEFECT_TYPE_CL else :DEFECT_TYPE_CL end,
                    AXIAL_LENGTH=case when :AXIAL_LENGTH is null then AXIAL_LENGTH else :AXIAL_LENGTH end,
                    CIRCUM_LENGTH=case when :CIRCUM_LENGTH is null then CIRCUM_LENGTH else :CIRCUM_LENGTH end,
                    MAX_WIDTH=case when :MAX_WIDTH is null then MAX_WIDTH else :MAX_WIDTH end,
                    DISBOND_DRY_LF=case when :DISBOND_DRY_LF is null then DISBOND_DRY_LF else :DISBOND_DRY_LF end,
                    LONG_SEAM_TENT_LEFT=case when :LONG_SEAM_TENT_LEFT is null then LONG_SEAM_TENT_LEFT else :LONG_SEAM_TENT_LEFT end,
                    LONG_SEAM_TENT_RIGHT=case when :LONG_SEAM_TENT_RIGHT is null then LONG_SEAM_TENT_RIGHT else :LONG_SEAM_TENT_RIGHT end,
                    DEPOSIT_DESCRIPTION=case when :DEPOSIT_DESCRIPTION is null then DEPOSIT_DESCRIPTION else :DEPOSIT_DESCRIPTION end,
                    SURFACE_CL=case when :SURFACE_CL is null then SURFACE_CL else :SURFACE_CL end,
                    PI_EVENT_ID=case when :PI_EVENT_ID is null then PI_EVENT_ID else :PI_EVENT_ID end,
                    PI_EVENT_GUID=case when :PI_EVENT_GUID is null then PI_EVENT_GUID else :PI_EVENT_GUID end,
                    DESCRIPTION=case when :DESCRIPTION is null then DESCRIPTION else :DESCRIPTION end,
                    SOURCE_GCL=case when :SOURCE_GCL is null then SOURCE_GCL else :SOURCE_GCL end,
                    COMMENTS=case when :COMMENTS is null then COMMENTS else :COMMENTS end
                    WHERE EVENT_ID = :ID;
                </query>
            </dbCommand>
        </update>
        <delete>
            <dbCommand>
				<var name="CLASS_ID" type="String" direction="Input" default="PODS_PI_CORROSION" /> 
				<var name="POLICY" default="POLICY.xml#DELETE_PODS_SEM"  />
                <var name="ID" type="Int64"/>
                <var name="USER_ID" default="-1" type="Int64"/>
                <query>
					DO $$
                    BEGIN
                    UPDATE PODS.EVENT_RANGE
                    SET CURRENT_INDICATOR_LF='N'
                    WHERE EVENT_ID = {ID};

                    DELETE FROM PODS.PI_CORROSION
                    WHERE EVENT_ID = {ID};
                    DELETE FROM WEB50.LNK_GATE WHERE LEFT_OBJ_ID = 'PODS_PI_CORROSION/'||CAST({ID} AS VARCHAR(30)) OR RIGHT_OBJ_ID = 'PODS_PI_CORROSION/'||CAST({ID} AS VARCHAR(30));
					END $$;
                </query>
            </dbCommand>
        </delete>
    </data>
    <data table="PI_CP_INSPECTION" schema="PODS" id="PODS_PI_CP_INSPECTION" comment="PODS.PI_CP_INSPECTION">
        <select>
            <dbQuery idField="ID">
                <param name="USER_ID" default="-1" type="Int64"/>
                <var name="FILTER" default="1=1"/>
                <var name="LPU_ACCESS_FILTER" default="SELECT srv_district_id FROM PODS.SRV_DISTRICT_GCL"/>
                <query>
                    SELECT * FROM (SELECT EVENT_ID ID, t.* FROM PODS.PI_CP_INSPECTION t) d WHERE {FILTER}
                </query>
            </dbQuery>
        </select>
        <insert>
            <dbCommand>
				<var name="CLASS_ID" type="String" direction="Input" default="PODS_PI_CP_INSPECTION" /> 
				<var name="POLICY" default="POLICY.xml#INSERT_PODS_SEM"  />
                <var name="EVENT_GUID" default="" type="String"/>
                <var name="INSPECTION_DATE" default="" type="DateTime"/>
                <var name="CRITERIA_CL" default="UNKNOWN" type="String"/>
                <var name="TYPE_CL" default="UNKNOWN" type="String"/>
                <var name="RESULT_CL" default="UNKNOWN" type="String"/>
                <var name="NOMINAL_SPACING" default="NULL" type="Decimal"/>
                <var name="TOOL_CL" default="UNKNOWN" type="String"/>
                <var name="PI_EVENT_ID" default="NULL" type="Decimal"/>
                <var name="PI_EVENT_GUID" default="" type="String"/>
                <var name="DESCRIPTION" default="" type="String"/>
                <var name="SOURCE_GCL" default="UNKNOWN" type="String"/>
                <var name="COMMENTS" default="" type="String"/>
                <var name="ID" type="Int64" direction="Output" default="SELECT max(EVENT_ID) id FROM PODS.EVENT_RANGE"/>
                <var name="PODS_USER" type="String"/>
                <var name="USER_ID" default="-1" type="Int64"/>
                <query>
					DO $$
					DECLARE
					returnId integer;
                    BEGIN
                    INSERT INTO PODS.EVENT_RANGE (EVENT_GUID,FEATURE_ID,STATION_ID_BEGIN,STATION_ID_END,PODS_USER,CREATE_DATE,EFFECTIVE_FROM_DATE,CURRENT_INDICATOR_LF,POSITIONING_TYPE_CL)
                    VALUES('{EVENT_GUID}','PI_CP_INSPECTION',0,0,NULLIF('{PODS_USER}',''),current_timestamp,current_timestamp,'Y','UNKNOWN')
                    RETURNING EVENT_ID INTO returnId;

                    INSERT INTO PODS.PI_CP_INSPECTION(EVENT_ID,EVENT_GUID,INSPECTION_DATE,CRITERIA_CL,TYPE_CL,RESULT_CL,NOMINAL_SPACING,TOOL_CL,PI_EVENT_ID,PI_EVENT_GUID,DESCRIPTION,SOURCE_GCL,COMMENTS)
                    VALUES(returnId,'{EVENT_GUID}','{INSPECTION_DATE}',NULLIF('{CRITERIA_CL}',''),NULLIF('{TYPE_CL}',''),NULLIF('{RESULT_CL}',''),{NOMINAL_SPACING},NULLIF('{TOOL_CL}',''),{PI_EVENT_ID},'{PI_EVENT_GUID}',NULLIF('{DESCRIPTION}',''),NULLIF('{SOURCE_GCL}',''),NULLIF('{COMMENTS}',''));
					END $$;
                </query>
            </dbCommand>
        </insert>
        <update>
            <dbCommand>
				<param name="CLASS_ID" type="String" direction="Input" default="PODS_PI_CP_INSPECTION" /> 
				<var name="POLICY" default="POLICY.xml#UPDATE_PODS_SEM"  />
                <param name="EVENT_GUID" default="" type="String"/>
                <param name="INSPECTION_DATE" default="" type="DateTime"/>
                <param name="CRITERIA_CL" default="UNKNOWN" type="String"/>
                <param name="TYPE_CL" default="UNKNOWN" type="String"/>
                <param name="RESULT_CL" default="UNKNOWN" type="String"/>
                <param name="NOMINAL_SPACING" default="NULL" type="Decimal"/>
                <param name="TOOL_CL" default="UNKNOWN" type="String"/>
                <param name="PI_EVENT_ID" default="NULL" type="Decimal"/>
                <param name="PI_EVENT_GUID" default="" type="String"/>
                <param name="DESCRIPTION" default="" type="String"/>
                <param name="SOURCE_GCL" default="UNKNOWN" type="String"/>
                <param name="COMMENTS" default="" type="String"/>
                <param name="ID" type="Int64"/>
                <param name="USER_ID" default="-1" type="Int64"/>
                <query>
                    UPDATE PODS.PI_CP_INSPECTION
                    SET 
					EVENT_GUID=case when :EVENT_GUID is null then EVENT_GUID else :EVENT_GUID end,
                    INSPECTION_DATE=case when :INSPECTION_DATE is null then INSPECTION_DATE else :INSPECTION_DATE end,
					CRITERIA_CL=case when :CRITERIA_CL is null then CRITERIA_CL else :CRITERIA_CL end,
                    TYPE_CL=case when :TYPE_CL is null then TYPE_CL else :TYPE_CL end,
					RESULT_CL=case when :RESULT_CL is null then RESULT_CL else :RESULT_CL end,
					NOMINAL_SPACING=case when :NOMINAL_SPACING is null then NOMINAL_SPACING else :NOMINAL_SPACING end,
					TOOL_CL=case when :TOOL_CL is null then TOOL_CL else :TOOL_CL end,
                    PI_EVENT_ID=case when :PI_EVENT_ID is null then PI_EVENT_ID else :PI_EVENT_ID end,
                    PI_EVENT_GUID=case when :PI_EVENT_GUID is null then PI_EVENT_GUID else :PI_EVENT_GUID end,
                    DESCRIPTION=case when :DESCRIPTION is null then DESCRIPTION else :DESCRIPTION end,
                    SOURCE_GCL=case when :SOURCE_GCL is null then SOURCE_GCL else :SOURCE_GCL end,
                    COMMENTS=case when :COMMENTS is null then COMMENTS else :COMMENTS end
                    WHERE EVENT_ID = :ID;
                </query>
            </dbCommand>
        </update>
        <delete>
            <dbCommand>
				<var name="CLASS_ID" type="String" direction="Input" default="PODS_PI_CP_INSPECTION" /> 
				<var name="POLICY" default="POLICY.xml#DELETE_PODS_SEM"  />
                <var name="ID" type="Int64"/>
                <var name="USER_ID" default="-1" type="Int64"/>
                <query>
					DO $$
                    DECLARE

                                       
                    BEGIN
                    UPDATE PODS.EVENT_RANGE
                    SET CURRENT_INDICATOR_LF='N'
                    WHERE EVENT_ID in (SELECT EVENT_ID
                    FROM PODS.PI_ANODE_READING
                    WHERE PI_CP_EVENT_ID = {ID});

                    DELETE
                    FROM WEB50.LNK_GATE
                    WHERE LEFT_OBJ_ID IN (SELECT 'PODS_PI_ANODE_READING/'||CAST(EVENT_ID AS VARCHAR(30))
                    FROM PODS.PI_ANODE_READING
                    WHERE PI_CP_EVENT_ID = {ID})
                    OR RIGHT_OBJ_ID IN (SELECT 'PODS_PI_ANODE_READING/'||CAST(EVENT_ID AS VARCHAR(30))
                    FROM PODS.PI_ANODE_READING
                    WHERE PI_CP_EVENT_ID = {ID});

                    BEGIN
                    /* Чистим GATE с расчетом на будущее, пока эта таблица не заполняется */
                    EXECUTE $OP$DELETE
                    FROM GIS_INTEGRATION50.GATE
                    WHERE TABLE_NAME = 'PI_ANODE_READING'
                    AND KEY_FIELDS = 'EVENT_ID'
                    AND KEY_VALUES in (SELECT CAST(EVENT_ID AS VARCHAR(30))
                    FROM PODS.PI_ANODE_READING
                    WHERE PI_CP_EVENT_ID =$1)$OP$
                    USING {ID};
                    EXCEPTION WHEN undefined_table
                    THEN NULL;
                    WHEN OTHERS
                    THEN RAISE;
                    END;

                    DELETE
                    FROM PODS.PI_ANODE_READING
                    WHERE PI_CP_EVENT_ID = {ID};


                    UPDATE PODS.EVENT_RANGE
                    SET CURRENT_INDICATOR_LF='N'
                    WHERE EVENT_ID in (SELECT EVENT_ID
                    FROM PODS.PI_BOND_READING
                    WHERE PI_CP_EVENT_ID = {ID});

                    DELETE
                    FROM WEB50.LNK_GATE
                    WHERE LEFT_OBJ_ID IN (SELECT 'PODS_PI_BOND_READING/'||CAST(EVENT_ID AS VARCHAR(30))
                    FROM PODS.PI_BOND_READING
                    WHERE PI_CP_EVENT_ID = {ID})
                    OR RIGHT_OBJ_ID IN (SELECT 'PODS_PI_BOND_READING/'||CAST(EVENT_ID AS VARCHAR(30))
                    FROM PODS.PI_BOND_READING
                    WHERE PI_CP_EVENT_ID = {ID});

                    BEGIN
                    /* Чистим GATE с расчетом на будущее, пока эта таблица не заполняется */
                    EXECUTE $OP$DELETE
                    FROM GIS_INTEGRATION50.GATE
                    WHERE TABLE_NAME = 'PI_BOND_READING'
                    AND KEY_FIELDS = 'EVENT_ID'
                    AND KEY_VALUES in (SELECT CAST(EVENT_ID AS VARCHAR(30))
                    FROM PODS.PI_BOND_READING
                    WHERE PI_CP_EVENT_ID =$1)$OP$
                    USING {ID};
                    EXCEPTION WHEN undefined_table
                    THEN NULL;
                    WHEN OTHERS
                    THEN RAISE;
                    END;

                    DELETE
                    FROM PODS.PI_BOND_READING
                    WHERE PI_CP_EVENT_ID = {ID};

                    UPDATE PODS.EVENT_RANGE
                    SET CURRENT_INDICATOR_LF='N'
                    WHERE EVENT_ID in (SELECT EVENT_ID
                    FROM PODS.PI_CASING_READING
                    WHERE PI_CP_EVENT_ID = {ID});

                    DELETE
                    FROM WEB50.LNK_GATE
                    WHERE LEFT_OBJ_ID IN (SELECT 'PODS_PI_CASING_READING/'||CAST(EVENT_ID AS VARCHAR(30))
                    FROM PODS.PI_CASING_READING
                    WHERE PI_CP_EVENT_ID = {ID})
                    OR RIGHT_OBJ_ID IN (SELECT 'PODS_PI_CASING_READING/'||CAST(EVENT_ID AS VARCHAR(30))
                    FROM PODS.PI_CASING_READING
                    WHERE PI_CP_EVENT_ID = {ID});

                    BEGIN
                    /* Чистим GATE с расчетом на будущее, пока эта таблица не заполняется */
                    EXECUTE $OP$DELETE
                    FROM GIS_INTEGRATION50.GATE
                    WHERE TABLE_NAME = 'PI_CASING_READING'
                    AND KEY_FIELDS = 'EVENT_ID'
                    AND KEY_VALUES in (SELECT CAST(EVENT_ID AS VARCHAR(30))
                    FROM PODS.PI_CASING_READING
                    WHERE PI_CP_EVENT_ID =$1)$OP$
                    USING {ID};
                    EXCEPTION WHEN undefined_table
                    THEN NULL;
                    WHEN OTHERS
                    THEN RAISE;
                    END;

                    DELETE
                    FROM PODS.PI_CASING_READING
                    WHERE PI_CP_EVENT_ID = {ID};


                    UPDATE PODS.EVENT_RANGE
                    SET CURRENT_INDICATOR_LF='N'
                    WHERE EVENT_ID in (SELECT EVENT_ID
                    FROM PODS.PI_CIS_READING
                    WHERE PI_CP_EVENT_ID = {ID});

                    DELETE
                    FROM WEB50.LNK_GATE
                    WHERE LEFT_OBJ_ID IN (SELECT 'PODS_PI_CIS_READING/'||CAST(EVENT_ID AS VARCHAR(30))
                    FROM PODS.PI_CIS_READING
                    WHERE PI_CP_EVENT_ID = {ID})
                    OR RIGHT_OBJ_ID IN (SELECT 'PODS_PI_CIS_READING/'||CAST(EVENT_ID AS VARCHAR(30))
                    FROM PODS.PI_CIS_READING
                    WHERE PI_CP_EVENT_ID = {ID});

                    BEGIN
                    /* Чистим GATE с расчетом на будущее, пока эта таблица не заполняется */
                    EXECUTE $OP$DELETE
                    FROM GIS_INTEGRATION50.GATE
                    WHERE TABLE_NAME = 'PI_CIS_READING'
                    AND KEY_FIELDS = 'EVENT_ID'
                    AND KEY_VALUES in (SELECT CAST(EVENT_ID AS VARCHAR(30))
                    FROM PODS.PI_CIS_READING
                    WHERE PI_CP_EVENT_ID =$1)$OP$
                    USING {ID};
                    EXCEPTION WHEN undefined_table
                    THEN NULL;
                    WHEN OTHERS
                    THEN RAISE;
                    END;

                    DELETE
                    FROM PODS.PI_CIS_READING
                    WHERE PI_CP_EVENT_ID = {ID};

                    UPDATE PODS.EVENT_RANGE
                    SET CURRENT_INDICATOR_LF='N'
                    WHERE EVENT_ID in (SELECT EVENT_ID
                    FROM PODS.PI_CP_READING
                    WHERE PI_CP_EVENT_ID = {ID});

                    DELETE
                    FROM WEB50.LNK_GATE
                    WHERE LEFT_OBJ_ID IN (SELECT 'PODS_PI_CP_READING/'||CAST(EVENT_ID AS VARCHAR(30))
                    FROM PODS.PI_CP_READING
                    WHERE PI_CP_EVENT_ID = {ID})
                    OR RIGHT_OBJ_ID IN (SELECT 'PODS_PI_CP_READING/'||CAST(EVENT_ID AS VARCHAR(30))
                    FROM PODS.PI_CP_READING
                    WHERE PI_CP_EVENT_ID = {ID});

                    BEGIN
                    /* Чистим GATE эта таблица заполняется */
                    EXECUTE $OP$DELETE
                    FROM GIS_INTEGRATION50.GATE
                    WHERE TABLE_NAME = 'PI_CP_READING'
                    AND KEY_FIELDS = 'PI_CP_READING_ID'
                    AND KEY_VALUES in (SELECT CAST(PI_CP_READING_ID AS VARCHAR(30))
                    FROM PODS.PI_CP_READING
                    WHERE PI_CP_EVENT_ID =$1)$OP$
                    USING {ID};
                    EXCEPTION WHEN  undefined_table
                    THEN NULL;
                    WHEN OTHERS
                    THEN RAISE;
                    END;

                    DELETE
                    FROM PODS.PI_CP_READING
                    WHERE PI_CP_EVENT_ID = {ID};

                    UPDATE PODS.EVENT_RANGE
                    SET CURRENT_INDICATOR_LF='N'
                    WHERE EVENT_ID in (SELECT EVENT_ID
                    FROM PODS.PI_GROUND_BED_READING
                    WHERE PI_CP_EVENT_ID = {ID});

                    DELETE
                    FROM WEB50.LNK_GATE
                    WHERE LEFT_OBJ_ID IN (SELECT 'PODS_PI_GROUND_BED_READING/'||CAST(EVENT_ID AS VARCHAR(30))
                    FROM PODS.PI_GROUND_BED_READING
                    WHERE PI_CP_EVENT_ID = {ID})
                    OR RIGHT_OBJ_ID IN (SELECT 'PODS_PI_GROUND_BED_READING/'||CAST(EVENT_ID AS VARCHAR(30))
                    FROM PODS.PI_GROUND_BED_READING
                    WHERE PI_CP_EVENT_ID = {ID});

                    BEGIN
                    /* Чистим GATE с расчетом на будущее, пока эта таблица не заполняется */
                    EXECUTE $OP$DELETE
                    FROM GIS_INTEGRATION50.GATE
                    WHERE TABLE_NAME = 'PI_GROUND_BED_READING'
                    AND KEY_FIELDS = 'EVENT_ID'
                    AND KEY_VALUES in (SELECT CAST(EVENT_ID AS VARCHAR(30))
                    FROM PODS.PI_GROUND_BED_READING
                    WHERE PI_CP_EVENT_ID =$1)$OP$
                    USING {ID};
                    EXCEPTION WHEN undefined_table
                    THEN NULL;
                    WHEN OTHERS
                    THEN RAISE;
                    END;

                    DELETE
                    FROM PODS.PI_GROUND_BED_READING
                    WHERE PI_CP_EVENT_ID = {ID};

                    UPDATE PODS.EVENT_RANGE
                    SET CURRENT_INDICATOR_LF='N'
                    WHERE EVENT_ID in (SELECT EVENT_ID 
                    FROM PODS.PI_RECTIFIER_READING
                    WHERE PI_CP_EVENT_ID = {ID});

                    DELETE
                    FROM WEB50.LNK_GATE
                    WHERE LEFT_OBJ_ID IN (SELECT 'PODS_PI_RECTIFIER_READING/'||CAST(EVENT_ID AS VARCHAR(30))
                    FROM PODS.PI_RECTIFIER_READING
                    WHERE PI_CP_EVENT_ID = {ID})
                    OR RIGHT_OBJ_ID IN (SELECT 'PODS_PI_RECTIFIER_READING/'||CAST(EVENT_ID AS VARCHAR(30))
                    FROM PODS.PI_RECTIFIER_READING
                    WHERE PI_CP_EVENT_ID = {ID});

                    BEGIN
                    /* Чистим GATE с расчетом на будущее, пока эта таблица не заполняется */
                    EXECUTE $OP$DELETE
                    FROM GIS_INTEGRATION50.GATE
                    WHERE TABLE_NAME = 'PI_RECTIFIER_READING'
                    AND KEY_FIELDS = 'EVENT_ID'
                    AND KEY_VALUES in (SELECT CAST(EVENT_ID AS VARCHAR(30))
                    FROM PODS.PI_RECTIFIER_READING
                    WHERE PI_CP_EVENT_ID =$1)$OP$
                    USING {ID};
                    EXCEPTION WHEN  undefined_table
                    THEN NULL;
                    WHEN OTHERS
                    THEN RAISE;
                    END;

                    DELETE
                    FROM PODS.PI_RECTIFIER_READING
                    WHERE PI_CP_EVENT_ID = {ID};

                    UPDATE PODS.EVENT_RANGE
                    SET CURRENT_INDICATOR_LF='N'
                    WHERE EVENT_ID = {ID};

                    DELETE
                    FROM PODS.PI_CP_INSPECTION
                    WHERE EVENT_ID = {ID};

                    DELETE
                    FROM WEB50.LNK_GATE
                    WHERE LEFT_OBJ_ID = 'PODS_PI_CP_INSPECTION/'||CAST({ID} AS VARCHAR(30))
                    OR RIGHT_OBJ_ID = 'PODS_PI_CP_INSPECTION/'||CAST({ID} AS VARCHAR(30));

                    BEGIN
                    /* Чистим GATE эта таблица заполняется */
                    EXECUTE $OP$DELETE
                    FROM GIS_INTEGRATION50.GATE
                    WHERE TABLE_NAME in ('PI_CP_INSPECTION')
                    AND KEY_FIELDS = 'EVENT_ID'
                    AND KEY_VALUES =$1$OP$
                    USING CAST({ID} AS VARCHAR(30));
                    EXCEPTION WHEN undefined_table
                    THEN NULL;
                    WHEN OTHERS
                    THEN RAISE;
                    END;
                    END $$;
                </query>
            </dbCommand>
        </delete>
    </data>
    <data table="PI_CP_READING" schema="PODS" id="PODS_PI_CP_READING" comment="PODS.PI_CP_READING">
        <select>
            <dbQuery idField="ID">
                <param name="USER_ID" default="-1" type="Int64"/>
                <var name="FILTER" default="1=1"/>
                <var name="LPU_ACCESS_FILTER" default="SELECT srv_district_id FROM PODS.SRV_DISTRICT_GCL"/>
                <query>
                    SELECT * FROM (SELECT EVENT_ID ID, t.* FROM PODS.PI_CP_READING t) d WHERE {FILTER}
                </query>
            </dbQuery>
        </select>
        <insert>
            <dbCommand>
				<var name="CLASS_ID" type="String" direction="Input" default="PODS_PI_CP_READING" /> 
				<var name="POLICY" default="POLICY.xml#INSERT_PODS_SEM"  />
                <var name="PI_CP_READING_GUID" default="" type="String"/>
                <var name="EVENT_GUID" default="" type="String"/>
                <var name="TYPE_CL" default="UNKNOWN" type="String"/>
                <var name="INSPECTION_DATE" default="" type="DateTime"/>
                <var name="DESCRIPTION" default="" type="String"/>
                <var name="POTENTIAL_READING" default="NULL" type="Decimal"/>
                <var name="CURRENT_READING" default="NULL" type="Decimal"/>
                <var name="RESISTANCE_READING" default="NULL" type="Decimal"/>
                <var name="PI_CP_EVENT_ID" default="NULL" type="Decimal"/>
                <var name="PI_CP_EVENT_GUID" default="" type="String"/>
                <var name="PS_ON" default="NULL" type="Decimal"/>
                <var name="PS_OFF" default="NULL" type="Decimal"/>
                <var name="REF_TEST_LEAD_EVENT_ID" default="NULL" type="Decimal"/>
                <var name="REF_TEST_LEAD_EVENT_GUID" default="" type="String"/>
                <var name="SOURCE_GCL" default="UNKNOWN" type="String"/>
                <var name="COMMENTS" default="" type="String"/>
                <var name="GRAD_ON" default="NULL" type="Decimal"/>
                <var name="GRAD_OFF" default="NULL" type="Decimal"/>
                <var name="D_GRAD" default="NULL" type="Decimal"/>
                <var name="DD_GRAD" default="NULL" type="Decimal"/>
                <var name="ID" type="Int64" direction="Output" default="SELECT max(EVENT_ID) id FROM PODS.EVENT_RANGE"/>
                <var name="PODS_USER" type="String"/>
                <var name="USER_ID" default="-1" type="Int64"/>
                <var name="R_PER" default="NULL" type="Decimal"/>
                <var name="POTENTIAL_BOS" default="NULL" type="Decimal"/>
                <var name="TOK_BLUJ" default="NULL" type="Decimal"/>
                <query>
					DO $$
					DECLARE
					RETURNID INTEGER;
                    BEGIN
                    INSERT INTO PODS.EVENT_RANGE (EVENT_GUID,FEATURE_ID,STATION_ID_BEGIN,STATION_ID_END,PODS_USER,CREATE_DATE,EFFECTIVE_FROM_DATE,CURRENT_INDICATOR_LF,POSITIONING_TYPE_CL)
                    VALUES(NULLIF('{EVENT_GUID}',''),'PI_CP_READING',0,0,NULLIF(NULLIF('{PODS_USER}',''),''),CURRENT_TIMESTAMP,CURRENT_TIMESTAMP,'Y','UNKNOWN')
                    RETURNING EVENT_ID INTO RETURNID;

                    INSERT INTO PODS.PI_CP_READING(EVENT_ID,PI_CP_READING_GUID,EVENT_GUID,TYPE_CL,INSPECTION_DATE,DESCRIPTION,POTENTIAL_READING,CURRENT_READING,RESISTANCE_READING,PI_CP_EVENT_ID,PI_CP_EVENT_GUID,PS_ON,PS_OFF,REF_TEST_LEAD_EVENT_ID,REF_TEST_LEAD_EVENT_GUID,SOURCE_GCL,COMMENTS,GRAD_ON,GRAD_OFF,D_GRAD,DD_GRAD,R_PER,POTENTIAL_BOS,TOK_BLUJ)
                    VALUES(RETURNID,NULLIF('{PI_CP_READING_GUID}',''),NULLIF('{EVENT_GUID}',''),NULLIF(NULLIF('{TYPE_CL}',''),''),'{INSPECTION_DATE}',NULLIF(NULLIF('{DESCRIPTION}',''),''),{POTENTIAL_READING},{CURRENT_READING},{RESISTANCE_READING},{PI_CP_EVENT_ID},NULLIF('{PI_CP_EVENT_GUID}',''),{PS_ON},{PS_OFF},{REF_TEST_LEAD_EVENT_ID},NULLIF('{REF_TEST_LEAD_EVENT_GUID}',''),NULLIF(NULLIF('{SOURCE_GCL}',''),''),NULLIF(NULLIF('{COMMENTS}',''),''),{GRAD_ON},{GRAD_OFF},{D_GRAD},{DD_GRAD},{R_PER},{POTENTIAL_BOS},{TOK_BLUJ});

					END $$;
                </query>
            </dbCommand>
        </insert>
        <update>
            <dbCommand>
				<param name="CLASS_ID" type="String" direction="Input" default="PODS_PI_CP_READING" /> 
				<var name="POLICY" default="POLICY.xml#UPDATE_PODS_SEM"  />
                <param name="PI_CP_READING_GUID" default="" type="String"/>
                <param name="EVENT_GUID" default="" type="String"/>
                <param name="TYPE_CL" default="UNKNOWN" type="String"/>
                <param name="INSPECTION_DATE" default="" type="DateTime"/>
                <param name="DESCRIPTION" default="" type="String"/>
                <param name="POTENTIAL_READING" default="NULL" type="Decimal"/>
                <param name="CURRENT_READING" default="NULL" type="Decimal"/>
                <param name="RESISTANCE_READING" default="NULL" type="Decimal"/>
                <param name="PI_CP_EVENT_ID" default="NULL" type="Decimal"/>
                <param name="PI_CP_EVENT_GUID" default="" type="String"/>
                <param name="PS_ON" default="NULL" type="Decimal"/>
                <param name="PS_OFF" default="NULL" type="Decimal"/>
                <param name="REF_TEST_LEAD_EVENT_ID" default="NULL" type="Decimal"/>
                <param name="REF_TEST_LEAD_EVENT_GUID" default="" type="String"/>
                <param name="SOURCE_GCL" default="UNKNOWN" type="String"/>
                <param name="COMMENTS" default="" type="String"/>
                <param name="GRAD_ON" default="NULL" type="Decimal"/>
                <param name="GRAD_OFF" default="NULL" type="Decimal"/>
                <param name="D_GRAD" default="NULL" type="Decimal"/>
                <param name="DD_GRAD" default="NULL" type="Decimal"/>
                <param name="ID" type="Int64"/>
                <param name="USER_ID" default="-1" type="Int64"/>
                <query>
                    UPDATE PODS.PI_CP_READING
                    SET 
					PI_CP_READING_GUID=case when :PI_CP_READING_GUID is null then PI_CP_READING_GUID else :PI_CP_READING_GUID end,
					EVENT_GUID=case when :EVENT_GUID is null then EVENT_GUID else :EVENT_GUID end,
					TYPE_CL=case when :TYPE_CL is null then TYPE_CL else :TYPE_CL end,
                    INSPECTION_DATE=case when :INSPECTION_DATE is null then INSPECTION_DATE else :INSPECTION_DATE end,
                    DESCRIPTION=case when :DESCRIPTION is null then DESCRIPTION else :DESCRIPTION end,
                    POTENTIAL_READING=case when :POTENTIAL_READING is null then POTENTIAL_READING else :POTENTIAL_READING end,
                    CURRENT_READING=case when :CURRENT_READING is null then CURRENT_READING else :CURRENT_READING end,
                    RESISTANCE_READING=case when :RESISTANCE_READING is null then RESISTANCE_READING else :RESISTANCE_READING end,
                    PI_CP_EVENT_ID=case when :PI_CP_EVENT_ID is null then PI_CP_EVENT_ID else :PI_CP_EVENT_ID end,
                    PI_CP_EVENT_GUID=case when :PI_CP_EVENT_GUID is null then PI_CP_EVENT_GUID else :PI_CP_EVENT_GUID end,
                    PS_OFF=case when :PS_OFF is null then PS_OFF else :PS_OFF end,
                    REF_TEST_LEAD_EVENT_ID=case when :REF_TEST_LEAD_EVENT_ID is null then REF_TEST_LEAD_EVENT_ID else :REF_TEST_LEAD_EVENT_ID end,
                    REF_TEST_LEAD_EVENT_GUID=case when :REF_TEST_LEAD_EVENT_GUID is null then REF_TEST_LEAD_EVENT_GUID else :REF_TEST_LEAD_EVENT_GUID end,
                    SOURCE_GCL=case when :SOURCE_GCL is null then SOURCE_GCL else :SOURCE_GCL end,
                    COMMENTS=case when :COMMENTS is null then COMMENTS else :COMMENTS end,
                    GRAD_ON=case when :GRAD_ON is null then GRAD_ON else :GRAD_ON end,
                    GRAD_OFF=case when :GRAD_OFF is null then GRAD_OFF else :GRAD_OFF end,
                    D_GRAD=case when :D_GRAD is null then D_GRAD else :D_GRAD end,
                    PS_ON=case when :PS_ON is null then PS_ON else :PS_ON end
                    WHERE EVENT_ID = :ID;
                </query>
            </dbCommand>
        </update>
        <delete>
            <dbCommand>
				<var name="CLASS_ID" type="String" direction="Input" default="PODS_PI_CP_READING" /> 
				<var name="POLICY" default="POLICY.xml#DELETE_PODS_SEM"  />
                <var name="ID" type="Int64"/>
                <var name="USER_ID" default="-1" type="Int64"/>
                <query>
					DO $$
					DECLARE

                    BEGIN
                    UPDATE PODS.EVENT_RANGE
                    SET CURRENT_INDICATOR_LF='N'
                    WHERE EVENT_ID = {ID};

                    DELETE FROM PODS.PI_CP_READING
                    WHERE EVENT_ID = {ID};

                    DELETE
                    FROM WEB50.LNK_GATE
                    WHERE LEFT_OBJ_ID = 'PODS_PI_CP_READING/'||CAST({ID} AS VARCHAR(30))
                    OR RIGHT_OBJ_ID = 'PODS_PI_CP_READING/'||CAST({ID} AS VARCHAR(30));

                    BEGIN
                    EXECUTE $OP$DELETE
                    FROM GIS_INTEGRATION50.GATE
                    WHERE TABLE_NAME in ('PI_CP_READING')
                    AND KEY_FIELDS = 'EVENT_ID'
                    AND KEY_VALUES =$1$OP$
                    USING {ID};
                    EXCEPTION WHEN  undefined_table
                    THEN NULL;
                    WHEN OTHERS
                    THEN RAISE;
                    END;

                    END $$;
                </query>
            </dbCommand>
        </delete>
    </data>
    <data table="PI_CRACK" schema="PODS" id="PODS_PI_CRACK" comment="PODS.PI_CRACK">
        <select>
            <dbQuery idField="ID">
                <param name="USER_ID" default="-1" type="Int64"/>
                <var name="FILTER" default="1=1"/>
                <var name="LPU_ACCESS_FILTER" default="SELECT srv_district_id FROM PODS.SRV_DISTRICT_GCL"/>
                <query>
                    SELECT * FROM (SELECT EVENT_ID ID, t.* FROM PODS.PI_CRACK t) d WHERE {FILTER}
                </query>
            </dbQuery>
        </select>
        <insert>
            <dbCommand>
				<var name="CLASS_ID" type="String" direction="Input" default="PODS_PI_CRACK" /> 
				<var name="POLICY" default="POLICY.xml#INSERT_PODS_SEM"  />
                <var name="EVENT_GUID" default="" type="String"/>
                <var name="INSPECTION_DATE" default="" type="DateTime"/>
                <var name="ORIENTATION" default="NULL" type="Decimal"/>
                <var name="TYPE_CL" default="UNKNOWN" type="String"/>
                <var name="CORROSION_PRESENT_LF" default="" type="String"/>
                <var name="AXIAL_LENGTH" default="NULL" type="Decimal"/>
                <var name="CIRCUM_LENGTH" default="NULL" type="Decimal"/>
                <var name="MAX_WIDTH" default="NULL" type="Decimal"/>
                <var name="MAX_DEPTH" default="NULL" type="Decimal"/>
                <var name="AVG_DEPTH" default="NULL" type="Decimal"/>
                <var name="MEASUREMENT_METHOD_CL" default="UNKNOWN" type="String"/>
                <var name="TIP_TO_TIP_DIST" default="NULL" type="Decimal"/>
                <var name="SIDE_TO_SIDE_SEPARATION" default="NULL" type="Decimal"/>
                <var name="SIDE_TO_SIDE_TO_WT_RATIO" default="NULL" type="Decimal"/>
                <var name="LINEAR_AT_WELD_TOE_FLAG_LF" default="" type="String"/>
                <var name="SIGNIFICANT_CRACK_LF" default="" type="String"/>
                <var name="INTERLINKING_LF" default="" type="String"/>
                <var name="FAILURE_PRESSURE" default="NULL" type="Decimal"/>
                <var name="FAILURE_ALGORITHM_GCL" default="UNKNOWN" type="String"/>
                <var name="WT_MEASUREMENT_METHOD_CL" default="UNKNOWN" type="String"/>
                <var name="METALOGRAPHY" default="" type="String"/>
                <var name="PI_EVENT_ID" default="NULL" type="Decimal"/>
                <var name="PI_EVENT_GUID" default="" type="String"/>
                <var name="DESCRIPTION" default="" type="String"/>
                <var name="SOURCE_GCL" default="UNKNOWN" type="String"/>
                <var name="COMMENTS" default="" type="String"/>
                <var name="ID" type="Int64" direction="Output" default="SELECT max(EVENT_ID) id FROM PODS.EVENT_RANGE"/>
                <var name="PODS_USER" type="String"/>
                <var name="USER_ID" default="-1" type="Int64"/>
                <query>
					DO $$
					DECLARE
					returnId integer;
                    BEGIN
                    INSERT INTO PODS.EVENT_RANGE (EVENT_GUID,FEATURE_ID,STATION_ID_BEGIN,STATION_ID_END,PODS_USER,CREATE_DATE,EFFECTIVE_FROM_DATE,CURRENT_INDICATOR_LF,POSITIONING_TYPE_CL)
                    VALUES('{EVENT_GUID}','PI_CRACK',0,0,NULLIF('{PODS_USER}',''),current_timestamp,current_timestamp,'Y','UNKNOWN')
                    RETURNING EVENT_ID INTO returnId;

                    INSERT INTO PODS.PI_CRACK(EVENT_ID,EVENT_GUID,INSPECTION_DATE,ORIENTATION,TYPE_CL,CORROSION_PRESENT_LF,AXIAL_LENGTH,CIRCUM_LENGTH,MAX_WIDTH,MAX_DEPTH,AVG_DEPTH,MEASUREMENT_METHOD_CL,TIP_TO_TIP_DIST,SIDE_TO_SIDE_SEPARATION,SIDE_TO_SIDE_TO_WT_RATIO,LINEAR_AT_WELD_TOE_FLAG_LF,SIGNIFICANT_CRACK_LF,INTERLINKING_LF,FAILURE_PRESSURE,FAILURE_ALGORITHM_GCL,WT_MEASUREMENT_METHOD_CL,METALOGRAPHY,PI_EVENT_ID,PI_EVENT_GUID,DESCRIPTION,SOURCE_GCL,COMMENTS)
                    VALUES(returnId,'{EVENT_GUID}','{INSPECTION_DATE}',{ORIENTATION},NULLIF('{TYPE_CL}',''),'{CORROSION_PRESENT_LF}',{AXIAL_LENGTH},{CIRCUM_LENGTH},{MAX_WIDTH},{MAX_DEPTH},{AVG_DEPTH},NULLIF('{MEASUREMENT_METHOD_CL}',''),{TIP_TO_TIP_DIST},{SIDE_TO_SIDE_SEPARATION},{SIDE_TO_SIDE_TO_WT_RATIO},'{LINEAR_AT_WELD_TOE_FLAG_LF}','{SIGNIFICANT_CRACK_LF}','{INTERLINKING_LF}',{FAILURE_PRESSURE},NULLIF('{FAILURE_ALGORITHM_GCL}',''),NULLIF('{WT_MEASUREMENT_METHOD_CL}',''),NULLIF('{METALOGRAPHY}',''),{PI_EVENT_ID},'{PI_EVENT_GUID}',NULLIF('{DESCRIPTION}',''),NULLIF('{SOURCE_GCL}',''),NULLIF('{COMMENTS}',''));
					END $$;
                </query>
            </dbCommand>
        </insert>
        <update>
            <dbCommand>
				<param name="CLASS_ID" type="String" direction="Input" default="PODS_PI_CRACK" /> 
				<var name="POLICY" default="POLICY.xml#UPDATE_PODS_SEM"  />
                <param name="EVENT_GUID" default="" type="String"/>
                <param name="INSPECTION_DATE" default="" type="DateTime"/>
                <param name="ORIENTATION" default="NULL" type="Decimal"/>
                <param name="TYPE_CL" default="UNKNOWN" type="String"/>
                <param name="CORROSION_PRESENT_LF" default="" type="String"/>
                <param name="AXIAL_LENGTH" default="NULL" type="Decimal"/>
                <param name="CIRCUM_LENGTH" default="NULL" type="Decimal"/>
                <param name="MAX_WIDTH" default="NULL" type="Decimal"/>
                <param name="MAX_DEPTH" default="NULL" type="Decimal"/>
                <param name="AVG_DEPTH" default="NULL" type="Decimal"/>
                <param name="MEASUREMENT_METHOD_CL" default="UNKNOWN" type="String"/>
                <param name="TIP_TO_TIP_DIST" default="NULL" type="Decimal"/>
                <param name="SIDE_TO_SIDE_SEPARATION" default="NULL" type="Decimal"/>
                <param name="SIDE_TO_SIDE_TO_WT_RATIO" default="NULL" type="Decimal"/>
                <param name="LINEAR_AT_WELD_TOE_FLAG_LF" default="" type="String"/>
                <param name="SIGNIFICANT_CRACK_LF" default="" type="String"/>
                <param name="INTERLINKING_LF" default="" type="String"/>
                <param name="FAILURE_PRESSURE" default="NULL" type="Decimal"/>
                <param name="FAILURE_ALGORITHM_GCL" default="UNKNOWN" type="String"/>
                <param name="WT_MEASUREMENT_METHOD_CL" default="UNKNOWN" type="String"/>
                <param name="METALOGRAPHY" default="" type="String"/>
                <param name="PI_EVENT_ID" default="NULL" type="Decimal"/>
                <param name="PI_EVENT_GUID" default="" type="String"/>
                <param name="DESCRIPTION" default="" type="String"/>
                <param name="SOURCE_GCL" default="UNKNOWN" type="String"/>
                <param name="COMMENTS" default="" type="String"/>
                <param name="ID" type="Int64"/>
                <param name="USER_ID" default="-1" type="Int64"/>
                <query>
                    UPDATE PODS.PI_CRACK
                    SET 
					EVENT_GUID=case when :EVENT_GUID is null then EVENT_GUID else :EVENT_GUID end,
                    INSPECTION_DATE=case when :INSPECTION_DATE is null then INSPECTION_DATE else :INSPECTION_DATE end,
                    ORIENTATION=case when :ORIENTATION is null then ORIENTATION else :ORIENTATION end,
                    TYPE_CL=case when :TYPE_CL is null then TYPE_CL else :TYPE_CL end,
                    CORROSION_PRESENT_LF=case when :CORROSION_PRESENT_LF is null then CORROSION_PRESENT_LF else :CORROSION_PRESENT_LF end,
                    AXIAL_LENGTH=case when :AXIAL_LENGTH is null then AXIAL_LENGTH else :AXIAL_LENGTH end,
                    CIRCUM_LENGTH=case when :CIRCUM_LENGTH is null then CIRCUM_LENGTH else :CIRCUM_LENGTH end,
                    MAX_WIDTH=case when :MAX_WIDTH is null then MAX_WIDTH else :MAX_WIDTH end,
                    MAX_DEPTH=case when :MAX_DEPTH is null then MAX_DEPTH else :MAX_DEPTH end,
                    AVG_DEPTH=case when :AVG_DEPTH is null then AVG_DEPTH else :AVG_DEPTH end,
                    MEASUREMENT_METHOD_CL=case when :MEASUREMENT_METHOD_CL is null then MEASUREMENT_METHOD_CL else :MEASUREMENT_METHOD_CL end,
					TIP_TO_TIP_DIST=case when :TIP_TO_TIP_DIST is null then TIP_TO_TIP_DIST else :TIP_TO_TIP_DIST end,
                    SIDE_TO_SIDE_SEPARATION=case when :SIDE_TO_SIDE_SEPARATION is null then SIDE_TO_SIDE_SEPARATION else :SIDE_TO_SIDE_SEPARATION end,
                    SIDE_TO_SIDE_TO_WT_RATIO=case when :SIDE_TO_SIDE_TO_WT_RATIO is null then SIDE_TO_SIDE_TO_WT_RATIO else :SIDE_TO_SIDE_TO_WT_RATIO end,
                    LINEAR_AT_WELD_TOE_FLAG_LF=case when :LINEAR_AT_WELD_TOE_FLAG_LF is null then LINEAR_AT_WELD_TOE_FLAG_LF else :LINEAR_AT_WELD_TOE_FLAG_LF end,
                    SIGNIFICANT_CRACK_LF=case when :SIGNIFICANT_CRACK_LF is null then SIGNIFICANT_CRACK_LF else :SIGNIFICANT_CRACK_LF end,
                    INTERLINKING_LF=case when :INTERLINKING_LF is null then INTERLINKING_LF else :INTERLINKING_LF end,
                    FAILURE_PRESSURE=case when :FAILURE_PRESSURE is null then FAILURE_PRESSURE else :FAILURE_PRESSURE end,
                    FAILURE_ALGORITHM_GCL=case when :FAILURE_ALGORITHM_GCL is null then FAILURE_ALGORITHM_GCL else :FAILURE_ALGORITHM_GCL end,
                    WT_MEASUREMENT_METHOD_CL=case when :WT_MEASUREMENT_METHOD_CL is null then WT_MEASUREMENT_METHOD_CL else :WT_MEASUREMENT_METHOD_CL end,
                    METALOGRAPHY=case when :METALOGRAPHY is null then METALOGRAPHY else :METALOGRAPHY end,
					PI_EVENT_ID=case when :PI_EVENT_ID is null then PI_EVENT_ID else :PI_EVENT_ID end,
                    PI_EVENT_GUID=case when :PI_EVENT_GUID is null then PI_EVENT_GUID else :PI_EVENT_GUID end,
                    DESCRIPTION=case when :DESCRIPTION is null then DESCRIPTION else :DESCRIPTION end,
                    SOURCE_GCL=case when :SOURCE_GCL is null then SOURCE_GCL else :SOURCE_GCL end,
                    COMMENTS=case when :COMMENTS is null then COMMENTS else :COMMENTS end
                    WHERE EVENT_ID = :ID;
                </query>
            </dbCommand>
        </update>
        <delete>
            <dbCommand>
				<var name="CLASS_ID" type="String" direction="Input" default="PODS_PI_CRACK" /> 
				<var name="POLICY" default="POLICY.xml#DELETE_PODS_SEM"  />
                <var name="ID" type="Int64"/>
                <var name="USER_ID" default="-1" type="Int64"/>
                <query>
					DO $$
                    BEGIN
                    UPDATE PODS.EVENT_RANGE
                    SET CURRENT_INDICATOR_LF='N'
                    WHERE EVENT_ID = {ID};

                    DELETE FROM PODS.PI_CRACK
                    WHERE EVENT_ID = {ID};
                    DELETE FROM WEB50.LNK_GATE WHERE LEFT_OBJ_ID = 'PODS_PI_CRACK/'||CAST({ID} AS VARCHAR(30)) OR RIGHT_OBJ_ID = 'PODS_PI_CRACK/'||CAST({ID} AS VARCHAR(30));
                    END $$;
                </query>
            </dbCommand>
        </delete>
    </data>
    <data table="PI_DEBRIS" schema="PODS" id="PODS_PI_DEBRIS" comment="PODS.PI_DEBRIS">
        <select>
            <dbQuery idField="ID">
                <param name="USER_ID" default="-1" type="Int64"/>
                <var name="FILTER" default="1=1"/>
                <var name="LPU_ACCESS_FILTER" default="SELECT srv_district_id FROM PODS.SRV_DISTRICT_GCL"/>
                <query>
                    SELECT * FROM (SELECT EVENT_ID ID, t.* FROM PODS.PI_DEBRIS t) d WHERE {FILTER}
                </query>
            </dbQuery>
        </select>
        <insert>
            <dbCommand>
				<var name="CLASS_ID" type="String" direction="Input" default="PODS_PI_DEBRIS" /> 
				<var name="POLICY" default="POLICY.xml#INSERT_PODS_SEM"  />
                <var name="EVENT_GUID" default="" type="String"/>
                <var name="INSPECTION_DATE" default="" type="DateTime"/>
                <var name="TYPE_CL" default="UNKNOWN" type="String"/>
                <var name="PI_EVENT_ID" default="NULL" type="Decimal"/>
                <var name="PI_EVENT_GUID" default="" type="String"/>
                <var name="DESCRIPTION" default="" type="String"/>
                <var name="SOURCE_GCL" default="UNKNOWN" type="String"/>
                <var name="COMMENTS" default="" type="String"/>
                <var name="ID" type="Int64" direction="Output" default="SELECT max(EVENT_ID) id FROM PODS.EVENT_RANGE"/>
                <var name="PODS_USER" type="String"/>
                <var name="USER_ID" default="-1" type="Int64"/>
                <query>
					DO $$
					DECLARE
					returnId integer;
                    BEGIN
                    INSERT INTO PODS.EVENT_RANGE (EVENT_GUID,FEATURE_ID,STATION_ID_BEGIN,STATION_ID_END,PODS_USER,CREATE_DATE,EFFECTIVE_FROM_DATE,CURRENT_INDICATOR_LF,POSITIONING_TYPE_CL)
                    VALUES('{EVENT_GUID}','PI_DEBRIS',0,0,NULLIF('{PODS_USER}',''),current_timestamp,current_timestamp,'Y','UNKNOWN')
                    RETURNING EVENT_ID INTO returnId;

                    INSERT INTO PODS.PI_DEBRIS(EVENT_ID,EVENT_GUID,INSPECTION_DATE,TYPE_CL,PI_EVENT_ID,PI_EVENT_GUID,DESCRIPTION,SOURCE_GCL,COMMENTS)
                    VALUES(returnId,'{EVENT_GUID}','{INSPECTION_DATE}',NULLIF('{TYPE_CL}',''),{PI_EVENT_ID},'{PI_EVENT_GUID}',NULLIF('{DESCRIPTION}',''),NULLIF('{SOURCE_GCL}',''),NULLIF('{COMMENTS}',''));
					END $$;
                </query>
            </dbCommand>
        </insert>
        <update>
            <dbCommand>
				<param name="CLASS_ID" type="String" direction="Input" default="PODS_PI_DEBRIS" /> 
				<var name="POLICY" default="POLICY.xml#UPDATE_PODS_SEM"  />
                <param name="EVENT_GUID" default="" type="String"/>
                <param name="INSPECTION_DATE" default="" type="DateTime"/>
                <param name="TYPE_CL" default="UNKNOWN" type="String"/>
                <param name="PI_EVENT_ID" default="NULL" type="Decimal"/>
                <param name="PI_EVENT_GUID" default="" type="String"/>
                <param name="DESCRIPTION" default="" type="String"/>
                <param name="SOURCE_GCL" default="UNKNOWN" type="String"/>
                <param name="COMMENTS" default="" type="String"/>
                <param name="ID" type="Int64"/>
                <param name="USER_ID" default="-1" type="Int64"/>
                <query>
                    UPDATE PODS.PI_DEBRIS
                    SET EVENT_GUID=case when :EVENT_GUID is null then EVENT_GUID else :EVENT_GUID end,
                    INSPECTION_DATE=case when :INSPECTION_DATE is null then INSPECTION_DATE else :INSPECTION_DATE end,
                    TYPE_CL=case when :TYPE_CL is null then TYPE_CL else :TYPE_CL end,
                    PI_EVENT_ID=case when :PI_EVENT_ID is null then PI_EVENT_ID else :PI_EVENT_ID end,
                    PI_EVENT_GUID=case when :PI_EVENT_GUID is null then PI_EVENT_GUID else :PI_EVENT_GUID end,
                    DESCRIPTION=case when :DESCRIPTION is null then DESCRIPTION else :DESCRIPTION end,
                    SOURCE_GCL=case when :SOURCE_GCL is null then SOURCE_GCL else :SOURCE_GCL end,
                    COMMENTS=case when :COMMENTS is null then COMMENTS else :COMMENTS end
                    WHERE EVENT_ID = :ID;
                </query>
            </dbCommand>
        </update>
        <delete>
            <dbCommand>
				<var name="CLASS_ID" type="String" direction="Input" default="PODS_PI_DEBRIS" /> 
				<var name="POLICY" default="POLICY.xml#DELETE_PODS_SEM"  />
                <var name="ID" type="Int64"/>
                <var name="USER_ID" default="-1" type="Int64"/>
                <query>
					DO $$
                    BEGIN
                    UPDATE PODS.EVENT_RANGE
                    SET CURRENT_INDICATOR_LF='N'
                    WHERE EVENT_ID = {ID};

                    DELETE FROM PODS.PI_DEBRIS
                    WHERE EVENT_ID = {ID};
                    DELETE FROM WEB50.LNK_GATE WHERE LEFT_OBJ_ID = 'PODS_PI_DEBRIS/'||CAST({ID} AS VARCHAR(30)) OR RIGHT_OBJ_ID = 'PODS_PI_DEBRIS/'||CAST({ID} AS VARCHAR(30)); 
					END $$;
                </query>
            </dbCommand>
        </delete>
    </data>
    <data table="PI_ENVIRONMENT" schema="PODS" id="PODS_PI_ENVIRONMENT" comment="PODS.PI_ENVIRONMENT">
        <select>
            <dbQuery idField="ID">
                <param name="USER_ID" default="-1" type="Int64"/>
                <var name="FILTER" default="1=1"/>
                <var name="LPU_ACCESS_FILTER" default="SELECT srv_district_id FROM PODS.SRV_DISTRICT_GCL"/>
                <query>
                    SELECT * FROM (SELECT EVENT_ID ID, t.* FROM PODS.PI_ENVIRONMENT t) d WHERE {FILTER}
                </query>
            </dbQuery>
        </select>
        <insert>
            <dbCommand>
				<var name="CLASS_ID" type="String" direction="Input" default="PODS_PI_ENVIRONMENT" /> 
				<var name="POLICY" default="POLICY.xml#INSERT_PODS_SEM"  />
                <var name="EVENT_GUID" default="" type="String"/>
                <var name="INSPECTION_DATE" default="" type="DateTime"/>
                <var name="PERFORMED_BY" default="" type="String"/>
                <var name="PIPELINE_LOCATION_CL" default="UNKNOWN" type="String"/>
                <var name="AMBIENT_TEMPERATURE" default="NULL" type="Decimal"/>
                <var name="PIPELINE_TEMPERATURE" default="NULL" type="Decimal"/>
                <var name="TERRAIN_CL" default="UNKNOWN" type="String"/>
                <var name="FAULT_ZONE_LF" default="" type="String"/>
                <var name="STABILITY_CL" default="UNKNOWN" type="String"/>
                <var name="SURFACE_DRAINAGE_CL" default="UNKNOWN" type="String"/>
                <var name="PI_EVENT_ID" default="NULL" type="Decimal"/>
                <var name="PI_EVENT_GUID" default="" type="String"/>
                <var name="DESCRIPTION" default="" type="String"/>
                <var name="SOURCE_GCL" default="UNKNOWN" type="String"/>
                <var name="COMMENTS" default="" type="String"/>
                <var name="ID" type="Int64" direction="Output" default="SELECT max(EVENT_ID) id FROM PODS.EVENT_RANGE"/>
                <var name="PODS_USER" type="String"/>
                <var name="USER_ID" default="-1" type="Int64"/>
                <query>
					DO $$
					DECLARE
					returnId integer;
                    BEGIN
                    INSERT INTO PODS.EVENT_RANGE (EVENT_GUID,FEATURE_ID,STATION_ID_BEGIN,STATION_ID_END,PODS_USER,CREATE_DATE,EFFECTIVE_FROM_DATE,CURRENT_INDICATOR_LF,POSITIONING_TYPE_CL)
                    VALUES('{EVENT_GUID}','PI_ENVIRONMENT',0,0,NULLIF('{PODS_USER}',''),current_timestamp,current_timestamp,'Y','UNKNOWN')
                    RETURNING EVENT_ID INTO returnId;

                    INSERT INTO PODS.PI_ENVIRONMENT(EVENT_ID,EVENT_GUID,INSPECTION_DATE,PERFORMED_BY,PIPELINE_LOCATION_CL,AMBIENT_TEMPERATURE,PIPELINE_TEMPERATURE,TERRAIN_CL,FAULT_ZONE_LF,STABILITY_CL,SURFACE_DRAINAGE_CL,PI_EVENT_ID,PI_EVENT_GUID,DESCRIPTION,SOURCE_GCL,COMMENTS)
                    VALUES(returnId,'{EVENT_GUID}','{INSPECTION_DATE}',NULLIF('{PERFORMED_BY}',''),NULLIF('{PIPELINE_LOCATION_CL}',''),{AMBIENT_TEMPERATURE},{PIPELINE_TEMPERATURE},NULLIF('{TERRAIN_CL}',''),'{FAULT_ZONE_LF}',NULLIF('{STABILITY_CL}',''),NULLIF('{SURFACE_DRAINAGE_CL}',''),{PI_EVENT_ID},'{PI_EVENT_GUID}',NULLIF('{DESCRIPTION}',''),NULLIF('{SOURCE_GCL}',''),NULLIF('{COMMENTS}',''));
					END $$;
                </query>
            </dbCommand>
        </insert>
        <update>
            <dbCommand>
				<param name="CLASS_ID" type="String" direction="Input" default="PODS_PI_ENVIRONMENT" /> 
				<var name="POLICY" default="POLICY.xml#UPDATE_PODS_SEM"  />
                <param name="EVENT_GUID" default="" type="String"/>
                <param name="INSPECTION_DATE" default="" type="DateTime"/>
                <param name="PERFORMED_BY" default="" type="String"/>
                <param name="PIPELINE_LOCATION_CL" default="UNKNOWN" type="String"/>
                <param name="AMBIENT_TEMPERATURE" default="NULL" type="Decimal"/>
                <param name="PIPELINE_TEMPERATURE" default="NULL" type="Decimal"/>
                <param name="TERRAIN_CL" default="UNKNOWN" type="String"/>
                <param name="FAULT_ZONE_LF" default="" type="String"/>
                <param name="STABILITY_CL" default="UNKNOWN" type="String"/>
                <param name="SURFACE_DRAINAGE_CL" default="UNKNOWN" type="String"/>
                <param name="PI_EVENT_ID" default="NULL" type="Decimal"/>
                <param name="PI_EVENT_GUID" default="" type="String"/>
                <param name="DESCRIPTION" default="" type="String"/>
                <param name="SOURCE_GCL" default="UNKNOWN" type="String"/>
                <param name="COMMENTS" default="" type="String"/>
                <param name="ID" type="Int64"/>
                <param name="USER_ID" default="-1" type="Int64"/>
                <query>
                    UPDATE PODS.PI_ENVIRONMENT
                    SET EVENT_GUID=case when :EVENT_GUID is null then EVENT_GUID else :EVENT_GUID end,
                    INSPECTION_DATE=case when :INSPECTION_DATE is null then INSPECTION_DATE else :INSPECTION_DATE end,
                    PERFORMED_BY=case when :PERFORMED_BY is null then PERFORMED_BY else :PERFORMED_BY end,
                    PIPELINE_LOCATION_CL=case when :PIPELINE_LOCATION_CL is null then PIPELINE_LOCATION_CL else :PIPELINE_LOCATION_CL end,
                    AMBIENT_TEMPERATURE=case when :AMBIENT_TEMPERATURE is null then AMBIENT_TEMPERATURE else :AMBIENT_TEMPERATURE end,
                    PIPELINE_TEMPERATURE=case when :PIPELINE_TEMPERATURE is null then PIPELINE_TEMPERATURE else :PIPELINE_TEMPERATURE end,
                    TERRAIN_CL=case when :TERRAIN_CL is null then TERRAIN_CL else :TERRAIN_CL end,
                    FAULT_ZONE_LF=case when :FAULT_ZONE_LF is null then FAULT_ZONE_LF else :FAULT_ZONE_LF end,
                    STABILITY_CL=case when :STABILITY_CL is null then STABILITY_CL else :STABILITY_CL end,
                    SURFACE_DRAINAGE_CL=case when :SURFACE_DRAINAGE_CL is null then SURFACE_DRAINAGE_CL else :SURFACE_DRAINAGE_CL end,
                    PI_EVENT_ID=case when :PI_EVENT_ID is null then PI_EVENT_ID else :PI_EVENT_ID end,
                    PI_EVENT_GUID=case when :PI_EVENT_GUID is null then PI_EVENT_GUID else :PI_EVENT_GUID end,
                    DESCRIPTION=case when :DESCRIPTION is null then DESCRIPTION else :DESCRIPTION end,
                    SOURCE_GCL=case when :SOURCE_GCL is null then SOURCE_GCL else :SOURCE_GCL end,
                    COMMENTS=case when :COMMENTS is null then COMMENTS else :COMMENTS end
                    WHERE EVENT_ID = :ID;
                </query>
            </dbCommand>
        </update>
        <delete>
            <dbCommand>
				<var name="CLASS_ID" type="String" direction="Input" default="PODS_PI_ENVIRONMENT" /> 
				<var name="POLICY" default="POLICY.xml#DELETE_PODS_SEM"  />
                <var name="ID" type="Int64"/>
                <var name="USER_ID" default="-1" type="Int64"/>
                <query>
					DO $$
                    BEGIN
                    UPDATE PODS.EVENT_RANGE
                    SET CURRENT_INDICATOR_LF='N'
                    WHERE EVENT_ID = {ID};

                    DELETE FROM PODS.PI_ENVIRONMENT
                    WHERE EVENT_ID = {ID};
                    DELETE FROM WEB50.LNK_GATE WHERE LEFT_OBJ_ID = 'PODS_PI_ENVIRONMENT/'||CAST({ID} AS VARCHAR(30)) OR RIGHT_OBJ_ID = 'PODS_PI_ENVIRONMENT/'||CAST({ID} AS VARCHAR(30)); END $$;
                </query>
            </dbCommand>
        </delete>
    </data>
    <data table="PI_EXCAVATION" schema="PODS" id="PODS_PI_EXCAVATION" comment="PODS.PI_EXCAVATION">
        <select>
            <dbQuery idField="ID">
                <param name="USER_ID" default="-1" type="Int64"/>
                <var name="FILTER" default="1=1"/>
                <var name="LPU_ACCESS_FILTER" default="SELECT srv_district_id FROM PODS.SRV_DISTRICT_GCL"/>
                <query>
                    SELECT * FROM (SELECT EVENT_ID ID, t.* FROM PODS.PI_EXCAVATION t) d WHERE {FILTER}
                </query>
            </dbQuery>
        </select>
        <insert>
            <dbCommand>
				<var name="CLASS_ID" type="String" direction="Input" default="PODS_PI_EXCAVATION" /> 
				<var name="POLICY" default="POLICY.xml#INSERT_PODS_SEM"  />
                <var name="EVENT_GUID" default="" type="String"/>
                <var name="EXCAVATION_PROJECT_ID" default="0" type="Decimal"/>
                <var name="INSPECTION_DATE" default="" type="DateTime"/>
                <var name="SITE_NAME" default="" type="String"/>
                <var name="SITE_DESCRIPTION" default="" type="String"/>
                <var name="EXCAVATION_DATE" default="" type="DateTime"/>
                <var name="EXCAVATION_CONTRACTOR" default="" type="String"/>
                <var name="MPI_CONTRACTOR" default="" type="String"/>
                <var name="MPI_METHOD_CL" default="UNKNOWN" type="String"/>
                <var name="SURFACE_PREP_METHOD_CL" default="UNKNOWN" type="String"/>
                <var name="PIPE_EXCAVATED_TOP_LF" default="" type="String"/>
                <var name="PIPE_EXCAVATED_LEFT_LF" default="" type="String"/>
                <var name="PIPE_EXCAVATED_RIGHT_LF" default="" type="String"/>
                <var name="PIPE_EXCAVATED_BOTTOM_LF" default="" type="String"/>
                <var name="PI_EVENT_ID" default="NULL" type="Decimal"/>
                <var name="PI_EVENT_GUID" default="" type="String"/>
                <var name="RESPONSE_CL" default="UNKNOWN" type="String"/>
                <var name="DESCRIPTION" default="" type="String"/>
                <var name="SOURCE_GCL" default="UNKNOWN" type="String"/>
                <var name="COMMENTS" default="" type="String"/>
                <var name="ID" type="Int64" direction="Output" default="SELECT max(EVENT_ID) id FROM PODS.EVENT_RANGE"/>
                <var name="PODS_USER" type="String"/>
                <var name="USER_ID" default="-1" type="Int64"/>
                <query>
					DO $$
					DECLARE
					returnId integer;
                    BEGIN
                    INSERT INTO PODS.EVENT_RANGE (EVENT_GUID,FEATURE_ID,STATION_ID_BEGIN,STATION_ID_END,PODS_USER,CREATE_DATE,EFFECTIVE_FROM_DATE,CURRENT_INDICATOR_LF,POSITIONING_TYPE_CL)
                    VALUES('{EVENT_GUID}','PI_EXCAVATION',0,0,NULLIF('{PODS_USER}',''),current_timestamp,current_timestamp,'Y','UNKNOWN')
                    RETURNING EVENT_ID INTO returnId;

                    INSERT INTO PODS.PI_EXCAVATION(EVENT_ID,EVENT_GUID,EXCAVATION_PROJECT_ID,INSPECTION_DATE,SITE_NAME,SITE_DESCRIPTION,EXCAVATION_DATE,EXCAVATION_CONTRACTOR,MPI_CONTRACTOR,MPI_METHOD_CL,SURFACE_PREP_METHOD_CL,PIPE_EXCAVATED_TOP_LF,PIPE_EXCAVATED_LEFT_LF,PIPE_EXCAVATED_RIGHT_LF,PIPE_EXCAVATED_BOTTOM_LF,PI_EVENT_ID,PI_EVENT_GUID,RESPONSE_CL,DESCRIPTION,SOURCE_GCL,COMMENTS)
                    VALUES(returnId,'{EVENT_GUID}',{EXCAVATION_PROJECT_ID},'{INSPECTION_DATE}','{SITE_NAME}',NULLIF('{SITE_DESCRIPTION}',''),'{EXCAVATION_DATE}','{EXCAVATION_CONTRACTOR}',NULLIF('{MPI_CONTRACTOR}',''),NULLIF('{MPI_METHOD_CL}',''),NULLIF('{SURFACE_PREP_METHOD_CL}',''),'{PIPE_EXCAVATED_TOP_LF}','{PIPE_EXCAVATED_LEFT_LF}','{PIPE_EXCAVATED_RIGHT_LF}','{PIPE_EXCAVATED_BOTTOM_LF}',{PI_EVENT_ID},'{PI_EVENT_GUID}',NULLIF('{RESPONSE_CL}',''),NULLIF('{DESCRIPTION}',''),NULLIF('{SOURCE_GCL}',''),NULLIF('{COMMENTS}',''));
					END $$;
                </query>
            </dbCommand>
        </insert>
        <update>
            <dbCommand>
				<param name="CLASS_ID" type="String" direction="Input" default="PODS_PI_EXCAVATION" /> 
				<var name="POLICY" default="POLICY.xml#UPDATE_PODS_SEM"  />
                <param name="EVENT_GUID" default="" type="String"/>
                <param name="EXCAVATION_PROJECT_ID" default="0" type="Decimal"/>
                <param name="INSPECTION_DATE" default="" type="DateTime"/>
                <param name="SITE_NAME" default="" type="String"/>
                <param name="SITE_DESCRIPTION" default="" type="String"/>
                <param name="EXCAVATION_DATE" default="" type="DateTime"/>
                <param name="EXCAVATION_CONTRACTOR" default="" type="String"/>
                <param name="MPI_CONTRACTOR" default="" type="String"/>
                <param name="MPI_METHOD_CL" default="UNKNOWN" type="String"/>
                <param name="SURFACE_PREP_METHOD_CL" default="UNKNOWN" type="String"/>
                <param name="PIPE_EXCAVATED_TOP_LF" default="" type="String"/>
                <param name="PIPE_EXCAVATED_LEFT_LF" default="" type="String"/>
                <param name="PIPE_EXCAVATED_RIGHT_LF" default="" type="String"/>
                <param name="PIPE_EXCAVATED_BOTTOM_LF" default="" type="String"/>
                <param name="PI_EVENT_ID" default="NULL" type="Decimal"/>
                <param name="PI_EVENT_GUID" default="" type="String"/>
                <param name="RESPONSE_CL" default="UNKNOWN" type="String"/>
                <param name="DESCRIPTION" default="" type="String"/>
                <param name="SOURCE_GCL" default="UNKNOWN" type="String"/>
                <param name="COMMENTS" default="" type="String"/>
                <param name="ID" type="Int64"/>
                <param name="USER_ID" default="-1" type="Int64"/>
                <query>
                    UPDATE PODS.PI_EXCAVATION
                    SET EVENT_GUID=case when :EVENT_GUID is null then EVENT_GUID else :EVENT_GUID end,
					EXCAVATION_PROJECT_ID=case when :EXCAVATION_PROJECT_ID is null then EXCAVATION_PROJECT_ID else :EXCAVATION_PROJECT_ID end,
                    INSPECTION_DATE=case when :INSPECTION_DATE is null then INSPECTION_DATE else :INSPECTION_DATE end,
					SITE_NAME=case when :SITE_NAME is null then SITE_NAME else :SITE_NAME end,
					SITE_DESCRIPTION=case when :SITE_DESCRIPTION is null then SITE_DESCRIPTION else :SITE_DESCRIPTION end,
					EXCAVATION_DATE=case when :EXCAVATION_DATE is null then EXCAVATION_DATE else :EXCAVATION_DATE end,
					EXCAVATION_CONTRACTOR=case when :EXCAVATION_CONTRACTOR is null then EXCAVATION_CONTRACTOR else :EXCAVATION_CONTRACTOR end,
					MPI_CONTRACTOR=case when :MPI_CONTRACTOR is null then MPI_CONTRACTOR else :MPI_CONTRACTOR end,
					MPI_METHOD_CL=case when :MPI_METHOD_CL is null then MPI_METHOD_CL else :MPI_METHOD_CL end,
					SURFACE_PREP_METHOD_CL=case when :SURFACE_PREP_METHOD_CL is null then SURFACE_PREP_METHOD_CL else :SURFACE_PREP_METHOD_CL end,
					PIPE_EXCAVATED_TOP_LF=case when :PIPE_EXCAVATED_TOP_LF is null then PIPE_EXCAVATED_TOP_LF else :PIPE_EXCAVATED_TOP_LF end,
					PIPE_EXCAVATED_LEFT_LF=case when :PIPE_EXCAVATED_LEFT_LF is null then PIPE_EXCAVATED_LEFT_LF else :PIPE_EXCAVATED_LEFT_LF end,
					PIPE_EXCAVATED_RIGHT_LF=case when :PIPE_EXCAVATED_RIGHT_LF is null then PIPE_EXCAVATED_RIGHT_LF else :PIPE_EXCAVATED_RIGHT_LF end,
					PIPE_EXCAVATED_BOTTOM_LF=case when :PIPE_EXCAVATED_BOTTOM_LF is null then PIPE_EXCAVATED_BOTTOM_LF else :PIPE_EXCAVATED_BOTTOM_LF end,
                    PI_EVENT_ID=case when :PI_EVENT_ID is null then PI_EVENT_ID else :PI_EVENT_ID end,
                    PI_EVENT_GUID=case when :PI_EVENT_GUID is null then PI_EVENT_GUID else :PI_EVENT_GUID end,
					RESPONSE_CL=case when :RESPONSE_CL is null then RESPONSE_CL else :RESPONSE_CL end,
                    DESCRIPTION=case when :DESCRIPTION is null then DESCRIPTION else :DESCRIPTION end,
                    SOURCE_GCL=case when :SOURCE_GCL is null then SOURCE_GCL else :SOURCE_GCL end,
                    COMMENTS=case when :COMMENTS is null then COMMENTS else :COMMENTS end
                    WHERE EVENT_ID = :ID;
                </query>
            </dbCommand>
        </update>
        <delete>
            <dbCommand>
				<var name="CLASS_ID" type="String" direction="Input" default="PODS_PI_EXCAVATION" /> 
				<var name="POLICY" default="POLICY.xml#DELETE_PODS_SEM"  />
                <var name="ID" type="Int64"/>
                <var name="USER_ID" default="-1" type="Int64"/>
                <query>
					DO $$
                    BEGIN
                    UPDATE PODS.EVENT_RANGE
                    SET CURRENT_INDICATOR_LF='N'
                    WHERE EVENT_ID = {ID};

                    DELETE FROM PODS.PI_EXCAVATION
                    WHERE EVENT_ID = {ID};
                    DELETE FROM WEB50.LNK_GATE WHERE LEFT_OBJ_ID = 'PODS_PI_EXCAVATION/'||CAST({ID} AS VARCHAR(30)) OR RIGHT_OBJ_ID = 'PODS_PI_EXCAVATION/'||CAST({ID} AS VARCHAR(30)); 
					END $$;
                </query>
            </dbCommand>
        </delete>
    </data>
    <data table="PI_GIRTH_WELD" schema="PODS" id="PODS_PI_GIRTH_WELD" comment="PODS.PI_GIRTH_WELD">
        <select>
            <dbQuery idField="ID">
                <param name="USER_ID" default="-1" type="Int64"/>
                <var name="FILTER" default="1=1"/>
                <var name="LPU_ACCESS_FILTER" default="SELECT srv_district_id FROM PODS.SRV_DISTRICT_GCL"/>
                <query>
                    SELECT * FROM (SELECT EVENT_ID ID, t.* FROM PODS.PI_GIRTH_WELD t) d WHERE {FILTER}
                </query>
            </dbQuery>
        </select>
        <insert>
            <dbCommand>
				<var name="CLASS_ID" type="String" direction="Input" default="PODS_PI_GIRTH_WELD" /> 
				<var name="POLICY" default="POLICY.xml#INSERT_PODS_SEM"  />
                <var name="EVENT_GUID" default="" type="String"/>
                <var name="INSPECTION_DATE" default="" type="DateTime"/>
                <var name="WELD_THICKNESS" default="0" type="Decimal"/>
                <var name="WELD_CONDITION_GCL" default="UNKNOWN" type="String"/>
                <var name="PI_EVENT_ID" default="NULL" type="Decimal"/>
                <var name="PI_EVENT_GUID" default="" type="String"/>
                <var name="DESCRIPTION" default="" type="String"/>
                <var name="SOURCE_GCL" default="UNKNOWN" type="String"/>
                <var name="COMMENTS" default="" type="String"/>
                <var name="ID" type="Int64" direction="Output" default="SELECT max(EVENT_ID) id FROM PODS.EVENT_RANGE"/>
                <var name="PODS_USER" type="String"/>
                <var name="USER_ID" default="-1" type="Int64"/>
                <query>
					DO $$
					DECLARE
					returnId integer;
                    BEGIN
                    INSERT INTO PODS.EVENT_RANGE (EVENT_GUID,FEATURE_ID,STATION_ID_BEGIN,STATION_ID_END,PODS_USER,CREATE_DATE,EFFECTIVE_FROM_DATE,CURRENT_INDICATOR_LF,POSITIONING_TYPE_CL)
                    VALUES('{EVENT_GUID}','PI_GIRTH_WELD',0,0,NULLIF('{PODS_USER}',''),current_timestamp,current_timestamp,'Y','UNKNOWN')
                    RETURNING EVENT_ID INTO returnId;

                    INSERT INTO PODS.PI_GIRTH_WELD(EVENT_ID,EVENT_GUID,INSPECTION_DATE,WELD_THICKNESS,WELD_CONDITION_GCL,PI_EVENT_ID,PI_EVENT_GUID,DESCRIPTION,SOURCE_GCL,COMMENTS)
                    VALUES(returnId,'{EVENT_GUID}','{INSPECTION_DATE}',{WELD_THICKNESS},NULLIF('{WELD_CONDITION_GCL}',''),{PI_EVENT_ID},'{PI_EVENT_GUID}',NULLIF('{DESCRIPTION}',''),NULLIF('{SOURCE_GCL}',''),NULLIF('{COMMENTS}',''));
					END $$;
                </query>
            </dbCommand>
        </insert>
        <update>
            <dbCommand>
				<param name="CLASS_ID" type="String" direction="Input" default="PODS_PI_GIRTH_WELD" /> 
				<var name="POLICY" default="POLICY.xml#UPDATE_PODS_SEM"  />
                <param name="EVENT_GUID" default="" type="String"/>
                <param name="INSPECTION_DATE" default="" type="DateTime"/>
                <param name="WELD_THICKNESS" default="0" type="Decimal"/>
                <param name="WELD_CONDITION_GCL" default="UNKNOWN" type="String"/>
                <param name="PI_EVENT_ID" default="NULL" type="Decimal"/>
                <param name="PI_EVENT_GUID" default="" type="String"/>
                <param name="DESCRIPTION" default="" type="String"/>
                <param name="SOURCE_GCL" default="UNKNOWN" type="String"/>
                <param name="COMMENTS" default="" type="String"/>
                <param name="ID" type="Int64"/>
                <param name="USER_ID" default="-1" type="Int64"/>
                <query>
                    UPDATE PODS.PI_GIRTH_WELD
                    SET EVENT_GUID=case when :EVENT_GUID is null then EVENT_GUID else :EVENT_GUID end,
                    INSPECTION_DATE=case when :INSPECTION_DATE is null then INSPECTION_DATE else :INSPECTION_DATE end,
					WELD_THICKNESS=case when :WELD_THICKNESS is null then WELD_THICKNESS else :WELD_THICKNESS end,
					WELD_CONDITION_GCL=case when :WELD_CONDITION_GCL is null then WELD_CONDITION_GCL else :WELD_CONDITION_GCL end,
                    PI_EVENT_ID=case when :PI_EVENT_ID is null then PI_EVENT_ID else :PI_EVENT_ID end,
                    PI_EVENT_GUID=case when :PI_EVENT_GUID is null then PI_EVENT_GUID else :PI_EVENT_GUID end,
                    DESCRIPTION=case when :DESCRIPTION is null then DESCRIPTION else :DESCRIPTION end,
                    SOURCE_GCL=case when :SOURCE_GCL is null then SOURCE_GCL else :SOURCE_GCL end,
                    COMMENTS=case when :COMMENTS is null then COMMENTS else :COMMENTS end
                    WHERE EVENT_ID = :ID;
                </query>
            </dbCommand>
        </update>
        <delete>
            <dbCommand>
				<var name="CLASS_ID" type="String" direction="Input" default="PODS_PI_GIRTH_WELD" /> 
				<var name="POLICY" default="POLICY.xml#DELETE_PODS_SEM"  />
                <var name="ID" type="Int64"/>
                <var name="USER_ID" default="-1" type="Int64"/>
                <query>
					DO $$
                    BEGIN
                    UPDATE PODS.EVENT_RANGE
                    SET CURRENT_INDICATOR_LF='N'
                    WHERE EVENT_ID = {ID};

                    DELETE FROM PODS.PI_GIRTH_WELD
                    WHERE EVENT_ID = {ID};
                    DELETE FROM WEB50.LNK_GATE WHERE LEFT_OBJ_ID = 'PODS_PI_GIRTH_WELD/'||CAST({ID} AS VARCHAR(30)) OR RIGHT_OBJ_ID = 'PODS_PI_GIRTH_WELD/'||CAST({ID} AS VARCHAR(30)); 
					END $$;
                </query>
            </dbCommand>
        </delete>
    </data>
    <data table="PI_GROUND_BED_READING" schema="PODS" id="PODS_PI_GROUND_BED_READING" comment="PODS.PI_GROUND_BED_READING">
        <select>
            <dbQuery idField="ID">
                <param name="USER_ID" default="-1" type="Int64"/>
                <var name="FILTER" default="1=1"/>
                <var name="LPU_ACCESS_FILTER" default="SELECT srv_district_id FROM PODS.SRV_DISTRICT_GCL"/>
                <query>
                    SELECT * FROM (SELECT EVENT_ID ID, t.* FROM PODS.PI_GROUND_BED_READING t) d WHERE {FILTER}
                </query>
            </dbQuery>
        </select>
        <insert>
            <dbCommand>
				<var name="CLASS_ID" type="String" direction="Input" default="PODS_PI_GROUND_BED_READING" /> 
				<var name="POLICY" default="POLICY.xml#INSERT_PODS_SEM"  />
                <var name="EVENT_GUID" default="" type="String"/>
                <var name="INSPECTION_DATE" default="" type="DateTime"/>
                <var name="DESCRIPTION" default="" type="String"/>
                <var name="POTENTIAL_READING" default="NULL" type="Decimal"/>
                <var name="CURRENT_READING" default="NULL" type="Decimal"/>
                <var name="RESISTANCE_READING" default="NULL" type="Decimal"/>
                <var name="PI_CP_EVENT_ID" default="NULL" type="Decimal"/>
                <var name="PI_CP_EVENT_GUID" default="" type="String"/>
                <var name="REF_GROUND_BED_EVENT_ID" default="NULL" type="Decimal"/>
                <var name="REF_GROUND_BED_EVENT_GUID" default="" type="String"/>
                <var name="SOURCE_GCL" default="UNKNOWN" type="String"/>
                <var name="COMMENTS" default="" type="String"/>
                <var name="ID" type="Int64" direction="Output" default="SELECT max(EVENT_ID) id FROM PODS.EVENT_RANGE"/>
                <var name="PODS_USER" type="String"/>
                <var name="USER_ID" default="-1" type="Int64"/>
                <query>
					DO $$
					DECLARE
					returnId integer;
                    BEGIN
                    INSERT INTO PODS.EVENT_RANGE (EVENT_GUID,FEATURE_ID,STATION_ID_BEGIN,STATION_ID_END,PODS_USER,CREATE_DATE,EFFECTIVE_FROM_DATE,CURRENT_INDICATOR_LF,POSITIONING_TYPE_CL)
                    VALUES('{EVENT_GUID}','PI_GR_BED_READ',0,0,NULLIF('{PODS_USER}',''),current_timestamp,current_timestamp,'Y','UNKNOWN')
                    RETURNING EVENT_ID INTO returnId;

                    INSERT INTO PODS.PI_GROUND_BED_READING(EVENT_ID,EVENT_GUID,INSPECTION_DATE,DESCRIPTION,POTENTIAL_READING,CURRENT_READING,RESISTANCE_READING,PI_CP_EVENT_ID,PI_CP_EVENT_GUID,REF_GROUND_BED_EVENT_ID,REF_GROUND_BED_EVENT_GUID,SOURCE_GCL,COMMENTS)
                    VALUES(returnId,'{EVENT_GUID}','{INSPECTION_DATE}',NULLIF('{DESCRIPTION}',''),{POTENTIAL_READING},{CURRENT_READING},{RESISTANCE_READING},{PI_CP_EVENT_ID},'{PI_CP_EVENT_GUID}',{REF_GROUND_BED_EVENT_ID},'{REF_GROUND_BED_EVENT_GUID}',NULLIF('{SOURCE_GCL}',''),NULLIF('{COMMENTS}',''));
					END $$;
                </query>
            </dbCommand>
        </insert>
        <update>
            <dbCommand>
				<param name="CLASS_ID" type="String" direction="Input" default="PODS_PI_GROUND_BED_READING" /> 
				<var name="POLICY" default="POLICY.xml#UPDATE_PODS_SEM"  />
                <param name="EVENT_GUID" default="" type="String"/>
                <param name="INSPECTION_DATE" default="" type="DateTime"/>
                <param name="DESCRIPTION" default="" type="String"/>
                <param name="POTENTIAL_READING" default="NULL" type="Decimal"/>
                <param name="CURRENT_READING" default="NULL" type="Decimal"/>
                <param name="RESISTANCE_READING" default="NULL" type="Decimal"/>
                <param name="PI_CP_EVENT_ID" default="NULL" type="Decimal"/>
                <param name="PI_CP_EVENT_GUID" default="" type="String"/>
                <param name="REF_GROUND_BED_EVENT_ID" default="NULL" type="Decimal"/>
                <param name="REF_GROUND_BED_EVENT_GUID" default="" type="String"/>
                <param name="SOURCE_GCL" default="UNKNOWN" type="String"/>
                <param name="COMMENTS" default="" type="String"/>
                <param name="ID" type="Int64"/>
                <param name="USER_ID" default="-1" type="Int64"/>
                <query>
                    UPDATE PODS.PI_GROUND_BED_READING
                    SET EVENT_GUID=case when :EVENT_GUID is null then EVENT_GUID else :EVENT_GUID end,
                    INSPECTION_DATE=case when :INSPECTION_DATE is null then INSPECTION_DATE else :INSPECTION_DATE end,
                    DESCRIPTION=case when :DESCRIPTION is null then DESCRIPTION else :DESCRIPTION end,
                    POTENTIAL_READING=case when :POTENTIAL_READING is null then POTENTIAL_READING else :POTENTIAL_READING end,
                    CURRENT_READING=case when :CURRENT_READING is null then CURRENT_READING else :CURRENT_READING end,
                    RESISTANCE_READING=case when :RESISTANCE_READING is null then RESISTANCE_READING else :RESISTANCE_READING end,
                    PI_CP_EVENT_ID=case when :PI_CP_EVENT_ID is null then PI_CP_EVENT_ID else :PI_CP_EVENT_ID end,
                    PI_CP_EVENT_GUID=case when :PI_CP_EVENT_GUID is null then PI_CP_EVENT_GUID else :PI_CP_EVENT_GUID end,
					REF_GROUND_BED_EVENT_ID=case when :REF_GROUND_BED_EVENT_ID is null then REF_GROUND_BED_EVENT_ID else :REF_GROUND_BED_EVENT_ID end,
					REF_GROUND_BED_EVENT_GUID=case when :REF_GROUND_BED_EVENT_GUID is null then REF_GROUND_BED_EVENT_GUID else :REF_GROUND_BED_EVENT_GUID end,
                    SOURCE_GCL=case when :SOURCE_GCL is null then SOURCE_GCL else :SOURCE_GCL end,
                    COMMENTS=case when :COMMENTS is null then COMMENTS else :COMMENTS end
                    WHERE EVENT_ID = :ID;
                </query>
            </dbCommand>
        </update>
        <delete>
            <dbCommand>
				<var name="CLASS_ID" type="String" direction="Input" default="PODS_PI_GROUND_BED_READING" /> 
				<var name="POLICY" default="POLICY.xml#DELETE_PODS_SEM"  />
                <var name="ID" type="Int64"/>
                <var name="USER_ID" default="-1" type="Int64"/>
                <query>
					DO $$
                    BEGIN
                    UPDATE PODS.EVENT_RANGE
                    SET CURRENT_INDICATOR_LF='N'
                    WHERE EVENT_ID = {ID};

                    DELETE FROM PODS.PI_GROUND_BED_READING
                    WHERE EVENT_ID = {ID};
                    DELETE FROM WEB50.LNK_GATE WHERE LEFT_OBJ_ID = 'PODS_PI_GROUND_BED_READING/'||CAST({ID} AS VARCHAR(30)) OR RIGHT_OBJ_ID = 'PODS_PI_GROUND_BED_READING/'||CAST({ID} AS VARCHAR(30)); 
					END $$;
                </query>
            </dbCommand>
        </delete>
    </data>
    <data table="PIG_SIGNAL" schema="PODS" id="PODS_PIG_SIGNAL" comment="PODS.PIG_SIGNAL">
        <select>
            <dbQuery idField="ID">
                <param name="USER_ID" default="-1" type="Int64"/>
                <var name="FILTER" default="1=1"/>
                <var name="LPU_ACCESS_FILTER" default="SELECT srv_district_id FROM PODS.SRV_DISTRICT_GCL"/>
                <query>
                    SELECT * FROM (SELECT EVENT_ID ID, t.* FROM PODS.PIG_SIGNAL t) d WHERE {FILTER}
                </query>
            </dbQuery>
        </select>
        <insert>
            <dbCommand>
				<var name="CLASS_ID" type="String" direction="Input" default="PODS_PIG_SIGNAL" /> 
				<var name="POLICY" default="POLICY.xml#INSERT_PODS_SEM"  />
                <var name="EVENT_GUID" default="" type="String"/>
                <var name="MANUFACTURER_CL" default="UNKNOWN" type="String"/>
                <var name="TYPE_CL" default="UNKNOWN" type="String"/>
                <var name="REMOTE_LF" default="" type="String"/>
                <var name="TRAP_LF" default="" type="String"/>
                <var name="DATE_INSTALLED" default="" type="DateTime"/>
                <var name="DESCRIPTION" default="" type="String"/>
                <var name="SOURCE_GCL" default="UNKNOWN" type="String"/>
                <var name="COMMENTS" default="" type="String"/>
                <var name="ID" type="Int64" direction="Output" default="SELECT max(EVENT_ID) id FROM PODS.EVENT_RANGE"/>
                <var name="PODS_USER" type="String"/>
                <var name="USER_ID" default="-1" type="Int64"/>
                <query>
					DO $$
					DECLARE
					returnId integer;
                    BEGIN
                    INSERT INTO PODS.EVENT_RANGE (EVENT_GUID,FEATURE_ID,STATION_ID_BEGIN,STATION_ID_END,PODS_USER,CREATE_DATE,EFFECTIVE_FROM_DATE,CURRENT_INDICATOR_LF,POSITIONING_TYPE_CL)
                    VALUES('{EVENT_GUID}','PIG_SIGNAL',0,0,NULLIF('{PODS_USER}',''),current_timestamp,current_timestamp,'Y','UNKNOWN')
                    RETURNING EVENT_ID INTO returnId;

                    INSERT INTO PODS.PIG_SIGNAL(EVENT_ID,EVENT_GUID,MANUFACTURER_CL,TYPE_CL,REMOTE_LF,TRAP_LF,DATE_INSTALLED,DESCRIPTION,SOURCE_GCL,COMMENTS)
                    VALUES(returnId,'{EVENT_GUID}',NULLIF('{MANUFACTURER_CL}',''),NULLIF('{TYPE_CL}',''),'{REMOTE_LF}','{TRAP_LF}','{DATE_INSTALLED}',NULLIF('{DESCRIPTION}',''),NULLIF('{SOURCE_GCL}',''),NULLIF('{COMMENTS}',''));
					END $$;
                </query>
            </dbCommand>
        </insert>
        <update>
            <dbCommand>
				<param name="CLASS_ID" type="String" direction="Input" default="PODS_PIG_SIGNAL" /> 
				<var name="POLICY" default="POLICY.xml#UPDATE_PODS_SEM"  />
                <param name="EVENT_GUID" default="" type="String"/>
                <param name="MANUFACTURER_CL" default="UNKNOWN" type="String"/>
                <param name="TYPE_CL" default="UNKNOWN" type="String"/>
                <param name="REMOTE_LF" default="" type="String"/>
                <param name="TRAP_LF" default="" type="String"/>
                <param name="DATE_INSTALLED" default="" type="DateTime"/>
                <param name="DESCRIPTION" default="" type="String"/>
                <param name="SOURCE_GCL" default="UNKNOWN" type="String"/>
                <param name="COMMENTS" default="" type="String"/>
                <param name="ID" type="Int64"/>
                <param name="USER_ID" default="-1" type="Int64"/>
                <query>
                    UPDATE PODS.PIG_SIGNAL
                    SET EVENT_GUID=case when :EVENT_GUID is null then EVENT_GUID else :EVENT_GUID end,
                    MANUFACTURER_CL=case when :MANUFACTURER_CL is null then MANUFACTURER_CL else :MANUFACTURER_CL end,
                    TYPE_CL=case when :TYPE_CL is null then TYPE_CL else :TYPE_CL end,
					REMOTE_LF=case when :REMOTE_LF is null then REMOTE_LF else :REMOTE_LF end,
					TRAP_LF=case when :TRAP_LF is null then TRAP_LF else :TRAP_LF end,
                    DATE_INSTALLED=case when :DATE_INSTALLED is null then DATE_INSTALLED else :DATE_INSTALLED end,
                    DESCRIPTION=case when :DESCRIPTION is null then DESCRIPTION else :DESCRIPTION end,
                    SOURCE_GCL=case when :SOURCE_GCL is null then SOURCE_GCL else :SOURCE_GCL end,
                    COMMENTS=case when :COMMENTS is null then COMMENTS else :COMMENTS end
                    WHERE EVENT_ID = :ID;
                </query>
            </dbCommand>
        </update>
        <delete>
            <dbCommand>
				<var name="CLASS_ID" type="String" direction="Input" default="PODS_PIG_SIGNAL" /> 
				<var name="POLICY" default="POLICY.xml#DELETE_PODS_SEM"  />
                <var name="ID" type="Int64"/>
                <var name="USER_ID" default="-1" type="Int64"/>
                <query>
					DO $$
                    BEGIN
                    UPDATE PODS.EVENT_RANGE
                    SET CURRENT_INDICATOR_LF='N'
                    WHERE EVENT_ID = {ID};

                    DELETE FROM PODS.PIG_SIGNAL
                    WHERE EVENT_ID = {ID};
                    DELETE FROM WEB50.LNK_GATE WHERE LEFT_OBJ_ID = 'PODS_PIG_SIGNAL/'||CAST({ID} AS VARCHAR(30)) OR RIGHT_OBJ_ID = 'PODS_PIG_SIGNAL/'||CAST({ID} AS VARCHAR(30)); 
					END $$;
                </query>
            </dbCommand>
        </delete>
    </data>
    <data table="PI_IC_COUPON_READING" schema="PODS" id="PODS_PI_IC_COUPON_READING" comment="PODS.PI_IC_COUPON_READING">
        <select>
            <dbQuery idField="ID">
                <param name="USER_ID" default="-1" type="Int64"/>
                <var name="FILTER" default="1=1"/>
                <var name="LPU_ACCESS_FILTER" default="SELECT srv_district_id FROM PODS.SRV_DISTRICT_GCL"/>
                <query>
                    SELECT * FROM (SELECT EVENT_ID ID, t.* FROM PODS.PI_IC_COUPON_READING t) d WHERE {FILTER}
                </query>
            </dbQuery>
        </select>
        <insert>
            <dbCommand>
				<var name="CLASS_ID" type="String" direction="Input" default="PODS_PI_IC_COUPON_READING" /> 
				<var name="POLICY" default="POLICY.xml#INSERT_PODS_SEM"  />
                <var name="EVENT_GUID" default="" type="String"/>
                <var name="INSPECTION_DATE" default="" type="DateTime"/>
                <var name="DESCRIPTION" default="" type="String"/>
                <var name="MASS_AT_INSPECTION" default="NULL" type="Decimal"/>
                <var name="SURFACE_AREA_AT_INSPECTION" default="NULL" type="Decimal"/>
                <var name="REF_COUPON_ID" default="" type="String"/>
                <var name="SOURCE_GCL" default="UNKNOWN" type="String"/>
                <var name="COMMENTS" default="" type="String"/>
                <var name="ID" type="Int64" direction="Output" default="SELECT max(EVENT_ID) id FROM PODS.EVENT_RANGE"/>
                <var name="PODS_USER" type="String"/>
                <var name="USER_ID" default="-1" type="Int64"/>
                <query>
					DO $$
					DECLARE
					returnId integer;
                    BEGIN
                    INSERT INTO PODS.EVENT_RANGE (EVENT_GUID,FEATURE_ID,STATION_ID_BEGIN,STATION_ID_END,PODS_USER,CREATE_DATE,EFFECTIVE_FROM_DATE,CURRENT_INDICATOR_LF,POSITIONING_TYPE_CL)
                    VALUES('{EVENT_GUID}','PI_IC_CPN_READ',0,0,NULLIF('{PODS_USER}',''),current_timestamp,current_timestamp,'Y','UNKNOWN')
                    RETURNING EVENT_ID INTO returnId;

                    INSERT INTO PODS.PI_IC_COUPON_READING(EVENT_ID,EVENT_GUID,INSPECTION_DATE,DESCRIPTION,MASS_AT_INSPECTION,SURFACE_AREA_AT_INSPECTION,REF_COUPON_ID,SOURCE_GCL,COMMENTS)
                    VALUES(returnId,'{EVENT_GUID}','{INSPECTION_DATE}',NULLIF('{DESCRIPTION}',''),{MASS_AT_INSPECTION},{SURFACE_AREA_AT_INSPECTION},NULLIF('{REF_COUPON_ID}',''),NULLIF('{SOURCE_GCL}',''),NULLIF('{COMMENTS}',''));
					END $$;
                </query>
            </dbCommand>
        </insert>
        <update>
            <dbCommand>
				<param name="CLASS_ID" type="String" direction="Input" default="PODS_PI_IC_COUPON_READING" /> 
				<var name="POLICY" default="POLICY.xml#UPDATE_PODS_SEM"  />
                <param name="EVENT_GUID" default="" type="String"/>
                <param name="INSPECTION_DATE" default="" type="DateTime"/>
                <param name="DESCRIPTION" default="" type="String"/>
                <param name="MASS_AT_INSPECTION" default="NULL" type="Decimal"/>
                <param name="SURFACE_AREA_AT_INSPECTION" default="NULL" type="Decimal"/>
                <param name="REF_COUPON_ID" default="" type="String"/>
                <param name="SOURCE_GCL" default="UNKNOWN" type="String"/>
                <param name="COMMENTS" default="" type="String"/>
                <param name="ID" type="Int64"/>
                <param name="USER_ID" default="-1" type="Int64"/>
                <query>
                    UPDATE PODS.PI_IC_COUPON_READING
                    SET 
					EVENT_GUID=case when :EVENT_GUID is null then EVENT_GUID else :EVENT_GUID end,
                    INSPECTION_DATE=case when :INSPECTION_DATE is null then INSPECTION_DATE else :INSPECTION_DATE end,
                    DESCRIPTION=case when :DESCRIPTION is null then DESCRIPTION else :DESCRIPTION end,
					MASS_AT_INSPECTION=case when :MASS_AT_INSPECTION is null then MASS_AT_INSPECTION else :MASS_AT_INSPECTION end,
					SURFACE_AREA_AT_INSPECTION=case when :SURFACE_AREA_AT_INSPECTION is null then SURFACE_AREA_AT_INSPECTION else :SURFACE_AREA_AT_INSPECTION end,
					REF_COUPON_ID=case when :REF_COUPON_ID is null then REF_COUPON_ID else :REF_COUPON_ID end,
                    SOURCE_GCL=case when :SOURCE_GCL is null then SOURCE_GCL else :SOURCE_GCL end,
                    COMMENTS=case when :COMMENTS is null then COMMENTS else :COMMENTS end
                    WHERE EVENT_ID = :ID;
                </query>
            </dbCommand>
        </update>
        <delete>
            <dbCommand>
				<var name="CLASS_ID" type="String" direction="Input" default="PODS_PI_IC_COUPON_READING" /> 
				<var name="POLICY" default="POLICY.xml#DELETE_PODS_SEM"  />
                <var name="ID" type="Int64"/>
                <var name="USER_ID" default="-1" type="Int64"/>
                <query>
					DO $$
                    BEGIN
                    UPDATE PODS.EVENT_RANGE
                    SET CURRENT_INDICATOR_LF='N'
                    WHERE EVENT_ID = {ID};

                    DELETE FROM PODS.PI_IC_COUPON_READING
                    WHERE EVENT_ID = {ID};
                    DELETE FROM WEB50.LNK_GATE WHERE LEFT_OBJ_ID = 'PODS_PI_IC_COUPON_READING/'||CAST({ID} AS VARCHAR(30)) OR RIGHT_OBJ_ID = 'PODS_PI_IC_COUPON_READING/'||CAST({ID} AS VARCHAR(30)); 
					END $$;
                </query>
            </dbCommand>
        </delete>
    </data>
    <data table="PI_LEAK_SURVEY" schema="PODS" id="PODS_PI_LEAK_SURVEY" comment="PODS.PI_LEAK_SURVEY">
        <select>
            <dbQuery idField="ID">
                <param name="USER_ID" default="-1" type="Int64"/>
                <var name="FILTER" default="1=1"/>
                <var name="LPU_ACCESS_FILTER" default="SELECT srv_district_id FROM PODS.SRV_DISTRICT_GCL"/>
                <query>
                    SELECT * FROM (SELECT EVENT_ID ID, t.* FROM PODS.PI_LEAK_SURVEY t) d WHERE {FILTER}
                </query>
            </dbQuery>
        </select>
        <insert>
            <dbCommand>
				<var name="CLASS_ID" type="String" direction="Input" default="PODS_PI_LEAK_SURVEY" /> 
				<var name="POLICY" default="POLICY.xml#INSERT_PODS_SEM"  />
                <var name="EVENT_GUID" default="" type="String"/>
                <var name="INSPECTION_DATE" default="" type="DateTime"/>
                <var name="TYPE_CL" default="UNKNOWN" type="String"/>
                <var name="NOMINAL_SPACING" default="NULL" type="Decimal"/>
                <var name="LS_TOOL_ID" default="" type="String"/>
                <var name="PI_EVENT_ID" default="NULL" type="Decimal"/>
                <var name="PI_EVENT_GUID" default="" type="String"/>
                <var name="DESCRIPTION" default="" type="String"/>
                <var name="SOURCE_GCL" default="UNKNOWN" type="String"/>
                <var name="COMMENTS" default="" type="String"/>
                <var name="ID" type="Int64" direction="Output" default="SELECT max(EVENT_ID) id FROM PODS.EVENT_RANGE"/>
                <var name="PODS_USER" type="String"/>
                <var name="USER_ID" default="-1" type="Int64"/>
                <query>
					DO $$
					DECLARE
					returnId integer;
                    BEGIN
                    INSERT INTO PODS.EVENT_RANGE (EVENT_GUID,FEATURE_ID,STATION_ID_BEGIN,STATION_ID_END,PODS_USER,CREATE_DATE,EFFECTIVE_FROM_DATE,CURRENT_INDICATOR_LF,POSITIONING_TYPE_CL)
                    VALUES('{EVENT_GUID}','PI_LEAK_SURVEY',0,0,NULLIF('{PODS_USER}',''),current_timestamp,current_timestamp,'Y','UNKNOWN')
                    RETURNING EVENT_ID INTO returnId;

                    INSERT INTO PODS.PI_LEAK_SURVEY(EVENT_ID,EVENT_GUID,INSPECTION_DATE,TYPE_CL,NOMINAL_SPACING,LS_TOOL_ID,PI_EVENT_ID,PI_EVENT_GUID,DESCRIPTION,SOURCE_GCL,COMMENTS)
                    VALUES(returnId,'{EVENT_GUID}','{INSPECTION_DATE}',NULLIF('{TYPE_CL}',''),{NOMINAL_SPACING},NULLIF('{LS_TOOL_ID}',''),{PI_EVENT_ID},'{PI_EVENT_GUID}',NULLIF('{DESCRIPTION}',''),NULLIF('{SOURCE_GCL}',''),NULLIF('{COMMENTS}',''));
					END $$;
                </query>
            </dbCommand>
        </insert>
        <update>
            <dbCommand>
				<param name="CLASS_ID" type="String" direction="Input" default="PODS_PI_LEAK_SURVEY" /> 
				<var name="POLICY" default="POLICY.xml#UPDATE_PODS_SEM"  />
                <param name="EVENT_GUID" default="" type="String"/>
                <param name="INSPECTION_DATE" default="" type="DateTime"/>
                <param name="TYPE_CL" default="UNKNOWN" type="String"/>
                <param name="NOMINAL_SPACING" default="NULL" type="Decimal"/>
                <param name="LS_TOOL_ID" default="" type="String"/>
                <param name="PI_EVENT_ID" default="NULL" type="Decimal"/>
                <param name="PI_EVENT_GUID" default="" type="String"/>
                <param name="DESCRIPTION" default="" type="String"/>
                <param name="SOURCE_GCL" default="UNKNOWN" type="String"/>
                <param name="COMMENTS" default="" type="String"/>
                <param name="ID" type="Int64"/>
                <param name="USER_ID" default="-1" type="Int64"/>
                <query>
                    UPDATE PODS.PI_LEAK_SURVEY
                    SET EVENT_GUID=case when :EVENT_GUID is null then EVENT_GUID else :EVENT_GUID end,
                    INSPECTION_DATE=case when :INSPECTION_DATE is null then INSPECTION_DATE else :INSPECTION_DATE end,
                    TYPE_CL=case when :TYPE_CL is null then TYPE_CL else :TYPE_CL end,
                    NOMINAL_SPACING=case when :NOMINAL_SPACING is null then NOMINAL_SPACING else :NOMINAL_SPACING end,
					LS_TOOL_ID=case when :LS_TOOL_ID is null then LS_TOOL_ID else :LS_TOOL_ID end,
                    PI_EVENT_ID=case when :PI_EVENT_ID is null then PI_EVENT_ID else :PI_EVENT_ID end,
                    PI_EVENT_GUID=case when :PI_EVENT_GUID is null then PI_EVENT_GUID else :PI_EVENT_GUID end,
                    DESCRIPTION=case when :DESCRIPTION is null then DESCRIPTION else :DESCRIPTION end,
                    SOURCE_GCL=case when :SOURCE_GCL is null then SOURCE_GCL else :SOURCE_GCL end,
                    COMMENTS=case when :COMMENTS is null then COMMENTS else :COMMENTS end
                    WHERE EVENT_ID = :ID;
                </query>
            </dbCommand>
        </update>
        <delete>
            <dbCommand>
				<var name="CLASS_ID" type="String" direction="Input" default="PODS_PI_LEAK_SURVEY" /> 
				<var name="POLICY" default="POLICY.xml#DELETE_PODS_SEM"  />
                <var name="ID" type="Int64"/>
                <var name="USER_ID" default="-1" type="Int64"/>
                <query>
					DO $$
                    BEGIN
                    UPDATE PODS.EVENT_RANGE
                    SET CURRENT_INDICATOR_LF='N'
                    WHERE EVENT_ID = {ID};

                    DELETE FROM PODS.PI_LEAK_SURVEY
                    WHERE EVENT_ID = {ID};
                    DELETE FROM WEB50.LNK_GATE WHERE LEFT_OBJ_ID = 'PODS_PI_LEAK_SURVEY/'||CAST({ID} AS VARCHAR(30)) OR RIGHT_OBJ_ID = 'PODS_PI_LEAK_SURVEY/'||CAST({ID} AS VARCHAR(30)); END $$;
                </query>
            </dbCommand>
        </delete>
    </data>
    <data table="PI_LEAK_SURVEY_READING" schema="PODS" id="PODS_PI_LEAK_SURVEY_READING" comment="PODS.PI_LEAK_SURVEY_READING">
        <select>
            <dbQuery idField="ID">
                <param name="USER_ID" default="-1" type="Int64"/>
                <var name="FILTER" default="1=1"/>
                <var name="LPU_ACCESS_FILTER" default="SELECT srv_district_id FROM PODS.SRV_DISTRICT_GCL"/>
                <query>
                    SELECT * FROM (SELECT EVENT_ID ID, t.* FROM PODS.PI_LEAK_SURVEY_READING t) d WHERE {FILTER}
                </query>
            </dbQuery>
        </select>
        <insert>
            <dbCommand>
				<var name="CLASS_ID" type="String" direction="Input" default="PODS_PI_LEAK_SURVEY_READING" /> 
				<var name="POLICY" default="POLICY.xml#INSERT_PODS_SEM"  />
                <var name="EVENT_GUID" default="" type="String"/>
                <var name="INSPECTION_DATE" default="" type="DateTime"/>
                <var name="MEASUREMENT" default="NULL" type="Decimal"/>
                <var name="DETECTED_PRODUCT_CL" default="UNKNOWN" type="String"/>
                <var name="PI_EVENT_ID" default="NULL" type="Decimal"/>
                <var name="PI_EVENT_GUID" default="" type="String"/>
                <var name="DESCRIPTION" default="" type="String"/>
                <var name="SOURCE_GCL" default="UNKNOWN" type="String"/>
                <var name="COMMENTS" default="" type="String"/>
                <var name="ID" type="Int64" direction="Output" default="SELECT max(EVENT_ID) id FROM PODS.EVENT_RANGE"/>
                <var name="PODS_USER" type="String"/>
                <var name="USER_ID" default="-1" type="Int64"/>
                <query>
					DO $$
					DECLARE
					returnId integer;
                    BEGIN
                    INSERT INTO PODS.EVENT_RANGE (EVENT_GUID,FEATURE_ID,STATION_ID_BEGIN,STATION_ID_END,PODS_USER,CREATE_DATE,EFFECTIVE_FROM_DATE,CURRENT_INDICATOR_LF,POSITIONING_TYPE_CL)
                    VALUES('{EVENT_GUID}','PI_LEAK_SURV_REA',0,0,NULLIF('{PODS_USER}',''),current_timestamp,current_timestamp,'Y','UNKNOWN')
                    RETURNING EVENT_ID INTO returnId;

                    INSERT INTO PODS.PI_LEAK_SURVEY_READING(EVENT_ID,EVENT_GUID,INSPECTION_DATE,MEASUREMENT,DETECTED_PRODUCT_CL,PI_EVENT_ID,PI_EVENT_GUID,DESCRIPTION,SOURCE_GCL,COMMENTS)
                    VALUES(returnId,'{EVENT_GUID}','{INSPECTION_DATE}',{MEASUREMENT},NULLIF('{DETECTED_PRODUCT_CL}',''),{PI_EVENT_ID},'{PI_EVENT_GUID}',NULLIF('{DESCRIPTION}',''),NULLIF('{SOURCE_GCL}',''),NULLIF('{COMMENTS}',''));
					END $$;
                </query>
            </dbCommand>
        </insert>
        <update>
            <dbCommand>
				<param name="CLASS_ID" type="String" direction="Input" default="PODS_PI_LEAK_SURVEY_READING" /> 
				<var name="POLICY" default="POLICY.xml#UPDATE_PODS_SEM"  />
                <param name="EVENT_GUID" default="" type="String"/>
                <param name="INSPECTION_DATE" default="" type="DateTime"/>
                <param name="MEASUREMENT" default="NULL" type="Decimal"/>
                <param name="DETECTED_PRODUCT_CL" default="UNKNOWN" type="String"/>
                <param name="PI_EVENT_ID" default="NULL" type="Decimal"/>
                <param name="PI_EVENT_GUID" default="" type="String"/>
                <param name="DESCRIPTION" default="" type="String"/>
                <param name="SOURCE_GCL" default="UNKNOWN" type="String"/>
                <param name="COMMENTS" default="" type="String"/>
                <param name="ID" type="Int64"/>
                <param name="USER_ID" default="-1" type="Int64"/>
                <query>
                    UPDATE PODS.PI_LEAK_SURVEY_READING
                    SET 
					EVENT_GUID=case when :EVENT_GUID is null then EVENT_GUID else :EVENT_GUID end,
                    INSPECTION_DATE=case when :INSPECTION_DATE is null then INSPECTION_DATE else :INSPECTION_DATE end,
                    MEASUREMENT=case when :MEASUREMENT is null then MEASUREMENT else :MEASUREMENT end,
					DETECTED_PRODUCT_CL=case when :DETECTED_PRODUCT_CL is null then DETECTED_PRODUCT_CL else :DETECTED_PRODUCT_CL end,
                    PI_EVENT_ID=case when :PI_EVENT_ID is null then PI_EVENT_ID else :PI_EVENT_ID end,
                    PI_EVENT_GUID=case when :PI_EVENT_GUID is null then PI_EVENT_GUID else :PI_EVENT_GUID end,
                    DESCRIPTION=case when :DESCRIPTION is null then DESCRIPTION else :DESCRIPTION end,
                    SOURCE_GCL=case when :SOURCE_GCL is null then SOURCE_GCL else :SOURCE_GCL end,
                    COMMENTS=case when :COMMENTS is null then COMMENTS else :COMMENTS end
                    WHERE EVENT_ID = :ID;
                </query>
            </dbCommand>
        </update>
        <delete>
            <dbCommand>
				<var name="CLASS_ID" type="String" direction="Input" default="PODS_PI_LEAK_SURVEY_READING" /> 
				<var name="POLICY" default="POLICY.xml#DELETE_PODS_SEM"  />
                <var name="ID" type="Int64"/>
                <var name="USER_ID" default="-1" type="Int64"/>
                <query>
					DO $$
                    BEGIN
                    UPDATE PODS.EVENT_RANGE
                    SET CURRENT_INDICATOR_LF='N'
                    WHERE EVENT_ID = {ID};

                    DELETE FROM PODS.PI_LEAK_SURVEY_READING
                    WHERE EVENT_ID = {ID};
                    DELETE FROM WEB50.LNK_GATE WHERE LEFT_OBJ_ID = 'PODS_PI_LEAK_SURVEY_READING/'||CAST({ID} AS VARCHAR(30)) OR RIGHT_OBJ_ID = 'PODS_PI_LEAK_SURVEY_READING/'||CAST({ID} AS VARCHAR(30)); 
					END $$;
                </query>
            </dbCommand>
        </delete>
    </data>
    <data table="PI_LONG_WELD" schema="PODS" id="PODS_PI_LONG_WELD" comment="PODS.PI_LONG_WELD">
        <select>
            <dbQuery idField="ID">
                <param name="USER_ID" default="-1" type="Int64"/>
                <var name="FILTER" default="1=1"/>
                <var name="LPU_ACCESS_FILTER" default="SELECT srv_district_id FROM PODS.SRV_DISTRICT_GCL"/>
                <query>
                    SELECT * FROM (SELECT EVENT_ID ID, t.* FROM PODS.PI_LONG_WELD t) d WHERE {FILTER}
                </query>
            </dbQuery>
        </select>
        <insert>
            <dbCommand>
				<var name="CLASS_ID" type="String" direction="Input" default="PODS_PI_LONG_WELD" /> 
				<var name="POLICY" default="POLICY.xml#INSERT_PODS_SEM"  />
                <var name="EVENT_GUID" default="" type="String"/>
                <var name="INSPECTION_DATE" default="" type="DateTime"/>
                <var name="WELD_THICKNESS" default="NULL" type="Decimal"/>
                <var name="WELD_CONDITION_GCL" default="UNKNOWN" type="String"/>
                <var name="PI_EVENT_ID" default="NULL" type="Decimal"/>
                <var name="PI_EVENT_GUID" default="" type="String"/>
                <var name="DESCRIPTION" default="" type="String"/>
                <var name="SOURCE_GCL" default="UNKNOWN" type="String"/>
                <var name="COMMENTS" default="" type="String"/>
                <var name="ID" type="Int64" direction="Output" default="SELECT max(EVENT_ID) id FROM PODS.EVENT_RANGE"/>
                <var name="PODS_USER" type="String"/>
                <var name="USER_ID" default="-1" type="Int64"/>
                <query>
					DO $$
					DECLARE
					returnId integer;
                    BEGIN
                    INSERT INTO PODS.EVENT_RANGE (EVENT_GUID,FEATURE_ID,STATION_ID_BEGIN,STATION_ID_END,PODS_USER,CREATE_DATE,EFFECTIVE_FROM_DATE,CURRENT_INDICATOR_LF,POSITIONING_TYPE_CL)
                    VALUES('{EVENT_GUID}','PI_LONG_WELD',0,0,NULLIF('{PODS_USER}',''),current_timestamp,current_timestamp,'Y','UNKNOWN')
                    RETURNING EVENT_ID INTO returnId;

                    INSERT INTO PODS.PI_LONG_WELD(EVENT_ID,EVENT_GUID,INSPECTION_DATE,WELD_THICKNESS,WELD_CONDITION_GCL,PI_EVENT_ID,PI_EVENT_GUID,DESCRIPTION,SOURCE_GCL,COMMENTS)
                    VALUES(returnId,'{EVENT_GUID}','{INSPECTION_DATE}',{WELD_THICKNESS},NULLIF('{WELD_CONDITION_GCL}',''),{PI_EVENT_ID},'{PI_EVENT_GUID}',NULLIF('{DESCRIPTION}',''),NULLIF('{SOURCE_GCL}',''),NULLIF('{COMMENTS}',''));
					END $$;
                </query>
            </dbCommand>
        </insert>
        <update>
            <dbCommand>
				<param name="CLASS_ID" type="String" direction="Input" default="PODS_PI_LONG_WELD" /> 
				<var name="POLICY" default="POLICY.xml#UPDATE_PODS_SEM"  />
                <param name="EVENT_GUID" default="" type="String"/>
                <param name="INSPECTION_DATE" default="" type="DateTime"/>
                <param name="WELD_THICKNESS" default="NULL" type="Decimal"/>
                <param name="WELD_CONDITION_GCL" default="UNKNOWN" type="String"/>
                <param name="PI_EVENT_ID" default="NULL" type="Decimal"/>
                <param name="PI_EVENT_GUID" default="" type="String"/>
                <param name="DESCRIPTION" default="" type="String"/>
                <param name="SOURCE_GCL" default="UNKNOWN" type="String"/>
                <param name="COMMENTS" default="" type="String"/>
                <param name="ID" type="Int64"/>
                <param name="USER_ID" default="-1" type="Int64"/>
                <query>
                    UPDATE PODS.PI_LONG_WELD
                    SET EVENT_GUID=case when :EVENT_GUID is null then EVENT_GUID else :EVENT_GUID end,
                    INSPECTION_DATE=case when :INSPECTION_DATE is null then INSPECTION_DATE else :INSPECTION_DATE end,
                    WELD_THICKNESS=case when :WELD_THICKNESS is null then WELD_THICKNESS else :WELD_THICKNESS end,
                    WELD_CONDITION_GCL=case when :WELD_CONDITION_GCL is null then WELD_CONDITION_GCL else :WELD_CONDITION_GCL end,
                    PI_EVENT_ID=case when :PI_EVENT_ID is null then PI_EVENT_ID else :PI_EVENT_ID end,
                    PI_EVENT_GUID=case when :PI_EVENT_GUID is null then PI_EVENT_GUID else :PI_EVENT_GUID end,
                    DESCRIPTION=case when :DESCRIPTION is null then DESCRIPTION else :DESCRIPTION end,
                    SOURCE_GCL=case when :SOURCE_GCL is null then SOURCE_GCL else :SOURCE_GCL end,
                    COMMENTS=case when :COMMENTS is null then COMMENTS else :COMMENTS end
                    WHERE EVENT_ID = :ID;
                </query>
            </dbCommand>
        </update>
        <delete>
            <dbCommand>
				<var name="CLASS_ID" type="String" direction="Input" default="PODS_PI_LONG_WELD" /> 
				<var name="POLICY" default="POLICY.xml#DELETE_PODS_SEM"  />
                <var name="ID" type="Int64"/>
                <var name="USER_ID" default="-1" type="Int64"/>
                <query>
					DO $$
                    BEGIN
                    UPDATE PODS.EVENT_RANGE
                    SET CURRENT_INDICATOR_LF='N'
                    WHERE EVENT_ID = {ID};

                    DELETE FROM PODS.PI_LONG_WELD
                    WHERE EVENT_ID = {ID};
                    DELETE FROM WEB50.LNK_GATE WHERE LEFT_OBJ_ID = 'PODS_PI_LONG_WELD/'||CAST({ID} AS VARCHAR(30)) OR RIGHT_OBJ_ID = 'PODS_PI_LONG_WELD/'||CAST({ID} AS VARCHAR(30)); 
					END $$;
                </query>
            </dbCommand>
        </delete>
    </data>
    <data table="PI_MARINE_GROWTH" schema="PODS" id="PODS_PI_MARINE_GROWTH" comment="PODS.PI_MARINE_GROWTH">
        <select>
            <dbQuery idField="ID">
                <param name="USER_ID" default="-1" type="Int64"/>
                <var name="FILTER" default="1=1"/>
                <var name="LPU_ACCESS_FILTER" default="SELECT srv_district_id FROM PODS.SRV_DISTRICT_GCL"/>
                <query>
                    SELECT * FROM (SELECT EVENT_ID ID, t.* FROM PODS.PI_MARINE_GROWTH t) d WHERE {FILTER}
                </query>
            </dbQuery>
        </select>
        <insert>
            <dbCommand>
				<var name="CLASS_ID" type="String" direction="Input" default="PODS_PI_MARINE_GROWTH" /> 
				<var name="POLICY" default="POLICY.xml#INSERT_PODS_SEM"  />
                <var name="EVENT_GUID" default="" type="String"/>
                <var name="INSPECTION_DATE" default="" type="DateTime"/>
                <var name="PERCENT_COVERAGE_CL" default="UNKNOWN" type="String"/>
                <var name="TYPE_CL" default="UNKNOWN" type="String"/>
                <var name="PI_EVENT_ID" default="NULL" type="Decimal"/>
                <var name="PI_EVENT_GUID" default="" type="String"/>
                <var name="DESCRIPTION" default="" type="String"/>
                <var name="SOURCE_GCL" default="UNKNOWN" type="String"/>
                <var name="COMMENTS" default="" type="String"/>
                <var name="ID" type="Int64" direction="Output" default="SELECT max(EVENT_ID) id FROM PODS.EVENT_RANGE"/>
                <var name="PODS_USER" type="String"/>
                <var name="USER_ID" default="-1" type="Int64"/>
                <query>
					DO $$
					DECLARE
					returnId integer;
                    BEGIN
                    INSERT INTO PODS.EVENT_RANGE (EVENT_GUID,FEATURE_ID,STATION_ID_BEGIN,STATION_ID_END,PODS_USER,CREATE_DATE,EFFECTIVE_FROM_DATE,CURRENT_INDICATOR_LF,POSITIONING_TYPE_CL)
                    VALUES('{EVENT_GUID}','PI_MARINE_GROWTH',0,0,NULLIF('{PODS_USER}',''),current_timestamp,current_timestamp,'Y','UNKNOWN')
                    RETURNING EVENT_ID INTO returnId;

                    INSERT INTO PODS.PI_MARINE_GROWTH(EVENT_ID,EVENT_GUID,INSPECTION_DATE,PERCENT_COVERAGE_CL,TYPE_CL,PI_EVENT_ID,PI_EVENT_GUID,DESCRIPTION,SOURCE_GCL,COMMENTS)
                    VALUES(returnId,'{EVENT_GUID}','{INSPECTION_DATE}',NULLIF('{PERCENT_COVERAGE_CL}',''),NULLIF('{TYPE_CL}',''),{PI_EVENT_ID},'{PI_EVENT_GUID}',NULLIF('{DESCRIPTION}',''),NULLIF('{SOURCE_GCL}',''),NULLIF('{COMMENTS}',''));
					END $$;
                </query>
            </dbCommand>
        </insert>
        <update>
            <dbCommand>
				<param name="CLASS_ID" type="String" direction="Input" default="PODS_PI_MARINE_GROWTH" /> 
				<var name="POLICY" default="POLICY.xml#UPDATE_PODS_SEM"  />
                <param name="EVENT_GUID" default="" type="String"/>
                <param name="INSPECTION_DATE" default="" type="DateTime"/>
                <param name="PERCENT_COVERAGE_CL" default="UNKNOWN" type="String"/>
                <param name="TYPE_CL" default="UNKNOWN" type="String"/>
                <param name="PI_EVENT_ID" default="NULL" type="Decimal"/>
                <param name="PI_EVENT_GUID" default="" type="String"/>
                <param name="DESCRIPTION" default="" type="String"/>
                <param name="SOURCE_GCL" default="UNKNOWN" type="String"/>
                <param name="COMMENTS" default="" type="String"/>
                <param name="ID" type="Int64"/>
                <param name="USER_ID" default="-1" type="Int64"/>
                <query>
                    UPDATE PODS.PI_MARINE_GROWTH
                    SET 
					EVENT_GUID=case when :EVENT_GUID is null then EVENT_GUID else :EVENT_GUID end,
                    INSPECTION_DATE=case when :INSPECTION_DATE is null then INSPECTION_DATE else :INSPECTION_DATE end,
					PERCENT_COVERAGE_CL=case when :PERCENT_COVERAGE_CL is null then PERCENT_COVERAGE_CL else :PERCENT_COVERAGE_CL end,
                    TYPE_CL=case when :TYPE_CL is null then TYPE_CL else :TYPE_CL end,
                    PI_EVENT_ID=case when :PI_EVENT_ID is null then PI_EVENT_ID else :PI_EVENT_ID end,
                    PI_EVENT_GUID=case when :PI_EVENT_GUID is null then PI_EVENT_GUID else :PI_EVENT_GUID end,
                    DESCRIPTION=case when :DESCRIPTION is null then DESCRIPTION else :DESCRIPTION end,
                    SOURCE_GCL=case when :SOURCE_GCL is null then SOURCE_GCL else :SOURCE_GCL end,
                    COMMENTS=case when :COMMENTS is null then COMMENTS else :COMMENTS end
                    WHERE EVENT_ID = :ID;
                </query>
            </dbCommand>
        </update>
        <delete>
            <dbCommand>
				<var name="CLASS_ID" type="String" direction="Input" default="PODS_PI_MARINE_GROWTH" /> 
				<var name="POLICY" default="POLICY.xml#DELETE_PODS_SEM"  />
                <var name="ID" type="Int64"/>
                <var name="USER_ID" default="-1" type="Int64"/>
                <query>
					DO $$
                    BEGIN
                    UPDATE PODS.EVENT_RANGE
                    SET CURRENT_INDICATOR_LF='N'
                    WHERE EVENT_ID = {ID};

                    DELETE FROM PODS.PI_MARINE_GROWTH
                    WHERE EVENT_ID = {ID};
                    DELETE FROM WEB50.LNK_GATE WHERE LEFT_OBJ_ID = 'PODS_PI_MARINE_GROWTH/'||CAST({ID} AS VARCHAR(30)) OR RIGHT_OBJ_ID = 'PODS_PI_MARINE_GROWTH/'||CAST({ID} AS VARCHAR(30)); 
					END $$;
                </query>
            </dbCommand>
        </delete>
    </data>
    <data table="PI_MATERIAL_DEFECT" schema="PODS" id="PODS_PI_MATERIAL_DEFECT" comment="PODS.PI_MATERIAL_DEFECT">
        <select>
            <dbQuery idField="ID">
                <param name="USER_ID" default="-1" type="Int64"/>
                <var name="FILTER" default="1=1"/>
                <var name="LPU_ACCESS_FILTER" default="SELECT srv_district_id FROM PODS.SRV_DISTRICT_GCL"/>
                <query>
                    SELECT * FROM (SELECT EVENT_ID ID, t.* FROM PODS.PI_MATERIAL_DEFECT t) d WHERE {FILTER}
                </query>
            </dbQuery>
        </select>
        <insert>
            <dbCommand>
				<var name="CLASS_ID" type="String" direction="Input" default="PODS_PI_MATERIAL_DEFECT" /> 
				<var name="POLICY" default="POLICY.xml#INSERT_PODS_SEM"  />
                <var name="EVENT_GUID" default="" type="String"/>
                <var name="INSPECTION_DATE" default="" type="DateTime"/>
                <var name="MATERIAL_DEFECT_TYPE_GCL" default="UNKNOWN" type="String"/>
                <var name="ORIENTATION" default="NULL" type="Decimal"/>
                <var name="AXIAL_LENGTH" default="NULL" type="Decimal"/>
                <var name="CIRCUM_LENGTH" default="NULL" type="Decimal"/>
                <var name="MAX_WIDTH" default="NULL" type="Decimal"/>
                <var name="SURFACE_GCL" default="UNKNOWN" type="String"/>
                <var name="PI_EVENT_ID" default="NULL" type="Decimal"/>
                <var name="PI_EVENT_GUID" default="" type="String"/>
                <var name="DESCRIPTION" default="" type="String"/>
                <var name="SOURCE_GCL" default="UNKNOWN" type="String"/>
                <var name="COMMENTS" default="" type="String"/>
                <var name="ID" type="Int64" direction="Output" default="SELECT max(EVENT_ID) id FROM PODS.EVENT_RANGE"/>
                <var name="PODS_USER" type="String"/>
                <var name="USER_ID" default="-1" type="Int64"/>
                <query>
					DO $$
					DECLARE
					returnId integer;
                    BEGIN
                    INSERT INTO PODS.EVENT_RANGE (EVENT_GUID,FEATURE_ID,STATION_ID_BEGIN,STATION_ID_END,PODS_USER,CREATE_DATE,EFFECTIVE_FROM_DATE,CURRENT_INDICATOR_LF,POSITIONING_TYPE_CL)
                    VALUES('{EVENT_GUID}','PI_MAT_DEFECT',0,0,NULLIF('{PODS_USER}',''),current_timestamp,current_timestamp,'Y','UNKNOWN')
                    RETURNING EVENT_ID INTO returnId;

                    INSERT INTO PODS.PI_MATERIAL_DEFECT(EVENT_ID,EVENT_GUID,INSPECTION_DATE,MATERIAL_DEFECT_TYPE_GCL,ORIENTATION,AXIAL_LENGTH,CIRCUM_LENGTH,MAX_WIDTH,SURFACE_GCL,PI_EVENT_ID,PI_EVENT_GUID,DESCRIPTION,SOURCE_GCL,COMMENTS)
                    VALUES(returnId,'{EVENT_GUID}','{INSPECTION_DATE}','{MATERIAL_DEFECT_TYPE_GCL}',{ORIENTATION},{AXIAL_LENGTH},{CIRCUM_LENGTH},{MAX_WIDTH},'{SURFACE_GCL}',{PI_EVENT_ID},'{PI_EVENT_GUID}',NULLIF('{DESCRIPTION}',''),NULLIF('{SOURCE_GCL}',''),NULLIF('{COMMENTS}',''));
					END $$;
                </query>
            </dbCommand>
        </insert>
        <update>
            <dbCommand>
				<param name="CLASS_ID" type="String" direction="Input" default="PODS_PI_MATERIAL_DEFECT" /> 
				<var name="POLICY" default="POLICY.xml#UPDATE_PODS_SEM"  />
                <param name="EVENT_GUID" default="" type="String"/>
                <param name="INSPECTION_DATE" default="" type="DateTime"/>
                <param name="MATERIAL_DEFECT_TYPE_GCL" default="UNKNOWN" type="String"/>
                <param name="ORIENTATION" default="NULL" type="Decimal"/>
                <param name="AXIAL_LENGTH" default="NULL" type="Decimal"/>
                <param name="CIRCUM_LENGTH" default="NULL" type="Decimal"/>
                <param name="MAX_WIDTH" default="NULL" type="Decimal"/>
                <param name="SURFACE_GCL" default="UNKNOWN" type="String"/>
                <param name="PI_EVENT_ID" default="NULL" type="Decimal"/>
                <param name="PI_EVENT_GUID" default="" type="String"/>
                <param name="DESCRIPTION" default="" type="String"/>
                <param name="SOURCE_GCL" default="UNKNOWN" type="String"/>
                <param name="COMMENTS" default="" type="String"/>
                <param name="ID" type="Int64"/>
                <param name="USER_ID" default="-1" type="Int64"/>
                <query>
                    UPDATE PODS.PI_MATERIAL_DEFECT
                    SET EVENT_GUID=case when :EVENT_GUID is null then EVENT_GUID else :EVENT_GUID end,
                    INSPECTION_DATE=case when :INSPECTION_DATE is null then INSPECTION_DATE else :INSPECTION_DATE end,
					MATERIAL_DEFECT_TYPE_GCL=:MATERIAL_DEFECT_TYPE_GCL,
					ORIENTATION=case when :ORIENTATION is null then ORIENTATION else :ORIENTATION end,
					AXIAL_LENGTH=case when :AXIAL_LENGTH is null then AXIAL_LENGTH else :AXIAL_LENGTH end,
					CIRCUM_LENGTH=case when :CIRCUM_LENGTH is null then CIRCUM_LENGTH else :CIRCUM_LENGTH end,
					MAX_WIDTH=case when :MAX_WIDTH is null then MAX_WIDTH else :MAX_WIDTH end,
					SURFACE_GCL=case when :SURFACE_GCL is null then SURFACE_GCL else :SURFACE_GCL end,
                    PI_EVENT_ID=case when :PI_EVENT_ID is null then PI_EVENT_ID else :PI_EVENT_ID end,
                    PI_EVENT_GUID=case when :PI_EVENT_GUID is null then PI_EVENT_GUID else :PI_EVENT_GUID end,
                    DESCRIPTION=case when :DESCRIPTION is null then DESCRIPTION else :DESCRIPTION end,
                    SOURCE_GCL=case when :SOURCE_GCL is null then SOURCE_GCL else :SOURCE_GCL end,
                    COMMENTS=case when :COMMENTS is null then COMMENTS else :COMMENTS end
                    WHERE EVENT_ID = :ID;
                </query>
            </dbCommand>
        </update>
        <delete>
            <dbCommand>
				<var name="CLASS_ID" type="String" direction="Input" default="PODS_PI_MATERIAL_DEFECT" /> 
				<var name="POLICY" default="POLICY.xml#DELETE_PODS_SEM"  />
                <var name="ID" type="Int64"/>
                <var name="USER_ID" default="-1" type="Int64"/>
                <query>
					DO $$
                    BEGIN
                    UPDATE PODS.EVENT_RANGE
                    SET CURRENT_INDICATOR_LF='N'
                    WHERE EVENT_ID = {ID};

                    DELETE FROM PODS.PI_MATERIAL_DEFECT
                    WHERE EVENT_ID = {ID};
                    DELETE FROM WEB50.LNK_GATE WHERE LEFT_OBJ_ID = 'PODS_PI_MATERIAL_DEFECT/'||CAST({ID} AS VARCHAR(30)) OR RIGHT_OBJ_ID = 'PODS_PI_MATERIAL_DEFECT/'||CAST({ID} AS VARCHAR(30)); 
					END $$;
                </query>
            </dbCommand>
        </delete>
    </data>
    <data table="PI_MECHANICAL_DAMAGE" schema="PODS" id="PODS_PI_MECHANICAL_DAMAGE" comment="PODS.PI_MECHANICAL_DAMAGE">
        <select>
            <dbQuery idField="ID">
                <param name="USER_ID" default="-1" type="Int64"/>
                <var name="FILTER" default="1=1"/>
                <var name="LPU_ACCESS_FILTER" default="SELECT srv_district_id FROM PODS.SRV_DISTRICT_GCL"/>
                <query>
                    SELECT * FROM (SELECT EVENT_ID ID, t.* FROM PODS.PI_MECHANICAL_DAMAGE t) d WHERE {FILTER}
                </query>
            </dbQuery>
        </select>
        <insert>
            <dbCommand>
				<var name="CLASS_ID" type="String" direction="Input" default="PODS_PI_MECHANICAL_DAMAGE" /> 
				<var name="POLICY" default="POLICY.xml#INSERT_PODS_SEM"  />
                <var name="EVENT_GUID" default="" type="String"/>
                <var name="INSPECTION_DATE" default="" type="DateTime"/>
                <var name="MECHANICAL_DEFECT_TYPE_GCL" default="UNKNOWN" type="String"/>
                <var name="ORIENTATION" default="NULL" type="Decimal"/>
                <var name="AXIAL_LENGTH" default="NULL" type="Decimal"/>
                <var name="CIRCUM_LENGTH" default="NULL" type="Decimal"/>
                <var name="WIDTH" default="NULL" type="Decimal"/>
                <var name="PEAK_TO_PEAK_DEPTH" default="NULL" type="Decimal"/>
                <var name="WAVE_LENGTH" default="NULL" type="Decimal"/>
                <var name="PI_EVENT_ID" default="NULL" type="Decimal"/>
                <var name="PI_EVENT_GUID" default="" type="String"/>
                <var name="DESCRIPTION" default="" type="String"/>
                <var name="SOURCE_GCL" default="UNKNOWN" type="String"/>
                <var name="COMMENTS" default="" type="String"/>
                <var name="ID" type="Int64" direction="Output" default="SELECT max(EVENT_ID) id FROM PODS.EVENT_RANGE"/>
                <var name="PODS_USER" type="String"/>
                <var name="USER_ID" default="-1" type="Int64"/>
                <query>
					DO $$
					DECLARE
					returnId integer;
                    BEGIN
                    INSERT INTO PODS.EVENT_RANGE (EVENT_GUID,FEATURE_ID,STATION_ID_BEGIN,STATION_ID_END,PODS_USER,CREATE_DATE,EFFECTIVE_FROM_DATE,CURRENT_INDICATOR_LF,POSITIONING_TYPE_CL)
                    VALUES('{EVENT_GUID}','PI_MECHAN_DAM',0,0,NULLIF('{PODS_USER}',''),current_timestamp,current_timestamp,'Y','UNKNOWN')
                    RETURNING EVENT_ID INTO returnId;

                    INSERT INTO PODS.PI_MECHANICAL_DAMAGE(EVENT_ID,EVENT_GUID,INSPECTION_DATE,MECHANICAL_DEFECT_TYPE_GCL,ORIENTATION,AXIAL_LENGTH,CIRCUM_LENGTH,WIDTH,PEAK_TO_PEAK_DEPTH,WAVE_LENGTH,PI_EVENT_ID,PI_EVENT_GUID,DESCRIPTION,SOURCE_GCL,COMMENTS)
                    VALUES(returnId,'{EVENT_GUID}','{INSPECTION_DATE}','{MECHANICAL_DEFECT_TYPE_GCL}',{ORIENTATION},{AXIAL_LENGTH},{CIRCUM_LENGTH},{WIDTH},{PEAK_TO_PEAK_DEPTH},{WAVE_LENGTH},{PI_EVENT_ID},'{PI_EVENT_GUID}',NULLIF('{DESCRIPTION}',''),NULLIF('{SOURCE_GCL}',''),NULLIF('{COMMENTS}',''));
					END $$;
                </query>
            </dbCommand>
        </insert>
        <update>
            <dbCommand>
				<param name="CLASS_ID" type="String" direction="Input" default="PODS_PI_MECHANICAL_DAMAGE" /> 
				<var name="POLICY" default="POLICY.xml#UPDATE_PODS_SEM"  />
                <param name="EVENT_GUID" default="" type="String"/>
                <param name="INSPECTION_DATE" default="" type="DateTime"/>
                <param name="MECHANICAL_DEFECT_TYPE_GCL" default="UNKNOWN" type="String"/>
                <param name="ORIENTATION" default="NULL" type="Decimal"/>
                <param name="AXIAL_LENGTH" default="NULL" type="Decimal"/>
                <param name="CIRCUM_LENGTH" default="NULL" type="Decimal"/>
                <param name="WIDTH" default="NULL" type="Decimal"/>
                <param name="PEAK_TO_PEAK_DEPTH" default="NULL" type="Decimal"/>
                <param name="WAVE_LENGTH" default="NULL" type="Decimal"/>
                <param name="PI_EVENT_ID" default="NULL" type="Decimal"/>
                <param name="PI_EVENT_GUID" default="" type="String"/>
                <param name="DESCRIPTION" default="" type="String"/>
                <param name="SOURCE_GCL" default="UNKNOWN" type="String"/>
                <param name="COMMENTS" default="" type="String"/>
                <param name="ID" type="Int64"/>
                <param name="USER_ID" default="-1" type="Int64"/>
                <query>
                    UPDATE PODS.PI_MECHANICAL_DAMAGE
                    SET 
					EVENT_GUID=case when :EVENT_GUID is null then EVENT_GUID else :EVENT_GUID end,
                    INSPECTION_DATE=case when :INSPECTION_DATE is null then INSPECTION_DATE else :INSPECTION_DATE end,
					MECHANICAL_DEFECT_TYPE_GCL=case when :MECHANICAL_DEFECT_TYPE_GCL is null then MECHANICAL_DEFECT_TYPE_GCL else :MECHANICAL_DEFECT_TYPE_GCL end,
                    ORIENTATION=case when :ORIENTATION is null then ORIENTATION else :ORIENTATION end,
                    AXIAL_LENGTH=case when :AXIAL_LENGTH is null then AXIAL_LENGTH else :AXIAL_LENGTH end,
                    CIRCUM_LENGTH=case when :CIRCUM_LENGTH is null then CIRCUM_LENGTH else :CIRCUM_LENGTH end,
					WIDTH=case when :WIDTH is null then WIDTH else :WIDTH end,
					PEAK_TO_PEAK_DEPTH=case when :PEAK_TO_PEAK_DEPTH is null then PEAK_TO_PEAK_DEPTH else :PEAK_TO_PEAK_DEPTH end,
					WAVE_LENGTH=case when :WAVE_LENGTH is null then WAVE_LENGTH else :WAVE_LENGTH end,
                    PI_EVENT_ID=case when :PI_EVENT_ID is null then PI_EVENT_ID else :PI_EVENT_ID end,
                    PI_EVENT_GUID=case when :PI_EVENT_GUID is null then PI_EVENT_GUID else :PI_EVENT_GUID end,
                    DESCRIPTION=case when :DESCRIPTION is null then DESCRIPTION else :DESCRIPTION end,
                    SOURCE_GCL=case when :SOURCE_GCL is null then SOURCE_GCL else :SOURCE_GCL end,
                    COMMENTS=case when :COMMENTS is null then COMMENTS else :COMMENTS end
                    WHERE EVENT_ID = :ID;
                </query>
            </dbCommand>
        </update>
        <delete>
            <dbCommand>
				<var name="CLASS_ID" type="String" direction="Input" default="PODS_PI_MECHANICAL_DAMAGE" /> 
				<var name="POLICY" default="POLICY.xml#DELETE_PODS_SEM"  />
                <var name="ID" type="Int64"/>
                <var name="USER_ID" default="-1" type="Int64"/>
                <query>
					DO $$
                    BEGIN
                    UPDATE PODS.EVENT_RANGE
                    SET CURRENT_INDICATOR_LF='N'
                    WHERE EVENT_ID = {ID};

                    DELETE FROM PODS.PI_MECHANICAL_DAMAGE
                    WHERE EVENT_ID = {ID};
                    DELETE FROM WEB50.LNK_GATE WHERE LEFT_OBJ_ID = 'PODS_PI_MECHANICAL_DAMAGE/'||CAST({ID} AS VARCHAR(30)) OR RIGHT_OBJ_ID = 'PODS_PI_MECHANICAL_DAMAGE/'||CAST({ID} AS VARCHAR(30)); 
					END $$;
                </query>
            </dbCommand>
        </delete>
    </data>
    <data table="PI_METAL_LOSS" schema="PODS" id="PODS_PI_METAL_LOSS" comment="PODS.PI_METAL_LOSS">
        <select>
            <dbQuery idField="ID">
                <param name="USER_ID" default="-1" type="Int64"/>
                <var name="FILTER" default="1=1"/>
                <var name="LPU_ACCESS_FILTER" default="SELECT srv_district_id FROM PODS.SRV_DISTRICT_GCL"/>
                <query>
                    SELECT * FROM (SELECT EVENT_ID ID, t.* FROM PODS.PI_METAL_LOSS t) d WHERE {FILTER}
                </query>
            </dbQuery>
        </select>
        <insert>
            <dbCommand>
				<var name="CLASS_ID" type="String" direction="Input" default="PODS_PI_METAL_LOSS" /> 
				<var name="POLICY" default="POLICY.xml#INSERT_PODS_SEM"  />
                <var name="EVENT_GUID" default="" type="String"/>
                <var name="INSPECTION_DATE" default="" type="DateTime"/>
                <var name="ORIENTATION" default="NULL" type="Decimal"/>
                <var name="TYPE_CL" default="UNKNOWN" type="String"/>
                <var name="SURFACE_GCL" default="UNKNOWN" type="String"/>
                <var name="AXIAL_LENGTH" default="NULL" type="Decimal"/>
                <var name="CIRCUM_LENGTH" default="NULL" type="Decimal"/>
                <var name="MAX_WIDTH" default="NULL" type="Decimal"/>
                <var name="MAX_DEPTH" default="NULL" type="Decimal"/>
                <var name="FAILURE_PRESSURE" default="NULL" type="Decimal"/>
                <var name="FAILURE_ALGORITHM_GCL" default="UNKNOWN" type="String"/>
                <var name="PI_EVENT_ID" default="NULL" type="Decimal"/>
                <var name="PI_EVENT_GUID" default="" type="String"/>
                <var name="DESCRIPTION" default="" type="String"/>
                <var name="SOURCE_GCL" default="UNKNOWN" type="String"/>
                <var name="COMMENTS" default="" type="String"/>
                <var name="ID" type="Int64" direction="Output" default="SELECT max(EVENT_ID) id FROM PODS.EVENT_RANGE"/>
                <var name="PODS_USER" type="String"/>
                <var name="USER_ID" default="-1" type="Int64"/>
                <query>
					DO $$
					DECLARE
					returnId integer;
                    BEGIN
                    INSERT INTO PODS.EVENT_RANGE (EVENT_GUID,FEATURE_ID,STATION_ID_BEGIN,STATION_ID_END,PODS_USER,CREATE_DATE,EFFECTIVE_FROM_DATE,CURRENT_INDICATOR_LF,POSITIONING_TYPE_CL)
                    VALUES('{EVENT_GUID}','PI_METAL_LOSS',0,0,NULLIF('{PODS_USER}',''),current_timestamp,current_timestamp,'Y','UNKNOWN')
                    RETURNING EVENT_ID INTO returnId;

                    INSERT INTO PODS.PI_METAL_LOSS(EVENT_ID,EVENT_GUID,INSPECTION_DATE,ORIENTATION,TYPE_CL,SURFACE_GCL,AXIAL_LENGTH,CIRCUM_LENGTH,MAX_WIDTH,MAX_DEPTH,FAILURE_PRESSURE,FAILURE_ALGORITHM_GCL,PI_EVENT_ID,PI_EVENT_GUID,DESCRIPTION,SOURCE_GCL,COMMENTS)
                    VALUES(returnId,'{EVENT_GUID}','{INSPECTION_DATE}',{ORIENTATION},NULLIF('{TYPE_CL}',''),'{SURFACE_GCL}',{AXIAL_LENGTH},{CIRCUM_LENGTH},{MAX_WIDTH},{MAX_DEPTH},{FAILURE_PRESSURE},NULLIF('{FAILURE_ALGORITHM_GCL}',''),{PI_EVENT_ID},'{PI_EVENT_GUID}',NULLIF('{DESCRIPTION}',''),NULLIF('{SOURCE_GCL}',''),NULLIF('{COMMENTS}',''));
					END $$;
                </query>
            </dbCommand>
        </insert>
        <update>
            <dbCommand>
				<param name="CLASS_ID" type="String" direction="Input" default="PODS_PI_METAL_LOSS" /> 
				<var name="POLICY" default="POLICY.xml#UPDATE_PODS_SEM"  />
                <param name="EVENT_GUID" default="" type="String"/>
                <param name="INSPECTION_DATE" default="" type="DateTime"/>
                <param name="ORIENTATION" default="NULL" type="Decimal"/>
                <param name="TYPE_CL" default="UNKNOWN" type="String"/>
                <param name="SURFACE_GCL" default="UNKNOWN" type="String"/>
                <param name="AXIAL_LENGTH" default="NULL" type="Decimal"/>
                <param name="CIRCUM_LENGTH" default="NULL" type="Decimal"/>
                <param name="MAX_WIDTH" default="NULL" type="Decimal"/>
                <param name="MAX_DEPTH" default="NULL" type="Decimal"/>
                <param name="FAILURE_PRESSURE" default="NULL" type="Decimal"/>
                <param name="FAILURE_ALGORITHM_GCL" default="UNKNOWN" type="String"/>
                <param name="PI_EVENT_ID" default="NULL" type="Decimal"/>
                <param name="PI_EVENT_GUID" default="" type="String"/>
                <param name="DESCRIPTION" default="" type="String"/>
                <param name="SOURCE_GCL" default="UNKNOWN" type="String"/>
                <param name="COMMENTS" default="" type="String"/>
                <param name="ID" type="Int64"/>
                <param name="USER_ID" default="-1" type="Int64"/>
                <query>
                    UPDATE PODS.PI_METAL_LOSS
                    SET 
					EVENT_GUID=case when :EVENT_GUID is null then EVENT_GUID else :EVENT_GUID end,
                    INSPECTION_DATE=case when :INSPECTION_DATE is null then INSPECTION_DATE else :INSPECTION_DATE end,
                    ORIENTATION=case when :ORIENTATION is null then ORIENTATION else :ORIENTATION end,
                    TYPE_CL=case when :TYPE_CL is null then TYPE_CL else :TYPE_CL end,
                    SURFACE_GCL=case when :SURFACE_GCL is null then SURFACE_GCL else :SURFACE_GCL end,
                    AXIAL_LENGTH=case when :AXIAL_LENGTH is null then AXIAL_LENGTH else :AXIAL_LENGTH end,
                    CIRCUM_LENGTH=case when :CIRCUM_LENGTH is null then CIRCUM_LENGTH else :CIRCUM_LENGTH end,
                    MAX_WIDTH=case when :MAX_WIDTH is null then MAX_WIDTH else :MAX_WIDTH end,
                    MAX_DEPTH=case when :MAX_DEPTH is null then MAX_DEPTH else :MAX_DEPTH end,
					FAILURE_PRESSURE=case when :FAILURE_PRESSURE is null then FAILURE_PRESSURE else :FAILURE_PRESSURE end,
					FAILURE_ALGORITHM_GCL=case when :FAILURE_ALGORITHM_GCL is null then FAILURE_ALGORITHM_GCL else :FAILURE_ALGORITHM_GCL end,
                    PI_EVENT_ID=case when :PI_EVENT_ID is null then PI_EVENT_ID else :PI_EVENT_ID end,
                    PI_EVENT_GUID=case when :PI_EVENT_GUID is null then PI_EVENT_GUID else :PI_EVENT_GUID end,
                    DESCRIPTION=case when :DESCRIPTION is null then DESCRIPTION else :DESCRIPTION end,
                    SOURCE_GCL=case when :SOURCE_GCL is null then SOURCE_GCL else :SOURCE_GCL end,
                    COMMENTS=case when :COMMENTS is null then COMMENTS else :COMMENTS end
                    WHERE EVENT_ID = :ID;
                </query>
            </dbCommand>
        </update>
        <delete>
            <dbCommand>
				<var name="CLASS_ID" type="String" direction="Input" default="PODS_PI_METAL_LOSS" /> 
				<var name="POLICY" default="POLICY.xml#DELETE_PODS_SEM"  />
                <var name="ID" type="Int64"/>
                <var name="USER_ID" default="-1" type="Int64"/>
                <query>
					DO $$
                    BEGIN
                    UPDATE PODS.EVENT_RANGE
                    SET CURRENT_INDICATOR_LF='N'
                    WHERE EVENT_ID = {ID};

                    DELETE FROM PODS.PI_METAL_LOSS
                    WHERE EVENT_ID = {ID};
                    DELETE FROM WEB50.LNK_GATE WHERE LEFT_OBJ_ID = 'PODS_PI_METAL_LOSS/'||CAST({ID} AS VARCHAR(30)) OR RIGHT_OBJ_ID = 'PODS_PI_METAL_LOSS/'||CAST({ID} AS VARCHAR(30)); 
					END $$;
                </query>
            </dbCommand>
        </delete>
    </data>
    <data table="PIPE_BEND" schema="PODS" id="PODS_PIPE_BEND" comment="PODS.PIPE_BEND">
        <select>
            <dbQuery idField="ID">
                <param name="USER_ID" default="-1" type="Int64"/>
                <var name="FILTER" default="1=1"/>
                <var name="LPU_ACCESS_FILTER" default="SELECT srv_district_id FROM PODS.SRV_DISTRICT_GCL"/>
                <query>
                    SELECT * FROM (SELECT EVENT_ID ID, t.* FROM PODS.PIPE_BEND t) d WHERE {FILTER}
                </query>
            </dbQuery>
        </select>
        <insert>
            <dbCommand>
				<var name="CLASS_ID" type="String" direction="Input" default="PODS_PIPE_BEND" /> 
				<var name="POLICY" default="POLICY.xml#INSERT_PODS_SEM"  />
                <var name="EVENT_GUID" default="" type="String"/>
                <var name="TYPE_CL" default="UNKNOWN" type="String"/>
                <var name="TECHNIQUE_CL" default="UNKNOWN" type="String"/>
                <var name="BEND_RADIUS" default="NULL" type="Decimal"/>
                <var name="HORIZ_ANGLE" default="NULL" type="Decimal"/>
                <var name="VERT_ANGLE" default="NULL" type="Decimal"/>
                <var name="FABRICATOR_NAME_CL" default="UNKNOWN" type="String"/>
                <var name="DATE_INSTALLED" default="" type="DateTime"/>
                <var name="DESCRIPTION" default="" type="String"/>
                <var name="SOURCE_GCL" default="UNKNOWN" type="String"/>
                <var name="COMMENTS" default="" type="String"/>
                <var name="ID" type="Int64" direction="Output" default="SELECT max(EVENT_ID) id FROM PODS.EVENT_RANGE"/>
                <var name="PODS_USER" type="String"/>
                <var name="USER_ID" default="-1" type="Int64"/>
                <query>
					DO $$
					DECLARE
					returnId integer;
                    BEGIN
                    INSERT INTO PODS.EVENT_RANGE (EVENT_GUID,FEATURE_ID,STATION_ID_BEGIN,STATION_ID_END,PODS_USER,CREATE_DATE,EFFECTIVE_FROM_DATE,CURRENT_INDICATOR_LF,POSITIONING_TYPE_CL)
                    VALUES('{EVENT_GUID}','PIPE_BEND',0,0,NULLIF('{PODS_USER}',''),current_timestamp,current_timestamp,'Y','UNKNOWN')
                    RETURNING EVENT_ID INTO returnId;

                    INSERT INTO PODS.PIPE_BEND(EVENT_ID,EVENT_GUID,TYPE_CL,TECHNIQUE_CL,BEND_RADIUS,HORIZ_ANGLE,VERT_ANGLE,FABRICATOR_NAME_CL,DATE_INSTALLED,DESCRIPTION,SOURCE_GCL,COMMENTS)
                    VALUES(returnId,'{EVENT_GUID}',NULLIF('{TYPE_CL}',''),NULLIF('{TECHNIQUE_CL}',''),{BEND_RADIUS},{HORIZ_ANGLE},{VERT_ANGLE},NULLIF('{FABRICATOR_NAME_CL}',''),'{DATE_INSTALLED}',NULLIF('{DESCRIPTION}',''),NULLIF('{SOURCE_GCL}',''),NULLIF('{COMMENTS}',''));
					END $$;
                </query>
            </dbCommand>
        </insert>
        <update>
            <dbCommand>
				<param name="CLASS_ID" type="String" direction="Input" default="PODS_PIPE_BEND" /> 
				<var name="POLICY" default="POLICY.xml#UPDATE_PODS_SEM"  />
                <param name="EVENT_GUID" default="" type="String"/>
                <param name="TYPE_CL" default="UNKNOWN" type="String"/>
                <param name="TECHNIQUE_CL" default="UNKNOWN" type="String"/>
                <param name="BEND_RADIUS" default="NULL" type="Decimal"/>
                <param name="HORIZ_ANGLE" default="NULL" type="Decimal"/>
                <param name="VERT_ANGLE" default="NULL" type="Decimal"/>
                <param name="FABRICATOR_NAME_CL" default="UNKNOWN" type="String"/>
                <param name="DATE_INSTALLED" default="" type="DateTime"/>
                <param name="DESCRIPTION" default="" type="String"/>
                <param name="SOURCE_GCL" default="UNKNOWN" type="String"/>
                <param name="COMMENTS" default="" type="String"/>
                <param name="ID" type="Int64"/>
                <param name="USER_ID" default="-1" type="Int64"/>
                <query>
                    UPDATE PODS.PIPE_BEND
                    SET 
					EVENT_GUID=case when :EVENT_GUID is null then EVENT_GUID else :EVENT_GUID end,
                    TYPE_CL=case when :TYPE_CL is null then TYPE_CL else :TYPE_CL end,
					TECHNIQUE_CL=case when :TECHNIQUE_CL is null then TECHNIQUE_CL else :TECHNIQUE_CL end,
					BEND_RADIUS=case when :BEND_RADIUS is null then BEND_RADIUS else :BEND_RADIUS end,
					HORIZ_ANGLE=case when :HORIZ_ANGLE is null then HORIZ_ANGLE else :HORIZ_ANGLE end,
					VERT_ANGLE=case when :VERT_ANGLE is null then VERT_ANGLE else :VERT_ANGLE end,
					FABRICATOR_NAME_CL=case when :FABRICATOR_NAME_CL is null then FABRICATOR_NAME_CL else :FABRICATOR_NAME_CL end,
                    DATE_INSTALLED=case when :DATE_INSTALLED is null then DATE_INSTALLED else :DATE_INSTALLED end,
                    DESCRIPTION=case when :DESCRIPTION is null then DESCRIPTION else :DESCRIPTION end,
                    SOURCE_GCL=case when :SOURCE_GCL is null then SOURCE_GCL else :SOURCE_GCL end,
                    COMMENTS=case when :COMMENTS is null then COMMENTS else :COMMENTS end
                    WHERE EVENT_ID = :ID;
                </query>
            </dbCommand>
        </update>
        <delete>
            <dbCommand>
				<var name="CLASS_ID" type="String" direction="Input" default="PODS_PIPE_BEND" /> 
				<var name="POLICY" default="POLICY.xml#DELETE_PODS_SEM"  />
                <var name="ID" type="Int64"/>
                <var name="USER_ID" default="-1" type="Int64"/>
                <query>
					DO $$
                    BEGIN
                    UPDATE PODS.EVENT_RANGE
                    SET CURRENT_INDICATOR_LF='N'
                    WHERE EVENT_ID = {ID};

                    DELETE FROM PODS.PIPE_BEND
                    WHERE EVENT_ID = {ID};
                    DELETE FROM WEB50.LNK_GATE WHERE LEFT_OBJ_ID = 'PODS_PIPE_BEND/'||CAST({ID} AS VARCHAR(30)) OR RIGHT_OBJ_ID = 'PODS_PIPE_BEND/'||CAST({ID} AS VARCHAR(30)); 
					END $$;
                </query>
            </dbCommand>
        </delete>
    </data>
    <data table="PIPE_JOIN" schema="PODS" id="PODS_PIPE_JOIN" comment="PODS.PIPE_JOIN">
        <select>
            <dbQuery idField="ID">
                <param name="USER_ID" default="-1" type="Int64"/>
                <var name="FILTER" default="1=1"/>
                <var name="LPU_ACCESS_FILTER" default="SELECT srv_district_id FROM PODS.SRV_DISTRICT_GCL"/>
                <query>
                    SELECT * FROM (SELECT EVENT_ID ID, t.* FROM PODS.PIPE_JOIN t) d WHERE {FILTER}
                </query>
            </dbQuery>
        </select>
        <insert>
            <dbCommand>
				<var name="CLASS_ID" type="String" direction="Input" default="PODS_PIPE_JOIN" /> 
				<var name="POLICY" default="POLICY.xml#INSERT_PODS_SEM"  />
                <var name="EVENT_GUID" default="" type="String"/>
                <var name="TYPE_CL" default="UNKNOWN" type="String"/>
                <var name="JOIN_IDENTIFIER" default="" type="String"/>
                <var name="IDENTIFIER_TYPE_CL" default="UNKNOWN" type="String"/>
                <var name="MATERIAL_CL" default="UNKNOWN" type="String"/>
                <var name="SPECIFICATION_CL" default="UNKNOWN" type="String"/>
                <var name="DESCRIPTION" default="" type="String"/>
                <var name="SOURCE_GCL" default="UNKNOWN" type="String"/>
                <var name="COMMENTS" default="" type="String"/>
                <var name="ID" type="Int64" direction="Output" default="SELECT max(EVENT_ID) id FROM PODS.EVENT_RANGE"/>
                <var name="PODS_USER" type="String"/>
                <var name="USER_ID" default="-1" type="Int64"/>
                <query>
					DO $$
					DECLARE
					returnId integer;
                    BEGIN
                    INSERT INTO PODS.EVENT_RANGE (EVENT_GUID,FEATURE_ID,STATION_ID_BEGIN,STATION_ID_END,PODS_USER,CREATE_DATE,EFFECTIVE_FROM_DATE,CURRENT_INDICATOR_LF,POSITIONING_TYPE_CL)
                    VALUES('{EVENT_GUID}','PIPE_JOIN',0,0,NULLIF('{PODS_USER}',''),current_timestamp,current_timestamp,'Y','UNKNOWN')
                    RETURNING EVENT_ID INTO returnId;

                    INSERT INTO PODS.PIPE_JOIN(EVENT_ID,EVENT_GUID,TYPE_CL,JOIN_IDENTIFIER,IDENTIFIER_TYPE_CL,MATERIAL_CL,SPECIFICATION_CL,DESCRIPTION,SOURCE_GCL,COMMENTS)
                    VALUES(returnId,'{EVENT_GUID}',NULLIF('{TYPE_CL}',''),NULLIF('{JOIN_IDENTIFIER}',''),NULLIF('{IDENTIFIER_TYPE_CL}',''),NULLIF('{MATERIAL_CL}',''),NULLIF('{SPECIFICATION_CL}',''),NULLIF('{DESCRIPTION}',''),NULLIF('{SOURCE_GCL}',''),NULLIF('{COMMENTS}',''));
					END $$;
                </query>
            </dbCommand>
        </insert>
        <update>
            <dbCommand>
				<param name="CLASS_ID" type="String" direction="Input" default="PODS_PIPE_JOIN" /> 
				<var name="POLICY" default="POLICY.xml#UPDATE_PODS_SEM"  />
                <param name="EVENT_GUID" default="" type="String"/>
                <param name="TYPE_CL" default="UNKNOWN" type="String"/>
                <param name="JOIN_IDENTIFIER" default="" type="String"/>
                <param name="IDENTIFIER_TYPE_CL" default="UNKNOWN" type="String"/>
                <param name="MATERIAL_CL" default="UNKNOWN" type="String"/>
                <param name="SPECIFICATION_CL" default="UNKNOWN" type="String"/>
                <param name="DESCRIPTION" default="" type="String"/>
                <param name="SOURCE_GCL" default="UNKNOWN" type="String"/>
                <param name="COMMENTS" default="" type="String"/>
                <param name="ID" type="Int64"/>
                <param name="USER_ID" default="-1" type="Int64"/>
                <query>
                    UPDATE PODS.PIPE_JOIN
                    SET 
					EVENT_GUID=case when :EVENT_GUID is null then EVENT_GUID else :EVENT_GUID end,
                    TYPE_CL=case when :TYPE_CL is null then TYPE_CL else :TYPE_CL end,
					JOIN_IDENTIFIER=case when :JOIN_IDENTIFIER is null then JOIN_IDENTIFIER else :JOIN_IDENTIFIER end,
					IDENTIFIER_TYPE_CL=case when :IDENTIFIER_TYPE_CL is null then IDENTIFIER_TYPE_CL else :IDENTIFIER_TYPE_CL end,
					MATERIAL_CL=case when :MATERIAL_CL is null then MATERIAL_CL else :MATERIAL_CL end,
                    SPECIFICATION_CL=case when :SPECIFICATION_CL is null then SPECIFICATION_CL else :SPECIFICATION_CL end,
                    DESCRIPTION=case when :DESCRIPTION is null then DESCRIPTION else :DESCRIPTION end,
                    SOURCE_GCL=case when :SOURCE_GCL is null then SOURCE_GCL else :SOURCE_GCL end,
                    COMMENTS=case when :COMMENTS is null then COMMENTS else :COMMENTS end
                    WHERE EVENT_ID = :ID;
				</query>
            </dbCommand>
        </update>
        <delete>
            <dbCommand>
				<var name="CLASS_ID" type="String" direction="Input" default="PODS_PIPE_JOIN" /> 
				<var name="POLICY" default="POLICY.xml#DELETE_PODS_SEM"  />
                <var name="ID" type="Int64"/>
                <var name="USER_ID" default="-1" type="Int64"/>
                <query>
					DO $$
                    BEGIN
                    UPDATE PODS.EVENT_RANGE
                    SET CURRENT_INDICATOR_LF='N'
                    WHERE EVENT_ID = {ID};

                    DELETE FROM PODS.PIPE_JOIN
                    WHERE EVENT_ID = {ID};
                    DELETE FROM WEB50.LNK_GATE WHERE LEFT_OBJ_ID = 'PODS_PIPE_JOIN/'||CAST({ID} AS VARCHAR(30)) OR RIGHT_OBJ_ID = 'PODS_PIPE_JOIN/'||CAST({ID} AS VARCHAR(30)); 
					END $$;
                </query>
            </dbCommand>
        </delete>
    </data>
    <data table="PIPE_LENGTH" schema="PODS" id="PODS_PIPE_LENGTH" comment="PODS.PIPE_LENGTH">
        <select>
            <dbQuery idField="ID">
                <param name="USER_ID" default="-1" type="Int64"/>
                <var name="FILTER" default="1=1"/>
                <var name="LPU_ACCESS_FILTER" default="SELECT srv_district_id FROM PODS.SRV_DISTRICT_GCL"/>
                <query>
                    SELECT * FROM (SELECT EVENT_ID ID, t.* FROM PODS.PIPE_LENGTH t) d WHERE {FILTER}
                </query>
            </dbQuery>
        </select>
        <insert>
            <dbCommand>
				<var name="CLASS_ID" type="String" direction="Input" default="PODS_PIPE_LENGTH" /> 
				<var name="POLICY" default="POLICY.xml#INSERT_PODS_SEM"  />
                <var name="EVENT_GUID" default="" type="String"/>
                <var name="LENGTH_IDENTIFIER" default="" type="String"/>
                <var name="HEAT_NUMBER" default="" type="String"/>
                <var name="COIL_NUMBER" default="" type="String"/>
                <var name="END_TREATMENT_CL" default="UNKNOWN" type="String"/>
                <var name="DESCRIPTION" default="" type="String"/>
                <var name="SOURCE_GCL" default="UNKNOWN" type="String"/>
                <var name="COMMENTS" default="" type="String"/>
                <var name="ID" type="Int64" direction="Output" default="SELECT max(EVENT_ID) id FROM PODS.EVENT_RANGE"/>
                <var name="PODS_USER" type="String"/>
                <var name="USER_ID" default="-1" type="Int64"/>
                <query>
					DO $$
					DECLARE
					returnId integer;
                    BEGIN
                    INSERT INTO PODS.EVENT_RANGE (EVENT_GUID,FEATURE_ID,STATION_ID_BEGIN,STATION_ID_END,PODS_USER,CREATE_DATE,EFFECTIVE_FROM_DATE,CURRENT_INDICATOR_LF,POSITIONING_TYPE_CL)
                    VALUES('{EVENT_GUID}','PIPE_LENGTH',0,0,NULLIF('{PODS_USER}',''),current_timestamp,current_timestamp,'Y','UNKNOWN')
                    RETURNING EVENT_ID INTO returnId;

                    INSERT INTO PODS.PIPE_LENGTH(EVENT_ID,EVENT_GUID,LENGTH_IDENTIFIER,HEAT_NUMBER,COIL_NUMBER,END_TREATMENT_CL,DESCRIPTION,SOURCE_GCL,COMMENTS)
                    VALUES(returnId,'{EVENT_GUID}',NULLIF('{LENGTH_IDENTIFIER}',''),NULLIF('{HEAT_NUMBER}',''),NULLIF('{COIL_NUMBER}',''),NULLIF('{END_TREATMENT_CL}',''),NULLIF('{DESCRIPTION}',''),NULLIF('{SOURCE_GCL}',''),NULLIF('{COMMENTS}',''));
					END $$;
                </query>
            </dbCommand>
        </insert>
        <update>
            <dbCommand>
				<param name="CLASS_ID" type="String" direction="Input" default="PODS_PIPE_LENGTH" /> 
				<var name="POLICY" default="POLICY.xml#UPDATE_PODS_SEM"  />
                <param name="EVENT_GUID" default="" type="String"/>
                <param name="LENGTH_IDENTIFIER" default="" type="String"/>
                <param name="HEAT_NUMBER" default="" type="String"/>
                <param name="COIL_NUMBER" default="" type="String"/>
                <param name="END_TREATMENT_CL" default="UNKNOWN" type="String"/>
                <param name="DESCRIPTION" default="" type="String"/>
                <param name="SOURCE_GCL" default="UNKNOWN" type="String"/>
                <param name="COMMENTS" default="" type="String"/>
                <param name="ID" type="Int64"/>
                <param name="USER_ID" default="-1" type="Int64"/>
                <query>
                    UPDATE PODS.PIPE_LENGTH
                    SET
					EVENT_GUID=case when :EVENT_GUID is null then EVENT_GUID else :EVENT_GUID end,
					LENGTH_IDENTIFIER=case when :LENGTH_IDENTIFIER is null then LENGTH_IDENTIFIER else :LENGTH_IDENTIFIER end,
                    HEAT_NUMBER=case when :HEAT_NUMBER is null then HEAT_NUMBER else :HEAT_NUMBER end,
					COIL_NUMBER=case when :COIL_NUMBER is null then COIL_NUMBER else :COIL_NUMBER end,
					END_TREATMENT_CL=case when :END_TREATMENT_CL is null then END_TREATMENT_CL else :END_TREATMENT_CL end,
                    DESCRIPTION=case when :DESCRIPTION is null then DESCRIPTION else :DESCRIPTION end,
                    SOURCE_GCL=case when :SOURCE_GCL is null then SOURCE_GCL else :SOURCE_GCL end,
                    COMMENTS=case when :COMMENTS is null then COMMENTS else :COMMENTS end
                    WHERE EVENT_ID = :ID;
                </query>
            </dbCommand>
        </update>
        <delete>
            <dbCommand>
				<var name="CLASS_ID" type="String" direction="Input" default="PODS_PIPE_LENGTH" /> 
				<var name="POLICY" default="POLICY.xml#DELETE_PODS_SEM"  />
                <var name="ID" type="Int64"/>
                <var name="USER_ID" default="-1" type="Int64"/>
                <query>
					DO $$
                    BEGIN
                    UPDATE PODS.EVENT_RANGE
                    SET CURRENT_INDICATOR_LF='N'
                    WHERE EVENT_ID = {ID};

                    DELETE FROM PODS.PIPE_LENGTH
                    WHERE EVENT_ID = {ID};
                    DELETE FROM WEB50.LNK_GATE WHERE LEFT_OBJ_ID = 'PODS_PIPE_LENGTH/'||CAST({ID} AS VARCHAR(30)) OR RIGHT_OBJ_ID = 'PODS_PIPE_LENGTH/'||CAST({ID} AS VARCHAR(30)); 
					END $$;
                </query>
            </dbCommand>
        </delete>
    </data>
    <data table="PIPE_OPERATING_HISTORY" schema="PODS" id="PODS_PIPE_OPERATING_HISTORY" comment="PODS.PIPE_OPERATING_HISTORY">
        <select>
            <dbQuery idField="ID">
                <param name="USER_ID" default="-1" type="Int64"/>
                <var name="FILTER" default="1=1"/>
                <var name="LPU_ACCESS_FILTER" default="SELECT srv_district_id FROM PODS.SRV_DISTRICT_GCL"/>
                <query>
                    SELECT * FROM (SELECT EVENT_ID ID, t.* FROM PODS.PIPE_OPERATING_HISTORY t) d WHERE {FILTER}
                </query>
            </dbQuery>
        </select>
        <insert>
            <dbCommand>
				<var name="CLASS_ID" type="String" direction="Input" default="PODS_PIPE_OPERATING_HISTORY" /> 
				<var name="POLICY" default="POLICY.xml#INSERT_PODS_SEM"  />
                <var name="EVENT_GUID" default="" type="String"/>
                <var name="MIN_OPERATING_PRESSURE" default="NULL" type="Decimal"/>
                <var name="MAX_OPERATING_PRESSURE" default="NULL" type="Decimal"/>
                <var name="MAX_PERCENT_PRESSURE" default="NULL" type="Decimal"/>
                <var name="MIN_OPERATING_TEMP" default="NULL" type="Decimal"/>
                <var name="MAX_OPERATING_TEMP" default="NULL" type="Decimal"/>
                <var name="H2S_PPM" default="NULL" type="Decimal"/>
                <var name="MIN_VOL_FLOW_RATE" default="NULL" type="Decimal"/>
                <var name="MAX_VOL_FLOW_RATE" default="NULL" type="Decimal"/>
                <var name="CONTAMINANTS_PRESENT_LF" default="" type="String"/>
                <var name="CONTAMINANT_MSDS_LF" default="" type="String"/>
                <var name="DRAG_REDUCER_USED_LF" default="" type="String"/>
                <var name="DRAG_REDUCER_LAST_DATE" default="" type="DateTime"/>
                <var name="CORROSION_INHIBITOR_USED_LF" default="" type="String"/>
                <var name="CORROSION_INHIBITOR_TYPE_CL" default="UNKNOWN" type="String"/>
                <var name="CORROSION_INHIBITOR_LAST_DATE" default="" type="DateTime"/>
                <var name="INTERNAL_CLEANING_PROGRAM_LF" default="" type="String"/>
                <var name="CLEANING_FREQUENCY_CL" default="UNKNOWN" type="String"/>
                <var name="SUSPECTED_FES_LF" default="" type="String"/>
                <var name="VERIFIED_DATE" default="" type="DateTime"/>
                <var name="DESCRIPTION" default="" type="String"/>
                <var name="SOURCE_GCL" default="UNKNOWN" type="String"/>
                <var name="COMMENTS" default="" type="String"/>
                <var name="ID" type="Int64" direction="Output" default="SELECT max(EVENT_ID) id FROM PODS.EVENT_RANGE"/>
                <var name="PODS_USER" type="String"/>
                <var name="USER_ID" default="-1" type="Int64"/>
                <query>
					DO $$
					DECLARE
					returnId integer;
                    BEGIN
                    INSERT INTO PODS.EVENT_RANGE (EVENT_GUID,FEATURE_ID,STATION_ID_BEGIN,STATION_ID_END,PODS_USER,CREATE_DATE,EFFECTIVE_FROM_DATE,CURRENT_INDICATOR_LF,POSITIONING_TYPE_CL)
                    VALUES('{EVENT_GUID}','PIPE_OPER_HIST',0,0,NULLIF('{PODS_USER}',''),current_timestamp,current_timestamp,'Y','UNKNOWN')
                    RETURNING EVENT_ID INTO returnId;

                    INSERT INTO PODS.PIPE_OPERATING_HISTORY(EVENT_ID,EVENT_GUID,MIN_OPERATING_PRESSURE,MAX_OPERATING_PRESSURE,MAX_PERCENT_PRESSURE,MIN_OPERATING_TEMP,MAX_OPERATING_TEMP,H2S_PPM,MIN_VOL_FLOW_RATE,MAX_VOL_FLOW_RATE,CONTAMINANTS_PRESENT_LF,CONTAMINANT_MSDS_LF,DRAG_REDUCER_USED_LF,DRAG_REDUCER_LAST_DATE,CORROSION_INHIBITOR_USED_LF,CORROSION_INHIBITOR_TYPE_CL,CORROSION_INHIBITOR_LAST_DATE,INTERNAL_CLEANING_PROGRAM_LF,CLEANING_FREQUENCY_CL,SUSPECTED_FES_LF,VERIFIED_DATE,DESCRIPTION,SOURCE_GCL,COMMENTS)
                    VALUES(returnId,'{EVENT_GUID}',{MIN_OPERATING_PRESSURE},{MAX_OPERATING_PRESSURE},{MAX_PERCENT_PRESSURE},{MIN_OPERATING_TEMP},{MAX_OPERATING_TEMP},{H2S_PPM},{MIN_VOL_FLOW_RATE},{MAX_VOL_FLOW_RATE},'{CONTAMINANTS_PRESENT_LF}','{CONTAMINANT_MSDS_LF}','{DRAG_REDUCER_USED_LF}','{DRAG_REDUCER_LAST_DATE}','{CORROSION_INHIBITOR_USED_LF}',NULLIF('{CORROSION_INHIBITOR_TYPE_CL}',''),'{CORROSION_INHIBITOR_LAST_DATE}','{INTERNAL_CLEANING_PROGRAM_LF}',NULLIF('{CLEANING_FREQUENCY_CL}',''),'{SUSPECTED_FES_LF}','{VERIFIED_DATE}',NULLIF('{DESCRIPTION}',''),NULLIF('{SOURCE_GCL}',''),NULLIF('{COMMENTS}',''));
					END $$;
                </query>
            </dbCommand>
        </insert>
        <update>
            <dbCommand>
				<param name="CLASS_ID" type="String" direction="Input" default="PODS_PIPE_OPERATING_HISTORY" /> 
				<var name="POLICY" default="POLICY.xml#UPDATE_PODS_SEM"  />
                <param name="EVENT_GUID" default="" type="String"/>
                <param name="MIN_OPERATING_PRESSURE" default="NULL" type="Decimal"/>
                <param name="MAX_OPERATING_PRESSURE" default="NULL" type="Decimal"/>
                <param name="MAX_PERCENT_PRESSURE" default="NULL" type="Decimal"/>
                <param name="MIN_OPERATING_TEMP" default="NULL" type="Decimal"/>
                <param name="MAX_OPERATING_TEMP" default="NULL" type="Decimal"/>
                <param name="H2S_PPM" default="NULL" type="Decimal"/>
                <param name="MIN_VOL_FLOW_RATE" default="NULL" type="Decimal"/>
                <param name="MAX_VOL_FLOW_RATE" default="NULL" type="Decimal"/>
                <param name="CONTAMINANTS_PRESENT_LF" default="" type="String"/>
                <param name="CONTAMINANT_MSDS_LF" default="" type="String"/>
                <param name="DRAG_REDUCER_USED_LF" default="" type="String"/>
                <param name="DRAG_REDUCER_LAST_DATE" default="" type="DateTime"/>
                <param name="CORROSION_INHIBITOR_USED_LF" default="" type="String"/>
                <param name="CORROSION_INHIBITOR_TYPE_CL" default="UNKNOWN" type="String"/>
                <param name="CORROSION_INHIBITOR_LAST_DATE" default="" type="DateTime"/>
                <param name="INTERNAL_CLEANING_PROGRAM_LF" default="" type="String"/>
                <param name="CLEANING_FREQUENCY_CL" default="UNKNOWN" type="String"/>
                <param name="SUSPECTED_FES_LF" default="" type="String"/>
                <param name="VERIFIED_DATE" default="" type="DateTime"/>
                <param name="DESCRIPTION" default="" type="String"/>
                <param name="SOURCE_GCL" default="UNKNOWN" type="String"/>
                <param name="COMMENTS" default="" type="String"/>
                <param name="ID" type="Int64"/>
                <param name="USER_ID" default="-1" type="Int64"/>
                <query>
                    UPDATE PODS.PIPE_OPERATING_HISTORY
                    SET
					EVENT_GUID=case when :EVENT_GUID is null then EVENT_GUID else :EVENT_GUID end,
					MIN_OPERATING_PRESSURE=case when :MIN_OPERATING_PRESSURE is null then MIN_OPERATING_PRESSURE else :MIN_OPERATING_PRESSURE end,
					MAX_OPERATING_PRESSURE=case when :MAX_OPERATING_PRESSURE is null then MAX_OPERATING_PRESSURE else :MAX_OPERATING_PRESSURE end,
					MAX_PERCENT_PRESSURE=case when :MAX_PERCENT_PRESSURE is null then MAX_PERCENT_PRESSURE else :MAX_PERCENT_PRESSURE end,
					MIN_OPERATING_TEMP=case when :MIN_OPERATING_TEMP is null then MIN_OPERATING_TEMP else :MIN_OPERATING_TEMP end,
					MAX_OPERATING_TEMP=case when :MAX_OPERATING_TEMP is null then MAX_OPERATING_TEMP else :MAX_OPERATING_TEMP end,
					H2S_PPM=case when :H2S_PPM is null then H2S_PPM else :H2S_PPM end,
					MIN_VOL_FLOW_RATE=case when :MIN_VOL_FLOW_RATE is null then MIN_VOL_FLOW_RATE else :MIN_VOL_FLOW_RATE end,
					MAX_VOL_FLOW_RATE=case when :MAX_VOL_FLOW_RATE is null then MAX_VOL_FLOW_RATE else :MAX_VOL_FLOW_RATE end,
					CONTAMINANTS_PRESENT_LF=case when :CONTAMINANTS_PRESENT_LF is null then CONTAMINANTS_PRESENT_LF else :CONTAMINANTS_PRESENT_LF end,
					CONTAMINANT_MSDS_LF=case when :CONTAMINANT_MSDS_LF is null then CONTAMINANT_MSDS_LF else :CONTAMINANT_MSDS_LF end,
					DRAG_REDUCER_USED_LF=case when :DRAG_REDUCER_USED_LF is null then DRAG_REDUCER_USED_LF else :DRAG_REDUCER_USED_LF end,
					DRAG_REDUCER_LAST_DATE=case when :DRAG_REDUCER_LAST_DATE is null then DRAG_REDUCER_LAST_DATE else :DRAG_REDUCER_LAST_DATE end,
					CORROSION_INHIBITOR_USED_LF=case when :CORROSION_INHIBITOR_USED_LF is null then CORROSION_INHIBITOR_USED_LF else :CORROSION_INHIBITOR_USED_LF end,
					CORROSION_INHIBITOR_TYPE_CL=case when :CORROSION_INHIBITOR_TYPE_CL is null then CORROSION_INHIBITOR_TYPE_CL else :CORROSION_INHIBITOR_TYPE_CL end,
					CORROSION_INHIBITOR_LAST_DATE=case when :CORROSION_INHIBITOR_LAST_DATE is null then CORROSION_INHIBITOR_LAST_DATE else :CORROSION_INHIBITOR_LAST_DATE end,
					INTERNAL_CLEANING_PROGRAM_LF=case when :INTERNAL_CLEANING_PROGRAM_LF is null then INTERNAL_CLEANING_PROGRAM_LF else :INTERNAL_CLEANING_PROGRAM_LF end,
					CLEANING_FREQUENCY_CL=case when :CLEANING_FREQUENCY_CL is null then CLEANING_FREQUENCY_CL else :CLEANING_FREQUENCY_CL end,
					SUSPECTED_FES_LF=case when :SUSPECTED_FES_LF is null then SUSPECTED_FES_LF else :SUSPECTED_FES_LF end,
					VERIFIED_DATE=case when :VERIFIED_DATE is null then VERIFIED_DATE else :VERIFIED_DATE end,
                    DESCRIPTION=case when :DESCRIPTION is null then DESCRIPTION else :DESCRIPTION end,
                    SOURCE_GCL=case when :SOURCE_GCL is null then SOURCE_GCL else :SOURCE_GCL end,
                    COMMENTS=case when :COMMENTS is null then COMMENTS else :COMMENTS end
                    WHERE EVENT_ID = :ID;
                </query>
            </dbCommand>
        </update>
        <delete>
            <dbCommand>
				<var name="CLASS_ID" type="String" direction="Input" default="PODS_PIPE_OPERATING_HISTORY" /> 
				<var name="POLICY" default="POLICY.xml#DELETE_PODS_SEM"  />
                <var name="ID" type="Int64"/>
                <var name="USER_ID" default="-1" type="Int64"/>
                <query>
					DO $$
                    BEGIN
                    UPDATE PODS.EVENT_RANGE
                    SET CURRENT_INDICATOR_LF='N'
                    WHERE EVENT_ID = {ID};

                    DELETE FROM PODS.PIPE_OPERATING_HISTORY
                    WHERE EVENT_ID = {ID};
                    DELETE FROM WEB50.LNK_GATE WHERE LEFT_OBJ_ID = 'PODS_PIPE_OPERATING_HISTORY/'||CAST({ID} AS VARCHAR(30)) OR RIGHT_OBJ_ID = 'PODS_PIPE_OPERATING_HISTORY/'||CAST({ID} AS VARCHAR(30)); 
					END $$;
                </query>
            </dbCommand>
        </delete>
    </data>
    <data table="PIPE_SEGMENT" schema="PODS" id="PODS_PIPE_SEGMENT" comment="PODS.PIPE_SEGMENT">
        <select>
            <dbQuery idField="ID">
                <param name="USER_ID" default="-1" type="Int64"/>
                <var name="FILTER" default="1=1"/>
                <var name="LPU_ACCESS_FILTER" default="SELECT srv_district_id FROM PODS.SRV_DISTRICT_GCL"/>
                <query>
                    SELECT * FROM (SELECT EVENT_ID ID, t.* FROM PODS.PIPE_SEGMENT t) d WHERE {FILTER}
                </query>
            </dbQuery>
        </select>
        <insert>
            <dbCommand>
				<var name="CLASS_ID" type="String" direction="Input" default="PODS_PIPE_SEGMENT" /> 
				<var name="POLICY" default="POLICY.xml#INSERT_PODS_SEM"  />
                <var name="EVENT_GUID" default="" type="String"/>
                <var name="MANUFACTURER_CL" default="UNKNOWN" type="String"/>
                <var name="DATE_MANUFACTURED" default="" type="DateTime"/>
                <var name="PIPE_MILL_LOCATION_GCL" default="UNKNOWN" type="String"/>
                <var name="MILL_TEST_PRESSURE" default="NULL" type="Decimal"/>
                <var name="MATERIAL_CL" default="UNKNOWN" type="String"/>
                <var name="PIPE_SPECIFICATION_GCL" default="UNKNOWN" type="String"/>
                <var name="PIPE_GRADE_GCL" default="UNKNOWN" type="String"/>
                <var name="SMYS_GCL" default="0" type="Decimal"/>
                <var name="NOMINAL_DIAMETER_GCL" default="0" type="Decimal"/>
                <var name="NOMINAL_WALL_THICKNESS_GCL" default="0" type="Decimal"/>
                <var name="PIPE_LONG_SEAM_GCL" default="UNKNOWN" type="String"/>
                <var name="DATE_INSTALLED" default="" type="DateTime"/>
                <var name="DESCRIPTION" default="" type="String"/>
                <var name="SOURCE_GCL" default="UNKNOWN" type="String"/>
                <var name="COMMENTS" default="" type="String"/>
                <var name="ID" type="Int64" direction="Output" default="SELECT max(EVENT_ID) id FROM PODS.EVENT_RANGE"/>
                <var name="PODS_USER" type="String"/>
                <var name="USER_ID" default="-1" type="Int64"/>
                <query>
					DO $$
					DECLARE
					returnId integer;
                    BEGIN
                    INSERT INTO PODS.EVENT_RANGE (EVENT_GUID,FEATURE_ID,STATION_ID_BEGIN,STATION_ID_END,PODS_USER,CREATE_DATE,EFFECTIVE_FROM_DATE,CURRENT_INDICATOR_LF,POSITIONING_TYPE_CL)
                    VALUES('{EVENT_GUID}','PIPE_SEGMENT',0,0,NULLIF('{PODS_USER}',''),current_timestamp,current_timestamp,'Y','UNKNOWN')
                    RETURNING EVENT_ID INTO returnId;

                    INSERT INTO PODS.PIPE_SEGMENT(EVENT_ID,EVENT_GUID,MANUFACTURER_CL,DATE_MANUFACTURED,PIPE_MILL_LOCATION_GCL,MILL_TEST_PRESSURE,MATERIAL_CL,PIPE_SPECIFICATION_GCL,PIPE_GRADE_GCL,SMYS_GCL,NOMINAL_DIAMETER_GCL,NOMINAL_WALL_THICKNESS_GCL,PIPE_LONG_SEAM_GCL,DATE_INSTALLED,DESCRIPTION,SOURCE_GCL,COMMENTS)
                    VALUES(returnId,'{EVENT_GUID}',NULLIF('{MANUFACTURER_CL}',''),'{DATE_MANUFACTURED}',NULLIF('{PIPE_MILL_LOCATION_GCL}',''),{MILL_TEST_PRESSURE},NULLIF('{MATERIAL_CL}',''),NULLIF('{PIPE_SPECIFICATION_GCL}',''),NULLIF('{PIPE_GRADE_GCL}',''),{SMYS_GCL},{NOMINAL_DIAMETER_GCL},{NOMINAL_WALL_THICKNESS_GCL},NULLIF('{PIPE_LONG_SEAM_GCL}',''),'{DATE_INSTALLED}',NULLIF('{DESCRIPTION}',''),NULLIF('{SOURCE_GCL}',''),NULLIF('{COMMENTS}',''));
					END $$;
                </query>
            </dbCommand>
        </insert>
        <update>
            <dbCommand>
				<param name="CLASS_ID" type="String" direction="Input" default="PODS_PIPE_SEGMENT" /> 
				<var name="POLICY" default="POLICY.xml#UPDATE_PODS_SEM"  />
                <param name="EVENT_GUID" default="" type="String"/>
                <param name="MANUFACTURER_CL" default="UNKNOWN" type="String"/>
                <param name="DATE_MANUFACTURED" default="" type="DateTime"/>
                <param name="PIPE_MILL_LOCATION_GCL" default="UNKNOWN" type="String"/>
                <param name="MILL_TEST_PRESSURE" default="NULL" type="Decimal"/>
                <param name="MATERIAL_CL" default="UNKNOWN" type="String"/>
                <param name="PIPE_SPECIFICATION_GCL" default="UNKNOWN" type="String"/>
                <param name="PIPE_GRADE_GCL" default="UNKNOWN" type="String"/>
                <param name="SMYS_GCL" default="0" type="Decimal"/>
                <param name="NOMINAL_DIAMETER_GCL" default="0" type="Decimal"/>
                <param name="NOMINAL_WALL_THICKNESS_GCL" default="0" type="Decimal"/>
                <param name="PIPE_LONG_SEAM_GCL" default="UNKNOWN" type="String"/>
                <param name="DATE_INSTALLED" default="" type="DateTime"/>
                <param name="DESCRIPTION" default="" type="String"/>
                <param name="SOURCE_GCL" default="UNKNOWN" type="String"/>
                <param name="COMMENTS" default="" type="String"/>
                <param name="ID" type="Int64"/>
                <param name="USER_ID" default="-1" type="Int64"/>
                <query>
                    UPDATE PODS.PIPE_SEGMENT
                    SET 
					EVENT_GUID=case when :EVENT_GUID is null then EVENT_GUID else :EVENT_GUID end,
                    MANUFACTURER_CL=case when :MANUFACTURER_CL is null then MANUFACTURER_CL else :MANUFACTURER_CL end,
                    DATE_MANUFACTURED=case when :DATE_MANUFACTURED is null then DATE_MANUFACTURED else :DATE_MANUFACTURED end,
                    PIPE_MILL_LOCATION_GCL=case when :PIPE_MILL_LOCATION_GCL is null then PIPE_MILL_LOCATION_GCL else :PIPE_MILL_LOCATION_GCL end,
                    MILL_TEST_PRESSURE=case when :MILL_TEST_PRESSURE is null then MILL_TEST_PRESSURE else :MILL_TEST_PRESSURE end,
					MATERIAL_CL=case when :MATERIAL_CL is null then MATERIAL_CL else :MATERIAL_CL end,
                    PIPE_SPECIFICATION_GCL=case when :PIPE_SPECIFICATION_GCL is null then PIPE_SPECIFICATION_GCL else :PIPE_SPECIFICATION_GCL end,
                    PIPE_GRADE_GCL=case when :PIPE_GRADE_GCL is null then PIPE_GRADE_GCL else :PIPE_GRADE_GCL end,
                    SMYS_GCL=case when :SMYS_GCL is null then SMYS_GCL else :SMYS_GCL end,
                    NOMINAL_DIAMETER_GCL=case when :NOMINAL_DIAMETER_GCL is null then NOMINAL_DIAMETER_GCL else :NOMINAL_DIAMETER_GCL end,
                    NOMINAL_WALL_THICKNESS_GCL=case when :NOMINAL_WALL_THICKNESS_GCL is null then NOMINAL_WALL_THICKNESS_GCL else :NOMINAL_WALL_THICKNESS_GCL end,
                    PIPE_LONG_SEAM_GCL=case when :PIPE_LONG_SEAM_GCL is null then PIPE_LONG_SEAM_GCL else :PIPE_LONG_SEAM_GCL end,
                    DATE_INSTALLED=case when :DATE_INSTALLED is null then DATE_INSTALLED else :DATE_INSTALLED end,
                    DESCRIPTION=case when :DESCRIPTION is null then DESCRIPTION else :DESCRIPTION end,
                    SOURCE_GCL=case when :SOURCE_GCL is null then SOURCE_GCL else :SOURCE_GCL end,
                    COMMENTS=case when :COMMENTS is null then COMMENTS else :COMMENTS end
                    WHERE EVENT_ID = :ID;
                </query>
            </dbCommand>
        </update>
        <delete>
            <dbCommand>
				<var name="CLASS_ID" type="String" direction="Input" default="PODS_PIPE_SEGMENT" /> 
				<var name="POLICY" default="POLICY.xml#DELETE_PODS_SEM"  />
                <var name="ID" type="Int64"/>
                <var name="USER_ID" default="-1" type="Int64"/>
                <query>
					DO $$
                    BEGIN
                    UPDATE PODS.EVENT_RANGE
                    SET CURRENT_INDICATOR_LF='N'
                    WHERE EVENT_ID = {ID};

                    DELETE FROM PODS.PIPE_SEGMENT
                    WHERE EVENT_ID = {ID};
                    DELETE FROM WEB50.LNK_GATE WHERE LEFT_OBJ_ID = 'PODS_PIPE_SEGMENT/'||CAST({ID} AS VARCHAR(30)) OR RIGHT_OBJ_ID = 'PODS_PIPE_SEGMENT/'||CAST({ID} AS VARCHAR(30)); 
					END $$;
                </query>
            </dbCommand>
        </delete>
    </data>
    <data table="PI_PIPE_CONDITION" schema="PODS" id="PODS_PI_PIPE_CONDITION" comment="PODS.PI_PIPE_CONDITION">
        <select>
            <dbQuery idField="ID">
                <param name="USER_ID" default="-1" type="Int64"/>
                <var name="FILTER" default="1=1"/>
                <var name="LPU_ACCESS_FILTER" default="SELECT srv_district_id FROM PODS.SRV_DISTRICT_GCL"/>
                <query>
                    SELECT * FROM (SELECT EVENT_ID ID, t.* FROM PODS.PI_PIPE_CONDITION t) d WHERE {FILTER}
                </query>
            </dbQuery>
        </select>
        <insert>
            <dbCommand>
				<var name="CLASS_ID" type="String" direction="Input" default="PODS_PI_PIPE_CONDITION" /> 
				<var name="POLICY" default="POLICY.xml#INSERT_PODS_SEM"  />
                <var name="EVENT_GUID" default="" type="String"/>
                <var name="SITE_ID" default="0" type="Decimal"/>
                <var name="INSPECTION_DATE" default="" type="DateTime"/>
                <var name="ACTUAL_DIAMETER" default="0" type="Decimal"/>
                <var name="ACTUAL_WALL_THICKNESS" default="0" type="Decimal"/>
                <var name="EXTERNAL_PIPE_CONDITION_CL" default="UNKNOWN" type="String"/>
                <var name="INTERNAL_PIPE_CONDITION_CL" default="UNKNOWN" type="String"/>
                <var name="PI_EVENT_ID" default="NULL" type="Decimal"/>
                <var name="PI_EVENT_GUID" default="" type="String"/>
                <var name="DESCRIPTION" default="" type="String"/>
                <var name="SOURCE_GCL" default="UNKNOWN" type="String"/>
                <var name="COMMENTS" default="" type="String"/>
                <var name="ID" type="Int64" direction="Output" default="SELECT max(EVENT_ID) id FROM PODS.EVENT_RANGE"/>
                <var name="PODS_USER" type="String"/>
                <var name="USER_ID" default="-1" type="Int64"/>
                <query>
					DO $$
					DECLARE
					returnId integer;
                    BEGIN
                    INSERT INTO PODS.EVENT_RANGE (EVENT_GUID,FEATURE_ID,STATION_ID_BEGIN,STATION_ID_END,PODS_USER,CREATE_DATE,EFFECTIVE_FROM_DATE,CURRENT_INDICATOR_LF,POSITIONING_TYPE_CL)
                    VALUES('{EVENT_GUID}','PI_PIPE_COND',0,0,NULLIF('{PODS_USER}',''),current_timestamp,current_timestamp,'Y','UNKNOWN')
                    RETURNING EVENT_ID INTO returnId;

                    INSERT INTO PODS.PI_PIPE_CONDITION(EVENT_ID,EVENT_GUID,SITE_ID,INSPECTION_DATE,ACTUAL_DIAMETER,ACTUAL_WALL_THICKNESS,EXTERNAL_PIPE_CONDITION_CL,INTERNAL_PIPE_CONDITION_CL,PI_EVENT_ID,PI_EVENT_GUID,DESCRIPTION,SOURCE_GCL,COMMENTS)
                    VALUES(returnId,'{EVENT_GUID}',{SITE_ID},'{INSPECTION_DATE}',{ACTUAL_DIAMETER},{ACTUAL_WALL_THICKNESS},NULLIF('{EXTERNAL_PIPE_CONDITION_CL}',''),NULLIF('{INTERNAL_PIPE_CONDITION_CL}',''),{PI_EVENT_ID},'{PI_EVENT_GUID}',NULLIF('{DESCRIPTION}',''),NULLIF('{SOURCE_GCL}',''),NULLIF('{COMMENTS}',''));
					END $$;
                </query>
            </dbCommand>
        </insert>
        <update>
            <dbCommand>
				<param name="CLASS_ID" type="String" direction="Input" default="PODS_PI_PIPE_CONDITION" /> 
				<var name="POLICY" default="POLICY.xml#UPDATE_PODS_SEM"  />
                <param name="EVENT_GUID" default="" type="String"/>
                <param name="SITE_ID" default="0" type="Decimal"/>
                <param name="INSPECTION_DATE" default="" type="DateTime"/>
                <param name="ACTUAL_DIAMETER" default="0" type="Decimal"/>
                <param name="ACTUAL_WALL_THICKNESS" default="0" type="Decimal"/>
                <param name="EXTERNAL_PIPE_CONDITION_CL" default="UNKNOWN" type="String"/>
                <param name="INTERNAL_PIPE_CONDITION_CL" default="UNKNOWN" type="String"/>
                <param name="PI_EVENT_ID" default="NULL" type="Decimal"/>
                <param name="PI_EVENT_GUID" default="" type="String"/>
                <param name="DESCRIPTION" default="" type="String"/>
                <param name="SOURCE_GCL" default="UNKNOWN" type="String"/>
                <param name="COMMENTS" default="" type="String"/>
                <param name="ID" type="Int64"/>
                <param name="USER_ID" default="-1" type="Int64"/>
                <query>
                    UPDATE PODS.PI_PIPE_CONDITION
                    SET
					EVENT_GUID=case when :EVENT_GUID is null then EVENT_GUID else :EVENT_GUID end,
					SITE_ID=case when :SITE_ID is null then SITE_ID else :SITE_ID end,
                    INSPECTION_DATE=case when :INSPECTION_DATE is null then INSPECTION_DATE else :INSPECTION_DATE end,
					ACTUAL_DIAMETER=case when :ACTUAL_DIAMETER is null then ACTUAL_DIAMETER else :ACTUAL_DIAMETER end,
					ACTUAL_WALL_THICKNESS=case when :ACTUAL_WALL_THICKNESS is null then ACTUAL_WALL_THICKNESS else :ACTUAL_WALL_THICKNESS end,
					EXTERNAL_PIPE_CONDITION_CL=case when :EXTERNAL_PIPE_CONDITION_CL is null then EXTERNAL_PIPE_CONDITION_CL else :EXTERNAL_PIPE_CONDITION_CL end,
					INTERNAL_PIPE_CONDITION_CL=case when :INTERNAL_PIPE_CONDITION_CL is null then INTERNAL_PIPE_CONDITION_CL else :INTERNAL_PIPE_CONDITION_CL end,
                    PI_EVENT_ID=case when :PI_EVENT_ID is null then PI_EVENT_ID else :PI_EVENT_ID end,
                    PI_EVENT_GUID=case when :PI_EVENT_GUID is null then PI_EVENT_GUID else :PI_EVENT_GUID end,
                    DESCRIPTION=case when :DESCRIPTION is null then DESCRIPTION else :DESCRIPTION end,
                    SOURCE_GCL=case when :SOURCE_GCL is null then SOURCE_GCL else :SOURCE_GCL end,
                    COMMENTS=case when :COMMENTS is null then COMMENTS else :COMMENTS end
                    WHERE EVENT_ID = :ID;
                </query>
            </dbCommand>
        </update>
        <delete>
            <dbCommand>
				<var name="CLASS_ID" type="String" direction="Input" default="PODS_PI_PIPE_CONDITION" /> 
				<var name="POLICY" default="POLICY.xml#DELETE_PODS_SEM"  />
                <var name="ID" type="Int64"/>
                <var name="USER_ID" default="-1" type="Int64"/>
                <query>
					DO $$
                    BEGIN
                    UPDATE PODS.EVENT_RANGE
                    SET CURRENT_INDICATOR_LF='N'
                    WHERE EVENT_ID = {ID};

                    DELETE FROM PODS.PI_PIPE_CONDITION
                    WHERE EVENT_ID = {ID};
                    DELETE FROM WEB50.LNK_GATE WHERE LEFT_OBJ_ID = 'PODS_PI_PIPE_CONDITION/'||CAST({ID} AS VARCHAR(30)) OR RIGHT_OBJ_ID = 'PODS_PI_PIPE_CONDITION/'||CAST({ID} AS VARCHAR(30)); 
					END $$;
                </query>
            </dbCommand>
        </delete>
    </data>
    <data table="PI_PIPELINE_MOVEMENT" schema="PODS" id="PODS_PI_PIPELINE_MOVEMENT" comment="PODS.PI_PIPELINE_MOVEMENT">
        <select>
            <dbQuery idField="ID">
                <param name="USER_ID" default="-1" type="Int64"/>
                <var name="FILTER" default="1=1"/>
                <var name="LPU_ACCESS_FILTER" default="SELECT srv_district_id FROM PODS.SRV_DISTRICT_GCL"/>
                <query>
                    SELECT * FROM (SELECT EVENT_ID ID, t.* FROM PODS.PI_PIPELINE_MOVEMENT t) d WHERE {FILTER}
                </query>
            </dbQuery>
        </select>
        <insert>
            <dbCommand>
				<var name="CLASS_ID" type="String" direction="Input" default="PODS_PI_PIPELINE_MOVEMENT" /> 
				<var name="POLICY" default="POLICY.xml#INSERT_PODS_SEM"  />
                <var name="EVENT_GUID" default="" type="String"/>
                <var name="DISPLACEMENT_TYPE_CL" default="UNKNOWN" type="String"/>
                <var name="DIRECTION_GCL" default="UNKNOWN" type="String"/>
                <var name="MAXIMUM_DISPLACEMENT" default="NULL" type="Decimal"/>
                <var name="PI_EVENT_ID" default="NULL" type="Decimal"/>
                <var name="PI_EVENT_GUID" default="" type="String"/>
                <var name="DESCRIPTION" default="" type="String"/>
                <var name="SOURCE_GCL" default="UNKNOWN" type="String"/>
                <var name="COMMENTS" default="" type="String"/>
                <var name="ID" type="Int64" direction="Output" default="SELECT max(EVENT_ID) id FROM PODS.EVENT_RANGE"/>
                <var name="PODS_USER" type="String"/>
                <var name="USER_ID" default="-1" type="Int64"/>
                <query>
					DO $$
					DECLARE
					returnId integer;
                    BEGIN
                    INSERT INTO PODS.EVENT_RANGE (EVENT_GUID,FEATURE_ID,STATION_ID_BEGIN,STATION_ID_END,PODS_USER,CREATE_DATE,EFFECTIVE_FROM_DATE,CURRENT_INDICATOR_LF,POSITIONING_TYPE_CL)
                    VALUES('{EVENT_GUID}','PI_PLINE_MOV',0,0,NULLIF('{PODS_USER}',''),current_timestamp,current_timestamp,'Y','UNKNOWN')
                    RETURNING EVENT_ID INTO returnId;

                    INSERT INTO PODS.PI_PIPELINE_MOVEMENT(EVENT_ID,EVENT_GUID,DISPLACEMENT_TYPE_CL,DIRECTION_GCL,MAXIMUM_DISPLACEMENT,PI_EVENT_ID,PI_EVENT_GUID,DESCRIPTION,SOURCE_GCL,COMMENTS)
                    VALUES(returnId,'{EVENT_GUID}',NULLIF('{DISPLACEMENT_TYPE_CL}',''),NULLIF('{DIRECTION_GCL}',''),{MAXIMUM_DISPLACEMENT},{PI_EVENT_ID},'{PI_EVENT_GUID}',NULLIF('{DESCRIPTION}',''),NULLIF('{SOURCE_GCL}',''),NULLIF('{COMMENTS}',''));
					END $$;
                </query>
            </dbCommand>
        </insert>
        <update>
            <dbCommand>
				<param name="CLASS_ID" type="String" direction="Input" default="PODS_PI_PIPELINE_MOVEMENT" /> 
				<var name="POLICY" default="POLICY.xml#UPDATE_PODS_SEM"  />
                <param name="EVENT_GUID" default="" type="String"/>
                <param name="DISPLACEMENT_TYPE_CL" default="UNKNOWN" type="String"/>
                <param name="DIRECTION_GCL" default="UNKNOWN" type="String"/>
                <param name="MAXIMUM_DISPLACEMENT" default="NULL" type="Decimal"/>
                <param name="PI_EVENT_ID" default="NULL" type="Decimal"/>
                <param name="PI_EVENT_GUID" default="" type="String"/>
                <param name="DESCRIPTION" default="" type="String"/>
                <param name="SOURCE_GCL" default="UNKNOWN" type="String"/>
                <param name="COMMENTS" default="" type="String"/>
                <param name="ID" type="Int64"/>
                <param name="USER_ID" default="-1" type="Int64"/>
                <query>
                    UPDATE PODS.PI_PIPELINE_MOVEMENT
                    SET
					EVENT_GUID=case when :EVENT_GUID is null then EVENT_GUID else :EVENT_GUID end,
					DISPLACEMENT_TYPE_CL=case when :DISPLACEMENT_TYPE_CL is null then DISPLACEMENT_TYPE_CL else :DISPLACEMENT_TYPE_CL end,
                    DIRECTION_GCL=case when :DIRECTION_GCL is null then DIRECTION_GCL else :DIRECTION_GCL end,
					MAXIMUM_DISPLACEMENT=case when :MAXIMUM_DISPLACEMENT is null then MAXIMUM_DISPLACEMENT else :MAXIMUM_DISPLACEMENT end,
                    PI_EVENT_ID=case when :PI_EVENT_ID is null then PI_EVENT_ID else :PI_EVENT_ID end,
                    PI_EVENT_GUID=case when :PI_EVENT_GUID is null then PI_EVENT_GUID else :PI_EVENT_GUID end,
                    DESCRIPTION=case when :DESCRIPTION is null then DESCRIPTION else :DESCRIPTION end,
                    SOURCE_GCL=case when :SOURCE_GCL is null then SOURCE_GCL else :SOURCE_GCL end,
                    COMMENTS=case when :COMMENTS is null then COMMENTS else :COMMENTS end
                    WHERE EVENT_ID = :ID;
                </query>
            </dbCommand>
        </update>
        <delete>
            <dbCommand>
				<var name="CLASS_ID" type="String" direction="Input" default="PODS_PI_PIPELINE_MOVEMENT" /> 
				<var name="POLICY" default="POLICY.xml#DELETE_PODS_SEM"  />
                <var name="ID" type="Int64"/>
                <var name="USER_ID" default="-1" type="Int64"/>
                <query>
					DO $$
                    BEGIN
                    UPDATE PODS.EVENT_RANGE
                    SET CURRENT_INDICATOR_LF='N'
                    WHERE EVENT_ID = {ID};

                    DELETE FROM PODS.PI_PIPELINE_MOVEMENT
                    WHERE EVENT_ID = {ID};
                    DELETE FROM WEB50.LNK_GATE WHERE LEFT_OBJ_ID = 'PODS_PI_PIPELINE_MOVEMENT/'||CAST({ID} AS VARCHAR(30)) OR RIGHT_OBJ_ID = 'PODS_PI_PIPELINE_MOVEMENT/'||CAST({ID} AS VARCHAR(30)); 
					END $$;
                </query>
            </dbCommand>
        </delete>
    </data>
    <data table="PI_RECTIFIER_READING" schema="PODS" id="PODS_PI_RECTIFIER_READING" comment="PODS.PI_RECTIFIER_READING">
        <select>
            <dbQuery idField="ID">
                <param name="USER_ID" default="-1" type="Int64"/>
                <var name="FILTER" default="1=1"/>
                <var name="LPU_ACCESS_FILTER" default="SELECT srv_district_id FROM PODS.SRV_DISTRICT_GCL"/>
                <query>
                    SELECT * FROM (SELECT EVENT_ID ID, t.* FROM PODS.PI_RECTIFIER_READING t) d WHERE {FILTER}
                </query>
            </dbQuery>
        </select>
        <insert>
            <dbCommand>
				<var name="CLASS_ID" type="String" direction="Input" default="PODS_PI_RECTIFIER_READING" /> 
				<var name="POLICY" default="POLICY.xml#INSERT_PODS_SEM"  />
                <var name="EVENT_GUID" default="" type="String"/>
                <var name="INSPECTION_DATE" default="" type="DateTime"/>
                <var name="DESCRIPTION" default="" type="String"/>
                <var name="POTENTIAL_READING" default="NULL" type="Decimal"/>
                <var name="CURRENT_READING" default="NULL" type="Decimal"/>
                <var name="RESISTANCE_READING" default="NULL" type="Decimal"/>
                <var name="PI_CP_EVENT_ID" default="NULL" type="Decimal"/>
                <var name="PI_CP_EVENT_GUID" default="" type="String"/>
                <var name="REF_RECTIFIER_EVENT_ID" default="NULL" type="Decimal"/>
                <var name="REF_RECTIFIER_EVENT_GUID" default="" type="String"/>
                <var name="AC_VOLTAGE_CL" default="UNKNOWN" type="Decimal"/>
                <var name="SOURCE_GCL" default="UNKNOWN" type="String"/>
                <var name="COMMENTS" default="" type="String"/>
                <var name="ID" type="Int64" direction="Output" default="SELECT max(EVENT_ID) id FROM PODS.EVENT_RANGE"/>
                <var name="PODS_USER" type="String"/>
                <var name="USER_ID" default="-1" type="Int64"/>
                <query>
					DO $$
					DECLARE
					returnId integer;
                    BEGIN
                    INSERT INTO PODS.EVENT_RANGE (EVENT_GUID,FEATURE_ID,STATION_ID_BEGIN,STATION_ID_END,PODS_USER,CREATE_DATE,EFFECTIVE_FROM_DATE,CURRENT_INDICATOR_LF,POSITIONING_TYPE_CL)
                    VALUES('{EVENT_GUID}','PI_RCTF_READ',0,0,NULLIF('{PODS_USER}',''),current_timestamp,current_timestamp,'Y','UNKNOWN')
                    RETURNING EVENT_ID INTO returnId;

                    INSERT INTO PODS.PI_RECTIFIER_READING(EVENT_ID,EVENT_GUID,INSPECTION_DATE,DESCRIPTION,POTENTIAL_READING,CURRENT_READING,RESISTANCE_READING,PI_CP_EVENT_ID,PI_CP_EVENT_GUID,REF_RECTIFIER_EVENT_ID,REF_RECTIFIER_EVENT_GUID,AC_VOLTAGE_CL,SOURCE_GCL,COMMENTS)
                    VALUES(returnId,'{EVENT_GUID}','{INSPECTION_DATE}',NULLIF('{DESCRIPTION}',''),{POTENTIAL_READING},{CURRENT_READING},{RESISTANCE_READING},{PI_CP_EVENT_ID},'{PI_CP_EVENT_GUID}',{REF_RECTIFIER_EVENT_ID},'{REF_RECTIFIER_EVENT_GUID}',{AC_VOLTAGE_CL},NULLIF('{SOURCE_GCL}',''),NULLIF('{COMMENTS}',''));
					END $$;
                </query>
            </dbCommand>
        </insert>
        <update>
            <dbCommand>
				<param name="CLASS_ID" type="String" direction="Input" default="PODS_PI_RECTIFIER_READING" /> 
				<var name="POLICY" default="POLICY.xml#UPDATE_PODS_SEM"  />
                <param name="EVENT_GUID" default="" type="String"/>
                <param name="INSPECTION_DATE" default="" type="DateTime"/>
                <param name="DESCRIPTION" default="" type="String"/>
                <param name="POTENTIAL_READING" default="NULL" type="Decimal"/>
                <param name="CURRENT_READING" default="NULL" type="Decimal"/>
                <param name="RESISTANCE_READING" default="NULL" type="Decimal"/>
                <param name="PI_CP_EVENT_ID" default="NULL" type="Decimal"/>
                <param name="PI_CP_EVENT_GUID" default="" type="String"/>
                <param name="REF_RECTIFIER_EVENT_ID" default="NULL" type="Decimal"/>
                <param name="REF_RECTIFIER_EVENT_GUID" default="" type="String"/>
                <param name="AC_VOLTAGE_CL" default="UNKNOWN" type="Decimal"/>
                <param name="SOURCE_GCL" default="UNKNOWN" type="String"/>
                <param name="COMMENTS" default="" type="String"/>
                <param name="ID" type="Int64"/>
                <param name="USER_ID" default="-1" type="Int64"/>
                <query>
                    UPDATE PODS.PI_RECTIFIER_READING
                    SET 
					EVENT_GUID=case when :EVENT_GUID is null then EVENT_GUID else :EVENT_GUID end,
                    INSPECTION_DATE=case when :INSPECTION_DATE is null then INSPECTION_DATE else :INSPECTION_DATE end,
                    DESCRIPTION=case when :DESCRIPTION is null then DESCRIPTION else :DESCRIPTION end,
                    POTENTIAL_READING=case when :POTENTIAL_READING is null then POTENTIAL_READING else :POTENTIAL_READING end,
                    CURRENT_READING=case when :CURRENT_READING is null then CURRENT_READING else :CURRENT_READING end,
                    RESISTANCE_READING=case when :RESISTANCE_READING is null then RESISTANCE_READING else :RESISTANCE_READING end,
                    PI_CP_EVENT_ID=case when :PI_CP_EVENT_ID is null then PI_CP_EVENT_ID else :PI_CP_EVENT_ID end,
                    PI_CP_EVENT_GUID=case when :PI_CP_EVENT_GUID is null then PI_CP_EVENT_GUID else :PI_CP_EVENT_GUID end,
					REF_RECTIFIER_EVENT_ID=case when :REF_RECTIFIER_EVENT_ID is null then REF_RECTIFIER_EVENT_ID else :REF_RECTIFIER_EVENT_ID end,
					REF_RECTIFIER_EVENT_GUID=case when :REF_RECTIFIER_EVENT_GUID is null then REF_RECTIFIER_EVENT_GUID else :REF_RECTIFIER_EVENT_GUID end,
					AC_VOLTAGE_CL=case when :AC_VOLTAGE_CL is null then AC_VOLTAGE_CL else :AC_VOLTAGE_CL end,
                    SOURCE_GCL=case when :SOURCE_GCL is null then SOURCE_GCL else :SOURCE_GCL end,
                    COMMENTS=case when :COMMENTS is null then COMMENTS else :COMMENTS end
                    WHERE EVENT_ID = :ID;
                </query>
            </dbCommand>
        </update>
        <delete>
            <dbCommand>
				<var name="CLASS_ID" type="String" direction="Input" default="PODS_PI_RECTIFIER_READING" /> 
				<var name="POLICY" default="POLICY.xml#DELETE_PODS_SEM"  />
                <var name="ID" type="Int64"/>
                <var name="USER_ID" default="-1" type="Int64"/>
                <query>
					DO $$
                    BEGIN
                    UPDATE PODS.EVENT_RANGE
                    SET CURRENT_INDICATOR_LF='N'
                    WHERE EVENT_ID = {ID};

                    DELETE FROM PODS.PI_RECTIFIER_READING
                    WHERE EVENT_ID = {ID};
                    DELETE FROM WEB50.LNK_GATE WHERE LEFT_OBJ_ID = 'PODS_PI_RECTIFIER_READING/'||CAST({ID} AS VARCHAR(30)) OR RIGHT_OBJ_ID = 'PODS_PI_RECTIFIER_READING/'||CAST({ID} AS VARCHAR(30)); 
					END $$;
                </query>
            </dbCommand>
        </delete>
    </data>
    <data table="PI_RELIEF_VALVE" schema="PODS" id="PODS_PI_RELIEF_VALVE" comment="PODS.PI_RELIEF_VALVE">
        <select>
            <dbQuery idField="ID">
                <param name="USER_ID" default="-1" type="Int64"/>
                <var name="FILTER" default="1=1"/>
                <var name="LPU_ACCESS_FILTER" default="SELECT srv_district_id FROM PODS.SRV_DISTRICT_GCL"/>
                <query>
                    SELECT * FROM (SELECT EVENT_ID ID, t.* FROM PODS.PI_RELIEF_VALVE t) d WHERE {FILTER}
                </query>
            </dbQuery>
        </select>
        <insert>
            <dbCommand>
				<var name="CLASS_ID" type="String" direction="Input" default="PODS_PI_RELIEF_VALVE" /> 
				<var name="POLICY" default="POLICY.xml#INSERT_PODS_SEM"  />
                <var name="EVENT_GUID" default="" type="String"/>
                <var name="INSPECTION_DATE" default="" type="DateTime"/>
                <var name="RELIEF_VALVE_ID" default="" type="String"/>
                <var name="PERFORMED_BY" default="" type="String"/>
                <var name="SERVICE_TYPE_CL" default="UNKNOWN" type="String"/>
                <var name="CONTROLS_TESTED_LF" default="" type="String"/>
                <var name="VALVES_CLEANED_LF" default="" type="String"/>
                <var name="VALVE_REPAIRED_LF" default="" type="String"/>
                <var name="CONTROLS_CLEANED_LF" default="" type="String"/>
                <var name="CONTROLS_REPAIRED_LF" default="" type="String"/>
                <var name="INITIAL_PRESSURE_SETTING" default="NULL" type="Decimal"/>
                <var name="FINAL_PRESSURE_SETTING" default="NULL" type="Decimal"/>
                <var name="PI_EVENT_ID" default="NULL" type="Decimal"/>
                <var name="PI_EVENT_GUID" default="" type="String"/>
                <var name="DESCRIPTION" default="" type="String"/>
                <var name="SOURCE_GCL" default="UNKNOWN" type="String"/>
                <var name="COMMENTS" default="" type="String"/>
                <var name="ID" type="Int64" direction="Output" default="SELECT max(EVENT_ID) id FROM PODS.EVENT_RANGE"/>
                <var name="PODS_USER" type="String"/>
                <var name="USER_ID" default="-1" type="Int64"/>
                <query>
					DO $$
					DECLARE
					returnId integer;
                    BEGIN
                    INSERT INTO PODS.EVENT_RANGE (EVENT_GUID,FEATURE_ID,STATION_ID_BEGIN,STATION_ID_END,PODS_USER,CREATE_DATE,EFFECTIVE_FROM_DATE,CURRENT_INDICATOR_LF,POSITIONING_TYPE_CL)
                    VALUES('{EVENT_GUID}','PI_RELIEF_VALVE',0,0,NULLIF('{PODS_USER}',''),current_timestamp,current_timestamp,'Y','UNKNOWN')
                    RETURNING EVENT_ID INTO returnId;

                    INSERT INTO PODS.PI_RELIEF_VALVE(EVENT_ID,EVENT_GUID,INSPECTION_DATE,RELIEF_VALVE_ID,PERFORMED_BY,SERVICE_TYPE_CL,CONTROLS_TESTED_LF,VALVES_CLEANED_LF,VALVE_REPAIRED_LF,CONTROLS_CLEANED_LF,CONTROLS_REPAIRED_LF,INITIAL_PRESSURE_SETTING,FINAL_PRESSURE_SETTING,PI_EVENT_ID,PI_EVENT_GUID,DESCRIPTION,SOURCE_GCL,COMMENTS)
                    VALUES(returnId,'{EVENT_GUID}','{INSPECTION_DATE}',NULLIF('{RELIEF_VALVE_ID}',''),NULLIF('{PERFORMED_BY}',''),NULLIF('{SERVICE_TYPE_CL}',''),'{CONTROLS_TESTED_LF}','{VALVES_CLEANED_LF}','{VALVE_REPAIRED_LF}','{CONTROLS_CLEANED_LF}','{CONTROLS_REPAIRED_LF}',{INITIAL_PRESSURE_SETTING},{FINAL_PRESSURE_SETTING},{PI_EVENT_ID},'{PI_EVENT_GUID}',NULLIF('{DESCRIPTION}',''),NULLIF('{SOURCE_GCL}',''),NULLIF('{COMMENTS}',''));
					END $$;
                </query>
            </dbCommand>
        </insert>
        <update>
            <dbCommand>
				<param name="CLASS_ID" type="String" direction="Input" default="PODS_PI_RELIEF_VALVE" /> 
				<var name="POLICY" default="POLICY.xml#UPDATE_PODS_SEM"  />
                <param name="EVENT_GUID" default="" type="String"/>
                <param name="INSPECTION_DATE" default="" type="DateTime"/>
                <param name="RELIEF_VALVE_ID" default="" type="String"/>
                <param name="PERFORMED_BY" default="" type="String"/>
                <param name="SERVICE_TYPE_CL" default="UNKNOWN" type="String"/>
                <param name="CONTROLS_TESTED_LF" default="" type="String"/>
                <param name="VALVES_CLEANED_LF" default="" type="String"/>
                <param name="VALVE_REPAIRED_LF" default="" type="String"/>
                <param name="CONTROLS_CLEANED_LF" default="" type="String"/>
                <param name="CONTROLS_REPAIRED_LF" default="" type="String"/>
                <param name="INITIAL_PRESSURE_SETTING" default="NULL" type="Decimal"/>
                <param name="FINAL_PRESSURE_SETTING" default="NULL" type="Decimal"/>
                <param name="PI_EVENT_ID" default="NULL" type="Decimal"/>
                <param name="PI_EVENT_GUID" default="" type="String"/>
                <param name="DESCRIPTION" default="" type="String"/>
                <param name="SOURCE_GCL" default="UNKNOWN" type="String"/>
                <param name="COMMENTS" default="" type="String"/>
                <param name="ID" type="Int64"/>
                <param name="USER_ID" default="-1" type="Int64"/>
                <query>
                    UPDATE PODS.PI_RELIEF_VALVE
                    SET 
					EVENT_GUID=case when :EVENT_GUID is null then EVENT_GUID else :EVENT_GUID end,
                    INSPECTION_DATE=case when :INSPECTION_DATE is null then INSPECTION_DATE else :INSPECTION_DATE end,
					RELIEF_VALVE_ID=case when :RELIEF_VALVE_ID is null then RELIEF_VALVE_ID else :RELIEF_VALVE_ID end,
                    PERFORMED_BY=case when :PERFORMED_BY is null then PERFORMED_BY else :PERFORMED_BY end,
					SERVICE_TYPE_CL=case when :SERVICE_TYPE_CL is null then SERVICE_TYPE_CL else :SERVICE_TYPE_CL end,
					CONTROLS_TESTED_LF=case when :CONTROLS_TESTED_LF is null then CONTROLS_TESTED_LF else :CONTROLS_TESTED_LF end,
					VALVES_CLEANED_LF=case when :VALVES_CLEANED_LF is null then VALVES_CLEANED_LF else :VALVES_CLEANED_LF end,
					VALVE_REPAIRED_LF=case when :VALVE_REPAIRED_LF is null then VALVE_REPAIRED_LF else :VALVE_REPAIRED_LF end,
					CONTROLS_CLEANED_LF=case when :CONTROLS_CLEANED_LF is null then CONTROLS_CLEANED_LF else :CONTROLS_CLEANED_LF end,
					CONTROLS_REPAIRED_LF=case when :CONTROLS_REPAIRED_LF is null then CONTROLS_REPAIRED_LF else :CONTROLS_REPAIRED_LF end,
					INITIAL_PRESSURE_SETTING=case when :INITIAL_PRESSURE_SETTING is null then INITIAL_PRESSURE_SETTING else :INITIAL_PRESSURE_SETTING end,
					FINAL_PRESSURE_SETTING=case when :FINAL_PRESSURE_SETTING is null then FINAL_PRESSURE_SETTING else :FINAL_PRESSURE_SETTING end,
                    PI_EVENT_ID=case when :PI_EVENT_ID is null then PI_EVENT_ID else :PI_EVENT_ID end,
                    PI_EVENT_GUID=case when :PI_EVENT_GUID is null then PI_EVENT_GUID else :PI_EVENT_GUID end,
                    DESCRIPTION=case when :DESCRIPTION is null then DESCRIPTION else :DESCRIPTION end,
                    SOURCE_GCL=case when :SOURCE_GCL is null then SOURCE_GCL else :SOURCE_GCL end,
                    COMMENTS=case when :COMMENTS is null then COMMENTS else :COMMENTS end
                    WHERE EVENT_ID = :ID;
                </query>
            </dbCommand>
        </update>
        <delete>
            <dbCommand>
				<var name="CLASS_ID" type="String" direction="Input" default="PODS_PI_RELIEF_VALVE" /> 
				<var name="POLICY" default="POLICY.xml#DELETE_PODS_SEM"  />
                <var name="ID" type="Int64"/>
                <var name="USER_ID" default="-1" type="Int64"/>
                <query>
					DO $$
                    BEGIN
                    UPDATE PODS.EVENT_RANGE
                    SET CURRENT_INDICATOR_LF='N'
                    WHERE EVENT_ID = {ID};

                    DELETE FROM PODS.PI_RELIEF_VALVE
                    WHERE EVENT_ID = {ID};
                    DELETE FROM WEB50.LNK_GATE WHERE LEFT_OBJ_ID = 'PODS_PI_RELIEF_VALVE/'||CAST({ID} AS VARCHAR(30)) OR RIGHT_OBJ_ID = 'PODS_PI_RELIEF_VALVE/'||CAST({ID} AS VARCHAR(30)); 
					END $$;
                </query>
            </dbCommand>
        </delete>
    </data>
    <data table="PI_RIGHT_OF_WAY" schema="PODS" id="PODS_PI_RIGHT_OF_WAY" comment="PODS.PI_RIGHT_OF_WAY">
        <select>
            <dbQuery idField="ID">
                <param name="USER_ID" default="-1" type="Int64"/>
                <var name="FILTER" default="1=1"/>
                <var name="LPU_ACCESS_FILTER" default="SELECT srv_district_id FROM PODS.SRV_DISTRICT_GCL"/>
                <query>
                    SELECT * FROM (SELECT EVENT_ID ID, t.* FROM PODS.PI_RIGHT_OF_WAY t) d WHERE {FILTER}
                </query>
            </dbQuery>
        </select>
        <insert>
            <dbCommand>
				<var name="CLASS_ID" type="String" direction="Input" default="PODS_PI_RIGHT_OF_WAY" /> 
				<var name="POLICY" default="POLICY.xml#INSERT_PODS_SEM"  />
                <var name="EVENT_GUID" default="" type="String"/>
                <var name="INSPECTION_DATE" default="" type="DateTime"/>
                <var name="ACTION_REQUIRED_LF" default="" type="String"/>
                <var name="PI_EVENT_ID" default="NULL" type="Decimal"/>
                <var name="PI_EVENT_GUID" default="" type="String"/>
                <var name="DESCRIPTION" default="" type="String"/>
                <var name="SOURCE_GCL" default="UNKNOWN" type="String"/>
                <var name="COMMENTS" default="" type="String"/>
                <var name="ID" type="Int64" direction="Output" default="SELECT max(EVENT_ID) id FROM PODS.EVENT_RANGE"/>
                <var name="PODS_USER" type="String"/>
                <var name="USER_ID" default="-1" type="Int64"/>
                <query>
					DO $$
					DECLARE
					returnId integer;
                    BEGIN
                    INSERT INTO PODS.EVENT_RANGE (EVENT_GUID,FEATURE_ID,STATION_ID_BEGIN,STATION_ID_END,PODS_USER,CREATE_DATE,EFFECTIVE_FROM_DATE,CURRENT_INDICATOR_LF,POSITIONING_TYPE_CL)
                    VALUES('{EVENT_GUID}','PI_RIGHT_OF_WAY',0,0,NULLIF('{PODS_USER}',''),current_timestamp,current_timestamp,'Y','UNKNOWN')
                    RETURNING EVENT_ID INTO returnId;

                    INSERT INTO PODS.PI_RIGHT_OF_WAY(EVENT_ID,EVENT_GUID,INSPECTION_DATE,ACTION_REQUIRED_LF,PI_EVENT_ID,PI_EVENT_GUID,DESCRIPTION,SOURCE_GCL,COMMENTS)
                    VALUES(returnId,'{EVENT_GUID}','{INSPECTION_DATE}','{ACTION_REQUIRED_LF}',{PI_EVENT_ID},'{PI_EVENT_GUID}',NULLIF('{DESCRIPTION}',''),NULLIF('{SOURCE_GCL}',''),NULLIF('{COMMENTS}',''));
					END $$;
                </query>
            </dbCommand>
        </insert>
        <update>
            <dbCommand>
				<param name="CLASS_ID" type="String" direction="Input" default="PODS_PI_RIGHT_OF_WAY" /> 
				<var name="POLICY" default="POLICY.xml#UPDATE_PODS_SEM"  />
                <param name="EVENT_GUID" default="" type="String"/>
                <param name="INSPECTION_DATE" default="" type="DateTime"/>
                <param name="ACTION_REQUIRED_LF" default="" type="String"/>
                <param name="PI_EVENT_ID" default="NULL" type="Decimal"/>
                <param name="PI_EVENT_GUID" default="" type="String"/>
                <param name="DESCRIPTION" default="" type="String"/>
                <param name="SOURCE_GCL" default="UNKNOWN" type="String"/>
                <param name="COMMENTS" default="" type="String"/>
                <param name="ID" type="Int64"/>
                <param name="USER_ID" default="-1" type="Int64"/>
                <query>
                    UPDATE PODS.PI_RIGHT_OF_WAY
                    SET EVENT_GUID=case when :EVENT_GUID is null then EVENT_GUID else :EVENT_GUID end,
                    INSPECTION_DATE=case when :INSPECTION_DATE is null then INSPECTION_DATE else :INSPECTION_DATE end,
					ACTION_REQUIRED_LF=case when :ACTION_REQUIRED_LF is null then ACTION_REQUIRED_LF else :ACTION_REQUIRED_LF end,
                    PI_EVENT_ID=case when :PI_EVENT_ID is null then PI_EVENT_ID else :PI_EVENT_ID end,
                    PI_EVENT_GUID=case when :PI_EVENT_GUID is null then PI_EVENT_GUID else :PI_EVENT_GUID end,
                    DESCRIPTION=case when :DESCRIPTION is null then DESCRIPTION else :DESCRIPTION end,
                    SOURCE_GCL=case when :SOURCE_GCL is null then SOURCE_GCL else :SOURCE_GCL end,
                    COMMENTS=case when :COMMENTS is null then COMMENTS else :COMMENTS end
                    WHERE EVENT_ID = :ID;
                </query>
            </dbCommand>
        </update>
        <delete>
            <dbCommand>
				<var name="CLASS_ID" type="String" direction="Input" default="PODS_PI_RIGHT_OF_WAY" /> 
				<var name="POLICY" default="POLICY.xml#DELETE_PODS_SEM"  />
                <var name="ID" type="Int64"/>
                <var name="USER_ID" default="-1" type="Int64"/>
                <query>
					DO $$
                    BEGIN
                    UPDATE PODS.EVENT_RANGE
                    SET CURRENT_INDICATOR_LF='N'
                    WHERE EVENT_ID = {ID};

                    DELETE FROM PODS.PI_RIGHT_OF_WAY
                    WHERE EVENT_ID = {ID};
                    DELETE FROM WEB50.LNK_GATE WHERE LEFT_OBJ_ID = 'PODS_PI_RIGHT_OF_WAY/'||CAST({ID} AS VARCHAR(30)) OR RIGHT_OBJ_ID = 'PODS_PI_RIGHT_OF_WAY/'||CAST({ID} AS VARCHAR(30)); 
					END $$;
                </query>
            </dbCommand>
        </delete>
    </data>
    <data table="PI_SOIL" schema="PODS" id="PODS_PI_SOIL" comment="PODS.PI_SOIL">
        <select>
            <dbQuery idField="ID">
                <param name="USER_ID" default="-1" type="Int64"/>
                <var name="FILTER" default="1=1"/>
                <var name="LPU_ACCESS_FILTER" default="SELECT srv_district_id FROM PODS.SRV_DISTRICT_GCL"/>
                <query>
                    SELECT * FROM (SELECT EVENT_ID ID, t.* FROM PODS.PI_SOIL t) d WHERE {FILTER}
                </query>
            </dbQuery>
        </select>
        <insert>
            <dbCommand>
				<var name="CLASS_ID" type="String" direction="Input" default="PODS_PI_SOIL" /> 
				<var name="POLICY" default="POLICY.xml#INSERT_PODS_SEM"  />
                <var name="EVENT_GUID" default="" type="String"/>
                <var name="INSPECTION_DATE" default="" type="DateTime"/>
                <var name="SOIL_PH" default="NULL" type="Decimal"/>
                <var name="SOIL_TEMPERATURE" default="NULL" type="Decimal"/>
                <var name="DEPOSITION_CL" default="UNKNOWN" type="String"/>
                <var name="TEXTURE_CL" default="UNKNOWN" type="String"/>
                <var name="COVER_THICKNESS" default="NULL" type="Decimal"/>
                <var name="ORGANIC_DEPTH" default="NULL" type="Decimal"/>
                <var name="GLEYING_DEPTH" default="NULL" type="Decimal"/>
                <var name="MOTTLING_DEPTH" default="NULL" type="Decimal"/>
                <var name="BEDROCK_DEPTH" default="NULL" type="Decimal"/>
                <var name="CARBONATE_DEPTH" default="NULL" type="Decimal"/>
                <var name="WATER_TABLE_DEPTH" default="NULL" type="Decimal"/>
                <var name="PI_EVENT_ID" default="NULL" type="Decimal"/>
                <var name="PI_EVENT_GUID" default="" type="String"/>
                <var name="TYPE_CL" default="UNKNOWN" type="String"/>
                <var name="DESCRIPTION" default="" type="String"/>
                <var name="SOURCE_GCL" default="UNKNOWN" type="String"/>
                <var name="COMMENTS" default="" type="String"/>
                <var name="ID" type="Int64" direction="Output" default="SELECT max(EVENT_ID) id FROM PODS.EVENT_RANGE"/>
                <var name="PODS_USER" type="String"/>
                <var name="USER_ID" default="-1" type="Int64"/>
                <query>
					DO $$
					DECLARE
					returnId integer;
                    BEGIN
                    INSERT INTO PODS.EVENT_RANGE (EVENT_GUID,FEATURE_ID,STATION_ID_BEGIN,STATION_ID_END,PODS_USER,CREATE_DATE,EFFECTIVE_FROM_DATE,CURRENT_INDICATOR_LF,POSITIONING_TYPE_CL)
                    VALUES('{EVENT_GUID}','PI_SOIL',0,0,NULLIF('{PODS_USER}',''),current_timestamp,current_timestamp,'Y','UNKNOWN')
                    RETURNING EVENT_ID INTO returnId;

                    INSERT INTO PODS.PI_SOIL(EVENT_ID,EVENT_GUID,INSPECTION_DATE,SOIL_PH,SOIL_TEMPERATURE,DEPOSITION_CL,TEXTURE_CL,COVER_THICKNESS,ORGANIC_DEPTH,GLEYING_DEPTH,MOTTLING_DEPTH,BEDROCK_DEPTH,CARBONATE_DEPTH,WATER_TABLE_DEPTH,PI_EVENT_ID,PI_EVENT_GUID,TYPE_CL,DESCRIPTION,SOURCE_GCL,COMMENTS)
                    VALUES(returnId,'{EVENT_GUID}','{INSPECTION_DATE}',{SOIL_PH},{SOIL_TEMPERATURE},NULLIF('{DEPOSITION_CL}',''),NULLIF('{TEXTURE_CL}',''),{COVER_THICKNESS},{ORGANIC_DEPTH},{GLEYING_DEPTH},{MOTTLING_DEPTH},{BEDROCK_DEPTH},{CARBONATE_DEPTH},{WATER_TABLE_DEPTH},{PI_EVENT_ID},'{PI_EVENT_GUID}',NULLIF('{TYPE_CL}',''),NULLIF('{DESCRIPTION}',''),NULLIF('{SOURCE_GCL}',''),NULLIF('{COMMENTS}',''));
					END $$;
                </query>
            </dbCommand>
        </insert>
        <update>
            <dbCommand>
				<param name="CLASS_ID" type="String" direction="Input" default="PODS_PI_SOIL" /> 
				<var name="POLICY" default="POLICY.xml#UPDATE_PODS_SEM"  />
                <param name="EVENT_GUID" default="" type="String"/>
                <param name="INSPECTION_DATE" default="" type="DateTime"/>
                <param name="SOIL_PH" default="NULL" type="Decimal"/>
                <param name="SOIL_TEMPERATURE" default="NULL" type="Decimal"/>
                <param name="DEPOSITION_CL" default="UNKNOWN" type="String"/>
                <param name="TEXTURE_CL" default="UNKNOWN" type="String"/>
                <param name="COVER_THICKNESS" default="NULL" type="Decimal"/>
                <param name="ORGANIC_DEPTH" default="NULL" type="Decimal"/>
                <param name="GLEYING_DEPTH" default="NULL" type="Decimal"/>
                <param name="MOTTLING_DEPTH" default="NULL" type="Decimal"/>
                <param name="BEDROCK_DEPTH" default="NULL" type="Decimal"/>
                <param name="CARBONATE_DEPTH" default="NULL" type="Decimal"/>
                <param name="WATER_TABLE_DEPTH" default="NULL" type="Decimal"/>
                <param name="PI_EVENT_ID" default="NULL" type="Decimal"/>
                <param name="PI_EVENT_GUID" default="" type="String"/>
                <param name="TYPE_CL" default="UNKNOWN" type="String"/>
                <param name="DESCRIPTION" default="" type="String"/>
                <param name="SOURCE_GCL" default="UNKNOWN" type="String"/>
                <param name="COMMENTS" default="" type="String"/>
                <param name="ID" type="Int64"/>
                <param name="USER_ID" default="-1" type="Int64"/>
                <query>
                    UPDATE PODS.PI_SOIL
                    SET 
					EVENT_GUID=case when :EVENT_GUID is null then EVENT_GUID else :EVENT_GUID end,
                    INSPECTION_DATE=case when :INSPECTION_DATE is null then INSPECTION_DATE else :INSPECTION_DATE end,
                    SOIL_PH=case when :SOIL_PH is null then SOIL_PH else :SOIL_PH end,
                    SOIL_TEMPERATURE=case when :SOIL_TEMPERATURE is null then SOIL_TEMPERATURE else :SOIL_TEMPERATURE end,
                    DEPOSITION_CL=case when :DEPOSITION_CL is null then DEPOSITION_CL else :DEPOSITION_CL end,
                    TEXTURE_CL=case when :TEXTURE_CL is null then TEXTURE_CL else :TEXTURE_CL end,
                    COVER_THICKNESS=case when :COVER_THICKNESS is null then COVER_THICKNESS else :COVER_THICKNESS end,
                    ORGANIC_DEPTH=case when :ORGANIC_DEPTH is null then ORGANIC_DEPTH else :ORGANIC_DEPTH end,
                    GLEYING_DEPTH=case when :GLEYING_DEPTH is null then GLEYING_DEPTH else :GLEYING_DEPTH end,
                    MOTTLING_DEPTH=case when :MOTTLING_DEPTH is null then MOTTLING_DEPTH else :MOTTLING_DEPTH end,
                    BEDROCK_DEPTH=case when :BEDROCK_DEPTH is null then BEDROCK_DEPTH else :BEDROCK_DEPTH end,
                    CARBONATE_DEPTH=case when :CARBONATE_DEPTH is null then CARBONATE_DEPTH else :CARBONATE_DEPTH end,
                    WATER_TABLE_DEPTH=case when :WATER_TABLE_DEPTH is null then WATER_TABLE_DEPTH else :WATER_TABLE_DEPTH end,
                    PI_EVENT_ID=case when :PI_EVENT_ID is null then PI_EVENT_ID else :PI_EVENT_ID end,
                    PI_EVENT_GUID=case when :PI_EVENT_GUID is null then PI_EVENT_GUID else :PI_EVENT_GUID end,
                    TYPE_CL=case when :TYPE_CL is null then TYPE_CL else :TYPE_CL end,
                    DESCRIPTION=case when :DESCRIPTION is null then DESCRIPTION else :DESCRIPTION end,
                    SOURCE_GCL=case when :SOURCE_GCL is null then SOURCE_GCL else :SOURCE_GCL end,
                    COMMENTS=case when :COMMENTS is null then COMMENTS else :COMMENTS end
                    WHERE EVENT_ID = :ID;
                </query>
            </dbCommand>
        </update>
        <delete>
            <dbCommand>
				<var name="CLASS_ID" type="String" direction="Input" default="PODS_PI_SOIL" /> 
				<var name="POLICY" default="POLICY.xml#DELETE_PODS_SEM"  />
                <var name="ID" type="Int64"/>
                <var name="USER_ID" default="-1" type="Int64"/>
                <query>
					DO $$
                    BEGIN
                    UPDATE PODS.EVENT_RANGE
                    SET CURRENT_INDICATOR_LF='N'
                    WHERE EVENT_ID = {ID};

                    DELETE FROM PODS.PI_SOIL
                    WHERE EVENT_ID = {ID};
                    DELETE FROM WEB50.LNK_GATE WHERE LEFT_OBJ_ID = 'PODS_PI_SOIL/'||CAST({ID} AS VARCHAR(30)) OR RIGHT_OBJ_ID = 'PODS_PI_SOIL/'||CAST({ID} AS VARCHAR(30)); 
					END $$;
                </query>
            </dbCommand>
        </delete>
    </data>
    <data table="PI_SUBSEA_INSPECTION" schema="PODS" id="PODS_PI_SUBSEA_INSPECTION" comment="PODS.PI_SUBSEA_INSPECTION">
        <select>
            <dbQuery idField="ID">
                <param name="USER_ID" default="-1" type="Int64"/>
                <var name="FILTER" default="1=1"/>
                <var name="LPU_ACCESS_FILTER" default="SELECT srv_district_id FROM PODS.SRV_DISTRICT_GCL"/>
                <query>
                    SELECT * FROM (SELECT EVENT_ID ID, t.* FROM PODS.PI_SUBSEA_INSPECTION t) d WHERE {FILTER}
                </query>
            </dbQuery>
        </select>
        <insert>
            <dbCommand>
				<var name="CLASS_ID" type="String" direction="Input" default="PODS_PI_SUBSEA_INSPECTION" /> 
				<var name="POLICY" default="POLICY.xml#INSERT_PODS_SEM"  />
                <var name="EVENT_GUID" default="" type="String"/>
                <var name="INSPECTION_DATE" default="" type="DateTime"/>
                <var name="UNIT_NUMBER" default="" type="String"/>
                <var name="MODEL" default="" type="String"/>
                <var name="CONTRACTOR_NAME" default="" type="String"/>
                <var name="INSPECTION_TYPE_GCL" default="UNKNOWN" type="String"/>
                <var name="PI_EVENT_ID" default="NULL" type="Decimal"/>
                <var name="PI_EVENT_GUID" default="" type="String"/>
                <var name="SENSOR_USED_CL" default="UNKNOWN" type="String"/>
                <var name="DESCRIPTION" default="" type="String"/>
                <var name="SOURCE_GCL" default="UNKNOWN" type="String"/>
                <var name="COMMENTS" default="" type="String"/>
                <var name="ID" type="Int64" direction="Output" default="SELECT max(EVENT_ID) id FROM PODS.EVENT_RANGE"/>
                <var name="PODS_USER" type="String"/>
                <var name="USER_ID" default="-1" type="Int64"/>
                <query>
					DO $$
					DECLARE
					returnId integer;
                    BEGIN
                    INSERT INTO PODS.EVENT_RANGE (EVENT_GUID,FEATURE_ID,STATION_ID_BEGIN,STATION_ID_END,PODS_USER,CREATE_DATE,EFFECTIVE_FROM_DATE,CURRENT_INDICATOR_LF,POSITIONING_TYPE_CL)
                    VALUES('{EVENT_GUID}','PI_SUBS_INSP',0,0,NULLIF('{PODS_USER}',''),current_timestamp,current_timestamp,'Y','UNKNOWN')
                    RETURNING EVENT_ID INTO returnId;

                    INSERT INTO PODS.PI_SUBSEA_INSPECTION(EVENT_ID,EVENT_GUID,INSPECTION_DATE,UNIT_NUMBER,MODEL,CONTRACTOR_NAME,INSPECTION_TYPE_GCL,PI_EVENT_ID,PI_EVENT_GUID,SENSOR_USED_CL,DESCRIPTION,SOURCE_GCL,COMMENTS)
                    VALUES(returnId,'{EVENT_GUID}','{INSPECTION_DATE}',NULLIF('{UNIT_NUMBER}',''),NULLIF('{MODEL}',''),NULLIF('{CONTRACTOR_NAME}',''),NULLIF('{INSPECTION_TYPE_GCL}',''),{PI_EVENT_ID},'{PI_EVENT_GUID}',NULLIF('{SENSOR_USED_CL}',''),NULLIF('{DESCRIPTION}',''),NULLIF('{SOURCE_GCL}',''),NULLIF('{COMMENTS}',''));
					END $$;
                </query>
            </dbCommand>
        </insert>
        <update>
            <dbCommand>
				<param name="CLASS_ID" type="String" direction="Input" default="PODS_PI_SUBSEA_INSPECTION" /> 
				<var name="POLICY" default="POLICY.xml#UPDATE_PODS_SEM"  />
                <param name="EVENT_GUID" default="" type="String"/>
                <param name="INSPECTION_DATE" default="" type="DateTime"/>
                <param name="UNIT_NUMBER" default="" type="String"/>
                <param name="MODEL" default="" type="String"/>
                <param name="CONTRACTOR_NAME" default="" type="String"/>
                <param name="INSPECTION_TYPE_GCL" default="UNKNOWN" type="String"/>
                <param name="PI_EVENT_ID" default="NULL" type="Decimal"/>
                <param name="PI_EVENT_GUID" default="" type="String"/>
                <param name="SENSOR_USED_CL" default="UNKNOWN" type="String"/>
                <param name="DESCRIPTION" default="" type="String"/>
                <param name="SOURCE_GCL" default="UNKNOWN" type="String"/>
                <param name="COMMENTS" default="" type="String"/>
                <param name="ID" type="Int64"/>
                <param name="USER_ID" default="-1" type="Int64"/>
                <query>
                    UPDATE PODS.PI_SUBSEA_INSPECTION
                    SET 
					EVENT_GUID=case when :EVENT_GUID is null then EVENT_GUID else :EVENT_GUID end,
                    INSPECTION_DATE=case when :INSPECTION_DATE is null then INSPECTION_DATE else :INSPECTION_DATE end,
					UNIT_NUMBER=case when :UNIT_NUMBER is null then UNIT_NUMBER else :UNIT_NUMBER end,
                    MODEL=case when :MODEL is null then MODEL else :MODEL end,
					CONTRACTOR_NAME=case when :CONTRACTOR_NAME is null then CONTRACTOR_NAME else :CONTRACTOR_NAME end,
                    INSPECTION_TYPE_GCL=case when :INSPECTION_TYPE_GCL is null then INSPECTION_TYPE_GCL else :INSPECTION_TYPE_GCL end,
                    PI_EVENT_ID=case when :PI_EVENT_ID is null then PI_EVENT_ID else :PI_EVENT_ID end,
                    PI_EVENT_GUID=case when :PI_EVENT_GUID is null then PI_EVENT_GUID else :PI_EVENT_GUID end,
					SENSOR_USED_CL=case when :SENSOR_USED_CL is null then SENSOR_USED_CL else :SENSOR_USED_CL end,
                    DESCRIPTION=case when :DESCRIPTION is null then DESCRIPTION else :DESCRIPTION end,
                    SOURCE_GCL=case when :SOURCE_GCL is null then SOURCE_GCL else :SOURCE_GCL end,
                    COMMENTS=case when :COMMENTS is null then COMMENTS else :COMMENTS end
                    WHERE EVENT_ID = :ID;
                </query>
            </dbCommand>
        </update>
        <delete>
            <dbCommand>
				<var name="CLASS_ID" type="String" direction="Input" default="PODS_PI_SUBSEA_INSPECTION" /> 
				<var name="POLICY" default="POLICY.xml#DELETE_PODS_SEM"  />
                <var name="ID" type="Int64"/>
                <var name="USER_ID" default="-1" type="Int64"/>
                <query>
					DO $$
                    BEGIN
                    UPDATE PODS.EVENT_RANGE
                    SET CURRENT_INDICATOR_LF='N'
                    WHERE EVENT_ID = {ID};

                    DELETE FROM PODS.PI_SUBSEA_INSPECTION
                    WHERE EVENT_ID = {ID};
                    DELETE FROM WEB50.LNK_GATE WHERE LEFT_OBJ_ID = 'PODS_PI_SUBSEA_INSPECTION/'||CAST({ID} AS VARCHAR(30)) OR RIGHT_OBJ_ID = 'PODS_PI_SUBSEA_INSPECTION/'||CAST({ID} AS VARCHAR(30)); 
					END $$;
                </query>
            </dbCommand>
        </delete>
    </data>
    <data table="PI_TANK" schema="PODS" id="PODS_PI_TANK" comment="PODS.PI_TANK">
        <select>
            <dbQuery idField="ID">
                <param name="USER_ID" default="-1" type="Int64"/>
                <var name="FILTER" default="1=1"/>
                <var name="LPU_ACCESS_FILTER" default="SELECT srv_district_id FROM PODS.SRV_DISTRICT_GCL"/>
                <query>
                    SELECT * FROM (SELECT EVENT_ID ID, t.* FROM PODS.PI_TANK t) d WHERE {FILTER}
                </query>
            </dbQuery>
        </select>
        <insert>
            <dbCommand>
				<var name="CLASS_ID" type="String" direction="Input" default="PODS_PI_TANK" /> 
				<var name="POLICY" default="POLICY.xml#INSERT_PODS_SEM"  />
                <var name="EVENT_GUID" default="" type="String"/>
                <var name="OFFLINE_ID" default="NULL" type="Decimal"/>
                <var name="OFFLINE_GUID" default="" type="String"/>
                <var name="INSPECTION_TYPE_GCL" default="UNKNOWN" type="String"/>
                <var name="NEXT_SCHEDULED_DATE" default="" type="DateTime"/>
                <var name="DESCRIPTION" default="" type="String"/>
                <var name="PI_EVENT_ID" default="NULL" type="Decimal"/>
                <var name="PI_EVENT_GUID" default="" type="String"/>
                <var name="SOURCE_GCL" default="UNKNOWN" type="String"/>
                <var name="COMMENTS" default="" type="String"/>
                <var name="ID" type="Int64" direction="Output" default="SELECT max(EVENT_ID) id FROM PODS.EVENT_RANGE"/>
                <var name="PODS_USER" type="String"/>
                <var name="USER_ID" default="-1" type="Int64"/>
                <query>
					DO $$
					DECLARE
					returnId integer;
                    BEGIN
                    INSERT INTO PODS.EVENT_RANGE (EVENT_GUID,FEATURE_ID,STATION_ID_BEGIN,STATION_ID_END,PODS_USER,CREATE_DATE,EFFECTIVE_FROM_DATE,CURRENT_INDICATOR_LF,POSITIONING_TYPE_CL)
                    VALUES('{EVENT_GUID}','PI_TANK',0,0,NULLIF('{PODS_USER}',''),current_timestamp,current_timestamp,'Y','UNKNOWN')
                    RETURNING EVENT_ID INTO returnId;

                    INSERT INTO PODS.PI_TANK(EVENT_ID,EVENT_GUID,OFFLINE_ID,OFFLINE_GUID,INSPECTION_TYPE_GCL,NEXT_SCHEDULED_DATE,DESCRIPTION,PI_EVENT_ID,PI_EVENT_GUID,SOURCE_GCL,COMMENTS)
                    VALUES(returnId,'{EVENT_GUID}',{OFFLINE_ID},'{OFFLINE_GUID}',NULLIF('{INSPECTION_TYPE_GCL}',''),'{NEXT_SCHEDULED_DATE}',NULLIF('{DESCRIPTION}',''),{PI_EVENT_ID},'{PI_EVENT_GUID}',NULLIF('{SOURCE_GCL}',''),NULLIF('{COMMENTS}',''));
					END $$;
                </query>
            </dbCommand>
        </insert>
        <update>
            <dbCommand>
				<param name="CLASS_ID" type="String" direction="Input" default="PODS_PI_TANK" /> 
				<var name="POLICY" default="POLICY.xml#UPDATE_PODS_SEM"  />
                <param name="EVENT_GUID" default="" type="String"/>
                <param name="OFFLINE_ID" default="NULL" type="Decimal"/>
                <param name="OFFLINE_GUID" default="" type="String"/>
                <param name="INSPECTION_TYPE_GCL" default="UNKNOWN" type="String"/>
                <param name="NEXT_SCHEDULED_DATE" default="" type="DateTime"/>
                <param name="DESCRIPTION" default="" type="String"/>
                <param name="PI_EVENT_ID" default="NULL" type="Decimal"/>
                <param name="PI_EVENT_GUID" default="" type="String"/>
                <param name="SOURCE_GCL" default="UNKNOWN" type="String"/>
                <param name="COMMENTS" default="" type="String"/>
                <param name="ID" type="Int64"/>
                <param name="USER_ID" default="-1" type="Int64"/>
                <query>
                    UPDATE PODS.PI_TANK
                    SET 
					EVENT_GUID=case when :EVENT_GUID is null then EVENT_GUID else :EVENT_GUID end,
					OFFLINE_ID=case when :OFFLINE_ID is null then OFFLINE_ID else :OFFLINE_ID end,
                    OFFLINE_GUID=case when :OFFLINE_GUID is null then OFFLINE_GUID else :OFFLINE_GUID end,
                    INSPECTION_TYPE_GCL=case when :INSPECTION_TYPE_GCL is null then INSPECTION_TYPE_GCL else :INSPECTION_TYPE_GCL end,
					NEXT_SCHEDULED_DATE=case when :NEXT_SCHEDULED_DATE is null then NEXT_SCHEDULED_DATE else :NEXT_SCHEDULED_DATE end,
                    DESCRIPTION=case when :DESCRIPTION is null then DESCRIPTION else :DESCRIPTION end,
                    PI_EVENT_ID=case when :PI_EVENT_ID is null then PI_EVENT_ID else :PI_EVENT_ID end,
                    PI_EVENT_GUID=case when :PI_EVENT_GUID is null then PI_EVENT_GUID else :PI_EVENT_GUID end,
                    SOURCE_GCL=case when :SOURCE_GCL is null then SOURCE_GCL else :SOURCE_GCL end,
                    COMMENTS=case when :COMMENTS is null then COMMENTS else :COMMENTS end
                    WHERE EVENT_ID = :ID;
                </query>
            </dbCommand>
        </update>
        <delete>
            <dbCommand>
				<var name="CLASS_ID" type="String" direction="Input" default="PODS_PI_TANK" /> 
				<var name="POLICY" default="POLICY.xml#DELETE_PODS_SEM"  />
                <var name="ID" type="Int64"/>
                <var name="USER_ID" default="-1" type="Int64"/>
                <query>
					DO $$
                    BEGIN
                    UPDATE PODS.EVENT_RANGE
                    SET CURRENT_INDICATOR_LF='N'
                    WHERE EVENT_ID = {ID};

                    DELETE FROM PODS.PI_TANK
                    WHERE EVENT_ID = {ID};
                    DELETE FROM WEB50.LNK_GATE WHERE LEFT_OBJ_ID = 'PODS_PI_TANK/'||CAST({ID} AS VARCHAR(30)) OR RIGHT_OBJ_ID = 'PODS_PI_TANK/'||CAST({ID} AS VARCHAR(30)); 
					END $$;
                </query>
            </dbCommand>
        </delete>
    </data>
    <data table="PI_WATER" schema="PODS" id="PODS_PI_WATER" comment="PODS.PI_WATER">
        <select>
            <dbQuery idField="ID">
                <param name="USER_ID" default="-1" type="Int64"/>
                <var name="FILTER" default="1=1"/>
                <var name="LPU_ACCESS_FILTER" default="SELECT srv_district_id FROM PODS.SRV_DISTRICT_GCL"/>
                <query>
                    SELECT * FROM (SELECT EVENT_ID ID, t.* FROM PODS.PI_WATER t) d WHERE {FILTER}
                </query>
            </dbQuery>
        </select>
        <insert>
            <dbCommand>
				<var name="CLASS_ID" type="String" direction="Input" default="PODS_PI_WATER" /> 
				<var name="POLICY" default="POLICY.xml#INSERT_PODS_SEM"  />
                <var name="EVENT_GUID" default="" type="String"/>
                <var name="INSPECTION_DATE" default="" type="DateTime"/>
                <var name="SAMPLE_NUMBER" default="" type="String"/>
                <var name="SAMPLE_LOCATION_CL" default="UNKNOWN" type="String"/>
                <var name="PH" default="NULL" type="Decimal"/>
                <var name="SO2" default="NULL" type="Decimal"/>
                <var name="H2S" default="NULL" type="Decimal"/>
                <var name="CO2" default="NULL" type="Decimal"/>
                <var name="CARBONATE" default="NULL" type="Decimal"/>
                <var name="BICARBONATE" default="NULL" type="Decimal"/>
                <var name="NA" default="NULL" type="Decimal"/>
                <var name="K" default="NULL" type="Decimal"/>
                <var name="CA" default="NULL" type="Decimal"/>
                <var name="MG" default="NULL" type="Decimal"/>
                <var name="BACTERIA_LF" default="" type="String"/>
                <var name="PI_EVENT_ID" default="NULL" type="Decimal"/>
                <var name="PI_EVENT_GUID" default="" type="String"/>
                <var name="DESCRIPTION" default="" type="String"/>
                <var name="SOURCE_GCL" default="UNKNOWN" type="String"/>
                <var name="COMMENTS" default="" type="String"/>
                <var name="ID" type="Int64" direction="Output" default="SELECT max(EVENT_ID) id FROM PODS.EVENT_RANGE"/>
                <var name="PODS_USER" type="String"/>
                <var name="USER_ID" default="-1" type="Int64"/>
                <query>
					DO $$
					DECLARE
					returnId integer;
                    BEGIN
                    INSERT INTO PODS.EVENT_RANGE (EVENT_GUID,FEATURE_ID,STATION_ID_BEGIN,STATION_ID_END,PODS_USER,CREATE_DATE,EFFECTIVE_FROM_DATE,CURRENT_INDICATOR_LF,POSITIONING_TYPE_CL)
                    VALUES('{EVENT_GUID}','PI_WATER',0,0,NULLIF('{PODS_USER}',''),current_timestamp,current_timestamp,'Y','UNKNOWN')
                    RETURNING EVENT_ID INTO returnId;

                    INSERT INTO PODS.PI_WATER(EVENT_ID,EVENT_GUID,INSPECTION_DATE,SAMPLE_NUMBER,SAMPLE_LOCATION_CL,PH,SO2,H2S,CO2,CARBONATE,BICARBONATE,NA,K,CA,MG,BACTERIA_LF,PI_EVENT_ID,PI_EVENT_GUID,DESCRIPTION,SOURCE_GCL,COMMENTS)
                    VALUES(returnId,'{EVENT_GUID}','{INSPECTION_DATE}',NULLIF('{SAMPLE_NUMBER}',''),NULLIF('{SAMPLE_LOCATION_CL}',''),{PH},{SO2},{H2S},{CO2},{CARBONATE},{BICARBONATE},{NA},{K},{CA},{MG},'{BACTERIA_LF}',{PI_EVENT_ID},'{PI_EVENT_GUID}',NULLIF('{DESCRIPTION}',''),NULLIF('{SOURCE_GCL}',''),NULLIF('{COMMENTS}',''));
					END $$;
                </query>
            </dbCommand>
        </insert>
        <update>
            <dbCommand>
				<param name="CLASS_ID" type="String" direction="Input" default="PODS_PI_WATER" /> 
				<var name="POLICY" default="POLICY.xml#UPDATE_PODS_SEM"  />
                <param name="EVENT_GUID" default="" type="String"/>
                <param name="INSPECTION_DATE" default="" type="DateTime"/>
                <param name="SAMPLE_NUMBER" default="" type="String"/>
                <param name="SAMPLE_LOCATION_CL" default="UNKNOWN" type="String"/>
                <param name="PH" default="NULL" type="Decimal"/>
                <param name="SO2" default="NULL" type="Decimal"/>
                <param name="H2S" default="NULL" type="Decimal"/>
                <param name="CO2" default="NULL" type="Decimal"/>
                <param name="CARBONATE" default="NULL" type="Decimal"/>
                <param name="BICARBONATE" default="NULL" type="Decimal"/>
                <param name="NA" default="NULL" type="Decimal"/>
                <param name="K" default="NULL" type="Decimal"/>
                <param name="CA" default="NULL" type="Decimal"/>
                <param name="MG" default="NULL" type="Decimal"/>
                <param name="BACTERIA_LF" default="" type="String"/>
                <param name="PI_EVENT_ID" default="NULL" type="Decimal"/>
                <param name="PI_EVENT_GUID" default="" type="String"/>
                <param name="DESCRIPTION" default="" type="String"/>
                <param name="SOURCE_GCL" default="UNKNOWN" type="String"/>
                <param name="COMMENTS" default="" type="String"/>
                <param name="ID" type="Int64"/>
                <param name="USER_ID" default="-1" type="Int64"/>
                <query>
                    UPDATE PODS.PI_WATER
                    SET 
					EVENT_GUID=case when :EVENT_GUID is null then EVENT_GUID else :EVENT_GUID end,
                    INSPECTION_DATE=case when :INSPECTION_DATE is null then INSPECTION_DATE else :INSPECTION_DATE end,
                    SAMPLE_NUMBER=case when :SAMPLE_NUMBER is null then SAMPLE_NUMBER else :SAMPLE_NUMBER end,
                    SAMPLE_LOCATION_CL=case when :SAMPLE_LOCATION_CL is null then SAMPLE_LOCATION_CL else :SAMPLE_LOCATION_CL end,
                    PH=case when :PH is null then PH else :PH end,
                    SO2=case when :SO2 is null then SO2 else :SO2 end,
                    H2S=case when :H2S is null then H2S else :H2S end,
                    CO2=case when :CO2 is null then CO2 else :CO2 end,
                    CARBONATE=case when :CARBONATE is null then CARBONATE else :CARBONATE end,
                    BICARBONATE=case when :BICARBONATE is null then BICARBONATE else :BICARBONATE end,
                    NA=case when :NA is null then NA else :NA end,
                    K=case when :K is null then K else :K end,
                    CA=case when :CA is null then CA else :CA end,
                    MG=case when :MG is null then MG else :MG end,
                    BACTERIA_LF=case when :BACTERIA_LF is null then BACTERIA_LF else :BACTERIA_LF end,
                    PI_EVENT_ID=case when :PI_EVENT_ID is null then PI_EVENT_ID else :PI_EVENT_ID end,
                    PI_EVENT_GUID=case when :PI_EVENT_GUID is null then PI_EVENT_GUID else :PI_EVENT_GUID end,
                    DESCRIPTION=case when :DESCRIPTION is null then DESCRIPTION else :DESCRIPTION end,
                    SOURCE_GCL=case when :SOURCE_GCL is null then SOURCE_GCL else :SOURCE_GCL end,
                    COMMENTS=case when :COMMENTS is null then COMMENTS else :COMMENTS end
                    WHERE EVENT_ID = :ID;
                </query>
            </dbCommand>
        </update>
        <delete>
            <dbCommand>
				<var name="CLASS_ID" type="String" direction="Input" default="PODS_PI_WATER" /> 
				<var name="POLICY" default="POLICY.xml#DELETE_PODS_SEM"  />
                <var name="ID" type="Int64"/>
                <var name="USER_ID" default="-1" type="Int64"/>
                <query>
					DO $$
                    BEGIN
                    UPDATE PODS.EVENT_RANGE
                    SET CURRENT_INDICATOR_LF='N'
                    WHERE EVENT_ID = {ID};

                    DELETE FROM PODS.PI_WATER
                    WHERE EVENT_ID = {ID};
                    DELETE FROM WEB50.LNK_GATE WHERE LEFT_OBJ_ID = 'PODS_PI_WATER/'||CAST({ID} AS VARCHAR(30)) OR RIGHT_OBJ_ID = 'PODS_PI_WATER/'||CAST({ID} AS VARCHAR(30)); 
					END $$;
                </query>
            </dbCommand>
        </delete>
    </data>
    <data table="PRESSURE_CAP" schema="PODS" id="PODS_PRESSURE_CAP" comment="PODS.PRESSURE_CAP">
        <select>
            <dbQuery idField="ID">
                <param name="USER_ID" default="-1" type="Int64"/>
                <var name="FILTER" default="1=1"/>
                <var name="LPU_ACCESS_FILTER" default="SELECT srv_district_id FROM PODS.SRV_DISTRICT_GCL"/>
                <query>
                    SELECT * FROM (SELECT EVENT_ID ID, t.* FROM PODS.PRESSURE_CAP t) d WHERE {FILTER}
                </query>
            </dbQuery>
        </select>
        <insert>
            <dbCommand>
				<var name="CLASS_ID" type="String" direction="Input" default="PODS_PRESSURE_CAP" /> 
				<var name="POLICY" default="POLICY.xml#INSERT_PODS_SEM"  />
                <var name="EVENT_GUID" default="" type="String"/>
                <var name="PRESSURE_CAP_ID" default="" type="String"/>
                <var name="TYPE_CL" default="UNKNOWN" type="String"/>
                <var name="NOMINAL_DIAMETER_GCL" default="0" type="Decimal"/>
                <var name="SPECIFICATION_CL" default="UNKNOWN" type="String"/>
                <var name="MATERIAL_CL" default="UNKNOWN" type="String"/>
                <var name="MANUFACTURER_CL" default="UNKNOWN" type="String"/>
                <var name="DATE_MANUFACTURED" default="" type="DateTime"/>
                <var name="SERIAL_NUMBER" default="" type="String"/>
                <var name="PART_NUMBER" default="" type="String"/>
                <var name="DESIGN_MIN_TEMPERATURE" default="NULL" type="Decimal"/>
                <var name="DESIGN_MAX_TEMPERATURE" default="NULL" type="Decimal"/>
                <var name="NOMINAL_PRESSURE_RATING" default="NULL" type="Decimal"/>
                <var name="MILL_TEST_PRESSURE" default="NULL" type="Decimal"/>
                <var name="DATE_INSTALLED" default="" type="DateTime"/>
                <var name="DESCRIPTION" default="" type="String"/>
                <var name="SOURCE_GCL" default="UNKNOWN" type="String"/>
                <var name="COMMENTS" default="" type="String"/>
                <var name="ID" type="Int64" direction="Output" default="SELECT max(EVENT_ID) id FROM PODS.EVENT_RANGE"/>
                <var name="PODS_USER" type="String"/>
                <var name="USER_ID" default="-1" type="Int64"/>
                <query>
					DO $$
					DECLARE
					returnId integer;
                    BEGIN
                    INSERT INTO PODS.EVENT_RANGE (EVENT_GUID,FEATURE_ID,STATION_ID_BEGIN,STATION_ID_END,PODS_USER,CREATE_DATE,EFFECTIVE_FROM_DATE,CURRENT_INDICATOR_LF,POSITIONING_TYPE_CL)
                    VALUES('{EVENT_GUID}','PRESSURE_CAP',0,0,NULLIF('{PODS_USER}',''),current_timestamp,current_timestamp,'Y','UNKNOWN')
                    RETURNING EVENT_ID INTO returnId;

                    INSERT INTO PODS.PRESSURE_CAP(EVENT_ID,EVENT_GUID,PRESSURE_CAP_ID,TYPE_CL,NOMINAL_DIAMETER_GCL,SPECIFICATION_CL,MATERIAL_CL,MANUFACTURER_CL,DATE_MANUFACTURED,SERIAL_NUMBER,PART_NUMBER,DESIGN_MIN_TEMPERATURE,DESIGN_MAX_TEMPERATURE,NOMINAL_PRESSURE_RATING,MILL_TEST_PRESSURE,DATE_INSTALLED,DESCRIPTION,SOURCE_GCL,COMMENTS)
                    VALUES(returnId,'{EVENT_GUID}',NULLIF('{ID}',''),NULLIF('{TYPE_CL}',''),{NOMINAL_DIAMETER_GCL},NULLIF('{SPECIFICATION_CL}',''),NULLIF('{MATERIAL_CL}',''),NULLIF('{MANUFACTURER_CL}',''),'{DATE_MANUFACTURED}',NULLIF('{SERIAL_NUMBER}',''),NULLIF('{PART_NUMBER}',''),{DESIGN_MIN_TEMPERATURE},{DESIGN_MAX_TEMPERATURE},{NOMINAL_PRESSURE_RATING},{MILL_TEST_PRESSURE},'{DATE_INSTALLED}',NULLIF('{DESCRIPTION}',''),NULLIF('{SOURCE_GCL}',''),NULLIF('{COMMENTS}',''));
					END $$;
                </query>
            </dbCommand>
        </insert>
        <update>
            <dbCommand>
				<param name="CLASS_ID" type="String" direction="Input" default="PODS_PRESSURE_CAP" /> 
				<var name="POLICY" default="POLICY.xml#UPDATE_PODS_SEM"  />
                <param name="EVENT_GUID" default="" type="String"/>
                <param name="PRESSURE_CAP_ID" default="" type="String"/>
                <param name="TYPE_CL" default="UNKNOWN" type="String"/>
                <param name="NOMINAL_DIAMETER_GCL" default="0" type="Decimal"/>
                <param name="SPECIFICATION_CL" default="UNKNOWN" type="String"/>
                <param name="MATERIAL_CL" default="UNKNOWN" type="String"/>
                <param name="MANUFACTURER_CL" default="UNKNOWN" type="String"/>
                <param name="DATE_MANUFACTURED" default="" type="DateTime"/>
                <param name="SERIAL_NUMBER" default="" type="String"/>
                <param name="PART_NUMBER" default="" type="String"/>
                <param name="DESIGN_MIN_TEMPERATURE" default="NULL" type="Decimal"/>
                <param name="DESIGN_MAX_TEMPERATURE" default="NULL" type="Decimal"/>
                <param name="NOMINAL_PRESSURE_RATING" default="NULL" type="Decimal"/>
                <param name="MILL_TEST_PRESSURE" default="NULL" type="Decimal"/>
                <param name="DATE_INSTALLED" default="" type="DateTime"/>
                <param name="DESCRIPTION" default="" type="String"/>
                <param name="SOURCE_GCL" default="UNKNOWN" type="String"/>
                <param name="COMMENTS" default="" type="String"/>
                <param name="ID" type="Int64"/>
                <param name="USER_ID" default="-1" type="Int64"/>
                <query>
                    UPDATE PODS.PRESSURE_CAP
                    SET
					EVENT_GUID=case when :EVENT_GUID is null then EVENT_GUID else :EVENT_GUID end,
					PRESSURE_CAP_ID=case when :PRESSURE_CAP_ID is null then PRESSURE_CAP_ID else :PRESSURE_CAP_ID end,
                    TYPE_CL=case when :TYPE_CL is null then TYPE_CL else :TYPE_CL end,
                    NOMINAL_DIAMETER_GCL=case when :NOMINAL_DIAMETER_GCL is null then NOMINAL_DIAMETER_GCL else :NOMINAL_DIAMETER_GCL end,
                    SPECIFICATION_CL=case when :SPECIFICATION_CL is null then SPECIFICATION_CL else :SPECIFICATION_CL end,
					MATERIAL_CL=case when :MATERIAL_CL is null then MATERIAL_CL else :MATERIAL_CL end,
                    MANUFACTURER_CL=case when :MANUFACTURER_CL is null then MANUFACTURER_CL else :MANUFACTURER_CL end,
                    DATE_MANUFACTURED=case when :DATE_MANUFACTURED is null then DATE_MANUFACTURED else :DATE_MANUFACTURED end,
                    SERIAL_NUMBER=case when :SERIAL_NUMBER is null then SERIAL_NUMBER else :SERIAL_NUMBER end,
                    PART_NUMBER=case when :PART_NUMBER is null then PART_NUMBER else :PART_NUMBER end,
                    DESIGN_MIN_TEMPERATURE=case when :DESIGN_MIN_TEMPERATURE is null then DESIGN_MIN_TEMPERATURE else :DESIGN_MIN_TEMPERATURE end,
                    DESIGN_MAX_TEMPERATURE=case when :DESIGN_MAX_TEMPERATURE is null then DESIGN_MAX_TEMPERATURE else :DESIGN_MAX_TEMPERATURE end,
                    NOMINAL_PRESSURE_RATING=case when :NOMINAL_PRESSURE_RATING is null then NOMINAL_PRESSURE_RATING else :NOMINAL_PRESSURE_RATING end,
                    MILL_TEST_PRESSURE=case when :MILL_TEST_PRESSURE is null then MILL_TEST_PRESSURE else :MILL_TEST_PRESSURE end,
                    DATE_INSTALLED=case when :DATE_INSTALLED is null then DATE_INSTALLED else :DATE_INSTALLED end,
                    DESCRIPTION=case when :DESCRIPTION is null then DESCRIPTION else :DESCRIPTION end,
                    SOURCE_GCL=case when :SOURCE_GCL is null then SOURCE_GCL else :SOURCE_GCL end,
                    COMMENTS=case when :COMMENTS is null then COMMENTS else :COMMENTS end
                    WHERE EVENT_ID = :ID;
                </query>
            </dbCommand>
        </update>
        <delete>
            <dbCommand>
				<var name="CLASS_ID" type="String" direction="Input" default="PODS_PRESSURE_CAP" /> 
				<var name="POLICY" default="POLICY.xml#DELETE_PODS_SEM"  />
                <var name="ID" type="Int64"/>
                <var name="USER_ID" default="-1" type="Int64"/>
                <query>
					DO $$
                    BEGIN
                    UPDATE PODS.EVENT_RANGE
                    SET CURRENT_INDICATOR_LF='N'
                    WHERE EVENT_ID = {ID};

                    DELETE FROM PODS.PRESSURE_CAP
                    WHERE EVENT_ID = {ID};
                    DELETE FROM WEB50.LNK_GATE WHERE LEFT_OBJ_ID = 'PODS_PRESSURE_CAP/'||CAST({ID} AS VARCHAR(30)) OR RIGHT_OBJ_ID = 'PODS_PRESSURE_CAP/'||CAST({ID} AS VARCHAR(30)); 
					END $$;
                </query>
            </dbCommand>
        </delete>
    </data>
    <data table="PRESSURE_MEASUREMENT" schema="PODS" id="PODS_PRESSURE_MEASUREMENT" comment="PODS.PRESSURE_MEASUREMENT">
        <select>
            <dbQuery idField="ID">
                <param name="USER_ID" default="-1" type="Int64"/>
                <var name="FILTER" default="1=1"/>
                <var name="LPU_ACCESS_FILTER" default="SELECT srv_district_id FROM PODS.SRV_DISTRICT_GCL"/>
                <query>
                    SELECT * FROM (SELECT EVENT_ID ID, t.* FROM PODS.PRESSURE_MEASUREMENT t) d WHERE {FILTER}
                </query>
            </dbQuery>
        </select>
        <insert>
            <dbCommand>
				<var name="CLASS_ID" type="String" direction="Input" default="PODS_PRESSURE_MEASUREMENT" /> 
				<var name="POLICY" default="POLICY.xml#INSERT_PODS_SEM"  />
                <var name="EVENT_GUID" default="" type="String"/>
                <var name="PRESSURE" default="NULL" type="Decimal"/>
                <var name="METHOD_CL" default="UNKNOWN" type="String"/>
                <var name="MEASUREMENT_STATION_NAME" default="" type="String"/>
                <var name="DETERMINATION_DATE" default="" type="DateTime"/>
                <var name="DESCRIPTION" default="" type="String"/>
                <var name="SOURCE_GCL" default="UNKNOWN" type="String"/>
                <var name="COMMENTS" default="" type="String"/>
                <var name="ID" type="Int64" direction="Output" default="SELECT max(EVENT_ID) id FROM PODS.EVENT_RANGE"/>
                <var name="PODS_USER" type="String"/>
                <var name="USER_ID" default="-1" type="Int64"/>
                <query>
					DO $$
					DECLARE
					returnId integer;
                    BEGIN
                    INSERT INTO PODS.EVENT_RANGE (EVENT_GUID,FEATURE_ID,STATION_ID_BEGIN,STATION_ID_END,PODS_USER,CREATE_DATE,EFFECTIVE_FROM_DATE,CURRENT_INDICATOR_LF,POSITIONING_TYPE_CL)
                    VALUES('{EVENT_GUID}','PRESS_MEAS',0,0,NULLIF('{PODS_USER}',''),current_timestamp,current_timestamp,'Y','UNKNOWN')
                    RETURNING EVENT_ID INTO returnId;

                    INSERT INTO PODS.PRESSURE_MEASUREMENT(EVENT_ID,EVENT_GUID,PRESSURE,METHOD_CL,MEASUREMENT_STATION_NAME,DETERMINATION_DATE,DESCRIPTION,SOURCE_GCL,COMMENTS)
                    VALUES(returnId,'{EVENT_GUID}',{PRESSURE},NULLIF('{METHOD_CL}',''),NULLIF('{MEASUREMENT_STATION_NAME}',''),'{DETERMINATION_DATE}',NULLIF('{DESCRIPTION}',''),NULLIF('{SOURCE_GCL}',''),NULLIF('{COMMENTS}',''));
					END $$;
                </query>
            </dbCommand>
        </insert>
        <update>
            <dbCommand>
				<param name="CLASS_ID" type="String" direction="Input" default="PODS_PRESSURE_MEASUREMENT" /> 
				<var name="POLICY" default="POLICY.xml#UPDATE_PODS_SEM"  />
                <param name="EVENT_GUID" default="" type="String"/>
                <param name="PRESSURE" default="NULL" type="Decimal"/>
                <param name="METHOD_CL" default="UNKNOWN" type="String"/>
                <param name="MEASUREMENT_STATION_NAME" default="" type="String"/>
                <param name="DETERMINATION_DATE" default="" type="DateTime"/>
                <param name="DESCRIPTION" default="" type="String"/>
                <param name="SOURCE_GCL" default="UNKNOWN" type="String"/>
                <param name="COMMENTS" default="" type="String"/>
                <param name="ID" type="Int64"/>
                <param name="USER_ID" default="-1" type="Int64"/>
                <query>
                    UPDATE PODS.PRESSURE_MEASUREMENT
                    SET 
					EVENT_GUID=case when :EVENT_GUID is null then EVENT_GUID else :EVENT_GUID end,
					PRESSURE=case when :PRESSURE is null then PRESSURE else :PRESSURE end,
					METHOD_CL=case when :METHOD_CL is null then METHOD_CL else :METHOD_CL end,
                    MEASUREMENT_STATION_NAME=case when :MEASUREMENT_STATION_NAME is null then MEASUREMENT_STATION_NAME else :MEASUREMENT_STATION_NAME end,
                    DETERMINATION_DATE=case when :DETERMINATION_DATE is null then DETERMINATION_DATE else :DETERMINATION_DATE end,
                    DESCRIPTION=case when :DESCRIPTION is null then DESCRIPTION else :DESCRIPTION end,
                    SOURCE_GCL=case when :SOURCE_GCL is null then SOURCE_GCL else :SOURCE_GCL end,
                    COMMENTS=case when :COMMENTS is null then COMMENTS else :COMMENTS end
                    WHERE EVENT_ID = :ID;
                </query>
            </dbCommand>
        </update>
        <delete>
            <dbCommand>
				<var name="CLASS_ID" type="String" direction="Input" default="PODS_PRESSURE_MEASUREMENT" /> 
				<var name="POLICY" default="POLICY.xml#DELETE_PODS_SEM"  />
                <var name="ID" type="Int64"/>
                <var name="USER_ID" default="-1" type="Int64"/>
                <query>
					DO $$
                    BEGIN
                    UPDATE PODS.EVENT_RANGE
                    SET CURRENT_INDICATOR_LF='N'
                    WHERE EVENT_ID = {ID};

                    DELETE FROM PODS.PRESSURE_MEASUREMENT
                    WHERE EVENT_ID = {ID};
                    DELETE FROM WEB50.LNK_GATE WHERE LEFT_OBJ_ID = 'PODS_PRESSURE_MEASUREMENT/'||CAST({ID} AS VARCHAR(30)) OR RIGHT_OBJ_ID = 'PODS_PRESSURE_MEASUREMENT/'||CAST({ID} AS VARCHAR(30)); 
					END $$;
                </query>
            </dbCommand>
        </delete>
    </data>
    <data table="PRODUCT_RANGE" schema="PODS" id="PODS_PRODUCT_RANGE" comment="PODS.PRODUCT_RANGE">
        <select>
            <dbQuery idField="ID">
                <param name="USER_ID" default="-1" type="Int64"/>
                <var name="FILTER" default="1=1"/>
                <var name="LPU_ACCESS_FILTER" default="SELECT srv_district_id FROM PODS.SRV_DISTRICT_GCL"/>
                <query>
                    SELECT * FROM (SELECT EVENT_ID ID, t.* FROM PODS.PRODUCT_RANGE t) d WHERE {FILTER}
                </query>
            </dbQuery>
        </select>
        <insert>
            <dbCommand>
				<var name="CLASS_ID" type="String" direction="Input" default="PODS_PRODUCT_RANGE" /> 
				<var name="POLICY" default="POLICY.xml#INSERT_PODS_SEM"  />
                <var name="EVENT_GUID" default="" type="String"/>
                <var name="PRODUCT_TYPE_SCL" default="UNKNOWN" type="String"/>
                <var name="PRODUCT_SUBTYPE_SCL" default="NONE" type="String"/>
                <var name="DESCRIPTION" default="" type="String"/>
                <var name="SOURCE_GCL" default="UNKNOWN" type="String"/>
                <var name="COMMENTS" default="" type="String"/>
                <var name="ID" type="Int64" direction="Output" default="SELECT max(EVENT_ID) id FROM PODS.EVENT_RANGE"/>
                <var name="PODS_USER" type="String"/>
                <var name="USER_ID" default="-1" type="Int64"/>
                <query>
					DO $$
					DECLARE
					returnId integer;
                    BEGIN
                    INSERT INTO PODS.EVENT_RANGE (EVENT_GUID,FEATURE_ID,STATION_ID_BEGIN,STATION_ID_END,PODS_USER,CREATE_DATE,EFFECTIVE_FROM_DATE,CURRENT_INDICATOR_LF,POSITIONING_TYPE_CL)
                    VALUES('{EVENT_GUID}','PRODUCT_RANGE',0,0,NULLIF('{PODS_USER}',''),current_timestamp,current_timestamp,'Y','UNKNOWN')
                    RETURNING EVENT_ID INTO returnId;

                    INSERT INTO PODS.PRODUCT_RANGE(EVENT_ID,EVENT_GUID,PRODUCT_TYPE_SCL,PRODUCT_SUBTYPE_SCL,DESCRIPTION,SOURCE_GCL,COMMENTS)
                    VALUES(returnId,'{EVENT_GUID}',coalesce(SUBSTR(NULLIF('{PRODUCT_TYPE_SCL}',''),0,strpos(NULLIF('{PRODUCT_TYPE_SCL}',''),'@')),'UNKNOWN'),coalesce(SUBSTR(NULLIF('{PRODUCT_TYPE_SCL}',''),strpos(NULLIF('{PRODUCT_TYPE_SCL}',''),'@')+1,length(NULLIF('{PRODUCT_TYPE_SCL}',''))-strpos(NULLIF('{PRODUCT_TYPE_SCL}',''),'@')),'NONE'),NULLIF('{DESCRIPTION}',''),NULLIF('{SOURCE_GCL}',''),NULLIF('{COMMENTS}',''));
					END $$;
                </query>
            </dbCommand>
        </insert>
        <update>
            <dbCommand>
				<param name="CLASS_ID" type="String" direction="Input" default="PODS_PRODUCT_RANGE" /> 
				<var name="POLICY" default="POLICY.xml#UPDATE_PODS_SEM"  />
                <param name="EVENT_GUID" default="" type="String"/>
                <param name="PRODUCT_TYPE_SCL" default="UNKNOWN" type="String"/>
                <param name="PRODUCT_SUBTYPE_SCL" default="NONE" type="String"/>
                <param name="DESCRIPTION" default="" type="String"/>
                <param name="SOURCE_GCL" default="UNKNOWN" type="String"/>
                <param name="COMMENTS" default="" type="String"/>
                <param name="ID" type="Int64"/>
                <param name="USER_ID" default="-1" type="Int64"/>
                <query>
                    UPDATE PODS.PRODUCT_RANGE
                    SET
					EVENT_GUID=case when :EVENT_GUID is null then EVENT_GUID else :EVENT_GUID end,
					PRODUCT_TYPE_SCL=coalesce(SUBSTR(:PRODUCT_TYPE_SCL,0,strpos(:PRODUCT_TYPE_SCL,'@')),'UNKNOWN'),
					PRODUCT_SUBTYPE_SCL=coalesce(SUBSTR(:PRODUCT_TYPE_SCL,strpos(:PRODUCT_TYPE_SCL,'@')+1,length(:PRODUCT_TYPE_SCL)-strpos(:PRODUCT_TYPE_SCL,'@')),'NONE'),
                    DESCRIPTION=case when :DESCRIPTION is null then DESCRIPTION else :DESCRIPTION end,
                    SOURCE_GCL=case when :SOURCE_GCL is null then SOURCE_GCL else :SOURCE_GCL end,
                    COMMENTS=case when :COMMENTS is null then COMMENTS else :COMMENTS end
                    WHERE EVENT_ID = :ID;
                </query>
            </dbCommand>
        </update>
        <delete>
            <dbCommand>
				<var name="CLASS_ID" type="String" direction="Input" default="PODS_PRODUCT_RANGE" /> 
				<var name="POLICY" default="POLICY.xml#DELETE_PODS_SEM"  />
                <var name="ID" type="Int64"/>
                <var name="USER_ID" default="-1" type="Int64"/>
                <query>
					DO $$
                    BEGIN
                    UPDATE PODS.EVENT_RANGE
                    SET CURRENT_INDICATOR_LF='N'
                    WHERE EVENT_ID = {ID};

                    DELETE FROM PODS.PRODUCT_RANGE
                    WHERE EVENT_ID = {ID};
                    DELETE FROM WEB50.LNK_GATE WHERE LEFT_OBJ_ID = 'PODS_PRODUCT_RANGE/'||CAST({ID} AS VARCHAR(30)) OR RIGHT_OBJ_ID = 'PODS_PRODUCT_RANGE/'||CAST({ID} AS VARCHAR(30)); 
					END $$;
                </query>
            </dbCommand>
        </delete>
    </data>
    <data table="PROFILE" schema="PODS" id="PODS_PROFILE" comment="PODS.PROFILE">
        <select>
            <dbQuery idField="ID">
                <param name="USER_ID" default="-1" type="Int64"/>
                <var name="FILTER" default="1=1"/>
                <var name="LPU_ACCESS_FILTER" default="SELECT srv_district_id FROM PODS.SRV_DISTRICT_GCL"/>
                <query>
                    SELECT * FROM (SELECT EVENT_ID ID, t.* FROM PODS.PROFILE t) d WHERE {FILTER}
                </query>
            </dbQuery>
        </select>
        <insert>
            <dbCommand>
				<var name="CLASS_ID" type="String" direction="Input" default="PODS_PROFILE" /> 
				<var name="POLICY" default="POLICY.xml#INSERT_PODS_SEM"  />
                <var name="EVENT_GUID" default="" type="String"/>
                <var name="TYPE_CL" default="UNKNOWN" type="String"/>
                <var name="ELEVATION" default="NULL" type="Decimal"/>
                <var name="ELEVATION_OUOM" default="" type="String"/>
                <var name="DESCRIPTION" default="" type="String"/>
                <var name="SOURCE_GCL" default="UNKNOWN" type="String"/>
                <var name="ACTIVE_INDICATOR_LF" default="Y" type="String"/>
                <var name="COMMENTS" default="" type="String"/>
                <var name="ID" type="Int64" direction="Output" default="SELECT max(EVENT_ID) id FROM PODS.EVENT_RANGE"/>
                <var name="PODS_USER" type="String"/>
                <var name="USER_ID" default="-1" type="Int64"/>
                <query>
					DO $$
					DECLARE
					returnId integer;
                    BEGIN
                    INSERT INTO PODS.EVENT_RANGE (EVENT_GUID,FEATURE_ID,STATION_ID_BEGIN,STATION_ID_END,PODS_USER,CREATE_DATE,EFFECTIVE_FROM_DATE,CURRENT_INDICATOR_LF,POSITIONING_TYPE_CL)
                    VALUES('{EVENT_GUID}','PROFILE',0,0,NULLIF('{PODS_USER}',''),current_timestamp,current_timestamp,'Y','UNKNOWN')
                    RETURNING EVENT_ID INTO returnId;

                    INSERT INTO PODS.PROFILE(EVENT_ID,EVENT_GUID,TYPE_CL,ELEVATION,ELEVATION_OUOM,DESCRIPTION,SOURCE_GCL,ACTIVE_INDICATOR_LF,COMMENTS)
                    VALUES(returnId,'{EVENT_GUID}',NULLIF('{TYPE_CL}',''),{ELEVATION},'{ELEVATION_OUOM}',NULLIF('{DESCRIPTION}',''),NULLIF('{SOURCE_GCL}',''),'{ACTIVE_INDICATOR_LF}',NULLIF('{COMMENTS}',''));
					END $$;
                </query>
            </dbCommand>
        </insert>
        <update>
            <dbCommand>
				<param name="CLASS_ID" type="String" direction="Input" default="PODS_PROFILE" /> 
				<var name="POLICY" default="POLICY.xml#UPDATE_PODS_SEM"  />
                <param name="EVENT_GUID" default="" type="String"/>
                <param name="TYPE_CL" default="UNKNOWN" type="String"/>
                <param name="ELEVATION" default="NULL" type="Decimal"/>
                <param name="ELEVATION_OUOM" default="" type="String"/>
                <param name="DESCRIPTION" default="" type="String"/>
                <param name="SOURCE_GCL" default="UNKNOWN" type="String"/>
                <param name="ACTIVE_INDICATOR_LF" default="Y" type="String"/>
                <param name="COMMENTS" default="" type="String"/>
                <param name="ID" type="Int64"/>
                <param name="USER_ID" default="-1" type="Int64"/>
                <query>
                    UPDATE PODS.PROFILE
                    SET 
					EVENT_GUID=case when :EVENT_GUID is null then EVENT_GUID else :EVENT_GUID end,
                    TYPE_CL=case when :TYPE_CL is null then TYPE_CL else :TYPE_CL end,
					ELEVATION=case when :ELEVATION is null then ELEVATION else :ELEVATION end,
					ELEVATION_OUOM=case when :ELEVATION_OUOM is null then ELEVATION_OUOM else :ELEVATION_OUOM end,
                    DESCRIPTION=case when :DESCRIPTION is null then DESCRIPTION else :DESCRIPTION end,
                    SOURCE_GCL=case when :SOURCE_GCL is null then SOURCE_GCL else :SOURCE_GCL end,
					ACTIVE_INDICATOR_LF=case when :ACTIVE_INDICATOR_LF is null then ACTIVE_INDICATOR_LF else :ACTIVE_INDICATOR_LF end,
                    COMMENTS=case when :COMMENTS is null then COMMENTS else :COMMENTS end
                    WHERE EVENT_ID = :ID;
                </query>
            </dbCommand>
        </update>
        <delete>
            <dbCommand>
				<var name="CLASS_ID" type="String" direction="Input" default="PODS_PROFILE" /> 
				<var name="POLICY" default="POLICY.xml#DELETE_PODS_SEM"  />
                <var name="ID" type="Int64"/>
                <var name="USER_ID" default="-1" type="Int64"/>
                <query>
					DO $$
                    BEGIN
                    UPDATE PODS.EVENT_RANGE
                    SET CURRENT_INDICATOR_LF='N'
                    WHERE EVENT_ID = {ID};

                    DELETE FROM PODS.PROFILE
                    WHERE EVENT_ID = {ID};
                    DELETE FROM WEB50.LNK_GATE WHERE LEFT_OBJ_ID = 'PODS_PROFILE/'||CAST({ID} AS VARCHAR(30)) OR RIGHT_OBJ_ID = 'PODS_PROFILE/'||CAST({ID} AS VARCHAR(30)); 
					END $$;
                </query>
            </dbCommand>
        </delete>
    </data>
    <data table="RECTIFIER" schema="PODS" id="PODS_RECTIFIER" comment="PODS.RECTIFIER">
        <select>
            <dbQuery idField="ID">
                <param name="USER_ID" default="-1" type="Int64"/>
                <var name="FILTER" default="1=1"/>
                <var name="LPU_ACCESS_FILTER" default="SELECT srv_district_id FROM PODS.SRV_DISTRICT_GCL"/>
                <query>
                    SELECT * FROM (SELECT EVENT_ID ID, t.* FROM PODS.RECTIFIER t) d WHERE {FILTER}
                </query>
            </dbQuery>
        </select>
        <insert>
            <dbCommand>
				<var name="CLASS_ID" type="String" direction="Input" default="PODS_RECTIFIER" /> 
				<var name="POLICY" default="POLICY.xml#INSERT_PODS_SEM"  />
                <var name="EVENT_GUID" default="" type="String"/>
                <var name="RECTIFIER_ID" default="" type="String"/>
                <var name="AMP_RATING" default="" type="String"/>
                <var name="TYPE_CL" default="UNKNOWN" type="String"/>
                <var name="MANUFACTURER_CL" default="UNKNOWN" type="String"/>
                <var name="DESCRIPTION" default="" type="String"/>
                <var name="VOLT_RATING" default="" type="String"/>
                <var name="MODEL_NUMBER" default="" type="String"/>
                <var name="SHUNT_TYPE_CL" default="UNKNOWN" type="String"/>
                <var name="LIGHTNING_ARRESTOR_TYPE_CL" default="UNKNOWN" type="String"/>
                <var name="COOLING_SYSTEM_CL" default="UNKNOWN" type="String"/>
                <var name="DATE_INSTALLED" default="" type="DateTime"/>
                <var name="DIODE_NUMBER" default="" type="String"/>
                <var name="STACK_SERIAL_NUMBER" default="" type="String"/>
                <var name="STACK_FUSE_SERIAL_NUMBER" default="" type="String"/>
                <var name="REF_RECT_ENCLOSURE_EVENT_ID" default="NULL" type="Decimal"/>
                <var name="REF_RECT_ENCLOSURE_EVENT_GUID" default="" type="String"/>
                <var name="SOURCE_GCL" default="UNKNOWN" type="String"/>
                <var name="COMMENTS" default="" type="String"/>
                <var name="ID" type="Int64" direction="Output" default="SELECT max(EVENT_ID) id FROM PODS.EVENT_RANGE"/>
                <var name="PODS_USER" type="String"/>
                <var name="USER_ID" default="-1" type="Int64"/>
                <query>
					DO $$
					DECLARE
					returnId integer;
                    BEGIN
                    INSERT INTO PODS.EVENT_RANGE (EVENT_GUID,FEATURE_ID,STATION_ID_BEGIN,STATION_ID_END,PODS_USER,CREATE_DATE,EFFECTIVE_FROM_DATE,CURRENT_INDICATOR_LF,POSITIONING_TYPE_CL)
                    VALUES('{EVENT_GUID}','RECTIFIER',0,0,NULLIF('{PODS_USER}',''),current_timestamp,current_timestamp,'Y','UNKNOWN')
                    RETURNING EVENT_ID INTO returnId;

                    INSERT INTO PODS.RECTIFIER(EVENT_ID,EVENT_GUID,RECTIFIER_ID,AMP_RATING,TYPE_CL,MANUFACTURER_CL,DESCRIPTION,VOLT_RATING,MODEL_NUMBER,SHUNT_TYPE_CL,LIGHTNING_ARRESTOR_TYPE_CL,COOLING_SYSTEM_CL,DATE_INSTALLED,DIODE_NUMBER,STACK_SERIAL_NUMBER,STACK_FUSE_SERIAL_NUMBER,REF_RECT_ENCLOSURE_EVENT_ID,REF_RECT_ENCLOSURE_EVENT_GUID,SOURCE_GCL,COMMENTS)
                    VALUES(returnId,'{EVENT_GUID}',returnId::varchar,NULLIF('{AMP_RATING}',''),NULLIF('{TYPE_CL}',''),NULLIF('{MANUFACTURER_CL}',''),NULLIF('{DESCRIPTION}',''),NULLIF('{VOLT_RATING}',''),NULLIF('{MODEL_NUMBER}',''),NULLIF('{SHUNT_TYPE_CL}',''),NULLIF('{LIGHTNING_ARRESTOR_TYPE_CL}',''),NULLIF('{COOLING_SYSTEM_CL}',''),'{DATE_INSTALLED}',NULLIF('{DIODE_NUMBER}',''),NULLIF('{STACK_SERIAL_NUMBER}',''),NULLIF('{STACK_FUSE_SERIAL_NUMBER}',''),{REF_RECT_ENCLOSURE_EVENT_ID},'{REF_RECT_ENCLOSURE_EVENT_GUID}',NULLIF('{SOURCE_GCL}',''),NULLIF('{COMMENTS}',''));
					END $$;
                </query>
            </dbCommand>
        </insert>
        <update>
            <dbCommand>
				<param name="CLASS_ID" type="String" direction="Input" default="PODS_RECTIFIER" /> 
				<var name="POLICY" default="POLICY.xml#UPDATE_PODS_SEM"  />
                <param name="EVENT_GUID" default="" type="String"/>
                <param name="RECTIFIER_ID" default="" type="String"/>
                <param name="AMP_RATING" default="" type="String"/>
                <param name="TYPE_CL" default="UNKNOWN" type="String"/>
                <param name="MANUFACTURER_CL" default="UNKNOWN" type="String"/>
                <param name="DESCRIPTION" default="" type="String"/>
                <param name="VOLT_RATING" default="" type="String"/>
                <param name="MODEL_NUMBER" default="" type="String"/>
                <param name="SHUNT_TYPE_CL" default="UNKNOWN" type="String"/>
                <param name="LIGHTNING_ARRESTOR_TYPE_CL" default="UNKNOWN" type="String"/>
                <param name="COOLING_SYSTEM_CL" default="UNKNOWN" type="String"/>
                <param name="DATE_INSTALLED" default="" type="DateTime"/>
                <param name="DIODE_NUMBER" default="" type="String"/>
                <param name="STACK_SERIAL_NUMBER" default="" type="String"/>
                <param name="STACK_FUSE_SERIAL_NUMBER" default="" type="String"/>
                <param name="REF_RECT_ENCLOSURE_EVENT_ID" default="NULL" type="Decimal"/>
                <param name="REF_RECT_ENCLOSURE_EVENT_GUID" default="" type="String"/>
                <param name="SOURCE_GCL" default="UNKNOWN" type="String"/>
                <param name="COMMENTS" default="" type="String"/>
                <param name="ID" type="Int64"/>
                <param name="USER_ID" default="-1" type="Int64"/>
                <query>
                    UPDATE PODS.RECTIFIER
                    SET
					EVENT_GUID=case when :EVENT_GUID is null then EVENT_GUID else :EVENT_GUID end,
					RECTIFIER_ID=case when :RECTIFIER_ID is null then RECTIFIER_ID else :RECTIFIER_ID end,
					AMP_RATING=case when :AMP_RATING is null then AMP_RATING else :AMP_RATING end,
					TYPE_CL=case when :TYPE_CL is null then TYPE_CL else :TYPE_CL end,
					MANUFACTURER_CL=case when :MANUFACTURER_CL is null then MANUFACTURER_CL else :MANUFACTURER_CL end,
					DESCRIPTION=case when :DESCRIPTION is null then DESCRIPTION else :DESCRIPTION end,
					VOLT_RATING=case when :VOLT_RATING is null then VOLT_RATING else :VOLT_RATING end,
					MODEL_NUMBER=case when :MODEL_NUMBER is null then MODEL_NUMBER else :MODEL_NUMBER end,
					SHUNT_TYPE_CL=case when :SHUNT_TYPE_CL is null then SHUNT_TYPE_CL else :SHUNT_TYPE_CL end,
					LIGHTNING_ARRESTOR_TYPE_CL=case when :LIGHTNING_ARRESTOR_TYPE_CL is null then LIGHTNING_ARRESTOR_TYPE_CL else :LIGHTNING_ARRESTOR_TYPE_CL end,
					COOLING_SYSTEM_CL=case when :COOLING_SYSTEM_CL is null then COOLING_SYSTEM_CL else :COOLING_SYSTEM_CL end,
					DATE_INSTALLED=case when :DATE_INSTALLED is null then DATE_INSTALLED else :DATE_INSTALLED end,
					DIODE_NUMBER=case when :DIODE_NUMBER is null then DIODE_NUMBER else :DIODE_NUMBER end,
					STACK_SERIAL_NUMBER=case when :STACK_SERIAL_NUMBER is null then STACK_SERIAL_NUMBER else :STACK_SERIAL_NUMBER end,
					STACK_FUSE_SERIAL_NUMBER=case when :STACK_FUSE_SERIAL_NUMBER is null then STACK_FUSE_SERIAL_NUMBER else :STACK_FUSE_SERIAL_NUMBER end,
					REF_RECT_ENCLOSURE_EVENT_ID=case when :REF_RECT_ENCLOSURE_EVENT_ID is null then REF_RECT_ENCLOSURE_EVENT_ID else :REF_RECT_ENCLOSURE_EVENT_ID end,
					REF_RECT_ENCLOSURE_EVENT_GUID=case when :REF_RECT_ENCLOSURE_EVENT_GUID is null then REF_RECT_ENCLOSURE_EVENT_GUID else :REF_RECT_ENCLOSURE_EVENT_GUID end,
                    SOURCE_GCL=case when :SOURCE_GCL is null then SOURCE_GCL else :SOURCE_GCL end,
                    COMMENTS=case when :COMMENTS is null then COMMENTS else :COMMENTS end
                    WHERE EVENT_ID = :ID;
                </query>
            </dbCommand>
        </update>
        <delete>
            <dbCommand>
				<var name="CLASS_ID" type="String" direction="Input" default="PODS_RECTIFIER" /> 
				<var name="POLICY" default="POLICY.xml#DELETE_PODS_SEM"  />
                <var name="ID" type="Int64"/>
                <var name="USER_ID" default="-1" type="Int64"/>
                <query>
					DO $$
                    BEGIN

                    UPDATE PODS.PI_RECTIFIER_READING
                    SET REF_RECTIFIER_EVENT_ID = NULL
                    WHERE REF_RECTIFIER_EVENT_ID = {ID};

                    UPDATE PODS.EVENT_RANGE
                    SET CURRENT_INDICATOR_LF='N'
                    WHERE EVENT_ID = {ID};

                    DELETE
                    FROM PODS.RECTIFIER
                    WHERE EVENT_ID = {ID};

                    DELETE
                    FROM WEB50.LNK_GATE
                    WHERE LEFT_OBJ_ID = 'PODS_RECTIFIER/'||CAST({ID} AS VARCHAR(30))
                    OR RIGHT_OBJ_ID = 'PODS_RECTIFIER/'||CAST({ID} AS VARCHAR(30));
                    END $$;
                </query>
            </dbCommand>
        </delete>
    </data>
    <data table="RECTIFIER_ENCLOSURE" schema="PODS" id="PODS_RECTIFIER_ENCLOSURE" comment="PODS.RECTIFIER_ENCLOSURE">
        <select>
            <dbQuery idField="ID">
                <param name="USER_ID" default="-1" type="Int64"/>
                <var name="FILTER" default="1=1"/>
                <var name="LPU_ACCESS_FILTER" default="SELECT srv_district_id FROM PODS.SRV_DISTRICT_GCL"/>
                <query>
                    SELECT * FROM (SELECT EVENT_ID ID, t.* FROM PODS.RECTIFIER_ENCLOSURE t) d WHERE {FILTER}
                </query>
            </dbQuery>
        </select>
        <insert>
            <dbCommand>
				<var name="CLASS_ID" type="String" direction="Input" default="PODS_RECTIFIER_ENCLOSURE" /> 
				<var name="POLICY" default="POLICY.xml#INSERT_PODS_SEM"  />
                <var name="EVENT_GUID" default="" type="String"/>
                <var name="RECTIFIER_ENCLOSURE_ID" default="" type="String"/>
                <var name="TYPE_CL" default="UNKNOWN" type="String"/>
                <var name="MANUFACTURER_CL" default="UNKNOWN" type="String"/>
                <var name="POWER_BILLING_SOURCE_CL" default="UNKNOWN" type="String"/>
                <var name="DESCRIPTION" default="" type="String"/>
                <var name="NAME" default="" type="String"/>
                <var name="MODEL_NUMBER" default="" type="String"/>
                <var name="DATE_INSTALLED" default="" type="DateTime"/>
                <var name="NEG_CABLE_INSULATION_TYPE_GCL" default="UNKNOWN" type="String"/>
                <var name="NEG_CABLE_GAUGE_GCL" default="UNKNOWN" type="String"/>
                <var name="NEG_CABLE_INSULATION_COLOR_GCL" default="UNKNOWN" type="String"/>
                <var name="SOURCE_GCL" default="UNKNOWN" type="String"/>
                <var name="COMMENTS" default="" type="String"/>
                <var name="ID" type="Int64" direction="Output" default="SELECT max(EVENT_ID) id FROM PODS.EVENT_RANGE"/>
                <var name="PODS_USER" type="String"/>
                <var name="USER_ID" default="-1" type="Int64"/>
                <query>
					DO $$
					DECLARE
					returnId integer;
                    BEGIN
                    INSERT INTO PODS.EVENT_RANGE (EVENT_GUID,FEATURE_ID,STATION_ID_BEGIN,STATION_ID_END,PODS_USER,CREATE_DATE,EFFECTIVE_FROM_DATE,CURRENT_INDICATOR_LF,POSITIONING_TYPE_CL)
                    VALUES('{EVENT_GUID}','RCTF_ENCL',0,0,NULLIF('{PODS_USER}',''),current_timestamp,current_timestamp,'Y','UNKNOWN')
                    RETURNING EVENT_ID INTO returnId;

                    INSERT INTO PODS.RECTIFIER_ENCLOSURE(EVENT_ID,EVENT_GUID,RECTIFIER_ENCLOSURE_ID,TYPE_CL,MANUFACTURER_CL,POWER_BILLING_SOURCE_CL,DESCRIPTION,NAME,MODEL_NUMBER,DATE_INSTALLED,NEG_CABLE_INSULATION_TYPE_GCL,NEG_CABLE_GAUGE_GCL,NEG_CABLE_INSULATION_COLOR_GCL,SOURCE_GCL,COMMENTS)
                    VALUES(returnId,'{EVENT_GUID}',NULLIF('{ID}',''),NULLIF('{TYPE_CL}',''),NULLIF('{MANUFACTURER_CL}',''),NULLIF('{POWER_BILLING_SOURCE_CL}',''),NULLIF('{DESCRIPTION}',''),NULLIF('{NAME}',''),NULLIF('{MODEL_NUMBER}',''),'{DATE_INSTALLED}',NULLIF('{NEG_CABLE_INSULATION_TYPE_GCL}',''),NULLIF('{NEG_CABLE_GAUGE_GCL}',''),NULLIF('{NEG_CABLE_INSULATION_COLOR_GCL}',''),NULLIF('{SOURCE_GCL}',''),NULLIF('{COMMENTS}',''));
					END $$;
                </query>
            </dbCommand>
        </insert>
        <update>
            <dbCommand>
				<param name="CLASS_ID" type="String" direction="Input" default="PODS_RECTIFIER_ENCLOSURE" /> 
				<var name="POLICY" default="POLICY.xml#UPDATE_PODS_SEM"  />
                <param name="EVENT_GUID" default="" type="String"/>
                <param name="RECTIFIER_ENCLOSURE_ID" default="" type="String"/>
                <param name="TYPE_CL" default="UNKNOWN" type="String"/>
                <param name="MANUFACTURER_CL" default="UNKNOWN" type="String"/>
                <param name="POWER_BILLING_SOURCE_CL" default="UNKNOWN" type="String"/>
                <param name="DESCRIPTION" default="" type="String"/>
                <param name="NAME" default="" type="String"/>
                <param name="MODEL_NUMBER" default="" type="String"/>
                <param name="DATE_INSTALLED" default="" type="DateTime"/>
                <param name="NEG_CABLE_INSULATION_TYPE_GCL" default="UNKNOWN" type="String"/>
                <param name="NEG_CABLE_GAUGE_GCL" default="UNKNOWN" type="String"/>
                <param name="NEG_CABLE_INSULATION_COLOR_GCL" default="UNKNOWN" type="String"/>
                <param name="SOURCE_GCL" default="UNKNOWN" type="String"/>
                <param name="COMMENTS" default="" type="String"/>
                <param name="ID" type="Int64"/>
                <param name="USER_ID" default="-1" type="Int64"/>
                <query>
                    UPDATE PODS.RECTIFIER_ENCLOSURE
                    SET
					EVENT_GUID=case when :EVENT_GUID is null then EVENT_GUID else :EVENT_GUID end,
					RECTIFIER_ENCLOSURE_ID=case when :RECTIFIER_ENCLOSURE_ID is null then RECTIFIER_ENCLOSURE_ID else :RECTIFIER_ENCLOSURE_ID end,
                    TYPE_CL=case when :TYPE_CL is null then TYPE_CL else :TYPE_CL end,
                    MANUFACTURER_CL=case when :MANUFACTURER_CL is null then MANUFACTURER_CL else :MANUFACTURER_CL end,
					POWER_BILLING_SOURCE_CL=case when :POWER_BILLING_SOURCE_CL is null then POWER_BILLING_SOURCE_CL else :POWER_BILLING_SOURCE_CL end,
                    DESCRIPTION=case when :DESCRIPTION is null then DESCRIPTION else :DESCRIPTION end,
					NAME=case when :NAME is null then NAME else :NAME end,
					MODEL_NUMBER=case when :MODEL_NUMBER is null then MODEL_NUMBER else :MODEL_NUMBER end,
                    DATE_INSTALLED=case when :DATE_INSTALLED is null then DATE_INSTALLED else :DATE_INSTALLED end,
					NEG_CABLE_INSULATION_TYPE_GCL=case when :NEG_CABLE_INSULATION_TYPE_GCL is null then NEG_CABLE_INSULATION_TYPE_GCL else :NEG_CABLE_INSULATION_TYPE_GCL end,
					NEG_CABLE_GAUGE_GCL=case when :NEG_CABLE_GAUGE_GCL is null then NEG_CABLE_GAUGE_GCL else :NEG_CABLE_GAUGE_GCL end,
					NEG_CABLE_INSULATION_COLOR_GCL=case when :NEG_CABLE_INSULATION_COLOR_GCL is null then NEG_CABLE_INSULATION_COLOR_GCL else :NEG_CABLE_INSULATION_COLOR_GCL end,
                    SOURCE_GCL=case when :SOURCE_GCL is null then SOURCE_GCL else :SOURCE_GCL end,
                    COMMENTS=case when :COMMENTS is null then COMMENTS else :COMMENTS end
                </query>
            </dbCommand>
        </update>
        <delete>
            <dbCommand>
				<var name="CLASS_ID" type="String" direction="Input" default="PODS_RECTIFIER_ENCLOSURE" /> 
				<var name="POLICY" default="POLICY.xml#DELETE_PODS_SEM"  />
                <var name="ID" type="Int64"/>
                <var name="USER_ID" default="-1" type="Int64"/>
                <query>
					DO $$
                    BEGIN
                    UPDATE PODS.RECTIFIER
                    SET REF_RECT_ENCLOSURE_EVENT_ID = NULL
                    WHERE REF_RECT_ENCLOSURE_EVENT_ID = {ID};

                    UPDATE PODS.EVENT_RANGE
                    SET CURRENT_INDICATOR_LF='N'
                    WHERE EVENT_ID = {ID};

                    DELETE
                    FROM PODS.RECTIFIER_ENCLOSURE
                    WHERE EVENT_ID = {ID};

                    DELETE
                    FROM WEB50.LNK_GATE
                    WHERE LEFT_OBJ_ID = 'PODS_RECTIFIER_ENCLOSURE/'||CAST({ID} AS VARCHAR(30))
                    OR RIGHT_OBJ_ID = 'PODS_RECTIFIER_ENCLOSURE/'||CAST({ID} AS VARCHAR(30));

                    END $$;
                </query>
            </dbCommand>
        </delete>
    </data>
    <data table="REDUCER" schema="PODS" id="PODS_REDUCER" comment="PODS.REDUCER">
        <select>
            <dbQuery idField="ID">
                <param name="USER_ID" default="-1" type="Int64"/>
                <var name="FILTER" default="1=1"/>
                <var name="LPU_ACCESS_FILTER" default="SELECT srv_district_id FROM PODS.SRV_DISTRICT_GCL"/>
                <query>
                    SELECT * FROM (SELECT EVENT_ID ID, t.* FROM PODS.REDUCER t) d WHERE {FILTER}
                </query>
            </dbQuery>
        </select>
        <insert>
            <dbCommand>
				<var name="CLASS_ID" type="String" direction="Input" default="PODS_REDUCER" /> 
				<var name="POLICY" default="POLICY.xml#INSERT_PODS_SEM"  />
                <var name="EVENT_GUID" default="" type="String"/>
                <var name="TYPE_CL" default="UNKNOWN" type="String"/>
                <var name="MANUFACTURER_CL" default="UNKNOWN" type="String"/>
                <var name="NOMINAL_DIAMETER_INLET_GCL" default="0" type="Decimal"/>
                <var name="NOMINAL_DIAMETER_OUTLET_GCL" default="0" type="Decimal"/>
                <var name="NOMINAL_WALL_THICKNESS_IN_GCL" default="0" type="Decimal"/>
                <var name="NOMINAL_WALL_THICK_OUT_GCL" default="0" type="Decimal"/>
                <var name="SPECIFICATION_CL" default="UNKNOWN" type="String"/>
                <var name="NOMINAL_PRESSURE_RATING" default="NULL" type="Decimal"/>
                <var name="MILL_TEST_PRESSURE" default="NULL" type="Decimal"/>
                <var name="MATERIAL_CL" default="UNKNOWN" type="String"/>
                <var name="DATE_MANUFACTURED" default="" type="DateTime"/>
                <var name="DATE_INSTALLED" default="" type="DateTime"/>
                <var name="DESCRIPTION" default="" type="String"/>
                <var name="SOURCE_GCL" default="UNKNOWN" type="String"/>
                <var name="COMMENTS" default="" type="String"/>
                <var name="ID" type="Int64" direction="Output" default="SELECT max(EVENT_ID) id FROM PODS.EVENT_RANGE"/>
                <var name="PODS_USER" type="String"/>
                <var name="USER_ID" default="-1" type="Int64"/>
                <query>
					DO $$
					DECLARE
					returnId integer;
                    BEGIN
                    INSERT INTO PODS.EVENT_RANGE (EVENT_GUID,FEATURE_ID,STATION_ID_BEGIN,STATION_ID_END,PODS_USER,CREATE_DATE,EFFECTIVE_FROM_DATE,CURRENT_INDICATOR_LF,POSITIONING_TYPE_CL)
                    VALUES('{EVENT_GUID}','REDUCER',0,0,NULLIF('{PODS_USER}',''),current_timestamp,current_timestamp,'Y','UNKNOWN')
                    RETURNING EVENT_ID INTO returnId;

                    INSERT INTO PODS.REDUCER(EVENT_ID,EVENT_GUID,TYPE_CL,MANUFACTURER_CL,NOMINAL_DIAMETER_INLET_GCL,NOMINAL_DIAMETER_OUTLET_GCL,NOMINAL_WALL_THICKNESS_IN_GCL,NOMINAL_WALL_THICK_OUT_GCL,SPECIFICATION_CL,NOMINAL_PRESSURE_RATING,MILL_TEST_PRESSURE,MATERIAL_CL,DATE_MANUFACTURED,DATE_INSTALLED,DESCRIPTION,SOURCE_GCL,COMMENTS)
                    VALUES(returnId,'{EVENT_GUID}',NULLIF('{TYPE_CL}',''),NULLIF('{MANUFACTURER_CL}',''),{NOMINAL_DIAMETER_INLET_GCL},{NOMINAL_DIAMETER_OUTLET_GCL},{NOMINAL_WALL_THICKNESS_IN_GCL},{NOMINAL_WALL_THICK_OUT_GCL},NULLIF('{SPECIFICATION_CL}',''),{NOMINAL_PRESSURE_RATING},{MILL_TEST_PRESSURE},NULLIF('{MATERIAL_CL}',''),'{DATE_MANUFACTURED}','{DATE_INSTALLED}',NULLIF('{DESCRIPTION}',''),NULLIF('{SOURCE_GCL}',''),NULLIF('{COMMENTS}',''));
					END $$;
                </query>
            </dbCommand>
        </insert>
        <update>
            <dbCommand>
				<param name="CLASS_ID" type="String" direction="Input" default="PODS_REDUCER" /> 
				<var name="POLICY" default="POLICY.xml#UPDATE_PODS_SEM"  />
                <param name="EVENT_GUID" default="" type="String"/>
                <param name="TYPE_CL" default="UNKNOWN" type="String"/>
                <param name="MANUFACTURER_CL" default="UNKNOWN" type="String"/>
                <param name="NOMINAL_DIAMETER_INLET_GCL" default="0" type="Decimal"/>
                <param name="NOMINAL_DIAMETER_OUTLET_GCL" default="0" type="Decimal"/>
                <param name="NOMINAL_WALL_THICKNESS_IN_GCL" default="0" type="Decimal"/>
                <param name="NOMINAL_WALL_THICK_OUT_GCL" default="0" type="Decimal"/>
                <param name="SPECIFICATION_CL" default="UNKNOWN" type="String"/>
                <param name="NOMINAL_PRESSURE_RATING" default="NULL" type="Decimal"/>
                <param name="MILL_TEST_PRESSURE" default="NULL" type="Decimal"/>
                <param name="MATERIAL_CL" default="UNKNOWN" type="String"/>
                <param name="DATE_MANUFACTURED" default="" type="DateTime"/>
                <param name="DATE_INSTALLED" default="" type="DateTime"/>
                <param name="DESCRIPTION" default="" type="String"/>
                <param name="SOURCE_GCL" default="UNKNOWN" type="String"/>
                <param name="COMMENTS" default="" type="String"/>
                <param name="ID" type="Int64"/>
                <param name="USER_ID" default="-1" type="Int64"/>
                <query>
                    UPDATE PODS.REDUCER
                    SET 
					EVENT_GUID=case when :EVENT_GUID is null then EVENT_GUID else :EVENT_GUID end,
                    TYPE_CL=case when :TYPE_CL is null then TYPE_CL else :TYPE_CL end,
                    MANUFACTURER_CL=case when :MANUFACTURER_CL is null then MANUFACTURER_CL else :MANUFACTURER_CL end,
                    NOMINAL_DIAMETER_INLET_GCL=case when :NOMINAL_DIAMETER_INLET_GCL is null then NOMINAL_DIAMETER_INLET_GCL else :NOMINAL_DIAMETER_INLET_GCL end,
                    NOMINAL_DIAMETER_OUTLET_GCL=case when :NOMINAL_DIAMETER_OUTLET_GCL is null then NOMINAL_DIAMETER_OUTLET_GCL else :NOMINAL_DIAMETER_OUTLET_GCL end,
                    NOMINAL_WALL_THICKNESS_IN_GCL=case when :NOMINAL_WALL_THICKNESS_IN_GCL is null then NOMINAL_WALL_THICKNESS_IN_GCL else :NOMINAL_WALL_THICKNESS_IN_GCL end,
                    NOMINAL_WALL_THICK_OUT_GCL=case when :NOMINAL_WALL_THICK_OUT_GCL is null then NOMINAL_WALL_THICK_OUT_GCL else :NOMINAL_WALL_THICK_OUT_GCL end,
                    SPECIFICATION_CL=case when :SPECIFICATION_CL is null then SPECIFICATION_CL else :SPECIFICATION_CL end,
                    NOMINAL_PRESSURE_RATING=case when :NOMINAL_PRESSURE_RATING is null then NOMINAL_PRESSURE_RATING else :NOMINAL_PRESSURE_RATING end,
                    MILL_TEST_PRESSURE=case when :MILL_TEST_PRESSURE is null then MILL_TEST_PRESSURE else :MILL_TEST_PRESSURE end,
					MATERIAL_CL=case when :MATERIAL_CL is null then MATERIAL_CL else :MATERIAL_CL end,
                    DATE_MANUFACTURED=case when :DATE_MANUFACTURED is null then DATE_MANUFACTURED else :DATE_MANUFACTURED end,
                    DATE_INSTALLED=case when :DATE_INSTALLED is null then DATE_INSTALLED else :DATE_INSTALLED end,
                    DESCRIPTION=case when :DESCRIPTION is null then DESCRIPTION else :DESCRIPTION end,
                    SOURCE_GCL=case when :SOURCE_GCL is null then SOURCE_GCL else :SOURCE_GCL end,
                    COMMENTS=case when :COMMENTS is null then COMMENTS else :COMMENTS end
                    WHERE EVENT_ID = :ID;
                </query>
            </dbCommand>
        </update>
        <delete>
            <dbCommand>
				<var name="CLASS_ID" type="String" direction="Input" default="PODS_REDUCER" /> 
				<var name="POLICY" default="POLICY.xml#DELETE_PODS_SEM"  />
                <var name="ID" type="Int64"/>
                <var name="USER_ID" default="-1" type="Int64"/>
                <query>
					DO $$
                    BEGIN
                    UPDATE PODS.EVENT_RANGE
                    SET CURRENT_INDICATOR_LF='N'
                    WHERE EVENT_ID = {ID};

                    DELETE FROM PODS.REDUCER
                    WHERE EVENT_ID = {ID};
                    DELETE FROM WEB50.LNK_GATE WHERE LEFT_OBJ_ID = 'PODS_REDUCER/'||CAST({ID} AS VARCHAR(30)) OR RIGHT_OBJ_ID = 'PODS_REDUCER/'||CAST({ID} AS VARCHAR(30)); 
					END $$;
                </query>
            </dbCommand>
        </delete>
    </data>
    <data table="REPAIR_CLAMP" schema="PODS" id="PODS_REPAIR_CLAMP" comment="PODS.REPAIR_CLAMP">
        <select>
            <dbQuery idField="ID">
                <param name="USER_ID" default="-1" type="Int64"/>
                <var name="FILTER" default="1=1"/>
                <var name="LPU_ACCESS_FILTER" default="SELECT srv_district_id FROM PODS.SRV_DISTRICT_GCL"/>
                <query>
                    SELECT * FROM (SELECT EVENT_ID ID, t.* FROM PODS.REPAIR_CLAMP t) d WHERE {FILTER}
                </query>
            </dbQuery>
        </select>
        <insert>
            <dbCommand>
				<var name="CLASS_ID" type="String" direction="Input" default="PODS_REPAIR_CLAMP" /> 
				<var name="POLICY" default="POLICY.xml#INSERT_PODS_SEM"  />
                <var name="EVENT_GUID" default="" type="String"/>
                <var name="REPAIR_CLAMP_ID" default="" type="String"/>
                <var name="PART_NUMBER" default="" type="String"/>
                <var name="SERIAL_NUMBER" default="" type="String"/>
                <var name="TYPE_CL" default="UNKNOWN" type="String"/>
                <var name="REMOTE_ACTIVATOR_CL" default="UNKNOWN" type="String"/>
                <var name="MATERIAL_CL" default="UNKNOWN" type="String"/>
                <var name="MANUFACTURER_CL" default="UNKNOWN" type="String"/>
                <var name="DATE_MANUFACTURED" default="" type="DateTime"/>
                <var name="DATE_INSTALLED" default="" type="DateTime"/>
                <var name="MILL_TEST_PRESSURE" default="NULL" type="Decimal"/>
                <var name="NOMINAL_EXT_PRESSURE_RATING" default="NULL" type="Decimal"/>
                <var name="NOMINAL_INT_PRESSURE_RATING" default="NULL" type="Decimal"/>
                <var name="DESIGN_MIN_TEMPERATURE" default="NULL" type="Decimal"/>
                <var name="DESIGN_MAX_TEMPERATURE" default="NULL" type="Decimal"/>
                <var name="DESCRIPTION" default="" type="String"/>
                <var name="SOURCE_GCL" default="UNKNOWN" type="String"/>
                <var name="COMMENTS" default="" type="String"/>
                <var name="ID" type="Int64" direction="Output" default="SELECT max(EVENT_ID) id FROM PODS.EVENT_RANGE"/>
                <var name="PODS_USER" type="String"/>
                <var name="USER_ID" default="-1" type="Int64"/>
                <query>
					DO $$
					DECLARE
					returnId integer;
                    BEGIN
                    INSERT INTO PODS.EVENT_RANGE (EVENT_GUID,FEATURE_ID,STATION_ID_BEGIN,STATION_ID_END,PODS_USER,CREATE_DATE,EFFECTIVE_FROM_DATE,CURRENT_INDICATOR_LF,POSITIONING_TYPE_CL)
                    VALUES('{EVENT_GUID}','REPAIR_CLAMP',0,0,NULLIF('{PODS_USER}',''),current_timestamp,current_timestamp,'Y','UNKNOWN')
                    RETURNING EVENT_ID INTO returnId;

                    INSERT INTO PODS.REPAIR_CLAMP(EVENT_ID,EVENT_GUID,REPAIR_CLAMP_ID,PART_NUMBER,SERIAL_NUMBER,TYPE_CL,REMOTE_ACTIVATOR_CL,MATERIAL_CL,MANUFACTURER_CL,DATE_MANUFACTURED,DATE_INSTALLED,MILL_TEST_PRESSURE,NOMINAL_EXT_PRESSURE_RATING,NOMINAL_INT_PRESSURE_RATING,DESIGN_MIN_TEMPERATURE,DESIGN_MAX_TEMPERATURE,DESCRIPTION,SOURCE_GCL,COMMENTS)
                    VALUES(returnId,'{EVENT_GUID}',NULLIF('{ID}',''),NULLIF('{PART_NUMBER}',''),NULLIF('{SERIAL_NUMBER}',''),NULLIF('{TYPE_CL}',''),NULLIF('{REMOTE_ACTIVATOR_CL}',''),NULLIF('{MATERIAL_CL}',''),NULLIF('{MANUFACTURER_CL}',''),'{DATE_MANUFACTURED}','{DATE_INSTALLED}',{MILL_TEST_PRESSURE},{NOMINAL_EXT_PRESSURE_RATING},{NOMINAL_INT_PRESSURE_RATING},{DESIGN_MIN_TEMPERATURE},{DESIGN_MAX_TEMPERATURE},NULLIF('{DESCRIPTION}',''),NULLIF('{SOURCE_GCL}',''),NULLIF('{COMMENTS}',''));
					END $$;
                </query>
            </dbCommand>
        </insert>
        <update>
            <dbCommand>
				<param name="CLASS_ID" type="String" direction="Input" default="PODS_REPAIR_CLAMP" /> 
				<var name="POLICY" default="POLICY.xml#UPDATE_PODS_SEM"  />
                <param name="EVENT_GUID" default="" type="String"/>
                <param name="REPAIR_CLAMP_ID" default="" type="String"/>
                <param name="PART_NUMBER" default="" type="String"/>
                <param name="SERIAL_NUMBER" default="" type="String"/>
                <param name="TYPE_CL" default="UNKNOWN" type="String"/>
                <param name="REMOTE_ACTIVATOR_CL" default="UNKNOWN" type="String"/>
                <param name="MATERIAL_CL" default="UNKNOWN" type="String"/>
                <param name="MANUFACTURER_CL" default="UNKNOWN" type="String"/>
                <param name="DATE_MANUFACTURED" default="" type="DateTime"/>
                <param name="DATE_INSTALLED" default="" type="DateTime"/>
                <param name="MILL_TEST_PRESSURE" default="NULL" type="Decimal"/>
                <param name="NOMINAL_EXT_PRESSURE_RATING" default="NULL" type="Decimal"/>
                <param name="NOMINAL_INT_PRESSURE_RATING" default="NULL" type="Decimal"/>
                <param name="DESIGN_MIN_TEMPERATURE" default="NULL" type="Decimal"/>
                <param name="DESIGN_MAX_TEMPERATURE" default="NULL" type="Decimal"/>
                <param name="DESCRIPTION" default="" type="String"/>
                <param name="SOURCE_GCL" default="UNKNOWN" type="String"/>
                <param name="COMMENTS" default="" type="String"/>
                <param name="ID" type="Int64"/>
                <param name="USER_ID" default="-1" type="Int64"/>
                <query>
                    UPDATE PODS.REPAIR_CLAMP
                    SET 
					EVENT_GUID=case when :EVENT_GUID is null then EVENT_GUID else :EVENT_GUID end,
					REPAIR_CLAMP_ID=case when :REPAIR_CLAMP_ID is null then REPAIR_CLAMP_ID else :REPAIR_CLAMP_ID end,
                    PART_NUMBER=case when :PART_NUMBER is null then PART_NUMBER else :PART_NUMBER end,
                    SERIAL_NUMBER=case when :SERIAL_NUMBER is null then SERIAL_NUMBER else :SERIAL_NUMBER end,
                    TYPE_CL=case when :TYPE_CL is null then TYPE_CL else :TYPE_CL end,
					REMOTE_ACTIVATOR_CL=case when :REMOTE_ACTIVATOR_CL is null then REMOTE_ACTIVATOR_CL else :REMOTE_ACTIVATOR_CL end,
					MATERIAL_CL=case when :MATERIAL_CL is null then MATERIAL_CL else :MATERIAL_CL end,
                    MANUFACTURER_CL=case when :MANUFACTURER_CL is null then MANUFACTURER_CL else :MANUFACTURER_CL end,
                    DATE_MANUFACTURED=case when :DATE_MANUFACTURED is null then DATE_MANUFACTURED else :DATE_MANUFACTURED end,
                    DATE_INSTALLED=case when :DATE_INSTALLED is null then DATE_INSTALLED else :DATE_INSTALLED end,
                    MILL_TEST_PRESSURE=case when :MILL_TEST_PRESSURE is null then MILL_TEST_PRESSURE else :MILL_TEST_PRESSURE end,
                    NOMINAL_EXT_PRESSURE_RATING=case when :NOMINAL_EXT_PRESSURE_RATING is null then NOMINAL_EXT_PRESSURE_RATING else :NOMINAL_EXT_PRESSURE_RATING end,
                    NOMINAL_INT_PRESSURE_RATING=case when :NOMINAL_INT_PRESSURE_RATING is null then NOMINAL_INT_PRESSURE_RATING else :NOMINAL_INT_PRESSURE_RATING end,
                    DESIGN_MIN_TEMPERATURE=case when :DESIGN_MIN_TEMPERATURE is null then DESIGN_MIN_TEMPERATURE else :DESIGN_MIN_TEMPERATURE end,
                    DESIGN_MAX_TEMPERATURE=case when :DESIGN_MAX_TEMPERATURE is null then DESIGN_MAX_TEMPERATURE else :DESIGN_MAX_TEMPERATURE end,
                    DESCRIPTION=case when :DESCRIPTION is null then DESCRIPTION else :DESCRIPTION end,
                    SOURCE_GCL=case when :SOURCE_GCL is null then SOURCE_GCL else :SOURCE_GCL end,
                    COMMENTS=case when :COMMENTS is null then COMMENTS else :COMMENTS end
                    WHERE EVENT_ID = :ID;
                </query>
            </dbCommand>
        </update>
        <delete>
            <dbCommand>
				<var name="CLASS_ID" type="String" direction="Input" default="PODS_REPAIR_CLAMP" /> 
				<var name="POLICY" default="POLICY.xml#DELETE_PODS_SEM"  />
                <var name="ID" type="Int64"/>
                <var name="USER_ID" default="-1" type="Int64"/>
                <query>
					DO $$
                    BEGIN
                    UPDATE PODS.EVENT_RANGE
                    SET CURRENT_INDICATOR_LF='N'
                    WHERE EVENT_ID = {ID};

                    DELETE FROM PODS.REPAIR_CLAMP
                    WHERE EVENT_ID = {ID};
                    DELETE FROM WEB50.LNK_GATE WHERE LEFT_OBJ_ID = 'PODS_REPAIR_CLAMP/'||CAST({ID} AS VARCHAR(30)) OR RIGHT_OBJ_ID = 'PODS_REPAIR_CLAMP/'||CAST({ID} AS VARCHAR(30)); 
					END $$;
                </query>
            </dbCommand>
        </delete>
    </data>
    <data table="RIVER_WEIGHT" schema="PODS" id="PODS_RIVER_WEIGHT" comment="PODS.RIVER_WEIGHT">
        <select>
            <dbQuery idField="ID">
                <param name="USER_ID" default="-1" type="Int64"/>
                <var name="FILTER" default="1=1"/>
                <var name="LPU_ACCESS_FILTER" default="SELECT srv_district_id FROM PODS.SRV_DISTRICT_GCL"/>
                <query>
                    SELECT * FROM (SELECT EVENT_ID ID, t.* FROM PODS.RIVER_WEIGHT t) d WHERE {FILTER}
                </query>
            </dbQuery>
        </select>
        <insert>
            <dbCommand>
				<var name="CLASS_ID" type="String" direction="Input" default="PODS_RIVER_WEIGHT" /> 
				<var name="POLICY" default="POLICY.xml#INSERT_PODS_SEM"  />
                <var name="EVENT_GUID" default="" type="String"/>
                <var name="TYPE_CL" default="UNKNOWN" type="String"/>
                <var name="QUANTITY" default="NULL" type="Decimal"/>
                <var name="WEIGHT_EACH" default="NULL" type="Decimal"/>
                <var name="SPACING_DISTANCE" default="NULL" type="Decimal"/>
                <var name="DATE_INSTALLED" default="" type="DateTime"/>
                <var name="DESCRIPTION" default="" type="String"/>
                <var name="SOURCE_GCL" default="UNKNOWN" type="String"/>
                <var name="COMMENTS" default="" type="String"/>
                <var name="ID" type="Int64" direction="Output" default="SELECT max(EVENT_ID) id FROM PODS.EVENT_RANGE"/>
                <var name="PODS_USER" type="String"/>
                <var name="USER_ID" default="-1" type="Int64"/>
                <query>
					DO $$
					DECLARE
					returnId integer;
                    BEGIN
                    INSERT INTO PODS.EVENT_RANGE (EVENT_GUID,FEATURE_ID,STATION_ID_BEGIN,STATION_ID_END,PODS_USER,CREATE_DATE,EFFECTIVE_FROM_DATE,CURRENT_INDICATOR_LF,POSITIONING_TYPE_CL)
                    VALUES('{EVENT_GUID}','RIVER_WEIGHT',0,0,NULLIF('{PODS_USER}',''),current_timestamp,current_timestamp,'Y','UNKNOWN')
                    RETURNING EVENT_ID INTO returnId;

                    INSERT INTO PODS.RIVER_WEIGHT(EVENT_ID,EVENT_GUID,TYPE_CL,QUANTITY,WEIGHT_EACH,SPACING_DISTANCE,DATE_INSTALLED,DESCRIPTION,SOURCE_GCL,COMMENTS)
                    VALUES(returnId,'{EVENT_GUID}',NULLIF('{TYPE_CL}',''),{QUANTITY},{WEIGHT_EACH},{SPACING_DISTANCE},'{DATE_INSTALLED}',NULLIF('{DESCRIPTION}',''),NULLIF('{SOURCE_GCL}',''),NULLIF('{COMMENTS}',''));
					END $$;
                </query>
            </dbCommand>
        </insert>
        <update>
            <dbCommand>
				<param name="CLASS_ID" type="String" direction="Input" default="PODS_RIVER_WEIGHT" /> 
				<var name="POLICY" default="POLICY.xml#UPDATE_PODS_SEM"  />
                <param name="EVENT_GUID" default="" type="String"/>
                <param name="TYPE_CL" default="UNKNOWN" type="String"/>
                <param name="QUANTITY" default="NULL" type="Decimal"/>
                <param name="WEIGHT_EACH" default="NULL" type="Decimal"/>
                <param name="SPACING_DISTANCE" default="NULL" type="Decimal"/>
                <param name="DATE_INSTALLED" default="" type="DateTime"/>
                <param name="DESCRIPTION" default="" type="String"/>
                <param name="SOURCE_GCL" default="UNKNOWN" type="String"/>
                <param name="COMMENTS" default="" type="String"/>
                <param name="ID" type="Int64"/>
                <param name="USER_ID" default="-1" type="Int64"/>
                <query>
                    UPDATE PODS.RIVER_WEIGHT
                    SET 
					EVENT_GUID=case when :EVENT_GUID is null then EVENT_GUID else :EVENT_GUID end,
                    TYPE_CL=case when :TYPE_CL is null then TYPE_CL else :TYPE_CL end,
					QUANTITY=case when :QUANTITY is null then QUANTITY else :QUANTITY end,
					WEIGHT_EACH=case when :WEIGHT_EACH is null then WEIGHT_EACH else :WEIGHT_EACH end,
					SPACING_DISTANCE=case when :SPACING_DISTANCE is null then SPACING_DISTANCE else :SPACING_DISTANCE end,
                    DATE_INSTALLED=case when :DATE_INSTALLED is null then DATE_INSTALLED else :DATE_INSTALLED end,
                    DESCRIPTION=case when :DESCRIPTION is null then DESCRIPTION else :DESCRIPTION end,
                    SOURCE_GCL=case when :SOURCE_GCL is null then SOURCE_GCL else :SOURCE_GCL end,
                    COMMENTS=case when :COMMENTS is null then COMMENTS else :COMMENTS end
                    WHERE EVENT_ID = :ID;
                </query>
            </dbCommand>
        </update>
        <delete>
            <dbCommand>
				<var name="CLASS_ID" type="String" direction="Input" default="PODS_RIVER_WEIGHT" /> 
				<var name="POLICY" default="POLICY.xml#DELETE_PODS_SEM"  />
                <var name="ID" type="Int64"/>
                <var name="USER_ID" default="-1" type="Int64"/>
                <query>
					DO $$
                    BEGIN
                    UPDATE PODS.EVENT_RANGE
                    SET CURRENT_INDICATOR_LF='N'
                    WHERE EVENT_ID = {ID};

                    DELETE FROM PODS.RIVER_WEIGHT
                    WHERE EVENT_ID = {ID};
                    DELETE FROM WEB50.LNK_GATE WHERE LEFT_OBJ_ID = 'PODS_RIVER_WEIGHT/'||CAST({ID} AS VARCHAR(30)) OR RIGHT_OBJ_ID = 'PODS_RIVER_WEIGHT/'||CAST({ID} AS VARCHAR(30));  
					END $$;
                </query>
            </dbCommand>
        </delete>
    </data>
    <data table="ROUTING_NOTE" schema="PODS" id="PODS_ROUTING_NOTE" comment="PODS.ROUTING_NOTE">
        <select>
            <dbQuery idField="ID">
                <param name="USER_ID" default="-1" type="Int64"/>
                <var name="FILTER" default="1=1"/>
                <var name="LPU_ACCESS_FILTER" default="SELECT srv_district_id FROM PODS.SRV_DISTRICT_GCL"/>
                <query>
                    SELECT * FROM (SELECT EVENT_ID ID, t.* FROM PODS.ROUTING_NOTE t) d WHERE {FILTER}
                </query>
            </dbQuery>
        </select>
        <insert>
            <dbCommand>
				<var name="CLASS_ID" type="String" direction="Input" default="PODS_ROUTING_NOTE" /> 
				<var name="POLICY" default="POLICY.xml#INSERT_PODS_SEM"  />
                <var name="EVENT_GUID" default="" type="String"/>
                <var name="TYPE_CL" default="UNKNOWN" type="String"/>
                <var name="SOURCE_NUMBER" default="" type="String"/>
                <var name="ANG_DEGREES" default="NULL" type="Decimal"/>
                <var name="ANG_MINUTES" default="NULL" type="Decimal"/>
                <var name="ANG_SECONDS" default="NULL" type="Decimal"/>
                <var name="BRG_NORTHING" default="" type="String"/>
                <var name="BRG_DEGREES" default="NULL" type="Decimal"/>
                <var name="BRG_MINUTES" default="NULL" type="Decimal"/>
                <var name="BRG_SECONDS" default="NULL" type="Decimal"/>
                <var name="BRG_EASTING" default="" type="String"/>
                <var name="SCALED_GCL" default="UNKNOWN" type="String"/>
                <var name="DESCRIPTION" default="" type="String"/>
                <var name="SOURCE_GCL" default="UNKNOWN" type="String"/>
                <var name="COMMENTS" default="" type="String"/>
                <var name="ID" type="Int64" direction="Output" default="SELECT max(EVENT_ID) id FROM PODS.EVENT_RANGE"/>
                <var name="PODS_USER" type="String"/>
                <var name="USER_ID" default="-1" type="Int64"/>
                <query>
					DO $$
					DECLARE
					returnId integer;
                    BEGIN
                    INSERT INTO PODS.EVENT_RANGE (EVENT_GUID,FEATURE_ID,STATION_ID_BEGIN,STATION_ID_END,PODS_USER,CREATE_DATE,EFFECTIVE_FROM_DATE,CURRENT_INDICATOR_LF,POSITIONING_TYPE_CL)
                    VALUES('{EVENT_GUID}','ROUTING_NOTE',0,0,NULLIF('{PODS_USER}',''),current_timestamp,current_timestamp,'Y','UNKNOWN')
                    RETURNING EVENT_ID INTO returnId;

                    INSERT INTO PODS.ROUTING_NOTE(EVENT_ID,EVENT_GUID,TYPE_CL,SOURCE_NUMBER,ANG_DEGREES,ANG_MINUTES,ANG_SECONDS,BRG_NORTHING,BRG_DEGREES,BRG_MINUTES,BRG_SECONDS,BRG_EASTING,SCALED_GCL,DESCRIPTION,SOURCE_GCL,COMMENTS)
                    VALUES(returnId,'{EVENT_GUID}',NULLIF('{TYPE_CL}',''),NULLIF('{SOURCE_NUMBER}',''),{ANG_DEGREES},{ANG_MINUTES},{ANG_SECONDS},NULLIF('{BRG_NORTHING}',''),{BRG_DEGREES},{BRG_MINUTES},{BRG_SECONDS},NULLIF('{BRG_EASTING}',''),NULLIF('{SCALED_GCL}',''),NULLIF('{DESCRIPTION}',''),NULLIF('{SOURCE_GCL}',''),NULLIF('{COMMENTS}',''));
					END $$;
                </query>
            </dbCommand>
        </insert>
        <update>
            <dbCommand>
				<param name="CLASS_ID" type="String" direction="Input" default="PODS_ROUTING_NOTE" /> 
				<var name="POLICY" default="POLICY.xml#UPDATE_PODS_SEM"  />
                <param name="EVENT_GUID" default="" type="String"/>
                <param name="TYPE_CL" default="UNKNOWN" type="String"/>
                <param name="SOURCE_NUMBER" default="" type="String"/>
                <param name="ANG_DEGREES" default="NULL" type="Decimal"/>
                <param name="ANG_MINUTES" default="NULL" type="Decimal"/>
                <param name="ANG_SECONDS" default="NULL" type="Decimal"/>
                <param name="BRG_NORTHING" default="" type="String"/>
                <param name="BRG_DEGREES" default="NULL" type="Decimal"/>
                <param name="BRG_MINUTES" default="NULL" type="Decimal"/>
                <param name="BRG_SECONDS" default="NULL" type="Decimal"/>
                <param name="BRG_EASTING" default="" type="String"/>
                <param name="SCALED_GCL" default="UNKNOWN" type="String"/>
                <param name="DESCRIPTION" default="" type="String"/>
                <param name="SOURCE_GCL" default="UNKNOWN" type="String"/>
                <param name="COMMENTS" default="" type="String"/>
                <param name="ID" type="Int64"/>
                <param name="USER_ID" default="-1" type="Int64"/>
				<query>
                    UPDATE PODS.ROUTING_NOTE
                    SET 
					EVENT_GUID=case when :EVENT_GUID is null then EVENT_GUID else :EVENT_GUID end,
                    TYPE_CL=case when :TYPE_CL is null then TYPE_CL else :TYPE_CL end,
                    SOURCE_NUMBER=case when :SOURCE_NUMBER is null then SOURCE_NUMBER else :SOURCE_NUMBER end,
                    ANG_DEGREES=case when :ANG_DEGREES is null then ANG_DEGREES else :ANG_DEGREES end,
                    ANG_MINUTES=case when :ANG_MINUTES is null then ANG_MINUTES else :ANG_MINUTES end,
                    ANG_SECONDS=case when :ANG_SECONDS is null then ANG_SECONDS else :ANG_SECONDS end,
                    BRG_NORTHING=case when :BRG_NORTHING is null then BRG_NORTHING else :BRG_NORTHING end,
                    BRG_DEGREES=case when :BRG_DEGREES is null then BRG_DEGREES else :BRG_DEGREES end,
                    BRG_MINUTES=case when :BRG_MINUTES is null then BRG_MINUTES else :BRG_MINUTES end,
                    BRG_SECONDS=case when :BRG_SECONDS is null then BRG_SECONDS else :BRG_SECONDS end,
                    BRG_EASTING=case when :BRG_EASTING is null then BRG_EASTING else :BRG_EASTING end,
                    SCALED_GCL=case when :SCALED_GCL is null then SCALED_GCL else :SCALED_GCL end,
                    DESCRIPTION=case when :DESCRIPTION is null then DESCRIPTION else :DESCRIPTION end,
                    SOURCE_GCL=case when :SOURCE_GCL is null then SOURCE_GCL else :SOURCE_GCL end,
                    COMMENTS=case when :COMMENTS is null then COMMENTS else :COMMENTS end
                    WHERE EVENT_ID = :ID;
                </query>
            </dbCommand>
        </update>
        <delete>
            <dbCommand>
				<var name="CLASS_ID" type="String" direction="Input" default="PODS_ROUTING_NOTE" /> 
				<var name="POLICY" default="POLICY.xml#DELETE_PODS_SEM"  />
                <var name="ID" type="Int64"/>
                <var name="USER_ID" default="-1" type="Int64"/>
                <query>
					DO $$
                    BEGIN
                    UPDATE PODS.EVENT_RANGE
                    SET CURRENT_INDICATOR_LF='N'
                    WHERE EVENT_ID = {ID};

                    DELETE FROM PODS.ROUTING_NOTE
                    WHERE EVENT_ID = {ID};
                    DELETE FROM WEB50.LNK_GATE WHERE LEFT_OBJ_ID = 'PODS_ROUTING_NOTE/'||CAST({ID} AS VARCHAR(30)) OR RIGHT_OBJ_ID = 'PODS_ROUTING_NOTE/'||CAST({ID} AS VARCHAR(30)); 
					END $$;
                </query>
            </dbCommand>
        </delete>
    </data>
    <data table="SCC_PIPE_SUSCEPTIBILITY" schema="PODS" id="PODS_SCC_PIPE_SUSCEPTIBILITY" comment="PODS.SCC_PIPE_SUSCEPTIBILITY">
        <select>
            <dbQuery idField="ID">
                <param name="USER_ID" default="-1" type="Int64"/>
                <var name="FILTER" default="1=1"/>
                <var name="LPU_ACCESS_FILTER" default="SELECT srv_district_id FROM PODS.SRV_DISTRICT_GCL"/>
                <query>
                    SELECT * FROM (SELECT EVENT_ID ID, t.* FROM PODS.SCC_PIPE_SUSCEPTIBILITY t) d WHERE {FILTER}
                </query>
            </dbQuery>
        </select>
        <insert>
            <dbCommand>
				<var name="CLASS_ID" type="String" direction="Input" default="PODS_SCC_PIPE_SUSCEPTIBILITY" /> 
				<var name="POLICY" default="POLICY.xml#INSERT_PODS_SEM"  />
                <var name="EVENT_GUID" default="" type="String"/>
                <var name="SUSCEPTIBILITY_CL" default="UNKNOWN" type="String"/>
                <var name="DESCRIPTION" default="" type="String"/>
                <var name="SOURCE_GCL" default="UNKNOWN" type="String"/>
                <var name="COMMENTS" default="" type="String"/>
                <var name="ID" type="Int64" direction="Output" default="SELECT max(EVENT_ID) id FROM PODS.EVENT_RANGE"/>
                <var name="PODS_USER" type="String"/>
                <var name="USER_ID" default="-1" type="Int64"/>
                <query>
					DO $$
					DECLARE
					returnId integer;
                    BEGIN
                    INSERT INTO PODS.EVENT_RANGE (EVENT_GUID,FEATURE_ID,STATION_ID_BEGIN,STATION_ID_END,PODS_USER,CREATE_DATE,EFFECTIVE_FROM_DATE,CURRENT_INDICATOR_LF,POSITIONING_TYPE_CL)
                    VALUES('{EVENT_GUID}','SCC_PIPE_SUS',0,0,NULLIF('{PODS_USER}',''),current_timestamp,current_timestamp,'Y','UNKNOWN')
                    RETURNING EVENT_ID INTO returnId;

                    INSERT INTO PODS.SCC_PIPE_SUSCEPTIBILITY(EVENT_ID,EVENT_GUID,SUSCEPTIBILITY_CL,DESCRIPTION,SOURCE_GCL,COMMENTS)
                    VALUES(returnId,'{EVENT_GUID}','{SUSCEPTIBILITY_CL}',NULLIF('{DESCRIPTION}',''),NULLIF('{SOURCE_GCL}',''),NULLIF('{COMMENTS}',''));
					END $$;
                </query>
            </dbCommand>
        </insert>
        <update>
            <dbCommand>
				<param name="CLASS_ID" type="String" direction="Input" default="PODS_SCC_PIPE_SUSCEPTIBILITY" /> 
				<var name="POLICY" default="POLICY.xml#UPDATE_PODS_SEM"  />
                <param name="EVENT_GUID" default="" type="String"/>
                <param name="SUSCEPTIBILITY_CL" default="UNKNOWN" type="String"/>
                <param name="DESCRIPTION" default="" type="String"/>
                <param name="SOURCE_GCL" default="UNKNOWN" type="String"/>
                <param name="COMMENTS" default="" type="String"/>
                <param name="ID" type="Int64"/>
                <param name="USER_ID" default="-1" type="Int64"/>
                <query>
                    UPDATE PODS.SCC_PIPE_SUSCEPTIBILITY
                    SET EVENT_GUID=case when :EVENT_GUID is null then EVENT_GUID else :EVENT_GUID end,
					SUSCEPTIBILITY_CL=case when :SUSCEPTIBILITY_CL is null then SUSCEPTIBILITY_CL else :SUSCEPTIBILITY_CL end,
                    DESCRIPTION=case when :DESCRIPTION is null then DESCRIPTION else :DESCRIPTION end,
                    SOURCE_GCL=case when :SOURCE_GCL is null then SOURCE_GCL else :SOURCE_GCL end,
                    COMMENTS=case when :COMMENTS is null then COMMENTS else :COMMENTS end
                    WHERE EVENT_ID = :ID;
                </query>
            </dbCommand>
        </update>
        <delete>
            <dbCommand>
				<var name="CLASS_ID" type="String" direction="Input" default="PODS_SCC_PIPE_SUSCEPTIBILITY" /> 
				<var name="POLICY" default="POLICY.xml#DELETE_PODS_SEM"  />
                <var name="ID" type="Int64"/>
                <var name="USER_ID" default="-1" type="Int64"/>
                <query>
					DO $$
                    BEGIN
                    UPDATE PODS.EVENT_RANGE
                    SET CURRENT_INDICATOR_LF='N'
                    WHERE EVENT_ID = {ID};

                    DELETE FROM PODS.SCC_PIPE_SUSCEPTIBILITY
                    WHERE EVENT_ID = {ID};
                    DELETE FROM WEB50.LNK_GATE WHERE LEFT_OBJ_ID = 'PODS_SCC_PIPE_SUSCEPTIBILITY/'||CAST({ID} AS VARCHAR(30)) OR RIGHT_OBJ_ID = 'PODS_SCC_PIPE_SUSCEPTIBILITY/'||CAST({ID} AS VARCHAR(30)); 
					END $$;
                </query>
            </dbCommand>
        </delete>
    </data>
    <data table="SCC_SOIL_POTENTIAL" schema="PODS" id="PODS_SCC_SOIL_POTENTIAL" comment="PODS.SCC_SOIL_POTENTIAL">
        <select>
            <dbQuery idField="ID">
                <param name="USER_ID" default="-1" type="Int64"/>
                <var name="FILTER" default="1=1"/>
                <var name="LPU_ACCESS_FILTER" default="SELECT srv_district_id FROM PODS.SRV_DISTRICT_GCL"/>
                <query>
                    SELECT * FROM (SELECT EVENT_ID ID, t.* FROM PODS.SCC_SOIL_POTENTIAL t) d WHERE {FILTER}
                </query>
            </dbQuery>
        </select>
        <insert>
            <dbCommand>
				<var name="CLASS_ID" type="String" direction="Input" default="PODS_SCC_SOIL_POTENTIAL" /> 
				<var name="POLICY" default="POLICY.xml#INSERT_PODS_SEM"  />
                <var name="EVENT_GUID" default="" type="String"/>
                <var name="POTENTIAL_CL" default="UNKNOWN" type="String"/>
                <var name="DESCRIPTION" default="" type="String"/>
                <var name="SOURCE_GCL" default="UNKNOWN" type="String"/>
                <var name="COMMENTS" default="" type="String"/>
                <var name="ID" type="Int64" direction="Output" default="SELECT max(EVENT_ID) id FROM PODS.EVENT_RANGE"/>
                <var name="PODS_USER" type="String"/>
                <var name="USER_ID" default="-1" type="Int64"/>
                <query>
					DO $$
					DECLARE
					returnId integer;
                    BEGIN
                    INSERT INTO PODS.EVENT_RANGE (EVENT_GUID,FEATURE_ID,STATION_ID_BEGIN,STATION_ID_END,PODS_USER,CREATE_DATE,EFFECTIVE_FROM_DATE,CURRENT_INDICATOR_LF,POSITIONING_TYPE_CL)
                    VALUES('{EVENT_GUID}','SCC_SOIL_PTNT',0,0,NULLIF('{PODS_USER}',''),current_timestamp,current_timestamp,'Y','UNKNOWN')
                    RETURNING EVENT_ID INTO returnId;

                    INSERT INTO PODS.SCC_SOIL_POTENTIAL(EVENT_ID,EVENT_GUID,POTENTIAL_CL,DESCRIPTION,SOURCE_GCL,COMMENTS)
                    VALUES(returnId,'{EVENT_GUID}','{POTENTIAL_CL}',NULLIF('{DESCRIPTION}',''),NULLIF('{SOURCE_GCL}',''),NULLIF('{COMMENTS}',''));
					END $$;
                </query>
            </dbCommand>
        </insert>
        <update>
            <dbCommand>
				<param name="CLASS_ID" type="String" direction="Input" default="PODS_SCC_SOIL_POTENTIAL" /> 
				<var name="POLICY" default="POLICY.xml#UPDATE_PODS_SEM"  />
                <param name="EVENT_GUID" default="" type="String"/>
                <param name="POTENTIAL_CL" default="UNKNOWN" type="String"/>
                <param name="DESCRIPTION" default="" type="String"/>
                <param name="SOURCE_GCL" default="UNKNOWN" type="String"/>
                <param name="COMMENTS" default="" type="String"/>
                <param name="ID" type="Int64"/>
                <param name="USER_ID" default="-1" type="Int64"/>
                <query>
                    UPDATE PODS.SCC_SOIL_POTENTIAL
                    SET 
					EVENT_GUID=case when :EVENT_GUID is null then EVENT_GUID else :EVENT_GUID end,
					POTENTIAL_CL=case when :POTENTIAL_CL is null then POTENTIAL_CL else :POTENTIAL_CL end,
                    DESCRIPTION=case when :DESCRIPTION is null then DESCRIPTION else :DESCRIPTION end,
                    SOURCE_GCL=case when :SOURCE_GCL is null then SOURCE_GCL else :SOURCE_GCL end,
                    COMMENTS=case when :COMMENTS is null then COMMENTS else :COMMENTS end
                    WHERE EVENT_ID = :ID;
                </query>
            </dbCommand>
        </update>
        <delete>
            <dbCommand>
				<var name="CLASS_ID" type="String" direction="Input" default="PODS_SCC_SOIL_POTENTIAL" /> 
				<var name="POLICY" default="POLICY.xml#DELETE_PODS_SEM"  />
                <var name="ID" type="Int64"/>
                <var name="USER_ID" default="-1" type="Int64"/>
                <query>
					DO $$
                    BEGIN
                    UPDATE PODS.EVENT_RANGE
                    SET CURRENT_INDICATOR_LF='N'
                    WHERE EVENT_ID = {ID};

                    DELETE FROM PODS.SCC_SOIL_POTENTIAL
                    WHERE EVENT_ID = {ID};
                    DELETE FROM WEB50.LNK_GATE WHERE LEFT_OBJ_ID = 'PODS_SCC_SOIL_POTENTIAL/'||CAST({ID} AS VARCHAR(30)) OR RIGHT_OBJ_ID = 'PODS_SCC_SOIL_POTENTIAL/'||CAST({ID} AS VARCHAR(30));
					END $$;

                </query>
            </dbCommand>
        </delete>
    </data>
    <data table="SHEET_NOTE" schema="PODS" id="PODS_SHEET_NOTE" comment="PODS.SHEET_NOTE">
        <select>
            <dbQuery idField="ID">
                <param name="USER_ID" default="-1" type="Int64"/>
                <var name="FILTER" default="1=1"/>
                <var name="LPU_ACCESS_FILTER" default="SELECT srv_district_id FROM PODS.SRV_DISTRICT_GCL"/>
                <query>
                    SELECT * FROM (SELECT EVENT_ID ID, t.* FROM PODS.SHEET_NOTE t WHERE TYPE_CL IN ('C1400057','C1400058')) d WHERE {FILTER}
                </query>
            </dbQuery>
        </select>
        <insert>
            <dbCommand>
				<var name="CLASS_ID" type="String" direction="Input" default="PODS_SHEET_NOTE" /> 
				<var name="POLICY" default="POLICY.xml#INSERT_PODS_SEM"  />
                <var name="EVENT_GUID" default="" type="String"/>
                <var name="TYPE_CL" default="UNKNOWN" type="String"/>
                <var name="SOURCE_NUMBER" default="" type="String"/>
                <var name="SCALED_GCL" default="UNKNOWN" type="String"/>
                <var name="DIRECTION_GCL" default="UNKNOWN" type="String"/>
                <var name="INTERSECTION_ANGLE" default="NULL" type="Decimal"/>
                <var name="WIDTH" default="NULL" type="Decimal"/>
                <var name="DESCRIPTION" default="" type="String"/>
                <var name="SOURCE_GCL" default="UNKNOWN" type="String"/>
                <var name="COMMENTS" default="" type="String"/>
                <var name="ID" type="Int64" direction="Output" default="SELECT max(EVENT_ID) id FROM PODS.EVENT_RANGE"/>
                <var name="PODS_USER" type="String"/>
                <var name="USER_ID" default="-1" type="Int64"/>
                <query>
					DO $$
					DECLARE
					returnId integer;
                    BEGIN
                    INSERT INTO PODS.EVENT_RANGE (EVENT_GUID,FEATURE_ID,STATION_ID_BEGIN,STATION_ID_END,PODS_USER,CREATE_DATE,EFFECTIVE_FROM_DATE,CURRENT_INDICATOR_LF,POSITIONING_TYPE_CL)
                    VALUES('{EVENT_GUID}','SHEET_NOTE',0,0,NULLIF('{PODS_USER}',''),current_timestamp,current_timestamp,'Y','UNKNOWN')
                    RETURNING EVENT_ID INTO returnId;

                    INSERT INTO PODS.SHEET_NOTE(EVENT_ID,EVENT_GUID,TYPE_CL,SOURCE_NUMBER,SCALED_GCL,DIRECTION_GCL,INTERSECTION_ANGLE,WIDTH,DESCRIPTION,SOURCE_GCL,COMMENTS)
                    VALUES(returnId,'{EVENT_GUID}',NULLIF('{TYPE_CL}',''),NULLIF('{SOURCE_NUMBER}',''),NULLIF('{SCALED_GCL}',''),NULLIF('{DIRECTION_GCL}',''),{INTERSECTION_ANGLE},{WIDTH},NULLIF('{DESCRIPTION}',''),NULLIF('{SOURCE_GCL}',''),NULLIF('{COMMENTS}',''));
					END $$;
                </query>
            </dbCommand>
        </insert>
        <update>
            <dbCommand>
				<param name="CLASS_ID" type="String" direction="Input" default="PODS_SHEET_NOTE" /> 
				<var name="POLICY" default="POLICY.xml#UPDATE_PODS_SEM"  />
                <param name="EVENT_GUID" default="" type="String"/>
                <param name="TYPE_CL" default="UNKNOWN" type="String"/>
                <param name="SOURCE_NUMBER" default="" type="String"/>
                <param name="SCALED_GCL" default="UNKNOWN" type="String"/>
                <param name="DIRECTION_GCL" default="UNKNOWN" type="String"/>
                <param name="INTERSECTION_ANGLE" default="NULL" type="Decimal"/>
                <param name="WIDTH" default="NULL" type="Decimal"/>
                <param name="DESCRIPTION" default="" type="String"/>
                <param name="SOURCE_GCL" default="UNKNOWN" type="String"/>
                <param name="COMMENTS" default="" type="String"/>
                <param name="ID" type="Int64"/>
                <param name="USER_ID" default="-1" type="Int64"/>
                <query>
                    UPDATE PODS.SHEET_NOTE
                    SET 
					EVENT_GUID=case when :EVENT_GUID is null then EVENT_GUID else :EVENT_GUID end,
                    TYPE_CL=case when :TYPE_CL is null then TYPE_CL else :TYPE_CL end,
                    SOURCE_NUMBER=case when :SOURCE_NUMBER is null then SOURCE_NUMBER else :SOURCE_NUMBER end,
                    SCALED_GCL=case when :SCALED_GCL is null then SCALED_GCL else :SCALED_GCL end,
                    DIRECTION_GCL=case when :DIRECTION_GCL is null then DIRECTION_GCL else :DIRECTION_GCL end,
					INTERSECTION_ANGLE=case when :INTERSECTION_ANGLE is null then INTERSECTION_ANGLE else :INTERSECTION_ANGLE end,
                    WIDTH=case when :WIDTH is null then WIDTH else :WIDTH end,
                    DESCRIPTION=case when :DESCRIPTION is null then DESCRIPTION else :DESCRIPTION end,
                    SOURCE_GCL=case when :SOURCE_GCL is null then SOURCE_GCL else :SOURCE_GCL end,
                    COMMENTS=case when :COMMENTS is null then COMMENTS else :COMMENTS end
                    WHERE EVENT_ID = :ID;
                </query>
            </dbCommand>
        </update>
        <delete>
            <dbCommand>
				<var name="CLASS_ID" type="String" direction="Input" default="PODS_SHEET_NOTE" /> 
				<var name="POLICY" default="POLICY.xml#DELETE_PODS_SEM"  />
                <var name="ID" type="Int64"/>
                <var name="USER_ID" default="-1" type="Int64"/>
                <query>
					DO $$
                    BEGIN
                    UPDATE PODS.EVENT_RANGE
                    SET CURRENT_INDICATOR_LF='N'
                    WHERE EVENT_ID = {ID};

                    DELETE FROM PODS.SHEET_NOTE
                    WHERE EVENT_ID = {ID};
                    DELETE FROM WEB50.LNK_GATE WHERE LEFT_OBJ_ID = 'PODS_SHEET_NOTE/'||CAST({ID} AS VARCHAR(30)) OR RIGHT_OBJ_ID = 'PODS_SHEET_NOTE/'||CAST({ID} AS VARCHAR(30)); 
					END $$;
                </query>
            </dbCommand>
        </delete>
    </data>
    <data table="SLEEVE" schema="PODS" id="PODS_SLEEVE" comment="PODS.SLEEVE">
        <select>
            <dbQuery idField="ID">
                <param name="USER_ID" default="-1" type="Int64"/>
                <var name="FILTER" default="1=1"/>
                <var name="LPU_ACCESS_FILTER" default="SELECT srv_district_id FROM PODS.SRV_DISTRICT_GCL"/>
                <query>
                    SELECT * FROM (SELECT EVENT_ID ID, t.* FROM PODS.SLEEVE t) d WHERE {FILTER}
                </query>
            </dbQuery>
        </select>
        <insert>
            <dbCommand>
				<var name="CLASS_ID" type="String" direction="Input" default="PODS_SLEEVE" /> 
				<var name="POLICY" default="POLICY.xml#INSERT_PODS_SEM"  />
                <var name="EVENT_GUID" default="" type="String"/>
                <var name="TYPE_CL" default="UNKNOWN" type="String"/>
                <var name="NOMINAL_DIAMETER_GCL" default="0" type="Decimal"/>
                <var name="NOMINAL_WALL_THICKNESS_GCL" default="0" type="Decimal"/>
                <var name="MANUFACTURER_CL" default="UNKNOWN" type="String"/>
                <var name="DATE_MANUFACTURED" default="" type="DateTime"/>
                <var name="SPECIFICATION_CL" default="UNKNOWN" type="String"/>
                <var name="MATERIAL_CL" default="UNKNOWN" type="String"/>
                <var name="MILL_TEST_PRESSURE" default="NULL" type="Decimal"/>
                <var name="NOMINAL_PRESSURE_RATING" default="NULL" type="Decimal"/>
                <var name="DATE_INSTALLED" default="" type="DateTime"/>
                <var name="DESCRIPTION" default="" type="String"/>
                <var name="SOURCE_GCL" default="UNKNOWN" type="String"/>
                <var name="COMMENTS" default="" type="String"/>
                <var name="ID" type="Int64" direction="Output" default="SELECT max(EVENT_ID) id FROM PODS.EVENT_RANGE"/>
                <var name="PODS_USER" type="String"/>
                <var name="USER_ID" default="-1" type="Int64"/>
                <query>
					DO $$
					DECLARE
					returnId integer;
                    BEGIN
                    INSERT INTO PODS.EVENT_RANGE (EVENT_GUID,FEATURE_ID,STATION_ID_BEGIN,STATION_ID_END,PODS_USER,CREATE_DATE,EFFECTIVE_FROM_DATE,CURRENT_INDICATOR_LF,POSITIONING_TYPE_CL)
                    VALUES('{EVENT_GUID}','SLEEVE',0,0,NULLIF('{PODS_USER}',''),current_timestamp,current_timestamp,'Y','UNKNOWN')
                    RETURNING EVENT_ID INTO returnId;

                    INSERT INTO PODS.SLEEVE(EVENT_ID,EVENT_GUID,TYPE_CL,NOMINAL_DIAMETER_GCL,NOMINAL_WALL_THICKNESS_GCL,MANUFACTURER_CL,DATE_MANUFACTURED,SPECIFICATION_CL,MATERIAL_CL,MILL_TEST_PRESSURE,NOMINAL_PRESSURE_RATING,DATE_INSTALLED,DESCRIPTION,SOURCE_GCL,COMMENTS)
                    VALUES(returnId,'{EVENT_GUID}',NULLIF('{TYPE_CL}',''),{NOMINAL_DIAMETER_GCL},{NOMINAL_WALL_THICKNESS_GCL},NULLIF('{MANUFACTURER_CL}',''),'{DATE_MANUFACTURED}',NULLIF('{SPECIFICATION_CL}',''),NULLIF('{MATERIAL_CL}',''),{MILL_TEST_PRESSURE},{NOMINAL_PRESSURE_RATING},'{DATE_INSTALLED}',NULLIF('{DESCRIPTION}',''),NULLIF('{SOURCE_GCL}',''),NULLIF('{COMMENTS}',''));
					END $$;
                </query>
            </dbCommand>
        </insert>
        <update>
            <dbCommand>
				<param name="CLASS_ID" type="String" direction="Input" default="PODS_SLEEVE" /> 
				<var name="POLICY" default="POLICY.xml#UPDATE_PODS_SEM"  />
                <param name="EVENT_GUID" default="" type="String"/>
                <param name="TYPE_CL" default="UNKNOWN" type="String"/>
                <param name="NOMINAL_DIAMETER_GCL" default="0" type="Decimal"/>
                <param name="NOMINAL_WALL_THICKNESS_GCL" default="0" type="Decimal"/>
                <param name="MANUFACTURER_CL" default="UNKNOWN" type="String"/>
                <param name="DATE_MANUFACTURED" default="" type="DateTime"/>
                <param name="SPECIFICATION_CL" default="UNKNOWN" type="String"/>
                <param name="MATERIAL_CL" default="UNKNOWN" type="String"/>
                <param name="MILL_TEST_PRESSURE" default="NULL" type="Decimal"/>
                <param name="NOMINAL_PRESSURE_RATING" default="NULL" type="Decimal"/>
                <param name="DATE_INSTALLED" default="" type="DateTime"/>
                <param name="DESCRIPTION" default="" type="String"/>
                <param name="SOURCE_GCL" default="UNKNOWN" type="String"/>
                <param name="COMMENTS" default="" type="String"/>
                <param name="ID" type="Int64"/>
                <param name="USER_ID" default="-1" type="Int64"/>
                <query>
                    UPDATE PODS.SLEEVE
                    SET 
					EVENT_GUID=case when :EVENT_GUID is null then EVENT_GUID else :EVENT_GUID end,
                    TYPE_CL=case when :TYPE_CL is null then TYPE_CL else :TYPE_CL end,
                    NOMINAL_DIAMETER_GCL=case when :NOMINAL_DIAMETER_GCL is null then NOMINAL_DIAMETER_GCL else :NOMINAL_DIAMETER_GCL end,
                    NOMINAL_WALL_THICKNESS_GCL=case when :NOMINAL_WALL_THICKNESS_GCL is null then NOMINAL_WALL_THICKNESS_GCL else :NOMINAL_WALL_THICKNESS_GCL end,
                    MANUFACTURER_CL=case when :MANUFACTURER_CL is null then MANUFACTURER_CL else :MANUFACTURER_CL end,
                    DATE_MANUFACTURED=case when :DATE_MANUFACTURED is null then DATE_MANUFACTURED else :DATE_MANUFACTURED end,
                    SPECIFICATION_CL=case when :SPECIFICATION_CL is null then SPECIFICATION_CL else :SPECIFICATION_CL end,
					MATERIAL_CL=case when :MATERIAL_CL is null then MATERIAL_CL else :MATERIAL_CL end,
                    MILL_TEST_PRESSURE=case when :MILL_TEST_PRESSURE is null then MILL_TEST_PRESSURE else :MILL_TEST_PRESSURE end,
                    NOMINAL_PRESSURE_RATING=case when :NOMINAL_PRESSURE_RATING is null then NOMINAL_PRESSURE_RATING else :NOMINAL_PRESSURE_RATING end,
                    DATE_INSTALLED=case when :DATE_INSTALLED is null then DATE_INSTALLED else :DATE_INSTALLED end,
                    DESCRIPTION=case when :DESCRIPTION is null then DESCRIPTION else :DESCRIPTION end,
                    SOURCE_GCL=case when :SOURCE_GCL is null then SOURCE_GCL else :SOURCE_GCL end,
                    COMMENTS=case when :COMMENTS is null then COMMENTS else :COMMENTS end
                    WHERE EVENT_ID = :ID;
                </query>
            </dbCommand>
        </update>
        <delete>
            <dbCommand>
				<var name="CLASS_ID" type="String" direction="Input" default="PODS_SLEEVE" /> 
				<var name="POLICY" default="POLICY.xml#DELETE_PODS_SEM"  />
                <var name="ID" type="Int64"/>
                <var name="USER_ID" default="-1" type="Int64"/>
                <query>
					DO $$
                    BEGIN
                    UPDATE PODS.EVENT_RANGE
                    SET CURRENT_INDICATOR_LF='N'
                    WHERE EVENT_ID = {ID};

                    DELETE FROM PODS.SLEEVE
                    WHERE EVENT_ID = {ID};
                    DELETE FROM WEB50.LNK_GATE WHERE LEFT_OBJ_ID = 'PODS_SLEEVE/'||CAST({ID} AS VARCHAR(30)) OR RIGHT_OBJ_ID = 'PODS_SLEEVE/'||CAST({ID} AS VARCHAR(30)); 
					END $$;
                </query>
            </dbCommand>
        </delete>
    </data>
    <data table="SRV_DISTRICT_BOUNDARY" schema="PODS" id="PODS_SRV_DISTRICT_BOUNDARY" comment="PODS.SRV_DISTRICT_BOUNDARY">
        <select>
            <dbQuery idField="ID">
                <param name="USER_ID" default="-1" type="Int64"/>
                <var name="FILTER" default="1=1"/>
                <var name="LPU_ACCESS_FILTER" default="SELECT srv_district_id FROM PODS.SRV_DISTRICT_GCL"/>
                <query>
                    SELECT * FROM (SELECT EVENT_ID ID, t.* FROM PODS.SRV_DISTRICT_BOUNDARY t) d WHERE {FILTER}
                </query>
            </dbQuery>
        </select>
        <insert>
            <dbCommand>
				<var name="CLASS_ID" type="String" direction="Input" default="PODS_SRV_DISTRICT_BOUNDARY" /> 
				<var name="POLICY" default="POLICY.xml#INSERT_PODS_SEM"  />
                <var name="SRV_DISTRICT_ID" default="NULL" type="Decimal"/>
                <var name="SRV_DISTRICT_GUID" default="" type="String"/>
                <var name="EVENT_GUID" default="" type="String"/>
                <var name="DESCRIPTION" default="" type="String"/>
                <var name="SOURCE_GCL" default="UNKNOWN" type="String"/>
                <var name="COMMENTS" default="" type="String"/>
                <var name="ID" type="Int64" direction="Output" default="SELECT max(EVENT_ID) id FROM PODS.EVENT_RANGE"/>
                <var name="PODS_USER" type="String"/>
                <var name="USER_ID" default="-1" type="Int64"/>
                <query>
					DO $$
					DECLARE
					returnId integer;
                    BEGIN
                    INSERT INTO PODS.EVENT_RANGE (EVENT_GUID,FEATURE_ID,STATION_ID_BEGIN,STATION_ID_END,PODS_USER,CREATE_DATE,EFFECTIVE_FROM_DATE,CURRENT_INDICATOR_LF,POSITIONING_TYPE_CL)
                    VALUES('{EVENT_GUID}','SRV_DISTR_BND',0,0,NULLIF('{PODS_USER}',''),current_timestamp,current_timestamp,'Y','UNKNOWN')
                    RETURNING EVENT_ID INTO returnId;

                    INSERT INTO PODS.SRV_DISTRICT_BOUNDARY(EVENT_ID,SRV_DISTRICT_ID,SRV_DISTRICT_GUID,EVENT_GUID,DESCRIPTION,SOURCE_GCL,COMMENTS)
                    VALUES(returnId,{SRV_DISTRICT_ID},'{SRV_DISTRICT_GUID}','{EVENT_GUID}',NULLIF('{DESCRIPTION}',''),NULLIF('{SOURCE_GCL}',''),NULLIF('{COMMENTS}',''));
					END $$;
                </query>
            </dbCommand>
        </insert>
        <update>
            <dbCommand>
				<param name="CLASS_ID" type="String" direction="Input" default="PODS_SRV_DISTRICT_BOUNDARY" /> 
				<var name="POLICY" default="POLICY.xml#UPDATE_PODS_SEM"  />
                <param name="SRV_DISTRICT_ID" default="NULL" type="Decimal"/>
                <param name="SRV_DISTRICT_GUID" default="" type="String"/>
                <param name="EVENT_GUID" default="" type="String"/>
                <param name="DESCRIPTION" default="" type="String"/>
                <param name="SOURCE_GCL" default="UNKNOWN" type="String"/>
                <param name="COMMENTS" default="" type="String"/>
                <param name="ID" type="Int64"/>
                <param name="USER_ID" default="-1" type="Int64"/>
                <query>
                    UPDATE PODS.SRV_DISTRICT_BOUNDARY
                    SET 
					SRV_DISTRICT_ID=case when :SRV_DISTRICT_ID is null then SRV_DISTRICT_ID else :SRV_DISTRICT_ID end,
					SRV_DISTRICT_GUID=case when :SRV_DISTRICT_GUID is null then SRV_DISTRICT_GUID else :SRV_DISTRICT_GUID end,
					EVENT_GUID=case when :EVENT_GUID is null then EVENT_GUID else :EVENT_GUID end,
                    DESCRIPTION=case when :DESCRIPTION is null then DESCRIPTION else :DESCRIPTION end,
                    SOURCE_GCL=case when :SOURCE_GCL is null then SOURCE_GCL else :SOURCE_GCL end,
                    COMMENTS=case when :COMMENTS is null then COMMENTS else :COMMENTS end
                    WHERE EVENT_ID = :ID;
                </query>
            </dbCommand>
        </update>
        <delete>
            <dbCommand>
				<var name="CLASS_ID" type="String" direction="Input" default="PODS_SRV_DISTRICT_BOUNDARY" /> 
				<var name="POLICY" default="POLICY.xml#DELETE_PODS_SEM"  />
                <var name="ID" type="Int64"/>
                <var name="USER_ID" default="-1" type="Int64"/>
                <query>
					DO $$
                    BEGIN
                    UPDATE PODS.EVENT_RANGE
                    SET CURRENT_INDICATOR_LF='N'
                    WHERE EVENT_ID = {ID};

                    DELETE FROM PODS.SRV_DISTRICT_BOUNDARY
                    WHERE EVENT_ID = {ID};
                    DELETE FROM WEB50.LNK_GATE WHERE LEFT_OBJ_ID = 'PODS_SRV_DISTRICT_BOUNDARY/'||CAST({ID} AS VARCHAR(30)) OR RIGHT_OBJ_ID = 'PODS_SRV_DISTRICT_BOUNDARY/'||CAST({ID} AS VARCHAR(30)); 
					END $$;
                </query>
            </dbCommand>
        </delete>
    </data>
    <data table="STABILIZATION" schema="PODS" id="PODS_STABILIZATION" comment="PODS.STABILIZATION">
        <select>
            <dbQuery idField="ID">
                <param name="USER_ID" default="-1" type="Int64"/>
                <var name="FILTER" default="1=1"/>
                <var name="LPU_ACCESS_FILTER" default="SELECT srv_district_id FROM PODS.SRV_DISTRICT_GCL"/>
                <query>
                    SELECT * FROM (SELECT EVENT_ID ID, t.* FROM PODS.STABILIZATION t) d WHERE {FILTER}
                </query>
            </dbQuery>
        </select>
        <insert>
            <dbCommand>
				<var name="CLASS_ID" type="String" direction="Input" default="PODS_STABILIZATION" /> 
				<var name="POLICY" default="POLICY.xml#INSERT_PODS_SEM"  />
                <var name="EVENT_GUID" default="" type="String"/>
                <var name="TYPE_CL" default="UNKNOWN" type="String"/>
                <var name="SERIAL_NUMBER" default="" type="String"/>
                <var name="PART_NUMBER" default="" type="String"/>
                <var name="WIDTH" default="NULL" type="Decimal"/>
                <var name="HEIGHT" default="NULL" type="Decimal"/>
                <var name="THICKNESS" default="NULL" type="Decimal"/>
                <var name="DRY_WEIGHT" default="NULL" type="Decimal"/>
                <var name="MANUFACTURER_CL" default="UNKNOWN" type="String"/>
                <var name="DATE_MANUFACTURED" default="" type="DateTime"/>
                <var name="DATE_INSTALLED" default="" type="DateTime"/>
                <var name="DESCRIPTION" default="" type="String"/>
                <var name="SOURCE_GCL" default="UNKNOWN" type="String"/>
                <var name="COMMENTS" default="" type="String"/>
                <var name="ID" type="Int64" direction="Output" default="SELECT max(EVENT_ID) id FROM PODS.EVENT_RANGE"/>
                <var name="PODS_USER" type="String"/>
                <var name="USER_ID" default="-1" type="Int64"/>
                <query>
					DO $$
					DECLARE
					returnId integer;
                    BEGIN
                    INSERT INTO PODS.EVENT_RANGE (EVENT_GUID,FEATURE_ID,STATION_ID_BEGIN,STATION_ID_END,PODS_USER,CREATE_DATE,EFFECTIVE_FROM_DATE,CURRENT_INDICATOR_LF,POSITIONING_TYPE_CL)
                    VALUES('{EVENT_GUID}','STABILIZATION',0,0,NULLIF('{PODS_USER}',''),current_timestamp,current_timestamp,'Y','UNKNOWN')
                    RETURNING EVENT_ID INTO returnId;

                    INSERT INTO PODS.STABILIZATION(EVENT_ID,EVENT_GUID,TYPE_CL,SERIAL_NUMBER,PART_NUMBER,WIDTH,HEIGHT,THICKNESS,DRY_WEIGHT,MANUFACTURER_CL,DATE_MANUFACTURED,DATE_INSTALLED,DESCRIPTION,SOURCE_GCL,COMMENTS)
                    VALUES(returnId,'{EVENT_GUID}',NULLIF('{TYPE_CL}',''),NULLIF('{SERIAL_NUMBER}',''),NULLIF('{PART_NUMBER}',''),{WIDTH},{HEIGHT},{THICKNESS},{DRY_WEIGHT},NULLIF('{MANUFACTURER_CL}',''),'{DATE_MANUFACTURED}','{DATE_INSTALLED}',NULLIF('{DESCRIPTION}',''),NULLIF('{SOURCE_GCL}',''),NULLIF('{COMMENTS}',''));
					END $$;
                </query>
            </dbCommand>
        </insert>
        <update>
            <dbCommand>
				<param name="CLASS_ID" type="String" direction="Input" default="PODS_STABILIZATION" /> 
				<var name="POLICY" default="POLICY.xml#UPDATE_PODS_SEM"  />
                <param name="EVENT_GUID" default="" type="String"/>
                <param name="TYPE_CL" default="UNKNOWN" type="String"/>
                <param name="SERIAL_NUMBER" default="" type="String"/>
                <param name="PART_NUMBER" default="" type="String"/>
                <param name="WIDTH" default="NULL" type="Decimal"/>
                <param name="HEIGHT" default="NULL" type="Decimal"/>
                <param name="THICKNESS" default="NULL" type="Decimal"/>
                <param name="DRY_WEIGHT" default="NULL" type="Decimal"/>
                <param name="MANUFACTURER_CL" default="UNKNOWN" type="String"/>
                <param name="DATE_MANUFACTURED" default="" type="DateTime"/>
                <param name="DATE_INSTALLED" default="" type="DateTime"/>
                <param name="DESCRIPTION" default="" type="String"/>
                <param name="SOURCE_GCL" default="UNKNOWN" type="String"/>
                <param name="COMMENTS" default="" type="String"/>
                <param name="ID" type="Int64"/>
                <param name="USER_ID" default="-1" type="Int64"/>
                <query>
                    UPDATE PODS.STABILIZATION
                    SET 
					EVENT_GUID=case when :EVENT_GUID is null then EVENT_GUID else :EVENT_GUID end,
                    TYPE_CL=case when :TYPE_CL is null then TYPE_CL else :TYPE_CL end,
                    SERIAL_NUMBER=case when :SERIAL_NUMBER is null then SERIAL_NUMBER else :SERIAL_NUMBER end,
                    PART_NUMBER=case when :PART_NUMBER is null then PART_NUMBER else :PART_NUMBER end,
                    WIDTH=case when :WIDTH is null then WIDTH else :WIDTH end,
                    HEIGHT=case when :HEIGHT is null then HEIGHT else :HEIGHT end,
					THICKNESS=case when :THICKNESS is null then THICKNESS else :THICKNESS end,
					DRY_WEIGHT=case when :DRY_WEIGHT is null then DRY_WEIGHT else :DRY_WEIGHT end,
                    MANUFACTURER_CL=case when :MANUFACTURER_CL is null then MANUFACTURER_CL else :MANUFACTURER_CL end,
                    DATE_MANUFACTURED=case when :DATE_MANUFACTURED is null then DATE_MANUFACTURED else :DATE_MANUFACTURED end,
                    DATE_INSTALLED=case when :DATE_INSTALLED is null then DATE_INSTALLED else :DATE_INSTALLED end,
                    DESCRIPTION=case when :DESCRIPTION is null then DESCRIPTION else :DESCRIPTION end,
                    SOURCE_GCL=case when :SOURCE_GCL is null then SOURCE_GCL else :SOURCE_GCL end,
                    COMMENTS=case when :COMMENTS is null then COMMENTS else :COMMENTS end
                    WHERE EVENT_ID = :ID;
                </query>
            </dbCommand>
        </update>
        <delete>
            <dbCommand>
				<var name="CLASS_ID" type="String" direction="Input" default="PODS_STABILIZATION" /> 
				<var name="POLICY" default="POLICY.xml#DELETE_PODS_SEM"  />
                <var name="ID" type="Int64"/>
                <var name="USER_ID" default="-1" type="Int64"/>
                <query>
					DO $$
                    BEGIN
                    UPDATE PODS.EVENT_RANGE
                    SET CURRENT_INDICATOR_LF='N'
                    WHERE EVENT_ID = {ID};

                    DELETE FROM PODS.STABILIZATION
                    WHERE EVENT_ID = {ID};
                    DELETE FROM WEB50.LNK_GATE WHERE LEFT_OBJ_ID = 'PODS_STABILIZATION/'||CAST({ID} AS VARCHAR(30)) OR RIGHT_OBJ_ID = 'PODS_STABILIZATION/'||CAST({ID} AS VARCHAR(30)); 
					END $$;
                </query>
            </dbCommand>
        </delete>
    </data>
    <data table="STATUS_RANGE" schema="PODS" id="PODS_STATUS_RANGE" comment="PODS.STATUS_RANGE">
        <select>
            <dbQuery idField="ID">
                <param name="USER_ID" default="-1" type="Int64"/>
                <var name="FILTER" default="1=1"/>
                <var name="LPU_ACCESS_FILTER" default="SELECT srv_district_id FROM PODS.SRV_DISTRICT_GCL"/>
                <query>
                    SELECT * FROM (SELECT EVENT_ID ID, t.* FROM PODS.STATUS_RANGE t) d WHERE {FILTER}
                </query>
            </dbQuery>
        </select>
        <insert>
            <dbCommand>
				<var name="CLASS_ID" type="String" direction="Input" default="PODS_STATUS_RANGE" /> 
				<var name="POLICY" default="POLICY.xml#INSERT_PODS_SEM"  />
                <var name="EVENT_GUID" default="" type="String"/>
                <var name="OPERATING_STATUS_GCL" default="UNKNOWN" type="String"/>
                <var name="DESCRIPTION" default="" type="String"/>
                <var name="SOURCE_GCL" default="UNKNOWN" type="String"/>
                <var name="COMMENTS" default="" type="String"/>
                <var name="ID" type="Int64" direction="Output" default="SELECT max(EVENT_ID) id FROM PODS.EVENT_RANGE"/>
                <var name="PODS_USER" type="String"/>
                <var name="USER_ID" default="-1" type="Int64"/>
                <query>
					DO $$
					DECLARE
					returnId integer;
                    BEGIN
                    INSERT INTO PODS.EVENT_RANGE (EVENT_GUID,FEATURE_ID,STATION_ID_BEGIN,STATION_ID_END,PODS_USER,CREATE_DATE,EFFECTIVE_FROM_DATE,CURRENT_INDICATOR_LF,POSITIONING_TYPE_CL)
                    VALUES('{EVENT_GUID}','STATUS_RANGE',0,0,NULLIF('{PODS_USER}',''),current_timestamp,current_timestamp,'Y','UNKNOWN')
                    RETURNING EVENT_ID INTO returnId;

                    INSERT INTO PODS.STATUS_RANGE(EVENT_ID,EVENT_GUID,OPERATING_STATUS_GCL,DESCRIPTION,SOURCE_GCL,COMMENTS)
                    VALUES(returnId,'{EVENT_GUID}',NULLIF('{OPERATING_STATUS_GCL}',''),NULLIF('{DESCRIPTION}',''),NULLIF('{SOURCE_GCL}',''),NULLIF('{COMMENTS}',''));
					END $$;
                </query>
            </dbCommand>
        </insert>
        <update>
            <dbCommand>
				<param name="CLASS_ID" type="String" direction="Input" default="PODS_STATUS_RANGE" /> 
				<var name="POLICY" default="POLICY.xml#UPDATE_PODS_SEM"  />
                <param name="EVENT_GUID" default="" type="String"/>
                <param name="OPERATING_STATUS_GCL" default="UNKNOWN" type="String"/>
                <param name="DESCRIPTION" default="" type="String"/>
                <param name="SOURCE_GCL" default="UNKNOWN" type="String"/>
                <param name="COMMENTS" default="" type="String"/>
                <param name="ID" type="Int64"/>
                <param name="USER_ID" default="-1" type="Int64"/>
                <query>
                    UPDATE PODS.STATUS_RANGE
                    SET 
					EVENT_GUID=case when :EVENT_GUID is null then EVENT_GUID else :EVENT_GUID end,
                    OPERATING_STATUS_GCL=case when :OPERATING_STATUS_GCL is null then OPERATING_STATUS_GCL else :OPERATING_STATUS_GCL end,
                    DESCRIPTION=case when :DESCRIPTION is null then DESCRIPTION else :DESCRIPTION end,
                    SOURCE_GCL=case when :SOURCE_GCL is null then SOURCE_GCL else :SOURCE_GCL end,
                    COMMENTS=case when :COMMENTS is null then COMMENTS else :COMMENTS end
                    WHERE EVENT_ID = :ID;
                </query>
            </dbCommand>
        </update>
        <delete>
            <dbCommand>
				<var name="CLASS_ID" type="String" direction="Input" default="PODS_STATUS_RANGE" /> 
				<var name="POLICY" default="POLICY.xml#DELETE_PODS_SEM"  />
                <var name="ID" type="Int64"/>
                <var name="USER_ID" default="-1" type="Int64"/>
                <query>
					DO $$
                    BEGIN
                    UPDATE PODS.EVENT_RANGE
                    SET CURRENT_INDICATOR_LF='N'
                    WHERE EVENT_ID = {ID};

                    DELETE FROM PODS.STATUS_RANGE
                    WHERE EVENT_ID = {ID};
                    DELETE FROM WEB50.LNK_GATE WHERE LEFT_OBJ_ID = 'PODS_STATUS_RANGE/'||CAST({ID} AS VARCHAR(30)) OR RIGHT_OBJ_ID = 'PODS_STATUS_RANGE/'||CAST({ID} AS VARCHAR(30)); 
					END $$;
                </query>
            </dbCommand>
        </delete>
    </data>
    <data table="STRAIGHTENING_VANES" schema="PODS" id="PODS_STRAIGHTENING_VANES" comment="PODS.STRAIGHTENING_VANES">
        <select>
            <dbQuery idField="ID">
                <param name="USER_ID" default="-1" type="Int64"/>
                <var name="FILTER" default="1=1"/>
                <var name="LPU_ACCESS_FILTER" default="SELECT srv_district_id FROM PODS.SRV_DISTRICT_GCL"/>
                <query>
                    SELECT * FROM (SELECT EVENT_ID ID, t.* FROM PODS.STRAIGHTENING_VANES t) d WHERE {FILTER}
                </query>
            </dbQuery>
        </select>
        <insert>
            <dbCommand>
				<var name="CLASS_ID" type="String" direction="Input" default="PODS_STRAIGHTENING_VANES" /> 
				<var name="POLICY" default="POLICY.xml#INSERT_PODS_SEM"  />
                <var name="EVENT_GUID" default="" type="String"/>
                <var name="TYPE_CL" default="UNKNOWN" type="String"/>
                <var name="MANUFACTURER_CL" default="UNKNOWN" type="String"/>
                <var name="MATERIAL_CL" default="UNKNOWN" type="String"/>
                <var name="MODEL" default="" type="String"/>
                <var name="NOMINAL_PIPE_SIZE" default="NULL" type="Decimal"/>
                <var name="NUMBER_OF_VANES" default="NULL" type="Decimal"/>
                <var name="PRESSURE_DROP" default="NULL" type="Decimal"/>
                <var name="DATE_INSTALLED" default="" type="DateTime"/>
                <var name="DESCRIPTION" default="" type="String"/>
                <var name="SOURCE_GCL" default="UNKNOWN" type="String"/>
                <var name="COMMENTS" default="" type="String"/>
                <var name="ID" type="Int64" direction="Output" default="SELECT max(EVENT_ID) id FROM PODS.EVENT_RANGE"/>
                <var name="PODS_USER" type="String"/>
                <var name="USER_ID" default="-1" type="Int64"/>
                <query>
					DO $$
					DECLARE
					returnId integer;
                    BEGIN
                    INSERT INTO PODS.EVENT_RANGE (EVENT_GUID,FEATURE_ID,STATION_ID_BEGIN,STATION_ID_END,PODS_USER,CREATE_DATE,EFFECTIVE_FROM_DATE,CURRENT_INDICATOR_LF,POSITIONING_TYPE_CL)
                    VALUES('{EVENT_GUID}','STRIGH_VANES',0,0,NULLIF('{PODS_USER}',''),current_timestamp,current_timestamp,'Y','UNKNOWN')
                    RETURNING EVENT_ID INTO returnId;

                    INSERT INTO PODS.STRAIGHTENING_VANES(EVENT_ID,EVENT_GUID,TYPE_CL,MANUFACTURER_CL,MATERIAL_CL,MODEL,NOMINAL_PIPE_SIZE,NUMBER_OF_VANES,PRESSURE_DROP,DATE_INSTALLED,DESCRIPTION,SOURCE_GCL,COMMENTS)
                    VALUES(returnId,'{EVENT_GUID}',NULLIF('{TYPE_CL}',''),NULLIF('{MANUFACTURER_CL}',''),NULLIF('{MATERIAL_CL}',''),NULLIF('{MODEL}',''),{NOMINAL_PIPE_SIZE},{NUMBER_OF_VANES},{PRESSURE_DROP},'{DATE_INSTALLED}',NULLIF('{DESCRIPTION}',''),NULLIF('{SOURCE_GCL}',''),NULLIF('{COMMENTS}',''));
					END $$;
                </query>
            </dbCommand>
        </insert>
        <update>
            <dbCommand>
				<param name="CLASS_ID" type="String" direction="Input" default="PODS_STRAIGHTENING_VANES" /> 
				<var name="POLICY" default="POLICY.xml#UPDATE_PODS_SEM"  />
                <param name="EVENT_GUID" default="" type="String"/>
                <param name="TYPE_CL" default="UNKNOWN" type="String"/>
                <param name="MANUFACTURER_CL" default="UNKNOWN" type="String"/>
                <param name="MATERIAL_CL" default="UNKNOWN" type="String"/>
                <param name="MODEL" default="" type="String"/>
                <param name="NOMINAL_PIPE_SIZE" default="NULL" type="Decimal"/>
                <param name="NUMBER_OF_VANES" default="NULL" type="Decimal"/>
                <param name="PRESSURE_DROP" default="NULL" type="Decimal"/>
                <param name="DATE_INSTALLED" default="" type="DateTime"/>
                <param name="DESCRIPTION" default="" type="String"/>
                <param name="SOURCE_GCL" default="UNKNOWN" type="String"/>
                <param name="COMMENTS" default="" type="String"/>
                <param name="ID" type="Int64"/>
                <param name="USER_ID" default="-1" type="Int64"/>
                <query>
                    UPDATE PODS.STRAIGHTENING_VANES
                    SET 
					EVENT_GUID=case when :EVENT_GUID is null then EVENT_GUID else :EVENT_GUID end,
                    TYPE_CL=case when :TYPE_CL is null then TYPE_CL else :TYPE_CL end,
                    MANUFACTURER_CL=case when :MANUFACTURER_CL is null then MANUFACTURER_CL else :MANUFACTURER_CL end,
					MATERIAL_CL=case when :MATERIAL_CL is null then MATERIAL_CL else :MATERIAL_CL end,
                    MODEL=case when :MODEL is null then MODEL else :MODEL end,
					NOMINAL_PIPE_SIZE=case when :NOMINAL_PIPE_SIZE is null then NOMINAL_PIPE_SIZE else :NOMINAL_PIPE_SIZE end,
					NUMBER_OF_VANES=case when :NUMBER_OF_VANES is null then NUMBER_OF_VANES else :NUMBER_OF_VANES end,
					PRESSURE_DROP=case when :PRESSURE_DROP is null then PRESSURE_DROP else :PRESSURE_DROP end,
                    DATE_INSTALLED=case when :DATE_INSTALLED is null then DATE_INSTALLED else :DATE_INSTALLED end,
                    DESCRIPTION=case when :DESCRIPTION is null then DESCRIPTION else :DESCRIPTION end,
                    SOURCE_GCL=case when :SOURCE_GCL is null then SOURCE_GCL else :SOURCE_GCL end,
                    COMMENTS=case when :COMMENTS is null then COMMENTS else :COMMENTS end
                    WHERE EVENT_ID = :ID;
                </query>
            </dbCommand>
        </update>
        <delete>
            <dbCommand>
				<var name="CLASS_ID" type="String" direction="Input" default="PODS_STRAIGHTENING_VANES" /> 
				<var name="POLICY" default="POLICY.xml#DELETE_PODS_SEM"  />
                <var name="ID" type="Int64"/>
                <var name="USER_ID" default="-1" type="Int64"/>
                <query>
					DO $$
                    BEGIN
                    UPDATE PODS.EVENT_RANGE
                    SET CURRENT_INDICATOR_LF='N'
                    WHERE EVENT_ID = {ID};

                    DELETE FROM PODS.STRAIGHTENING_VANES
                    WHERE EVENT_ID = {ID};
                    DELETE FROM WEB50.LNK_GATE WHERE LEFT_OBJ_ID = 'PODS_STRAIGHTENING_VANES/'||CAST({ID} AS VARCHAR(30)) OR RIGHT_OBJ_ID = 'PODS_STRAIGHTENING_VANES/'||CAST({ID} AS VARCHAR(30)); 
					END $$;
                </query>
            </dbCommand>
        </delete>
    </data>
    <data table="STRAKE" schema="PODS" id="PODS_STRAKE" comment="PODS.STRAKE">
        <select>
            <dbQuery idField="ID">
                <param name="USER_ID" default="-1" type="Int64"/>
                <var name="FILTER" default="1=1"/>
                <var name="LPU_ACCESS_FILTER" default="SELECT srv_district_id FROM PODS.SRV_DISTRICT_GCL"/>
                <query>
                    SELECT * FROM (SELECT EVENT_ID ID, t.* FROM PODS.STRAKE t) d WHERE {FILTER}
                </query>
            </dbQuery>
        </select>
        <insert>
            <dbCommand>
				<var name="CLASS_ID" type="String" direction="Input" default="PODS_STRAKE" /> 
				<var name="POLICY" default="POLICY.xml#INSERT_PODS_SEM"  />
                <var name="EVENT_GUID" default="" type="String"/>
                <var name="LENGTH" default="NULL" type="Decimal"/>
                <var name="HEIGHT" default="NULL" type="Decimal"/>
                <var name="PITCH" default="NULL" type="Decimal"/>
                <var name="FASTENER_CL" default="UNKNOWN" type="String"/>
                <var name="SERIAL_NUMBER" default="" type="String"/>
                <var name="PART_NUMBER" default="" type="String"/>
                <var name="NUMBER_OF_STARTS" default="NULL" type="Decimal"/>
                <var name="COATING_TYPE_SCL" default="UNKNOWN" type="String"/>
                <var name="COATING_SUBTYPE_SCL" default="NONE" type="String"/>
                <var name="DATE_INSTALLED" default="" type="DateTime"/>
                <var name="MANUFACTURER_CL" default="UNKNOWN" type="String"/>
                <var name="DATE_MANUFACTURED" default="" type="DateTime"/>
                <var name="MATERIAL_CL" default="UNKNOWN" type="String"/>
                <var name="DESCRIPTION" default="" type="String"/>
                <var name="SOURCE_GCL" default="UNKNOWN" type="String"/>
                <var name="COMMENTS" default="" type="String"/>
                <var name="ID" type="Int64" direction="Output" default="SELECT max(EVENT_ID) id FROM PODS.EVENT_RANGE"/>
                <var name="PODS_USER" type="String"/>
                <var name="USER_ID" default="-1" type="Int64"/>
                <query>
					DO $$
					DECLARE
					returnId integer;
                    BEGIN
                    INSERT INTO PODS.EVENT_RANGE (EVENT_GUID,FEATURE_ID,STATION_ID_BEGIN,STATION_ID_END,PODS_USER,CREATE_DATE,EFFECTIVE_FROM_DATE,CURRENT_INDICATOR_LF,POSITIONING_TYPE_CL)
                    VALUES('{EVENT_GUID}','STRAKE',0,0,NULLIF('{PODS_USER}',''),current_timestamp,current_timestamp,'Y','UNKNOWN')
                    RETURNING EVENT_ID INTO returnId;

                    INSERT INTO PODS.STRAKE(EVENT_ID,EVENT_GUID,LENGTH,HEIGHT,PITCH,FASTENER_CL,SERIAL_NUMBER,PART_NUMBER,NUMBER_OF_STARTS,COATING_TYPE_SCL,COATING_SUBTYPE_SCL,DATE_INSTALLED,MANUFACTURER_CL,DATE_MANUFACTURED,MATERIAL_CL,DESCRIPTION,SOURCE_GCL,COMMENTS)
                    VALUES(returnId,'{EVENT_GUID}',{LENGTH},{HEIGHT},{PITCH},NULLIF('{FASTENER_CL}',''),NULLIF('{SERIAL_NUMBER}',''),NULLIF('{PART_NUMBER}',''),{NUMBER_OF_STARTS},coalesce(SUBSTR(NULLIF('{COATING_TYPE_SCL}',''),0,strpos(NULLIF('{COATING_TYPE_SCL}',''),'@')),'UNKNOWN'),coalesce(SUBSTR(NULLIF('{COATING_TYPE_SCL}',''),strpos(NULLIF('{COATING_TYPE_SCL}',''),'@')+1,length(NULLIF('{COATING_TYPE_SCL}',''))-strpos(NULLIF('{COATING_TYPE_SCL}',''),'@')),'NONE'),'{DATE_INSTALLED}',NULLIF('{MANUFACTURER_CL}',''),'{DATE_MANUFACTURED}',NULLIF('{MATERIAL_CL}',''),NULLIF('{DESCRIPTION}',''),NULLIF('{SOURCE_GCL}',''),NULLIF('{COMMENTS}',''));
					END $$;
                </query>
            </dbCommand>
        </insert>
        <update>
            <dbCommand>
				<param name="CLASS_ID" type="String" direction="Input" default="PODS_STRAKE" /> 
				<var name="POLICY" default="POLICY.xml#UPDATE_PODS_SEM"  />
                <param name="EVENT_GUID" default="" type="String"/>
                <param name="LENGTH" default="NULL" type="Decimal"/>
                <param name="HEIGHT" default="NULL" type="Decimal"/>
                <param name="PITCH" default="NULL" type="Decimal"/>
                <param name="FASTENER_CL" default="UNKNOWN" type="String"/>
                <param name="SERIAL_NUMBER" default="" type="String"/>
                <param name="PART_NUMBER" default="" type="String"/>
                <param name="NUMBER_OF_STARTS" default="NULL" type="Decimal"/>
                <param name="COATING_TYPE_SCL" default="UNKNOWN" type="String"/>
                <param name="COATING_SUBTYPE_SCL" default="NONE" type="String"/>
                <param name="DATE_INSTALLED" default="" type="DateTime"/>
                <param name="MANUFACTURER_CL" default="UNKNOWN" type="String"/>
                <param name="DATE_MANUFACTURED" default="" type="DateTime"/>
                <param name="MATERIAL_CL" default="UNKNOWN" type="String"/>
                <param name="DESCRIPTION" default="" type="String"/>
                <param name="SOURCE_GCL" default="UNKNOWN" type="String"/>
                <param name="COMMENTS" default="" type="String"/>
                <param name="ID" type="Int64"/>
                <param name="USER_ID" default="-1" type="Int64"/>
                <query>
                    UPDATE PODS.STRAKE
                    SET 
					EVENT_GUID=case when :EVENT_GUID is null then EVENT_GUID else :EVENT_GUID end,
                    LENGTH=case when :LENGTH is null then LENGTH else :LENGTH end,
                    HEIGHT=case when :HEIGHT is null then HEIGHT else :HEIGHT end,
					PITCH=case when :PITCH is null then PITCH else :PITCH end,
					FASTENER_CL=case when :FASTENER_CL is null then FASTENER_CL else :FASTENER_CL end,
                    SERIAL_NUMBER=case when :SERIAL_NUMBER is null then SERIAL_NUMBER else :SERIAL_NUMBER end,
                    PART_NUMBER=case when :PART_NUMBER is null then PART_NUMBER else :PART_NUMBER end,
					NUMBER_OF_STARTS=case when :NUMBER_OF_STARTS is null then NUMBER_OF_STARTS else :NUMBER_OF_STARTS end,
					COATING_TYPE_SCL=coalesce(SUBSTR(:COATING_TYPE_SCL,0,strpos(:COATING_TYPE_SCL,'@')),'UNKNOWN'),
					COATING_SUBTYPE_SCL=coalesce(SUBSTR(:COATING_TYPE_SCL,strpos(:COATING_TYPE_SCL,'@')+1,length(:COATING_TYPE_SCL)-strpos(:COATING_TYPE_SCL,'@')),'NONE'),
                    DATE_INSTALLED=case when :DATE_INSTALLED is null then DATE_INSTALLED else :DATE_INSTALLED end,
                    MANUFACTURER_CL=case when :MANUFACTURER_CL is null then MANUFACTURER_CL else :MANUFACTURER_CL end,
                    DATE_MANUFACTURED=case when :DATE_MANUFACTURED is null then DATE_MANUFACTURED else :DATE_MANUFACTURED end,
					MATERIAL_CL=case when :MATERIAL_CL is null then MATERIAL_CL else :MATERIAL_CL end,
                    DESCRIPTION=case when :DESCRIPTION is null then DESCRIPTION else :DESCRIPTION end,
                    SOURCE_GCL=case when :SOURCE_GCL is null then SOURCE_GCL else :SOURCE_GCL end,
                    COMMENTS=case when :COMMENTS is null then COMMENTS else :COMMENTS end
                    WHERE EVENT_ID = :ID;
                </query>
            </dbCommand>
        </update>
        <delete>
            <dbCommand>
				<var name="CLASS_ID" type="String" direction="Input" default="PODS_STRAKE" /> 
				<var name="POLICY" default="POLICY.xml#DELETE_PODS_SEM"  />
                <var name="ID" type="Int64"/>
                <var name="USER_ID" default="-1" type="Int64"/>
                <query>
					DO $$
                    BEGIN
                    UPDATE PODS.EVENT_RANGE
                    SET CURRENT_INDICATOR_LF='N'
                    WHERE EVENT_ID = {ID};

                    DELETE FROM PODS.STRAKE
                    WHERE EVENT_ID = {ID};
                    DELETE FROM WEB50.LNK_GATE WHERE LEFT_OBJ_ID = 'PODS_STRAKE/'||CAST({ID} AS VARCHAR(30)) OR RIGHT_OBJ_ID = 'PODS_STRAKE/'||CAST({ID} AS VARCHAR(30)); 
					END $$;
                </query>
            </dbCommand>
        </delete>
    </data>
    <data table="STRUCTURE_SUPPORT" schema="PODS" id="PODS_STRUCTURE_SUPPORT" comment="PODS.STRUCTURE_SUPPORT">
        <select>
            <dbQuery idField="ID">
                <param name="USER_ID" default="-1" type="Int64"/>
                <var name="FILTER" default="1=1"/>
                <var name="LPU_ACCESS_FILTER" default="SELECT srv_district_id FROM PODS.SRV_DISTRICT_GCL"/>
                <query>
                    SELECT * FROM (SELECT EVENT_ID ID, t.* FROM PODS.STRUCTURE_SUPPORT t) d WHERE {FILTER}
                </query>
            </dbQuery>
        </select>
        <insert>
            <dbCommand>
				<var name="CLASS_ID" type="String" direction="Input" default="PODS_STRUCTURE_SUPPORT" /> 
				<var name="POLICY" default="POLICY.xml#INSERT_PODS_SEM"  />
                <var name="EVENT_GUID" default="" type="String"/>
                <var name="TYPE_CL" default="UNKNOWN" type="String"/>
                <var name="MATERIAL_CL" default="UNKNOWN" type="String"/>
                <var name="PART_NUMBER" default="" type="String"/>
                <var name="SERIAL_NUMBER" default="" type="String"/>
                <var name="DATE_INSTALLED" default="" type="DateTime"/>
                <var name="DESCRIPTION" default="" type="String"/>
                <var name="SOURCE_GCL" default="UNKNOWN" type="String"/>
                <var name="COMMENTS" default="" type="String"/>
                <var name="ID" type="Int64" direction="Output" default="SELECT max(EVENT_ID) id FROM PODS.EVENT_RANGE"/>
                <var name="PODS_USER" type="String"/>
                <var name="USER_ID" default="-1" type="Int64"/>
                <query>
					DO $$
					DECLARE
					returnId integer;
                    BEGIN
                    INSERT INTO PODS.EVENT_RANGE (EVENT_GUID,FEATURE_ID,STATION_ID_BEGIN,STATION_ID_END,PODS_USER,CREATE_DATE,EFFECTIVE_FROM_DATE,CURRENT_INDICATOR_LF,POSITIONING_TYPE_CL)
                    VALUES('{EVENT_GUID}','STRUCT_SUPP',0,0,NULLIF('{PODS_USER}',''),current_timestamp,current_timestamp,'Y','UNKNOWN')
                    RETURNING EVENT_ID INTO returnId;

                    INSERT INTO PODS.STRUCTURE_SUPPORT(EVENT_ID,EVENT_GUID,TYPE_CL,MATERIAL_CL,PART_NUMBER,SERIAL_NUMBER,DATE_INSTALLED,DESCRIPTION,SOURCE_GCL,COMMENTS)
                    VALUES(returnId,'{EVENT_GUID}',NULLIF('{TYPE_CL}',''),NULLIF('{MATERIAL_CL}',''),NULLIF('{PART_NUMBER}',''),NULLIF('{SERIAL_NUMBER}',''),'{DATE_INSTALLED}',NULLIF('{DESCRIPTION}',''),NULLIF('{SOURCE_GCL}',''),NULLIF('{COMMENTS}',''));
					END $$;
                </query>
            </dbCommand>
        </insert>
        <update>
            <dbCommand>
				<param name="CLASS_ID" type="String" direction="Input" default="PODS_STRUCTURE_SUPPORT" /> 
				<var name="POLICY" default="POLICY.xml#UPDATE_PODS_SEM"  />
                <param name="EVENT_GUID" default="" type="String"/>
                <param name="TYPE_CL" default="UNKNOWN" type="String"/>
                <param name="MATERIAL_CL" default="UNKNOWN" type="String"/>
                <param name="PART_NUMBER" default="" type="String"/>
                <param name="SERIAL_NUMBER" default="" type="String"/>
                <param name="DATE_INSTALLED" default="" type="DateTime"/>
                <param name="DESCRIPTION" default="" type="String"/>
                <param name="SOURCE_GCL" default="UNKNOWN" type="String"/>
                <param name="COMMENTS" default="" type="String"/>
                <param name="ID" type="Int64"/>
                <param name="USER_ID" default="-1" type="Int64"/>
                <query>
                    UPDATE PODS.STRUCTURE_SUPPORT
                    SET 
					EVENT_GUID=case when :EVENT_GUID is null then EVENT_GUID else :EVENT_GUID end,
                    TYPE_CL=case when :TYPE_CL is null then TYPE_CL else :TYPE_CL end,
					MATERIAL_CL=case when :MATERIAL_CL is null then MATERIAL_CL else :MATERIAL_CL end,
                    PART_NUMBER=case when :PART_NUMBER is null then PART_NUMBER else :PART_NUMBER end,
                    SERIAL_NUMBER=case when :SERIAL_NUMBER is null then SERIAL_NUMBER else :SERIAL_NUMBER end,
                    DATE_INSTALLED=case when :DATE_INSTALLED is null then DATE_INSTALLED else :DATE_INSTALLED end,
                    DESCRIPTION=case when :DESCRIPTION is null then DESCRIPTION else :DESCRIPTION end,
                    SOURCE_GCL=case when :SOURCE_GCL is null then SOURCE_GCL else :SOURCE_GCL end,
                    COMMENTS=case when :COMMENTS is null then COMMENTS else :COMMENTS end
                    WHERE EVENT_ID = :ID;
                </query>
            </dbCommand>
        </update>
        <delete>
            <dbCommand>
				<var name="CLASS_ID" type="String" direction="Input" default="PODS_STRUCTURE_SUPPORT" /> 
				<var name="POLICY" default="POLICY.xml#DELETE_PODS_SEM"  />
                <var name="ID" type="Int64"/>
                <var name="USER_ID" default="-1" type="Int64"/>
                <query>
					DO $$
                    BEGIN
                    UPDATE PODS.EVENT_RANGE
                    SET CURRENT_INDICATOR_LF='N'
                    WHERE EVENT_ID = {ID};

                    DELETE FROM PODS.STRUCTURE_SUPPORT
                    WHERE EVENT_ID = {ID};
                    DELETE FROM WEB50.LNK_GATE WHERE LEFT_OBJ_ID = 'PODS_STRUCTURE_SUPPORT/'||CAST({ID} AS VARCHAR(30)) OR RIGHT_OBJ_ID = 'PODS_STRUCTURE_SUPPORT/'||CAST({ID} AS VARCHAR(30)); 
					END $$;
                </query>
            </dbCommand>
        </delete>
    </data>
    <data table="SUBSEA_SLED_ASSEMBLY" schema="PODS" id="PODS_SUBSEA_SLED_ASSEMBLY" comment="PODS.SUBSEA_SLED_ASSEMBLY">
        <select>
            <dbQuery idField="ID">
                <param name="USER_ID" default="-1" type="Int64"/>
                <var name="FILTER" default="1=1"/>
                <var name="LPU_ACCESS_FILTER" default="SELECT srv_district_id FROM PODS.SRV_DISTRICT_GCL"/>
                <query>
                    SELECT * FROM (SELECT EVENT_ID ID, t.* FROM PODS.SUBSEA_SLED_ASSEMBLY t) d WHERE {FILTER}
                </query>
            </dbQuery>
        </select>
        <insert>
            <dbCommand>
				<var name="CLASS_ID" type="String" direction="Input" default="PODS_SUBSEA_SLED_ASSEMBLY" /> 
				<var name="POLICY" default="POLICY.xml#INSERT_PODS_SEM"  />
                <var name="EVENT_GUID" default="" type="String"/>
                <var name="SLED_ID" default="" type="String"/>
                <var name="TYPE_CL" default="UNKNOWN" type="String"/>
                <var name="SERIAL_NUMBER" default="" type="String"/>
                <var name="PART_NUMBER" default="" type="String"/>
                <var name="MANUFACTURER_CL" default="UNKNOWN" type="String"/>
                <var name="DATE_MANUFACTURED" default="" type="DateTime"/>
                <var name="NOMINAL_MAINLINE_DIAMETER_GCL" default="0" type="Decimal"/>
                <var name="NOMINAL_BRANCH_DIAMETER_GCL" default="0" type="Decimal"/>
                <var name="SPECIFICATION_CL" default="UNKNOWN" type="String"/>
                <var name="DATE_INSTALLED" default="" type="DateTime"/>
                <var name="MATERIAL_CL" default="UNKNOWN" type="String"/>
                <var name="DESCRIPTION" default="" type="String"/>
                <var name="SOURCE_GCL" default="UNKNOWN" type="String"/>
                <var name="COMMENTS" default="" type="String"/>
                <var name="ID" type="Int64" direction="Output" default="SELECT max(EVENT_ID) id FROM PODS.EVENT_RANGE"/>
                <var name="PODS_USER" type="String"/>
                <var name="USER_ID" default="-1" type="Int64"/>
                <query>
					DO $$
					DECLARE
					returnId integer;
                    BEGIN
                    INSERT INTO PODS.EVENT_RANGE (EVENT_GUID,FEATURE_ID,STATION_ID_BEGIN,STATION_ID_END,PODS_USER,CREATE_DATE,EFFECTIVE_FROM_DATE,CURRENT_INDICATOR_LF,POSITIONING_TYPE_CL)
                    VALUES('{EVENT_GUID}','SUBS_SLED_ASS',0,0,NULLIF('{PODS_USER}',''),current_timestamp,current_timestamp,'Y','UNKNOWN')
                    RETURNING EVENT_ID INTO returnId;

                    INSERT INTO PODS.SUBSEA_SLED_ASSEMBLY(EVENT_ID,EVENT_GUID,SLED_ID,TYPE_CL,SERIAL_NUMBER,PART_NUMBER,MANUFACTURER_CL,DATE_MANUFACTURED,NOMINAL_MAINLINE_DIAMETER_GCL,NOMINAL_BRANCH_DIAMETER_GCL,SPECIFICATION_CL,DATE_INSTALLED,MATERIAL_CL,DESCRIPTION,SOURCE_GCL,COMMENTS)
                    VALUES(returnId,'{EVENT_GUID}',returnId,NULLIF('{TYPE_CL}',''),NULLIF('{SERIAL_NUMBER}',''),NULLIF('{PART_NUMBER}',''),NULLIF('{MANUFACTURER_CL}',''),'{DATE_MANUFACTURED}',{NOMINAL_MAINLINE_DIAMETER_GCL},{NOMINAL_BRANCH_DIAMETER_GCL},NULLIF('{SPECIFICATION_CL}',''),'{DATE_INSTALLED}',NULLIF('{MATERIAL_CL}',''),NULLIF('{DESCRIPTION}',''),NULLIF('{SOURCE_GCL}',''),NULLIF('{COMMENTS}',''));
					END $$;
                </query>
            </dbCommand>
        </insert>
        <update>
            <dbCommand>
				<param name="CLASS_ID" type="String" direction="Input" default="PODS_SUBSEA_SLED_ASSEMBLY" /> 
				<var name="POLICY" default="POLICY.xml#UPDATE_PODS_SEM"  />
                <param name="EVENT_GUID" default="" type="String"/>
                <param name="SLED_ID" default="" type="String"/>
                <param name="TYPE_CL" default="UNKNOWN" type="String"/>
                <param name="SERIAL_NUMBER" default="" type="String"/>
                <param name="PART_NUMBER" default="" type="String"/>
                <param name="MANUFACTURER_CL" default="UNKNOWN" type="String"/>
                <param name="DATE_MANUFACTURED" default="" type="DateTime"/>
                <param name="NOMINAL_MAINLINE_DIAMETER_GCL" default="0" type="Decimal"/>
                <param name="NOMINAL_BRANCH_DIAMETER_GCL" default="0" type="Decimal"/>
                <param name="SPECIFICATION_CL" default="UNKNOWN" type="String"/>
                <param name="DATE_INSTALLED" default="" type="DateTime"/>
                <param name="MATERIAL_CL" default="UNKNOWN" type="String"/>
                <param name="DESCRIPTION" default="" type="String"/>
                <param name="SOURCE_GCL" default="UNKNOWN" type="String"/>
                <param name="COMMENTS" default="" type="String"/>
                <param name="ID" type="Int64"/>
                <param name="USER_ID" default="-1" type="Int64"/>
                <query>
                    UPDATE PODS.SUBSEA_SLED_ASSEMBLY
                    SET 
					EVENT_GUID=case when :EVENT_GUID is null then EVENT_GUID else :EVENT_GUID end,
					SLED_ID=case when :SLED_ID is null then SLED_ID else :SLED_ID end,
                    TYPE_CL=case when :TYPE_CL is null then TYPE_CL else :TYPE_CL end,
                    SERIAL_NUMBER=case when :SERIAL_NUMBER is null then SERIAL_NUMBER else :SERIAL_NUMBER end,
                    PART_NUMBER=case when :PART_NUMBER is null then PART_NUMBER else :PART_NUMBER end,
                    MANUFACTURER_CL=case when :MANUFACTURER_CL is null then MANUFACTURER_CL else :MANUFACTURER_CL end,
                    DATE_MANUFACTURED=case when :DATE_MANUFACTURED is null then DATE_MANUFACTURED else :DATE_MANUFACTURED end,
					NOMINAL_MAINLINE_DIAMETER_GCL=case when :NOMINAL_MAINLINE_DIAMETER_GCL is null then NOMINAL_MAINLINE_DIAMETER_GCL else :NOMINAL_MAINLINE_DIAMETER_GCL end,
					NOMINAL_BRANCH_DIAMETER_GCL=case when :NOMINAL_BRANCH_DIAMETER_GCL is null then NOMINAL_BRANCH_DIAMETER_GCL else :NOMINAL_BRANCH_DIAMETER_GCL end,
                    SPECIFICATION_CL=case when :SPECIFICATION_CL is null then SPECIFICATION_CL else :SPECIFICATION_CL end,
                    DATE_INSTALLED=case when :DATE_INSTALLED is null then DATE_INSTALLED else :DATE_INSTALLED end,
					MATERIAL_CL=case when :MATERIAL_CL is null then MATERIAL_CL else :MATERIAL_CL end,
                    DESCRIPTION=case when :DESCRIPTION is null then DESCRIPTION else :DESCRIPTION end,
                    SOURCE_GCL=case when :SOURCE_GCL is null then SOURCE_GCL else :SOURCE_GCL end,
                    COMMENTS=case when :COMMENTS is null then COMMENTS else :COMMENTS end
                    WHERE EVENT_ID = :ID;
                </query>
            </dbCommand>
        </update>
        <delete>
            <dbCommand>
				<var name="CLASS_ID" type="String" direction="Input" default="PODS_SUBSEA_SLED_ASSEMBLY" /> 
				<var name="POLICY" default="POLICY.xml#DELETE_PODS_SEM"  />
                <var name="ID" type="Int64"/>
                <var name="USER_ID" default="-1" type="Int64"/>
                <query>
					DO $$
                    BEGIN
                    UPDATE PODS.EVENT_RANGE
                    SET CURRENT_INDICATOR_LF='N'
                    WHERE EVENT_ID = {ID};

                    DELETE FROM PODS.SUBSEA_SLED_ASSEMBLY
                    WHERE EVENT_ID = {ID};
                    DELETE FROM WEB50.LNK_GATE WHERE LEFT_OBJ_ID = 'PODS_SUBSEA_SLED_ASSEMBLY/'||CAST({ID} AS VARCHAR(30)) OR RIGHT_OBJ_ID = 'PODS_SUBSEA_SLED_ASSEMBLY/'||CAST({ID} AS VARCHAR(30));
					END $$;
                </query>
            </dbCommand>
        </delete>
    </data>
    <data table="TAP" schema="PODS" id="PODS_TAP" comment="PODS.TAP">
        <select>
            <dbQuery idField="ID">
                <param name="USER_ID" default="-1" type="Int64"/>
                <var name="FILTER" default="1=1"/>
                <var name="LPU_ACCESS_FILTER" default="SELECT srv_district_id FROM PODS.SRV_DISTRICT_GCL"/>
                <query>
                    SELECT * FROM (SELECT EVENT_ID ID, t.* FROM PODS.TAP t) d WHERE {FILTER}
                </query>
            </dbQuery>
        </select>
        <insert>
            <dbCommand>
				<var name="CLASS_ID" type="String" direction="Input" default="PODS_TAP" /> 
				<var name="POLICY" default="POLICY.xml#INSERT_PODS_SEM"  />
                <var name="EVENT_GUID" default="" type="String"/>
                <var name="TYPE_CL" default="UNKNOWN" type="String"/>
                <var name="NOMINAL_DIAMETER_GCL" default="0" type="Decimal"/>
                <var name="MANUFACTURER_CL" default="UNKNOWN" type="String"/>
                <var name="TAP_METHOD_GCL" default="UNKNOWN" type="String"/>
                <var name="SPECIFICATION_CL" default="UNKNOWN" type="String"/>
                <var name="NOMINAL_PRESSURE_RATING" default="NULL" type="Decimal"/>
                <var name="MILL_TEST_PRESSURE" default="NULL" type="Decimal"/>
                <var name="DATE_MANUFACTURED" default="" type="DateTime"/>
                <var name="DATE_INSTALLED" default="" type="DateTime"/>
                <var name="DESCRIPTION" default="" type="String"/>
                <var name="SOURCE_GCL" default="UNKNOWN" type="String"/>
                <var name="COMMENTS" default="" type="String"/>
                <var name="ID" type="Int64" direction="Output" default="SELECT max(EVENT_ID) id FROM PODS.EVENT_RANGE"/>
                <var name="PODS_USER" type="String"/>
                <var name="USER_ID" default="-1" type="Int64"/>
                <query>
					DO $$
					DECLARE
					returnId integer;
                    BEGIN
                    INSERT INTO PODS.EVENT_RANGE (EVENT_GUID,FEATURE_ID,STATION_ID_BEGIN,STATION_ID_END,PODS_USER,CREATE_DATE,EFFECTIVE_FROM_DATE,CURRENT_INDICATOR_LF,POSITIONING_TYPE_CL)
                    VALUES('{EVENT_GUID}','TAP',0,0,NULLIF('{PODS_USER}',''),current_timestamp,current_timestamp,'Y','UNKNOWN')
                    RETURNING EVENT_ID INTO returnId;

                    INSERT INTO PODS.TAP(EVENT_ID,EVENT_GUID,TYPE_CL,NOMINAL_DIAMETER_GCL,MANUFACTURER_CL,TAP_METHOD_GCL,SPECIFICATION_CL,NOMINAL_PRESSURE_RATING,MILL_TEST_PRESSURE,DATE_MANUFACTURED,DATE_INSTALLED,DESCRIPTION,SOURCE_GCL,COMMENTS)
                    VALUES(returnId,'{EVENT_GUID}',NULLIF('{TYPE_CL}',''),{NOMINAL_DIAMETER_GCL},NULLIF('{MANUFACTURER_CL}',''),NULLIF('{TAP_METHOD_GCL}',''),NULLIF('{SPECIFICATION_CL}',''),{NOMINAL_PRESSURE_RATING},{MILL_TEST_PRESSURE},'{DATE_MANUFACTURED}','{DATE_INSTALLED}',NULLIF('{DESCRIPTION}',''),NULLIF('{SOURCE_GCL}',''),NULLIF('{COMMENTS}',''));
					END $$;
                </query>
            </dbCommand>
        </insert>
        <update>
            <dbCommand>
				<param name="CLASS_ID" type="String" direction="Input" default="PODS_TAP" /> 
				<var name="POLICY" default="POLICY.xml#UPDATE_PODS_SEM"  />
                <param name="EVENT_GUID" default="" type="String"/>
                <param name="TYPE_CL" default="UNKNOWN" type="String"/>
                <param name="NOMINAL_DIAMETER_GCL" default="0" type="Decimal"/>
                <param name="MANUFACTURER_CL" default="UNKNOWN" type="String"/>
                <param name="TAP_METHOD_GCL" default="UNKNOWN" type="String"/>
                <param name="SPECIFICATION_CL" default="UNKNOWN" type="String"/>
                <param name="NOMINAL_PRESSURE_RATING" default="NULL" type="Decimal"/>
                <param name="MILL_TEST_PRESSURE" default="NULL" type="Decimal"/>
                <param name="DATE_MANUFACTURED" default="" type="DateTime"/>
                <param name="DATE_INSTALLED" default="" type="DateTime"/>
                <param name="DESCRIPTION" default="" type="String"/>
                <param name="SOURCE_GCL" default="UNKNOWN" type="String"/>
                <param name="COMMENTS" default="" type="String"/>
                <param name="ID" type="Int64"/>
                <param name="USER_ID" default="-1" type="Int64"/>
                <query>
                    UPDATE PODS.TAP
                    SET 
					EVENT_GUID=case when :EVENT_GUID is null then EVENT_GUID else :EVENT_GUID end,
                    TYPE_CL=case when :TYPE_CL is null then TYPE_CL else :TYPE_CL end,
                    NOMINAL_DIAMETER_GCL=case when :NOMINAL_DIAMETER_GCL is null then NOMINAL_DIAMETER_GCL else :NOMINAL_DIAMETER_GCL end,
                    MANUFACTURER_CL=case when :MANUFACTURER_CL is null then MANUFACTURER_CL else :MANUFACTURER_CL end,
                    TAP_METHOD_GCL=case when :TAP_METHOD_GCL is null then TAP_METHOD_GCL else :TAP_METHOD_GCL end,
                    SPECIFICATION_CL=case when :SPECIFICATION_CL is null then SPECIFICATION_CL else :SPECIFICATION_CL end,
                    NOMINAL_PRESSURE_RATING=case when :NOMINAL_PRESSURE_RATING is null then NOMINAL_PRESSURE_RATING else :NOMINAL_PRESSURE_RATING end,
                    MILL_TEST_PRESSURE=case when :MILL_TEST_PRESSURE is null then MILL_TEST_PRESSURE else :MILL_TEST_PRESSURE end,
                    DATE_MANUFACTURED=case when :DATE_MANUFACTURED is null then DATE_MANUFACTURED else :DATE_MANUFACTURED end,
                    DATE_INSTALLED=case when :DATE_INSTALLED is null then DATE_INSTALLED else :DATE_INSTALLED end,
                    DESCRIPTION=case when :DESCRIPTION is null then DESCRIPTION else :DESCRIPTION end,
                    SOURCE_GCL=case when :SOURCE_GCL is null then SOURCE_GCL else :SOURCE_GCL end,
                    COMMENTS=case when :COMMENTS is null then COMMENTS else :COMMENTS end
                    WHERE EVENT_ID = :ID;
                </query>
            </dbCommand>
        </update>
        <delete>
            <dbCommand>
				<var name="CLASS_ID" type="String" direction="Input" default="PODS_TAP" /> 
				<var name="POLICY" default="POLICY.xml#DELETE_PODS_SEM"  />
                <var name="ID" type="Int64"/>
                <var name="USER_ID" default="-1" type="Int64"/>
                <query>
					DO $$
                    BEGIN
                    UPDATE PODS.EVENT_RANGE
                    SET CURRENT_INDICATOR_LF='N'
                    WHERE EVENT_ID = {ID};

                    DELETE FROM PODS.TAP
                    WHERE EVENT_ID = {ID};
                    DELETE FROM WEB50.LNK_GATE WHERE LEFT_OBJ_ID = 'PODS_TAP/'||CAST({ID} AS VARCHAR(30)) OR RIGHT_OBJ_ID = 'PODS_TAP/'||CAST({ID} AS VARCHAR(30)); 
					END $$;
                </query>
            </dbCommand>
        </delete>
    </data>
    <data table="TAPERED_STRESS_JOINT" schema="PODS" id="PODS_TAPERED_STRESS_JOINT" comment="PODS.TAPERED_STRESS_JOINT">
        <select>
            <dbQuery idField="ID">
                <param name="USER_ID" default="-1" type="Int64"/>
                <var name="FILTER" default="1=1"/>
                <var name="LPU_ACCESS_FILTER" default="SELECT srv_district_id FROM PODS.SRV_DISTRICT_GCL"/>
                <query>
                    SELECT * FROM (SELECT EVENT_ID ID, t.* FROM PODS.TAPERED_STRESS_JOINT t) d WHERE {FILTER}
                </query>
            </dbQuery>
        </select>
        <insert>
            <dbCommand>
				<var name="CLASS_ID" type="String" direction="Input" default="PODS_TAPERED_STRESS_JOINT" /> 
				<var name="POLICY" default="POLICY.xml#INSERT_PODS_SEM"  />
                <var name="EVENT_GUID" default="" type="String"/>
                <var name="STRESS_JOINT_ID" default="" type="String"/>
                <var name="TYPE_CL" default="UNKNOWN" type="String"/>
                <var name="NOMINAL_DIAMETER_GCL" default="0" type="Decimal"/>
                <var name="COATING_TYPE_SCL" default="UNKNOWN" type="String"/>
                <var name="COATING_SUBTYPE_SCL" default="NONE" type="String"/>
                <var name="MANUFACTURER_CL" default="UNKNOWN" type="String"/>
                <var name="DATE_INSTALLED" default="" type="DateTime"/>
                <var name="DESCRIPTION" default="" type="String"/>
                <var name="SERIAL_NUMBER" default="" type="String"/>
                <var name="MATERIAL_CL" default="UNKNOWN" type="String"/>
                <var name="DATE_MANUFACTURED" default="" type="DateTime"/>
                <var name="PART_NUMBER" default="" type="String"/>
                <var name="MILL_TEST_PRESSURE" default="NULL" type="Decimal"/>
                <var name="NOMINAL_PRESSURE_RATING" default="NULL" type="Decimal"/>
                <var name="DESIGN_TEMPERATURE" default="NULL" type="Decimal"/>
                <var name="CONNECTION_TYPE_CL" default="UNKNOWN" type="String"/>
                <var name="SOURCE_GCL" default="UNKNOWN" type="String"/>
                <var name="COMMENTS" default="" type="String"/>
                <var name="ID" type="Int64" direction="Output" default="SELECT max(EVENT_ID) id FROM PODS.EVENT_RANGE"/>
                <var name="PODS_USER" type="String"/>
                <var name="USER_ID" default="-1" type="Int64"/>
                <query>
					DO $$
					DECLARE
					returnId integer;
                    BEGIN
                    INSERT INTO PODS.EVENT_RANGE (EVENT_GUID,FEATURE_ID,STATION_ID_BEGIN,STATION_ID_END,PODS_USER,CREATE_DATE,EFFECTIVE_FROM_DATE,CURRENT_INDICATOR_LF,POSITIONING_TYPE_CL)
                    VALUES('{EVENT_GUID}','TAP_STRS_JNT',0,0,NULLIF('{PODS_USER}',''),current_timestamp,current_timestamp,'Y','UNKNOWN')
                    RETURNING EVENT_ID INTO returnId;

                    INSERT INTO PODS.TAPERED_STRESS_JOINT(EVENT_ID,EVENT_GUID,STRESS_JOINT_ID,TYPE_CL,NOMINAL_DIAMETER_GCL,COATING_TYPE_SCL,COATING_SUBTYPE_SCL,MANUFACTURER_CL,DATE_INSTALLED,DESCRIPTION,SERIAL_NUMBER,MATERIAL_CL,DATE_MANUFACTURED,PART_NUMBER,MILL_TEST_PRESSURE,NOMINAL_PRESSURE_RATING,DESIGN_TEMPERATURE,CONNECTION_TYPE_CL,SOURCE_GCL,COMMENTS)
                    VALUES(returnId,'{EVENT_GUID}',returnId,NULLIF('{TYPE_CL}',''),{NOMINAL_DIAMETER_GCL},coalesce(SUBSTR(NULLIF('{COATING_TYPE_SCL}',''),0,strpos(NULLIF('{COATING_TYPE_SCL}',''),'@')),'UNKNOWN'),coalesce(SUBSTR(NULLIF('{COATING_TYPE_SCL}',''),strpos(NULLIF('{COATING_TYPE_SCL}',''),'@')+1,length(NULLIF('{COATING_TYPE_SCL}',''))-strpos(NULLIF('{COATING_TYPE_SCL}',''),'@')),'NONE'),NULLIF('{MANUFACTURER_CL}',''),'{DATE_INSTALLED}',NULLIF('{DESCRIPTION}',''),NULLIF('{SERIAL_NUMBER}',''),NULLIF('{MATERIAL_CL}',''),'{DATE_MANUFACTURED}',NULLIF('{PART_NUMBER}',''),{MILL_TEST_PRESSURE},{NOMINAL_PRESSURE_RATING},{DESIGN_TEMPERATURE},NULLIF('{CONNECTION_TYPE_CL}',''),NULLIF('{SOURCE_GCL}',''),NULLIF('{COMMENTS}',''));
					END $$;
                </query>
            </dbCommand>
        </insert>
        <update>
            <dbCommand>
				<param name="CLASS_ID" type="String" direction="Input" default="PODS_TAPERED_STRESS_JOINT" /> 
				<var name="POLICY" default="POLICY.xml#UPDATE_PODS_SEM"  />
                <param name="EVENT_GUID" default="" type="String"/>
                <param name="STRESS_JOINT_ID" default="" type="String"/>
                <param name="TYPE_CL" default="UNKNOWN" type="String"/>
                <param name="NOMINAL_DIAMETER_GCL" default="0" type="Decimal"/>
                <param name="COATING_TYPE_SCL" default="UNKNOWN" type="String"/>
                <param name="COATING_SUBTYPE_SCL" default="NONE" type="String"/>
                <param name="MANUFACTURER_CL" default="UNKNOWN" type="String"/>
                <param name="DATE_INSTALLED" default="" type="DateTime"/>
                <param name="DESCRIPTION" default="" type="String"/>
                <param name="SERIAL_NUMBER" default="" type="String"/>
                <param name="MATERIAL_CL" default="UNKNOWN" type="String"/>
                <param name="DATE_MANUFACTURED" default="" type="DateTime"/>
                <param name="PART_NUMBER" default="" type="String"/>
                <param name="MILL_TEST_PRESSURE" default="NULL" type="Decimal"/>
                <param name="NOMINAL_PRESSURE_RATING" default="NULL" type="Decimal"/>
                <param name="DESIGN_TEMPERATURE" default="NULL" type="Decimal"/>
                <param name="CONNECTION_TYPE_CL" default="UNKNOWN" type="String"/>
                <param name="SOURCE_GCL" default="UNKNOWN" type="String"/>
                <param name="COMMENTS" default="" type="String"/>
                <param name="ID" type="Int64"/>
                <param name="USER_ID" default="-1" type="Int64"/>
                <query>
                    UPDATE PODS.TAPERED_STRESS_JOINT
                    SET EVENT_GUID=case when :EVENT_GUID is null then EVENT_GUID else :EVENT_GUID end,
					STRESS_JOINT_ID=case when :STRESS_JOINT_ID is null then STRESS_JOINT_ID else :STRESS_JOINT_ID end,
                    TYPE_CL=case when :TYPE_CL is null then TYPE_CL else :TYPE_CL end,
                    NOMINAL_DIAMETER_GCL=case when :NOMINAL_DIAMETER_GCL is null then NOMINAL_DIAMETER_GCL else :NOMINAL_DIAMETER_GCL end,
					COATING_TYPE_SCL=coalesce(SUBSTR(:COATING_TYPE_SCL,0,strpos(:COATING_TYPE_SCL,'@')),'UNKNOWN'),
					COATING_SUBTYPE_SCL=coalesce(SUBSTR(:COATING_TYPE_SCL,strpos(:COATING_TYPE_SCL,'@')+1,length(:COATING_TYPE_SCL)-strpos(:COATING_TYPE_SCL,'@')),'NONE'),
                    MANUFACTURER_CL=case when :MANUFACTURER_CL is null then MANUFACTURER_CL else :MANUFACTURER_CL end,
                    DATE_INSTALLED=case when :DATE_INSTALLED is null then DATE_INSTALLED else :DATE_INSTALLED end,
                    DESCRIPTION=case when :DESCRIPTION is null then DESCRIPTION else :DESCRIPTION end,
                    SERIAL_NUMBER=case when :SERIAL_NUMBER is null then SERIAL_NUMBER else :SERIAL_NUMBER end,
					MATERIAL_CL=case when :MATERIAL_CL is null then MATERIAL_CL else :MATERIAL_CL end,
                    DATE_MANUFACTURED=case when :DATE_MANUFACTURED is null then DATE_MANUFACTURED else :DATE_MANUFACTURED end,
                    PART_NUMBER=case when :PART_NUMBER is null then PART_NUMBER else :PART_NUMBER end,
                    MILL_TEST_PRESSURE=case when :MILL_TEST_PRESSURE is null then MILL_TEST_PRESSURE else :MILL_TEST_PRESSURE end,
                    NOMINAL_PRESSURE_RATING=case when :NOMINAL_PRESSURE_RATING is null then NOMINAL_PRESSURE_RATING else :NOMINAL_PRESSURE_RATING end,
					DESIGN_TEMPERATURE=case when :DESIGN_TEMPERATURE is null then DESIGN_TEMPERATURE else :DESIGN_TEMPERATURE end,
                    CONNECTION_TYPE_CL=case when :CONNECTION_TYPE_CL is null then CONNECTION_TYPE_CL else :CONNECTION_TYPE_CL end,
                    SOURCE_GCL=case when :SOURCE_GCL is null then SOURCE_GCL else :SOURCE_GCL end,
                    COMMENTS=case when :COMMENTS is null then COMMENTS else :COMMENTS end
                    WHERE EVENT_ID = :ID;
                </query>
            </dbCommand>
        </update>
        <delete>
            <dbCommand>
				<var name="CLASS_ID" type="String" direction="Input" default="PODS_TAPERED_STRESS_JOINT" /> 
				<var name="POLICY" default="POLICY.xml#DELETE_PODS_SEM"  />
                <var name="ID" type="Int64"/>
                <var name="USER_ID" default="-1" type="Int64"/>
                <query>
					DO $$
                    BEGIN
                    UPDATE PODS.EVENT_RANGE
                    SET CURRENT_INDICATOR_LF='N'
                    WHERE EVENT_ID = {ID};

                    DELETE FROM PODS.TAPERED_STRESS_JOINT
                    WHERE EVENT_ID = {ID};
                    DELETE FROM WEB50.LNK_GATE WHERE LEFT_OBJ_ID = 'PODS_TAPERED_STRESS_JOINT/'||CAST({ID} AS VARCHAR(30)) OR RIGHT_OBJ_ID = 'PODS_TAPERED_STRESS_JOINT/'||CAST({ID} AS VARCHAR(30)); 
					END $$;
                </query>
            </dbCommand>
        </delete>
    </data>
    <data table="TAX_DISTRICT_BOUNDARY" schema="PODS" id="PODS_TAX_DISTRICT_BOUNDARY" comment="PODS.TAX_DISTRICT_BOUNDARY">
        <select>
            <dbQuery idField="ID">
                <param name="USER_ID" default="-1" type="Int64"/>
                <var name="FILTER" default="1=1"/>
                <var name="LPU_ACCESS_FILTER" default="SELECT srv_district_id FROM PODS.SRV_DISTRICT_GCL"/>
                <query>
                    SELECT * FROM (SELECT EVENT_ID ID, t.* FROM PODS.TAX_DISTRICT_BOUNDARY t) d WHERE {FILTER}
                </query>
            </dbQuery>
        </select>
        <insert>
            <dbCommand>
				<var name="CLASS_ID" type="String" direction="Input" default="PODS_TAX_DISTRICT_BOUNDARY" /> 
				<var name="POLICY" default="POLICY.xml#INSERT_PODS_SEM"  />
                <var name="EVENT_GUID" default="" type="String"/>
                <var name="TAX_DISTRICT_ID" default="NULL" type="Decimal"/>
                <var name="TAX_DISTRICT_GUID" default="" type="String"/>
                <var name="DESCRIPTION" default="" type="String"/>
                <var name="SOURCE_GCL" default="UNKNOWN" type="String"/>
                <var name="COMMENTS" default="" type="String"/>
                <var name="ID" type="Int64" direction="Output" default="SELECT max(EVENT_ID) id FROM PODS.EVENT_RANGE"/>
                <var name="PODS_USER" type="String"/>
                <var name="USER_ID" default="-1" type="Int64"/>
                <query>
					DO $$
					DECLARE
					returnId integer;
                    BEGIN
                    INSERT INTO PODS.EVENT_RANGE (EVENT_GUID,FEATURE_ID,STATION_ID_BEGIN,STATION_ID_END,PODS_USER,CREATE_DATE,EFFECTIVE_FROM_DATE,CURRENT_INDICATOR_LF,POSITIONING_TYPE_CL)
                    VALUES('{EVENT_GUID}','TAX_DISTR_BND',0,0,NULLIF('{PODS_USER}',''),current_timestamp,current_timestamp,'Y','UNKNOWN')
                    RETURNING EVENT_ID INTO returnId;

                    INSERT INTO PODS.TAX_DISTRICT_BOUNDARY(EVENT_ID,EVENT_GUID,TAX_DISTRICT_ID,TAX_DISTRICT_GUID,DESCRIPTION,SOURCE_GCL,COMMENTS)
                    VALUES(returnId,'{EVENT_GUID}',{TAX_DISTRICT_ID},'{TAX_DISTRICT_GUID}',NULLIF('{DESCRIPTION}',''),NULLIF('{SOURCE_GCL}',''),NULLIF('{COMMENTS}',''));
					END $$;
                </query>
            </dbCommand>
        </insert>
        <update>
            <dbCommand>
				<param name="CLASS_ID" type="String" direction="Input" default="PODS_TAX_DISTRICT_BOUNDARY" /> 
				<var name="POLICY" default="POLICY.xml#UPDATE_PODS_SEM"  />
                <param name="EVENT_GUID" default="" type="String"/>
                <param name="TAX_DISTRICT_ID" default="NULL" type="Decimal"/>
                <param name="TAX_DISTRICT_GUID" default="" type="String"/>
                <param name="DESCRIPTION" default="" type="String"/>
                <param name="SOURCE_GCL" default="UNKNOWN" type="String"/>
                <param name="COMMENTS" default="" type="String"/>
                <param name="ID" type="Int64"/>
                <param name="USER_ID" default="-1" type="Int64"/>
                <query>
                    UPDATE PODS.TAX_DISTRICT_BOUNDARY
                    SET 
					EVENT_GUID=case when :EVENT_GUID is null then EVENT_GUID else :EVENT_GUID end,
					TAX_DISTRICT_ID=case when :TAX_DISTRICT_ID is null then TAX_DISTRICT_ID else :TAX_DISTRICT_ID end,
					TAX_DISTRICT_GUID=case when :TAX_DISTRICT_GUID is null then TAX_DISTRICT_GUID else :TAX_DISTRICT_GUID end,
                    DESCRIPTION=case when :DESCRIPTION is null then DESCRIPTION else :DESCRIPTION end,
                    SOURCE_GCL=case when :SOURCE_GCL is null then SOURCE_GCL else :SOURCE_GCL end,
                    COMMENTS=case when :COMMENTS is null then COMMENTS else :COMMENTS end
                    WHERE EVENT_ID = :ID;
                </query>
            </dbCommand>
        </update>
        <delete>
            <dbCommand>
				<var name="CLASS_ID" type="String" direction="Input" default="PODS_TAX_DISTRICT_BOUNDARY" /> 
				<var name="POLICY" default="POLICY.xml#DELETE_PODS_SEM"  />
                <var name="ID" type="Int64"/>
                <var name="USER_ID" default="-1" type="Int64"/>
                <query>
					DO $$
                    BEGIN
                    UPDATE PODS.EVENT_RANGE
                    SET CURRENT_INDICATOR_LF='N'
                    WHERE EVENT_ID = {ID};

                    DELETE FROM PODS.TAX_DISTRICT_BOUNDARY
                    WHERE EVENT_ID = {ID};
                    DELETE FROM WEB50.LNK_GATE WHERE LEFT_OBJ_ID = 'PODS_TAX_DISTRICT_BOUNDARY/'||CAST({ID} AS VARCHAR(30)) OR RIGHT_OBJ_ID = 'PODS_TAX_DISTRICT_BOUNDARY/'||CAST({ID} AS VARCHAR(30)); 
					END $$;
                </query>
            </dbCommand>
        </delete>
    </data>
    <data table="TEE" schema="PODS" id="PODS_TEE" comment="PODS.TEE">
        <select>
            <dbQuery idField="ID">
                <param name="USER_ID" default="-1" type="Int64"/>
                <var name="FILTER" default="1=1"/>
                <var name="LPU_ACCESS_FILTER" default="SELECT srv_district_id FROM PODS.SRV_DISTRICT_GCL"/>
                <query>
                    SELECT * FROM (SELECT EVENT_ID ID, t.* FROM PODS.TEE t) d WHERE {FILTER}
                </query>
            </dbQuery>
        </select>
        <insert>
            <dbCommand>
				<var name="CLASS_ID" type="String" direction="Input" default="PODS_TEE" /> 
				<var name="POLICY" default="POLICY.xml#INSERT_PODS_SEM"  />
                <var name="EVENT_GUID" default="" type="String"/>
                <var name="TYPE_CL" default="UNKNOWN" type="String"/>
                <var name="MANUFACTURER_CL" default="UNKNOWN" type="String"/>
                <var name="NOMINAL_DIAMETER_INLET_GCL" default="0" type="Decimal"/>
                <var name="NOMINAL_DIAMETER_OUTLET_GCL" default="0" type="Decimal"/>
                <var name="NOMINAL_DIAMETER_BRANCH_GCL" default="0" type="Decimal"/>
                <var name="NOMINAL_WALL_THICKNESS_GCL" default="0" type="Decimal"/>
                <var name="SPECIFICATION_CL" default="UNKNOWN" type="String"/>
                <var name="NOMINAL_PRESSURE_RATING" default="NULL" type="Decimal"/>
                <var name="MILL_TEST_PRESSURE" default="NULL" type="Decimal"/>
                <var name="MATERIAL_CL" default="UNKNOWN" type="String"/>
                <var name="DATE_MANUFACTURED" default="" type="DateTime"/>
                <var name="DATE_INSTALLED" default="" type="DateTime"/>
                <var name="DESCRIPTION" default="" type="String"/>
                <var name="SOURCE_GCL" default="UNKNOWN" type="String"/>
                <var name="COMMENTS" default="" type="String"/>
                <var name="ID" type="Int64" direction="Output" default="SELECT max(EVENT_ID) id FROM PODS.EVENT_RANGE"/>
                <var name="PODS_USER" type="String"/>
                <var name="USER_ID" default="-1" type="Int64"/>
                <query>
					DO $$
					DECLARE
					returnId integer;
                    BEGIN
                    INSERT INTO PODS.EVENT_RANGE (EVENT_GUID,FEATURE_ID,STATION_ID_BEGIN,STATION_ID_END,PODS_USER,CREATE_DATE,EFFECTIVE_FROM_DATE,CURRENT_INDICATOR_LF,POSITIONING_TYPE_CL)
                    VALUES('{EVENT_GUID}','TEE',0,0,NULLIF('{PODS_USER}',''),current_timestamp,current_timestamp,'Y','UNKNOWN')
                    RETURNING EVENT_ID INTO returnId;

                    INSERT INTO PODS.TEE(EVENT_ID,EVENT_GUID,TYPE_CL,MANUFACTURER_CL,NOMINAL_DIAMETER_INLET_GCL,NOMINAL_DIAMETER_OUTLET_GCL,NOMINAL_DIAMETER_BRANCH_GCL,NOMINAL_WALL_THICKNESS_GCL,SPECIFICATION_CL,NOMINAL_PRESSURE_RATING,MILL_TEST_PRESSURE,MATERIAL_CL,DATE_MANUFACTURED,DATE_INSTALLED,DESCRIPTION,SOURCE_GCL,COMMENTS)
                    VALUES(returnId,'{EVENT_GUID}',NULLIF('{TYPE_CL}',''),NULLIF('{MANUFACTURER_CL}',''),{NOMINAL_DIAMETER_INLET_GCL},{NOMINAL_DIAMETER_OUTLET_GCL},{NOMINAL_DIAMETER_BRANCH_GCL},{NOMINAL_WALL_THICKNESS_GCL},NULLIF('{SPECIFICATION_CL}',''),{NOMINAL_PRESSURE_RATING},{MILL_TEST_PRESSURE},NULLIF('{MATERIAL_CL}',''),'{DATE_MANUFACTURED}','{DATE_INSTALLED}',NULLIF('{DESCRIPTION}',''),NULLIF('{SOURCE_GCL}',''),NULLIF('{COMMENTS}',''));
					END $$;
                </query>
            </dbCommand>
        </insert>
        <update>
            <dbCommand>
				<param name="CLASS_ID" type="String" direction="Input" default="PODS_TEE" /> 
				<var name="POLICY" default="POLICY.xml#UPDATE_PODS_SEM"  />
                <param name="EVENT_GUID" default="" type="String"/>
                <param name="TYPE_CL" default="UNKNOWN" type="String"/>
                <param name="MANUFACTURER_CL" default="UNKNOWN" type="String"/>
                <param name="NOMINAL_DIAMETER_INLET_GCL" default="0" type="Decimal"/>
                <param name="NOMINAL_DIAMETER_OUTLET_GCL" default="0" type="Decimal"/>
                <param name="NOMINAL_DIAMETER_BRANCH_GCL" default="0" type="Decimal"/>
                <param name="NOMINAL_WALL_THICKNESS_GCL" default="0" type="Decimal"/>
                <param name="SPECIFICATION_CL" default="UNKNOWN" type="String"/>
                <param name="NOMINAL_PRESSURE_RATING" default="NULL" type="Decimal"/>
                <param name="MILL_TEST_PRESSURE" default="NULL" type="Decimal"/>
                <param name="MATERIAL_CL" default="UNKNOWN" type="String"/>
                <param name="DATE_MANUFACTURED" default="" type="DateTime"/>
                <param name="DATE_INSTALLED" default="" type="DateTime"/>
                <param name="DESCRIPTION" default="" type="String"/>
                <param name="SOURCE_GCL" default="UNKNOWN" type="String"/>
                <param name="COMMENTS" default="" type="String"/>
                <param name="ID" type="Int64"/>
                <param name="USER_ID" default="-1" type="Int64"/>
                <query>
                    UPDATE PODS.TEE
                    SET EVENT_GUID=case when :EVENT_GUID is null then EVENT_GUID else :EVENT_GUID end,
                    TYPE_CL=case when :TYPE_CL is null then TYPE_CL else :TYPE_CL end,
                    MANUFACTURER_CL=case when :MANUFACTURER_CL is null then MANUFACTURER_CL else :MANUFACTURER_CL end,
                    NOMINAL_DIAMETER_INLET_GCL=case when :NOMINAL_DIAMETER_INLET_GCL is null then NOMINAL_DIAMETER_INLET_GCL else :NOMINAL_DIAMETER_INLET_GCL end,
                    NOMINAL_DIAMETER_OUTLET_GCL=case when :NOMINAL_DIAMETER_OUTLET_GCL is null then NOMINAL_DIAMETER_OUTLET_GCL else :NOMINAL_DIAMETER_OUTLET_GCL end,
					NOMINAL_DIAMETER_BRANCH_GCL=case when :NOMINAL_DIAMETER_BRANCH_GCL is null then NOMINAL_DIAMETER_BRANCH_GCL else :NOMINAL_DIAMETER_BRANCH_GCL end,
                    NOMINAL_WALL_THICKNESS_GCL=case when :NOMINAL_WALL_THICKNESS_GCL is null then NOMINAL_WALL_THICKNESS_GCL else :NOMINAL_WALL_THICKNESS_GCL end,
                    SPECIFICATION_CL=case when :SPECIFICATION_CL is null then SPECIFICATION_CL else :SPECIFICATION_CL end,
                    NOMINAL_PRESSURE_RATING=case when :NOMINAL_PRESSURE_RATING is null then NOMINAL_PRESSURE_RATING else :NOMINAL_PRESSURE_RATING end,
                    MILL_TEST_PRESSURE=case when :MILL_TEST_PRESSURE is null then MILL_TEST_PRESSURE else :MILL_TEST_PRESSURE end,
					MATERIAL_CL=case when :MATERIAL_CL is null then MATERIAL_CL else :MATERIAL_CL end,
                    DATE_MANUFACTURED=case when :DATE_MANUFACTURED is null then DATE_MANUFACTURED else :DATE_MANUFACTURED end,
                    DATE_INSTALLED=case when :DATE_INSTALLED is null then DATE_INSTALLED else :DATE_INSTALLED end,
                    DESCRIPTION=case when :DESCRIPTION is null then DESCRIPTION else :DESCRIPTION end,
                    SOURCE_GCL=case when :SOURCE_GCL is null then SOURCE_GCL else :SOURCE_GCL end,
                    COMMENTS=case when :COMMENTS is null then COMMENTS else :COMMENTS end
                    WHERE EVENT_ID = :ID;
                </query>
            </dbCommand>
        </update>
        <delete>
            <dbCommand>
				<var name="CLASS_ID" type="String" direction="Input" default="PODS_TEE" /> 
				<var name="POLICY" default="POLICY.xml#DELETE_PODS_SEM"  />
                <var name="ID" type="Int64"/>
                <var name="USER_ID" default="-1" type="Int64"/>
                <query>
					DO $$
                    BEGIN
                    UPDATE PODS.EVENT_RANGE
                    SET CURRENT_INDICATOR_LF='N'
                    WHERE EVENT_ID = {ID};

                    DELETE FROM PODS.TEE
                    WHERE EVENT_ID = {ID};
                    DELETE FROM WEB50.LNK_GATE WHERE LEFT_OBJ_ID = 'PODS_TEE/'||CAST({ID} AS VARCHAR(30)) OR RIGHT_OBJ_ID = 'PODS_TEE/'||CAST({ID} AS VARCHAR(30)); 
					END $$;
                </query>
            </dbCommand>
        </delete>
    </data>
    <data table="TEMPERATURE_MEASUREMENT" schema="PODS" id="PODS_TEMPERATURE_MEASUREMENT" comment="PODS.TEMPERATURE_MEASUREMENT">
        <select>
            <dbQuery idField="ID">
                <param name="USER_ID" default="-1" type="Int64"/>
                <var name="FILTER" default="1=1"/>
                <var name="LPU_ACCESS_FILTER" default="SELECT srv_district_id FROM PODS.SRV_DISTRICT_GCL"/>
                <query>
                    SELECT * FROM (SELECT EVENT_ID ID, t.* FROM PODS.TEMPERATURE_MEASUREMENT t) d WHERE {FILTER}
                </query>
            </dbQuery>
        </select>
        <insert>
            <dbCommand>
				<var name="CLASS_ID" type="String" direction="Input" default="PODS_TEMPERATURE_MEASUREMENT" /> 
				<var name="POLICY" default="POLICY.xml#INSERT_PODS_SEM"  />
                <var name="EVENT_GUID" default="" type="String"/>
                <var name="MAXIMUM_TEMPERATURE" default="NULL" type="Decimal"/>
                <var name="AVERAGE_TEMPERATURE" default="NULL" type="Decimal"/>
                <var name="MEASUREMENT_METHOD_CL" default="UNKNOWN" type="String"/>
                <var name="DETERMINATION_DATE" default="" type="DateTime"/>
                <var name="DESCRIPTION" default="" type="String"/>
                <var name="SOURCE_GCL" default="UNKNOWN" type="String"/>
                <var name="COMMENTS" default="" type="String"/>
                <var name="ID" type="Int64" direction="Output" default="SELECT max(EVENT_ID) id FROM PODS.EVENT_RANGE"/>
                <var name="PODS_USER" type="String"/>
                <var name="USER_ID" default="-1" type="Int64"/>
                <query>
					DO $$
					DECLARE
					returnId integer;
                    BEGIN
                    INSERT INTO PODS.EVENT_RANGE (EVENT_GUID,FEATURE_ID,STATION_ID_BEGIN,STATION_ID_END,PODS_USER,CREATE_DATE,EFFECTIVE_FROM_DATE,CURRENT_INDICATOR_LF,POSITIONING_TYPE_CL)
                    VALUES('{EVENT_GUID}','TEMP_MEAS',0,0,NULLIF('{PODS_USER}',''),current_timestamp,current_timestamp,'Y','UNKNOWN')
                    RETURNING EVENT_ID INTO returnId;

                    INSERT INTO PODS.TEMPERATURE_MEASUREMENT(EVENT_ID,EVENT_GUID,MAXIMUM_TEMPERATURE,AVERAGE_TEMPERATURE,MEASUREMENT_METHOD_CL,DETERMINATION_DATE,DESCRIPTION,SOURCE_GCL,COMMENTS)
                    VALUES(returnId,'{EVENT_GUID}',{MAXIMUM_TEMPERATURE},{AVERAGE_TEMPERATURE},NULLIF('{MEASUREMENT_METHOD_CL}',''),'{DETERMINATION_DATE}',NULLIF('{DESCRIPTION}',''),NULLIF('{SOURCE_GCL}',''),NULLIF('{COMMENTS}',''));
					END $$;
                </query>
            </dbCommand>
        </insert>
        <update>
            <dbCommand>
				<param name="CLASS_ID" type="String" direction="Input" default="PODS_TEMPERATURE_MEASUREMENT" /> 
				<var name="POLICY" default="POLICY.xml#UPDATE_PODS_SEM"  />
                <param name="EVENT_GUID" default="" type="String"/>
                <param name="MAXIMUM_TEMPERATURE" default="NULL" type="Decimal"/>
                <param name="AVERAGE_TEMPERATURE" default="NULL" type="Decimal"/>
                <param name="MEASUREMENT_METHOD_CL" default="UNKNOWN" type="String"/>
                <param name="DETERMINATION_DATE" default="" type="DateTime"/>
                <param name="DESCRIPTION" default="" type="String"/>
                <param name="SOURCE_GCL" default="UNKNOWN" type="String"/>
                <param name="COMMENTS" default="" type="String"/>
                <param name="ID" type="Int64"/>
                <param name="USER_ID" default="-1" type="Int64"/>
                <query>
                    UPDATE PODS.TEMPERATURE_MEASUREMENT
                    SET 
					EVENT_GUID=case when :EVENT_GUID is null then EVENT_GUID else :EVENT_GUID end,
					MAXIMUM_TEMPERATURE=case when :MAXIMUM_TEMPERATURE is null then MAXIMUM_TEMPERATURE else :MAXIMUM_TEMPERATURE end,
					AVERAGE_TEMPERATURE=case when :AVERAGE_TEMPERATURE is null then AVERAGE_TEMPERATURE else :AVERAGE_TEMPERATURE end,
                    MEASUREMENT_METHOD_CL=case when :MEASUREMENT_METHOD_CL is null then MEASUREMENT_METHOD_CL else :MEASUREMENT_METHOD_CL end,
                    DETERMINATION_DATE=case when :DETERMINATION_DATE is null then DETERMINATION_DATE else :DETERMINATION_DATE end,
                    DESCRIPTION=case when :DESCRIPTION is null then DESCRIPTION else :DESCRIPTION end,
                    SOURCE_GCL=case when :SOURCE_GCL is null then SOURCE_GCL else :SOURCE_GCL end,
                    COMMENTS=case when :COMMENTS is null then COMMENTS else :COMMENTS end
                    WHERE EVENT_ID = :ID;
                </query>
            </dbCommand>
        </update>
        <delete>
            <dbCommand>
				<var name="CLASS_ID" type="String" direction="Input" default="PODS_TEMPERATURE_MEASUREMENT" /> 
				<var name="POLICY" default="POLICY.xml#DELETE_PODS_SEM"  />
                <var name="ID" type="Int64"/>
                <var name="USER_ID" default="-1" type="Int64"/>
                <query>
					DO $$
                    BEGIN
                    UPDATE PODS.EVENT_RANGE
                    SET CURRENT_INDICATOR_LF='N'
                    WHERE EVENT_ID = {ID};

                    DELETE FROM PODS.TEMPERATURE_MEASUREMENT
                    WHERE EVENT_ID = {ID};
                    DELETE FROM WEB50.LNK_GATE WHERE LEFT_OBJ_ID = 'PODS_TEMPERATURE_MEASUREMENT/'||CAST({ID} AS VARCHAR(30)) OR RIGHT_OBJ_ID = 'PODS_TEMPERATURE_MEASUREMENT/'||CAST({ID} AS VARCHAR(30)); 
					END $$;
                </query>
            </dbCommand>
        </delete>
    </data>
    <data table="TEST_LEAD" schema="PODS" id="PODS_TEST_LEAD" comment="PODS.TEST_LEAD">
        <select>
            <dbQuery idField="ID">
                <param name="USER_ID" default="-1" type="Int64"/>
                <var name="FILTER" default="1=1"/>
                <var name="LPU_ACCESS_FILTER" default="SELECT srv_district_id FROM PODS.SRV_DISTRICT_GCL"/>
                <query>
                    SELECT * FROM (SELECT EVENT_ID ID, t.* FROM PODS.TEST_LEAD t) d WHERE {FILTER}
                </query>
            </dbQuery>
        </select>
        <insert>
            <dbCommand>
				<var name="CLASS_ID" type="String" direction="Input" default="PODS_TEST_LEAD" /> 
				<var name="POLICY" default="POLICY.xml#INSERT_PODS_SEM"  />
                <var name="EVENT_GUID" default="" type="String"/>
                <var name="TYPE_CL" default="UNKNOWN" type="String"/>
                <var name="STATUS_CL" default="UNKNOWN" type="String"/>
                <var name="DESCRIPTION" default="" type="String"/>
                <var name="NAME" default="" type="String"/>
                <var name="DATE_INSTALLED" default="" type="DateTime"/>
                <var name="SOURCE_GCL" default="UNKNOWN" type="String"/>
                <var name="COMMENTS" default="" type="String"/>
                <var name="ID" type="Int64" direction="Output" default="SELECT max(EVENT_ID) id FROM PODS.EVENT_RANGE"/>
                <var name="PODS_USER" type="String"/>
                <var name="USER_ID" default="-1" type="Int64"/>
                <query>
					DO $$
					DECLARE
					returnId integer;
                    BEGIN
                    INSERT INTO PODS.EVENT_RANGE (EVENT_GUID,FEATURE_ID,STATION_ID_BEGIN,STATION_ID_END,PODS_USER,CREATE_DATE,EFFECTIVE_FROM_DATE,CURRENT_INDICATOR_LF,POSITIONING_TYPE_CL)
                    VALUES('{EVENT_GUID}','TEST_LEAD',0,0,NULLIF('{PODS_USER}',''),current_timestamp,current_timestamp,'Y','UNKNOWN')
                    RETURNING EVENT_ID INTO returnId;

                    INSERT INTO PODS.TEST_LEAD(EVENT_ID,EVENT_GUID,TYPE_CL,STATUS_CL,DESCRIPTION,NAME,DATE_INSTALLED,SOURCE_GCL,COMMENTS)
                    VALUES(returnId,'{EVENT_GUID}',NULLIF('{TYPE_CL}',''),NULLIF('{STATUS_CL}',''),NULLIF('{DESCRIPTION}',''),NULLIF('{NAME}',''),'{DATE_INSTALLED}',NULLIF('{SOURCE_GCL}',''),NULLIF('{COMMENTS}',''));
					END $$;
                </query>
            </dbCommand>
        </insert>
        <update>
            <dbCommand>
				<param name="CLASS_ID" type="String" direction="Input" default="PODS_TEST_LEAD" /> 
				<var name="POLICY" default="POLICY.xml#UPDATE_PODS_SEM"  />
                <param name="EVENT_GUID" default="" type="String"/>
                <param name="TYPE_CL" default="UNKNOWN" type="String"/>
                <param name="STATUS_CL" default="UNKNOWN" type="String"/>
                <param name="DESCRIPTION" default="" type="String"/>
                <param name="NAME" default="" type="String"/>
                <param name="DATE_INSTALLED" default="" type="DateTime"/>
                <param name="SOURCE_GCL" default="UNKNOWN" type="String"/>
                <param name="COMMENTS" default="" type="String"/>
                <param name="ID" type="Int64"/>
                <param name="USER_ID" default="-1" type="Int64"/>
                <query>
                    UPDATE PODS.TEST_LEAD
                    SET 
					EVENT_GUID=case when :EVENT_GUID is null then EVENT_GUID else :EVENT_GUID end,
                    TYPE_CL=case when :TYPE_CL is null then TYPE_CL else :TYPE_CL end,
                    STATUS_CL=case when :STATUS_CL is null then STATUS_CL else :STATUS_CL end,
                    DESCRIPTION=case when :DESCRIPTION is null then DESCRIPTION else :DESCRIPTION end,
					NAME=case when :NAME is null then NAME else :NAME end,
                    DATE_INSTALLED=case when :DATE_INSTALLED is null then DATE_INSTALLED else :DATE_INSTALLED end,
                    SOURCE_GCL=case when :SOURCE_GCL is null then SOURCE_GCL else :SOURCE_GCL end,
                    COMMENTS=case when :COMMENTS is null then COMMENTS else :COMMENTS end
                    WHERE EVENT_ID = :ID;
                </query>
            </dbCommand>
        </update>
        <delete>
            <dbCommand>
				<var name="CLASS_ID" type="String" direction="Input" default="PODS_TEST_LEAD" /> 
				<var name="POLICY" default="POLICY.xml#DELETE_PODS_SEM"  />
                <var name="ID" type="Int64"/>
                <var name="USER_ID" default="-1" type="Int64"/>
                <query>
					DO $$
                    BEGIN

                    UPDATE PODS.PI_CP_READING
                    SET REF_TEST_LEAD_EVENT_ID = NULL
                    WHERE REF_TEST_LEAD_EVENT_ID = {ID};

                    UPDATE PODS.COUPON_SITE
                    SET REF_TEST_LEAD_EVENT_ID = NULL
                    WHERE  REF_TEST_LEAD_EVENT_ID = {ID};

                    UPDATE PODS.BOND_LEAD
                    SET REF_TEST_LEAD_EVENT_ID = NULL
                    WHERE REF_TEST_LEAD_EVENT_ID = {ID};

                    UPDATE PODS.EVENT_RANGE
                    SET CURRENT_INDICATOR_LF='N'
                    WHERE EVENT_ID = {ID};

                    DELETE
                    FROM PODS.TEST_LEAD
                    WHERE EVENT_ID = {ID};

                    DELETE
                    FROM WEB50.LNK_GATE
                    WHERE LEFT_OBJ_ID = 'PODS_TEST_LEAD/'||CAST({ID} AS VARCHAR(30))
                    OR RIGHT_OBJ_ID = 'PODS_TEST_LEAD/'||CAST({ID} AS VARCHAR(30));

                    END $$;
                </query>
            </dbCommand>
        </delete>
    </data>
    <data table="TEST_PRESSURE" schema="PODS" id="PODS_TEST_PRESSURE" comment="PODS.TEST_PRESSURE">
        <select>
            <dbQuery idField="ID">
                <param name="USER_ID" default="-1" type="Int64"/>
                <var name="FILTER" default="1=1"/>
                <var name="LPU_ACCESS_FILTER" default="SELECT srv_district_id FROM PODS.SRV_DISTRICT_GCL"/>
                <query>
                    SELECT * FROM (SELECT EVENT_ID ID, t.* FROM PODS.TEST_PRESSURE t) d WHERE {FILTER}
                </query>
            </dbQuery>
        </select>
        <insert>
            <dbCommand>
				<var name="CLASS_ID" type="String" direction="Input" default="PODS_TEST_PRESSURE" /> 
				<var name="POLICY" default="POLICY.xml#INSERT_PODS_SEM"  />
                <var name="EVENT_GUID" default="" type="String"/>
                <var name="TEST_TYPE_CL" default="UNKNOWN" type="String"/>
                <var name="TEST_DATE" default="" type="DateTime"/>
                <var name="TEST_MEDIUM_CL" default="UNKNOWN" type="String"/>
                <var name="TEST_PRESSURE" default="NULL" type="Decimal"/>
                <var name="DURATION_HOURS" default="NULL" type="Decimal"/>
                <var name="TEST_STATION" default="NULL" type="Decimal"/>
                <var name="TEST_STATION_ELEV" default="NULL" type="Decimal"/>
                <var name="MAX_ELEVATION" default="NULL" type="Decimal"/>
                <var name="MIN_ELEVATION" default="NULL" type="Decimal"/>
                <var name="TEST_DISTANCE" default="NULL" type="Decimal"/>
                <var name="MIN_PRESSURE" default="NULL" type="Decimal"/>
                <var name="MAX_PRESSURE" default="NULL" type="Decimal"/>
                <var name="DESCRIPTION" default="" type="String"/>
                <var name="REASON_CL" default="UNKNOWN" type="String"/>
                <var name="REPORT_NUMBER" default="" type="String"/>
                <var name="SOURCE_GCL" default="UNKNOWN" type="String"/>
                <var name="COMMENTS" default="" type="String"/>
                <var name="ID" type="Int64" direction="Output" default="SELECT max(EVENT_ID) id FROM PODS.EVENT_RANGE"/>
                <var name="PODS_USER" type="String"/>
                <var name="USER_ID" default="-1" type="Int64"/>
                <query>
					DO $$
					DECLARE
					returnId integer;
                    BEGIN
                    INSERT INTO PODS.EVENT_RANGE (EVENT_GUID,FEATURE_ID,STATION_ID_BEGIN,STATION_ID_END,PODS_USER,CREATE_DATE,EFFECTIVE_FROM_DATE,CURRENT_INDICATOR_LF,POSITIONING_TYPE_CL)
                    VALUES('{EVENT_GUID}','TEST_PRESSURE',0,0,NULLIF('{PODS_USER}',''),current_timestamp,current_timestamp,'Y','UNKNOWN')
                    RETURNING EVENT_ID INTO returnId;

                    INSERT INTO PODS.TEST_PRESSURE(EVENT_ID,EVENT_GUID,TEST_TYPE_CL,TEST_DATE,TEST_MEDIUM_CL,TEST_PRESSURE,DURATION_HOURS,TEST_STATION,TEST_STATION_ELEV,MAX_ELEVATION,MIN_ELEVATION,TEST_DISTANCE,MIN_PRESSURE,MAX_PRESSURE,DESCRIPTION,REASON_CL,REPORT_NUMBER,SOURCE_GCL,COMMENTS)
                    VALUES(returnId,'{EVENT_GUID}','{TEST_TYPE_CL}','{TEST_DATE}','{TEST_MEDIUM_CL}',{TEST_PRESSURE},{DURATION_HOURS},{TEST_STATION},{TEST_STATION_ELEV},{MAX_ELEVATION},{MIN_ELEVATION},{TEST_DISTANCE},{MIN_PRESSURE},{MAX_PRESSURE},NULLIF('{DESCRIPTION}',''),NULLIF('{REASON_CL}',''),NULLIF('{REPORT_NUMBER}',''),NULLIF('{SOURCE_GCL}',''),NULLIF('{COMMENTS}',''));
					END $$;
                </query>
            </dbCommand>
        </insert>
        <update>
            <dbCommand>
				<param name="CLASS_ID" type="String" direction="Input" default="PODS_TEST_PRESSURE" /> 
				<var name="POLICY" default="POLICY.xml#UPDATE_PODS_SEM"  />
                <param name="EVENT_GUID" default="" type="String"/>
                <param name="TEST_TYPE_CL" default="UNKNOWN" type="String"/>
                <param name="TEST_DATE" default="" type="DateTime"/>
                <param name="TEST_MEDIUM_CL" default="UNKNOWN" type="String"/>
                <param name="TEST_PRESSURE" default="NULL" type="Decimal"/>
                <param name="DURATION_HOURS" default="NULL" type="Decimal"/>
                <param name="TEST_STATION" default="NULL" type="Decimal"/>
                <param name="TEST_STATION_ELEV" default="NULL" type="Decimal"/>
                <param name="MAX_ELEVATION" default="NULL" type="Decimal"/>
                <param name="MIN_ELEVATION" default="NULL" type="Decimal"/>
                <param name="TEST_DISTANCE" default="NULL" type="Decimal"/>
                <param name="MIN_PRESSURE" default="NULL" type="Decimal"/>
                <param name="MAX_PRESSURE" default="NULL" type="Decimal"/>
                <param name="DESCRIPTION" default="" type="String"/>
                <param name="REASON_CL" default="UNKNOWN" type="String"/>
                <param name="REPORT_NUMBER" default="" type="String"/>
                <param name="SOURCE_GCL" default="UNKNOWN" type="String"/>
                <param name="COMMENTS" default="" type="String"/>
                <param name="ID" type="Int64"/>
                <param name="USER_ID" default="-1" type="Int64"/>
                <query>
                    UPDATE PODS.TEST_PRESSURE
                    SET 
					EVENT_GUID=case when :EVENT_GUID is null then EVENT_GUID else :EVENT_GUID end,
					TEST_TYPE_CL=case when :TEST_TYPE_CL is null then TEST_TYPE_CL else :TEST_TYPE_CL end,
					TEST_DATE=case when :TEST_DATE is null then TEST_DATE else :TEST_DATE end,
					TEST_MEDIUM_CL=case when :TEST_MEDIUM_CL is null then TEST_MEDIUM_CL else :TEST_MEDIUM_CL end,
					TEST_PRESSURE=case when :TEST_PRESSURE is null then TEST_PRESSURE else :TEST_PRESSURE end,
					DURATION_HOURS=case when :DURATION_HOURS is null then DURATION_HOURS else :DURATION_HOURS end,
					TEST_STATION=case when :TEST_STATION is null then TEST_STATION else :TEST_STATION end,
					TEST_STATION_ELEV=case when :TEST_STATION_ELEV is null then TEST_STATION_ELEV else :TEST_STATION_ELEV end,
					MAX_ELEVATION=case when :MAX_ELEVATION is null then MAX_ELEVATION else :MAX_ELEVATION end,
					MIN_ELEVATION=case when :MIN_ELEVATION is null then MIN_ELEVATION else :MIN_ELEVATION end,
					TEST_DISTANCE=case when :TEST_DISTANCE is null then TEST_DISTANCE else :TEST_DISTANCE end,
					MIN_PRESSURE=case when :MIN_PRESSURE is null then MIN_PRESSURE else :MIN_PRESSURE end,
					MAX_PRESSURE=case when :MAX_PRESSURE is null then MAX_PRESSURE else :MAX_PRESSURE end,
                    DESCRIPTION=case when :DESCRIPTION is null then DESCRIPTION else :DESCRIPTION end,
                    REASON_CL=case when :REASON_CL is null then REASON_CL else :REASON_CL end,
                    REPORT_NUMBER=case when :REPORT_NUMBER is null then REPORT_NUMBER else :REPORT_NUMBER end,
                    SOURCE_GCL=case when :SOURCE_GCL is null then SOURCE_GCL else :SOURCE_GCL end,
                    COMMENTS=case when :COMMENTS is null then COMMENTS else :COMMENTS end
                    WHERE EVENT_ID = :ID;
                </query>
            </dbCommand>
        </update>
        <delete>
            <dbCommand>
				<var name="CLASS_ID" type="String" direction="Input" default="PODS_TEST_PRESSURE" /> 
				<var name="POLICY" default="POLICY.xml#DELETE_PODS_SEM"  />
                <var name="ID" type="Int64"/>
                <var name="USER_ID" default="-1" type="Int64"/>
                <query>
					DO $$
                    BEGIN
                    UPDATE PODS.EVENT_RANGE
                    SET CURRENT_INDICATOR_LF='N'
                    WHERE EVENT_ID = {ID};

                    DELETE FROM PODS.TEST_PRESSURE
                    WHERE EVENT_ID = {ID};
                    DELETE FROM WEB50.LNK_GATE WHERE LEFT_OBJ_ID = 'PODS_TEST_PRESSURE/'||CAST({ID} AS VARCHAR(30)) OR RIGHT_OBJ_ID = 'PODS_TEST_PRESSURE/'||CAST({ID} AS VARCHAR(30)); 
					END $$;
                </query>
            </dbCommand>
        </delete>
    </data>
    <data table="TOWNSHIP_BOUNDARY" schema="PODS" id="PODS_TOWNSHIP_BOUNDARY" comment="PODS.TOWNSHIP_BOUNDARY">
        <select>
            <dbQuery idField="ID">
                <param name="USER_ID" default="-1" type="Int64"/>
                <var name="FILTER" default="1=1"/>
                <var name="LPU_ACCESS_FILTER" default="SELECT srv_district_id FROM PODS.SRV_DISTRICT_GCL"/>
                <query>
                    SELECT * FROM (SELECT EVENT_ID ID, t.* FROM PODS.TOWNSHIP_BOUNDARY t) d WHERE {FILTER}
                </query>
            </dbQuery>
        </select>
        <insert>
            <dbCommand>
				<var name="CLASS_ID" type="String" direction="Input" default="PODS_TOWNSHIP_BOUNDARY" /> 
				<var name="POLICY" default="POLICY.xml#INSERT_PODS_SEM"  />
                <var name="EVENT_GUID" default="" type="String"/>
                <var name="TOWNSHIP_DIRECTION" default="" type="String"/>
                <var name="TOWNSHIP_NUMBER" default="" type="String"/>
                <var name="RANGE_DIRECTION" default="" type="String"/>
                <var name="RANGE_NUMBER" default="" type="String"/>
                <var name="SECTION_NUMBER" default="" type="String"/>
                <var name="DATUM" default="" type="String"/>
                <var name="STATE_SURVEY_CL" default="UNKNOWN" type="Decimal"/>
                <var name="DESCRIPTION" default="" type="String"/>
                <var name="SOURCE_GCL" default="UNKNOWN" type="String"/>
                <var name="COMMENTS" default="" type="String"/>
                <var name="ID" type="Int64" direction="Output" default="SELECT max(EVENT_ID) id FROM PODS.EVENT_RANGE"/>
                <var name="PODS_USER" type="String"/>
                <var name="USER_ID" default="-1" type="Int64"/>
                <query>
					DO $$
					DECLARE
					returnId integer;
                    BEGIN
                    INSERT INTO PODS.EVENT_RANGE (EVENT_GUID,FEATURE_ID,STATION_ID_BEGIN,STATION_ID_END,PODS_USER,CREATE_DATE,EFFECTIVE_FROM_DATE,CURRENT_INDICATOR_LF,POSITIONING_TYPE_CL)
                    VALUES('{EVENT_GUID}','TOWN_BND',0,0,NULLIF('{PODS_USER}',''),current_timestamp,current_timestamp,'Y','UNKNOWN')
                    RETURNING EVENT_ID INTO returnId;

                    INSERT INTO PODS.TOWNSHIP_BOUNDARY(EVENT_ID,EVENT_GUID,TOWNSHIP_DIRECTION,TOWNSHIP_NUMBER,RANGE_DIRECTION,RANGE_NUMBER,SECTION_NUMBER,DATUM,STATE_SURVEY_CL,DESCRIPTION,SOURCE_GCL,COMMENTS)
                    VALUES(returnId,'{EVENT_GUID}','{TOWNSHIP_DIRECTION}',NULLIF('{TOWNSHIP_NUMBER}',''),'{RANGE_DIRECTION}',NULLIF('{RANGE_NUMBER}',''),'{SECTION_NUMBER}','{DATUM}',{STATE_SURVEY_CL},NULLIF('{DESCRIPTION}',''),NULLIF('{SOURCE_GCL}',''),NULLIF('{COMMENTS}',''));
					END $$;
                </query>
            </dbCommand>
        </insert>
        <update>
            <dbCommand>
				<param name="CLASS_ID" type="String" direction="Input" default="PODS_TOWNSHIP_BOUNDARY" /> 
				<var name="POLICY" default="POLICY.xml#UPDATE_PODS_SEM"  />
                <param name="EVENT_GUID" default="" type="String"/>
                <param name="TOWNSHIP_DIRECTION" default="" type="String"/>
                <param name="TOWNSHIP_NUMBER" default="" type="String"/>
                <param name="RANGE_DIRECTION" default="" type="String"/>
                <param name="RANGE_NUMBER" default="" type="String"/>
                <param name="SECTION_NUMBER" default="" type="String"/>
                <param name="DATUM" default="" type="String"/>
                <param name="STATE_SURVEY_CL" default="UNKNOWN" type="Decimal"/>
                <param name="DESCRIPTION" default="" type="String"/>
                <param name="SOURCE_GCL" default="UNKNOWN" type="String"/>
                <param name="COMMENTS" default="" type="String"/>
                <param name="ID" type="Int64"/>
                <param name="USER_ID" default="-1" type="Int64"/>
                <query>
                    UPDATE PODS.TOWNSHIP_BOUNDARY
                    SET 
					EVENT_GUID=case when :EVENT_GUID is null then EVENT_GUID else :EVENT_GUID end,
                    TOWNSHIP_DIRECTION=case when :TOWNSHIP_DIRECTION is null then TOWNSHIP_DIRECTION else :TOWNSHIP_DIRECTION end,
                    TOWNSHIP_NUMBER=case when :TOWNSHIP_NUMBER is null then TOWNSHIP_NUMBER else :TOWNSHIP_NUMBER end,
                    RANGE_DIRECTION=case when :RANGE_DIRECTION is null then RANGE_DIRECTION else :RANGE_DIRECTION end,
                    RANGE_NUMBER=case when :RANGE_NUMBER is null then RANGE_NUMBER else :RANGE_NUMBER end,
                    SECTION_NUMBER=case when :SECTION_NUMBER is null then SECTION_NUMBER else :SECTION_NUMBER end,
                    DATUM=case when :DATUM is null then DATUM else :DATUM end,
                    STATE_SURVEY_CL=case when :STATE_SURVEY_CL is null then STATE_SURVEY_CL else :STATE_SURVEY_CL end,
                    DESCRIPTION=case when :DESCRIPTION is null then DESCRIPTION else :DESCRIPTION end,
                    SOURCE_GCL=case when :SOURCE_GCL is null then SOURCE_GCL else :SOURCE_GCL end,
                    COMMENTS=case when :COMMENTS is null then COMMENTS else :COMMENTS end
                    WHERE EVENT_ID = :ID;
                </query>
            </dbCommand>
        </update>
        <delete>
            <dbCommand>
				<var name="CLASS_ID" type="String" direction="Input" default="PODS_TOWNSHIP_BOUNDARY" /> 
				<var name="POLICY" default="POLICY.xml#DELETE_PODS_SEM"  />
                <var name="ID" type="Int64"/>
                <var name="USER_ID" default="-1" type="Int64"/>
                <query>
					DO $$
                    BEGIN
                    UPDATE PODS.EVENT_RANGE
                    SET CURRENT_INDICATOR_LF='N'
                    WHERE EVENT_ID = {ID};

                    DELETE FROM PODS.TOWNSHIP_BOUNDARY
                    WHERE EVENT_ID = {ID};
                    DELETE FROM WEB50.LNK_GATE WHERE LEFT_OBJ_ID = 'PODS_TOWNSHIP_BOUNDARY/'||CAST({ID} AS VARCHAR(30)) OR RIGHT_OBJ_ID = 'PODS_TOWNSHIP_BOUNDARY/'||CAST({ID} AS VARCHAR(30)); 
					END $$;
                </query>
            </dbCommand>
        </delete>
    </data>
    <data table="VALVE" schema="PODS" id="PODS_VALVE" comment="PODS.VALVE">
        <select>
            <dbQuery idField="ID">
                <param name="USER_ID" default="-1" type="Int64"/>
                <var name="FILTER" default="1=1"/>
                <var name="LPU_ACCESS_FILTER" default="SELECT srv_district_id FROM PODS.SRV_DISTRICT_GCL"/>
                <query>
                    SELECT * FROM (SELECT EVENT_ID ID, t.* FROM PODS.VALVE t) d WHERE {FILTER}
                </query>
            </dbQuery>
        </select>
        <insert>
            <dbCommand>
				<var name="CLASS_ID" type="String" direction="Input" default="PODS_VALVE" /> 
				<var name="POLICY" default="POLICY.xml#INSERT_PODS_SEM"  />
                <var name="EVENT_GUID" default="" type="String"/>
                <var name="VALVE_IDENTIFIER" default="" type="String"/>
                <var name="NAME" default="" type="String"/>
                <var name="NOMINAL_DIAMETER_INLET_GCL" default="0" type="Decimal"/>
                <var name="NOMINAL_DIAMETER_OUTLET_GCL" default="0" type="Decimal"/>
                <var name="TYPE_CL" default="UNKNOWN" type="String"/>
                <var name="SERIAL_NUMBER" default="" type="String"/>
                <var name="MODEL" default="" type="String"/>
                <var name="MANUFACTURER_CL" default="UNKNOWN" type="String"/>
                <var name="DATE_MANUFACTURED" default="" type="DateTime"/>
                <var name="SPECIFICATION_CL" default="UNKNOWN" type="String"/>
                <var name="MILL_TEST_PRESSURE" default="NULL" type="Decimal"/>
                <var name="NOMINAL_PRESSURE_RATING" default="NULL" type="Decimal"/>
                <var name="NOMINAL_PRESSURE_RATING_INLET" default="NULL" type="Decimal"/>
                <var name="NOMINAL_PRESSURE_RATING_OUTLET" default="NULL" type="Decimal"/>
                <var name="DATE_INSTALLED" default="" type="DateTime"/>
                <var name="FUNCTION_CL" default="UNKNOWN" type="String"/>
                <var name="JOINT_TYPE_CL" default="UNKNOWN" type="String"/>
                <var name="MATERIAL_CL" default="UNKNOWN" type="String"/>
                <var name="DESCRIPTION" default="" type="String"/>
                <var name="SOURCE_GCL" default="UNKNOWN" type="String"/>
                <var name="COMMENTS" default="" type="String"/>
                <var name="ID" type="Int64" direction="Output" default="SELECT max(EVENT_ID) id FROM PODS.EVENT_RANGE"/>
                <var name="PODS_USER" type="String"/>
                <var name="USER_ID" default="-1" type="Int64"/>
                <query>
					DO $$
					DECLARE
					returnId integer;
                    BEGIN
                    INSERT INTO PODS.EVENT_RANGE (EVENT_GUID,FEATURE_ID,STATION_ID_BEGIN,STATION_ID_END,PODS_USER,CREATE_DATE,EFFECTIVE_FROM_DATE,CURRENT_INDICATOR_LF,POSITIONING_TYPE_CL)
                    VALUES('{EVENT_GUID}','VALVE',0,0,NULLIF('{PODS_USER}',''),current_timestamp,current_timestamp,'Y','UNKNOWN')
                    RETURNING EVENT_ID INTO returnId;

                    INSERT INTO PODS.VALVE(EVENT_ID,EVENT_GUID,VALVE_IDENTIFIER,NAME,NOMINAL_DIAMETER_INLET_GCL,NOMINAL_DIAMETER_OUTLET_GCL,TYPE_CL,SERIAL_NUMBER,MODEL,MANUFACTURER_CL,DATE_MANUFACTURED,SPECIFICATION_CL,MILL_TEST_PRESSURE,NOMINAL_PRESSURE_RATING,NOMINAL_PRESSURE_RATING_INLET,NOMINAL_PRESSURE_RATING_OUTLET,DATE_INSTALLED,FUNCTION_CL,JOINT_TYPE_CL,MATERIAL_CL,DESCRIPTION,SOURCE_GCL,COMMENTS)
                    VALUES(returnId,'{EVENT_GUID}','{VALVE_IDENTIFIER}',NULLIF('{NAME}',''),{NOMINAL_DIAMETER_INLET_GCL},{NOMINAL_DIAMETER_OUTLET_GCL},NULLIF('{TYPE_CL}',''),NULLIF('{SERIAL_NUMBER}',''),NULLIF('{MODEL}',''),NULLIF('{MANUFACTURER_CL}',''),'{DATE_MANUFACTURED}',NULLIF('{SPECIFICATION_CL}',''),{MILL_TEST_PRESSURE},{NOMINAL_PRESSURE_RATING},{NOMINAL_PRESSURE_RATING_INLET},{NOMINAL_PRESSURE_RATING_OUTLET},'{DATE_INSTALLED}',NULLIF('{FUNCTION_CL}',''),NULLIF('{JOINT_TYPE_CL}',''),NULLIF('{MATERIAL_CL}',''),NULLIF('{DESCRIPTION}',''),NULLIF('{SOURCE_GCL}',''),NULLIF('{COMMENTS}',''));
					END $$;
                </query>
            </dbCommand>
        </insert>
        <update>
            <dbCommand>
				<param name="CLASS_ID" type="String" direction="Input" default="PODS_VALVE" /> 
				<var name="POLICY" default="POLICY.xml#UPDATE_PODS_SEM"  />
                <param name="EVENT_GUID" default="" type="String"/>
                <param name="VALVE_IDENTIFIER" default="" type="String"/>
                <param name="NAME" default="" type="String"/>
                <param name="NOMINAL_DIAMETER_INLET_GCL" default="0" type="Decimal"/>
                <param name="NOMINAL_DIAMETER_OUTLET_GCL" default="0" type="Decimal"/>
                <param name="TYPE_CL" default="UNKNOWN" type="String"/>
                <param name="SERIAL_NUMBER" default="" type="String"/>
                <param name="MODEL" default="" type="String"/>
                <param name="MANUFACTURER_CL" default="UNKNOWN" type="String"/>
                <param name="DATE_MANUFACTURED" default="" type="DateTime"/>
                <param name="SPECIFICATION_CL" default="UNKNOWN" type="String"/>
                <param name="MILL_TEST_PRESSURE" default="NULL" type="Decimal"/>
                <param name="NOMINAL_PRESSURE_RATING" default="NULL" type="Decimal"/>
                <param name="NOMINAL_PRESSURE_RATING_INLET" default="NULL" type="Decimal"/>
                <param name="NOMINAL_PRESSURE_RATING_OUTLET" default="NULL" type="Decimal"/>
                <param name="DATE_INSTALLED" default="" type="DateTime"/>
                <param name="FUNCTION_CL" default="UNKNOWN" type="String"/>
                <param name="JOINT_TYPE_CL" default="UNKNOWN" type="String"/>
                <param name="MATERIAL_CL" default="UNKNOWN" type="String"/>
                <param name="DESCRIPTION" default="" type="String"/>
                <param name="SOURCE_GCL" default="UNKNOWN" type="String"/>
                <param name="COMMENTS" default="" type="String"/>
                <param name="ID" type="Int64"/>
                <param name="USER_ID" default="-1" type="Int64"/>
                <query>
                    UPDATE PODS.VALVE
                    SET 
					EVENT_GUID=case when :EVENT_GUID is null then EVENT_GUID else :EVENT_GUID end,
					VALVE_IDENTIFIER=:VALVE_IDENTIFIER,NAME=case when :NAME is null then NAME else :NAME end,
                    NOMINAL_DIAMETER_INLET_GCL=case when :NOMINAL_DIAMETER_INLET_GCL is null then NOMINAL_DIAMETER_INLET_GCL else :NOMINAL_DIAMETER_INLET_GCL end,
                    NOMINAL_DIAMETER_OUTLET_GCL=case when :NOMINAL_DIAMETER_OUTLET_GCL is null then NOMINAL_DIAMETER_OUTLET_GCL else :NOMINAL_DIAMETER_OUTLET_GCL end,
                    TYPE_CL=case when :TYPE_CL is null then TYPE_CL else :TYPE_CL end,
                    SERIAL_NUMBER=case when :SERIAL_NUMBER is null then SERIAL_NUMBER else :SERIAL_NUMBER end,
                    MODEL=case when :MODEL is null then MODEL else :MODEL end,
                    MANUFACTURER_CL=case when :MANUFACTURER_CL is null then MANUFACTURER_CL else :MANUFACTURER_CL end,
                    DATE_MANUFACTURED=case when :DATE_MANUFACTURED is null then DATE_MANUFACTURED else :DATE_MANUFACTURED end,
                    SPECIFICATION_CL=case when :SPECIFICATION_CL is null then SPECIFICATION_CL else :SPECIFICATION_CL end,
                    MILL_TEST_PRESSURE=case when :MILL_TEST_PRESSURE is null then MILL_TEST_PRESSURE else :MILL_TEST_PRESSURE end,
                    NOMINAL_PRESSURE_RATING=case when :NOMINAL_PRESSURE_RATING is null then NOMINAL_PRESSURE_RATING else :NOMINAL_PRESSURE_RATING end,
                    NOMINAL_PRESSURE_RATING_INLET=case when :NOMINAL_PRESSURE_RATING_INLET is null then NOMINAL_PRESSURE_RATING_INLET else :NOMINAL_PRESSURE_RATING_INLET end,
                    NOMINAL_PRESSURE_RATING_OUTLET=case when :NOMINAL_PRESSURE_RATING_OUTLET is null then NOMINAL_PRESSURE_RATING_OUTLET else :NOMINAL_PRESSURE_RATING_OUTLET end,
                    DATE_INSTALLED=case when :DATE_INSTALLED is null then DATE_INSTALLED else :DATE_INSTALLED end,
                    FUNCTION_CL=case when :FUNCTION_CL is null then FUNCTION_CL else :FUNCTION_CL end,
                    JOINT_TYPE_CL=case when :JOINT_TYPE_CL is null then JOINT_TYPE_CL else :JOINT_TYPE_CL end,
					MATERIAL_CL=case when :MATERIAL_CL is null then MATERIAL_CL else :MATERIAL_CL end,
                    DESCRIPTION=case when :DESCRIPTION is null then DESCRIPTION else :DESCRIPTION end,
                    SOURCE_GCL=case when :SOURCE_GCL is null then SOURCE_GCL else :SOURCE_GCL end,
                    COMMENTS=case when :COMMENTS is null then COMMENTS else :COMMENTS end
                    WHERE EVENT_ID = :ID;
                </query>
            </dbCommand>
        </update>
        <delete>
            <dbCommand>
				<var name="CLASS_ID" type="String" direction="Input" default="PODS_VALVE" /> 
				<var name="POLICY" default="POLICY.xml#DELETE_PODS_SEM"  />
                <var name="ID" type="Int64"/>
                <var name="USER_ID" default="-1" type="Int64"/>
                <query>
					DO $$
                    BEGIN

                    UPDATE PODS.EVENT_RANGE
                    SET CURRENT_INDICATOR_LF='N'
                    WHERE EVENT_ID = {ID};

                    DELETE
                    FROM PODS.VALVE_OPERATOR
                    WHERE EVENT_ID = {ID};

                    DELETE
                    FROM PODS.VALVE
                    WHERE EVENT_ID = {ID};

                    DELETE
                    FROM WEB50.LNK_GATE
                    WHERE LEFT_OBJ_ID = 'PODS_VALVE/'||CAST({ID} AS VARCHAR(30))
                    OR RIGHT_OBJ_ID = 'PODS_VALVE/'||CAST({ID} AS VARCHAR(30));

                    DELETE
                    FROM WEB50.LNK_GATE
                    WHERE LEFT_OBJ_ID = 'PODS_VALVE_OPERATOR/'||CAST({ID} AS VARCHAR(30))
                    OR RIGHT_OBJ_ID = 'PODS_VALVE_OPERATOR/'||CAST({ID} AS VARCHAR(30));

                    END $$;
                </query>
            </dbCommand>
        </delete>
    </data>
    <data table="VALVE_OPERATOR" schema="PODS" id="PODS_VALVE_OPERATOR" comment="PODS.VALVE_OPERATOR">
        <select>
            <dbQuery idField="ID">
                <param name="USER_ID" default="-1" type="Int64"/>
                <var name="FILTER" default="1=1"/>
                <var name="LPU_ACCESS_FILTER" default="SELECT srv_district_id FROM PODS.SRV_DISTRICT_GCL"/>
                <query>
                    SELECT * FROM (SELECT EVENT_ID ID, t.* FROM PODS.VALVE_OPERATOR t) d WHERE {FILTER}
                </query>
            </dbQuery>
        </select>
        <insert>
            <dbCommand>
				<var name="CLASS_ID" type="String" direction="Input" default="PODS_VALVE_OPERATOR" /> 
				<var name="POLICY" default="POLICY.xml#INSERT_PODS_SEM"  />
                <var name="EVENT_GUID" default="" type="String"/>
                <var name="TYPE_SCL" default="" type="String"/>
                <var name="SUBTYPE_SCL" default="" type="String"/>
                <var name="SERIAL_NUMBER" default="" type="String"/>
                <var name="MANUFACTURER_CL" default="UNKNOWN" type="String"/>
                <var name="DATE_MANUFACTURED" default="" type="DateTime"/>
                <var name="DESCRIPTION" default="" type="String"/>
                <var name="SOURCE_GCL" default="UNKNOWN" type="String"/>
                <var name="COMMENTS" default="" type="String"/>
                <var name="ID" type="Int64" direction="Output" default="SELECT max(EVENT_ID) id FROM PODS.EVENT_RANGE"/>
                <var name="PODS_USER" type="String"/>
                <var name="USER_ID" default="-1" type="Int64"/>
                <query>
					DO $$
					DECLARE
					returnId integer;
                    BEGIN
                    INSERT INTO PODS.EVENT_RANGE (EVENT_GUID,FEATURE_ID,STATION_ID_BEGIN,STATION_ID_END,PODS_USER,CREATE_DATE,EFFECTIVE_FROM_DATE,CURRENT_INDICATOR_LF,POSITIONING_TYPE_CL)
                    VALUES('{EVENT_GUID}','VALVE_OPERATOR',0,0,NULLIF('{PODS_USER}',''),current_timestamp,current_timestamp,'Y','UNKNOWN')
                    RETURNING EVENT_ID INTO returnId;

                    INSERT INTO PODS.VALVE_OPERATOR(EVENT_ID,EVENT_GUID,TYPE_SCL,SUBTYPE_SCL,SERIAL_NUMBER,MANUFACTURER_CL,DATE_MANUFACTURED,DESCRIPTION,SOURCE_GCL,COMMENTS)
                    VALUES(returnId,'{EVENT_GUID}',coalesce(SUBSTR('{TYPE_SCL}',0,strpos('{TYPE_SCL}','@')),'UNKNOWN'),coalesce(SUBSTR('{TYPE_SCL}',strpos('{TYPE_SCL}','@')+1,length('{TYPE_SCL}')-strpos('{TYPE_SCL}','@')),'NONE'),NULLIF('{SERIAL_NUMBER}',''),NULLIF('{MANUFACTURER_CL}',''),'{DATE_MANUFACTURED}',NULLIF('{DESCRIPTION}',''),NULLIF('{SOURCE_GCL}',''),NULLIF('{COMMENTS}',''));
					END $$;
                </query>
            </dbCommand>
        </insert>
        <update>
            <dbCommand>
				<param name="CLASS_ID" type="String" direction="Input" default="PODS_VALVE_OPERATOR" /> 
				<var name="POLICY" default="POLICY.xml#UPDATE_PODS_SEM"  />
                <param name="EVENT_GUID" default="" type="String"/>
                <param name="TYPE_SCL" default="" type="String"/>
                <param name="SUBTYPE_SCL" default="" type="String"/>
                <param name="SERIAL_NUMBER" default="" type="String"/>
                <param name="MANUFACTURER_CL" default="UNKNOWN" type="String"/>
                <param name="DATE_MANUFACTURED" default="" type="DateTime"/>
                <param name="DESCRIPTION" default="" type="String"/>
                <param name="SOURCE_GCL" default="UNKNOWN" type="String"/>
                <param name="COMMENTS" default="" type="String"/>
                <param name="ID" type="Int64"/>
                <param name="USER_ID" default="-1" type="Int64"/>
                <query>
                    UPDATE PODS.VALVE_OPERATOR
                    SET 
					EVENT_GUID=case when :EVENT_GUID is null then EVENT_GUID else :EVENT_GUID end,
					TYPE_SCL=coalesce(SUBSTR(:TYPE_SCL,0,strpos(:TYPE_SCL,'@')),'UNKNOWN'),
					SUBTYPE_SCL=coalesce(SUBSTR(:TYPE_SCL,strpos(:TYPE_SCL,'@')+1,length(:TYPE_SCL)-strpos(:TYPE_SCL,'@')),'NONE'),
                    SERIAL_NUMBER=case when :SERIAL_NUMBER is null then SERIAL_NUMBER else :SERIAL_NUMBER end,
                    MANUFACTURER_CL=case when :MANUFACTURER_CL is null then MANUFACTURER_CL else :MANUFACTURER_CL end,
                    DATE_MANUFACTURED=case when :DATE_MANUFACTURED is null then DATE_MANUFACTURED else :DATE_MANUFACTURED end,
                    DESCRIPTION=case when :DESCRIPTION is null then DESCRIPTION else :DESCRIPTION end,
                    SOURCE_GCL=case when :SOURCE_GCL is null then SOURCE_GCL else :SOURCE_GCL end,
                    COMMENTS=case when :COMMENTS is null then COMMENTS else :COMMENTS end
                    WHERE EVENT_ID = :ID;
                </query>
            </dbCommand>
        </update>
        <delete>
            <dbCommand>
				<var name="CLASS_ID" type="String" direction="Input" default="PODS_VALVE_OPERATOR" /> 
				<var name="POLICY" default="POLICY.xml#DELETE_PODS_SEM"  />
                <var name="ID" type="Int64"/>
                <var name="USER_ID" default="-1" type="Int64"/>
                <query>
					DO $$
                    BEGIN
                    UPDATE PODS.EVENT_RANGE
                    SET CURRENT_INDICATOR_LF='N'
                    WHERE EVENT_ID = {ID};

                    DELETE FROM PODS.VALVE_OPERATOR
                    WHERE EVENT_ID = {ID};
                    DELETE FROM WEB50.LNK_GATE WHERE LEFT_OBJ_ID = 'PODS_VALVE_OPERATOR/'||CAST({ID} AS VARCHAR(30)) OR RIGHT_OBJ_ID = 'PODS_VALVE_OPERATOR/'||CAST({ID} AS VARCHAR(30)); END $$;
                </query>
            </dbCommand>
        </delete>
    </data>
    <data table="VENT_PIPE" schema="PODS" id="PODS_VENT_PIPE" comment="PODS.VENT_PIPE">
        <select>
            <dbQuery idField="ID">
                <param name="USER_ID" default="-1" type="Int64"/>
                <var name="FILTER" default="1=1"/>
                <var name="LPU_ACCESS_FILTER" default="SELECT srv_district_id FROM PODS.SRV_DISTRICT_GCL"/>
                <query>
                    SELECT * FROM (SELECT EVENT_ID ID, t.* FROM PODS.VENT_PIPE t) d WHERE {FILTER}
                </query>
            </dbQuery>
        </select>
        <insert>
            <dbCommand>
				<var name="CLASS_ID" type="String" direction="Input" default="PODS_VENT_PIPE" /> 
				<var name="POLICY" default="POLICY.xml#INSERT_PODS_SEM"  />
                <var name="EVENT_GUID" default="" type="String"/>
                <var name="NAME" default="" type="String"/>
                <var name="MANUFACTURER_CL" default="UNKNOWN" type="String"/>
                <var name="DATE_MANUFACTURED" default="" type="DateTime"/>
                <var name="PIPE_MILL_LOCATION_GCL" default="UNKNOWN" type="String"/>
                <var name="MILL_TEST_PRESSURE" default="NULL" type="Decimal"/>
                <var name="MATERIAL_CL" default="UNKNOWN" type="String"/>
                <var name="PIPE_SPECIFICATION_GCL" default="UNKNOWN" type="String"/>
                <var name="SMYS_GCL" default="0" type="Decimal"/>
                <var name="NOMINAL_DIAMETER_GCL" default="0" type="Decimal"/>
                <var name="NOMINAL_WALL_THICKNESS_GCL" default="0" type="Decimal"/>
                <var name="PIPE_LONG_SEAM_GCL" default="UNKNOWN" type="String"/>
                <var name="DATE_INSTALLED" default="" type="DateTime"/>
                <var name="DESCRIPTION" default="" type="String"/>
                <var name="SOURCE_GCL" default="UNKNOWN" type="String"/>
                <var name="COMMENTS" default="" type="String"/>
                <var name="ID" type="Int64" direction="Output" default="SELECT max(EVENT_ID) id FROM PODS.EVENT_RANGE"/>
                <var name="PODS_USER" type="String"/>
                <var name="USER_ID" default="-1" type="Int64"/>
                <query>
					DO $$
					DECLARE
					returnId integer;
                    BEGIN
                    INSERT INTO PODS.EVENT_RANGE (EVENT_GUID,FEATURE_ID,STATION_ID_BEGIN,STATION_ID_END,PODS_USER,CREATE_DATE,EFFECTIVE_FROM_DATE,CURRENT_INDICATOR_LF,POSITIONING_TYPE_CL)
                    VALUES('{EVENT_GUID}','VENT_PIPE',0,0,NULLIF('{PODS_USER}',''),current_timestamp,current_timestamp,'Y','UNKNOWN')
                    RETURNING EVENT_ID INTO returnId;

                    INSERT INTO PODS.VENT_PIPE(EVENT_ID,EVENT_GUID,NAME,MANUFACTURER_CL,DATE_MANUFACTURED,PIPE_MILL_LOCATION_GCL,MILL_TEST_PRESSURE,MATERIAL_CL,PIPE_SPECIFICATION_GCL,SMYS_GCL,NOMINAL_DIAMETER_GCL,NOMINAL_WALL_THICKNESS_GCL,PIPE_LONG_SEAM_GCL,DATE_INSTALLED,DESCRIPTION,SOURCE_GCL,COMMENTS)
                    VALUES(returnId,'{EVENT_GUID}',NULLIF('{NAME}',''),NULLIF('{MANUFACTURER_CL}',''),'{DATE_MANUFACTURED}',NULLIF('{PIPE_MILL_LOCATION_GCL}',''),{MILL_TEST_PRESSURE},NULLIF('{MATERIAL_CL}',''),NULLIF('{PIPE_SPECIFICATION_GCL}',''),{SMYS_GCL},{NOMINAL_DIAMETER_GCL},{NOMINAL_WALL_THICKNESS_GCL},NULLIF('{PIPE_LONG_SEAM_GCL}',''),'{DATE_INSTALLED}',NULLIF('{DESCRIPTION}',''),NULLIF('{SOURCE_GCL}',''),NULLIF('{COMMENTS}',''));
					END $$;
                </query>
            </dbCommand>
        </insert>
        <update>
            <dbCommand>
				<param name="CLASS_ID" type="String" direction="Input" default="PODS_VENT_PIPE" /> 
				<var name="POLICY" default="POLICY.xml#UPDATE_PODS_SEM"  />
                <param name="EVENT_GUID" default="" type="String"/>
                <param name="NAME" default="" type="String"/>
                <param name="MANUFACTURER_CL" default="UNKNOWN" type="String"/>
                <param name="DATE_MANUFACTURED" default="" type="DateTime"/>
                <param name="PIPE_MILL_LOCATION_GCL" default="UNKNOWN" type="String"/>
                <param name="MILL_TEST_PRESSURE" default="NULL" type="Decimal"/>
                <param name="MATERIAL_CL" default="UNKNOWN" type="String"/>
                <param name="PIPE_SPECIFICATION_GCL" default="UNKNOWN" type="String"/>
                <param name="SMYS_GCL" default="0" type="Decimal"/>
                <param name="NOMINAL_DIAMETER_GCL" default="0" type="Decimal"/>
                <param name="NOMINAL_WALL_THICKNESS_GCL" default="0" type="Decimal"/>
                <param name="PIPE_LONG_SEAM_GCL" default="UNKNOWN" type="String"/>
                <param name="DATE_INSTALLED" default="" type="DateTime"/>
                <param name="DESCRIPTION" default="" type="String"/>
                <param name="SOURCE_GCL" default="UNKNOWN" type="String"/>
                <param name="COMMENTS" default="" type="String"/>
                <param name="ID" type="Int64"/>
                <param name="USER_ID" default="-1" type="Int64"/>
                <query>
                    UPDATE PODS.VENT_PIPE
                    SET 
					EVENT_GUID=case when :EVENT_GUID is null then EVENT_GUID else :EVENT_GUID end,
					NAME=case when :NAME is null then NAME else :NAME end,
                    MANUFACTURER_CL=case when :MANUFACTURER_CL is null then MANUFACTURER_CL else :MANUFACTURER_CL end,
                    DATE_MANUFACTURED=case when :DATE_MANUFACTURED is null then DATE_MANUFACTURED else :DATE_MANUFACTURED end,
                    PIPE_MILL_LOCATION_GCL=case when :PIPE_MILL_LOCATION_GCL is null then PIPE_MILL_LOCATION_GCL else :PIPE_MILL_LOCATION_GCL end,
                    MILL_TEST_PRESSURE=case when :MILL_TEST_PRESSURE is null then MILL_TEST_PRESSURE else :MILL_TEST_PRESSURE end,
					MATERIAL_CL=case when :MATERIAL_CL is null then MATERIAL_CL else :MATERIAL_CL end,
                    PIPE_SPECIFICATION_GCL=case when :PIPE_SPECIFICATION_GCL is null then PIPE_SPECIFICATION_GCL else :PIPE_SPECIFICATION_GCL end,
                    SMYS_GCL=case when :SMYS_GCL is null then SMYS_GCL else :SMYS_GCL end,
                    NOMINAL_DIAMETER_GCL=case when :NOMINAL_DIAMETER_GCL is null then NOMINAL_DIAMETER_GCL else :NOMINAL_DIAMETER_GCL end,
                    NOMINAL_WALL_THICKNESS_GCL=case when :NOMINAL_WALL_THICKNESS_GCL is null then NOMINAL_WALL_THICKNESS_GCL else :NOMINAL_WALL_THICKNESS_GCL end,
                    PIPE_LONG_SEAM_GCL=case when :PIPE_LONG_SEAM_GCL is null then PIPE_LONG_SEAM_GCL else :PIPE_LONG_SEAM_GCL end,
                    DATE_INSTALLED=case when :DATE_INSTALLED is null then DATE_INSTALLED else :DATE_INSTALLED end,
                    DESCRIPTION=case when :DESCRIPTION is null then DESCRIPTION else :DESCRIPTION end,
                    SOURCE_GCL=case when :SOURCE_GCL is null then SOURCE_GCL else :SOURCE_GCL end,
                    COMMENTS=case when :COMMENTS is null then COMMENTS else :COMMENTS end
                    WHERE EVENT_ID = :ID;
                </query>
            </dbCommand>
        </update>
        <delete>
            <dbCommand>
				<var name="CLASS_ID" type="String" direction="Input" default="PODS_VENT_PIPE" /> 
				<var name="POLICY" default="POLICY.xml#DELETE_PODS_SEM"  />
                <var name="ID" type="Int64"/>
                <var name="USER_ID" default="-1" type="Int64"/>
                <query>
					DO $$
                    BEGIN
                    UPDATE PODS.EVENT_RANGE
                    SET CURRENT_INDICATOR_LF='N'
                    WHERE EVENT_ID = {ID};

                    DELETE FROM PODS.VENT_PIPE
                    WHERE EVENT_ID = {ID};
                    DELETE FROM WEB50.LNK_GATE WHERE LEFT_OBJ_ID = 'PODS_VENT_PIPE/'||CAST({ID} AS VARCHAR(30)) OR RIGHT_OBJ_ID = 'PODS_VENT_PIPE/'||CAST({ID} AS VARCHAR(30)); 
					END $$;
                </query>
            </dbCommand>
        </delete>
    </data>
    <data table="VESSEL" schema="PODS" id="PODS_VESSEL" comment="PODS.VESSEL">
        <select>
            <dbQuery idField="ID">
                <param name="USER_ID" default="-1" type="Int64"/>
                <var name="FILTER" default="1=1"/>
                <var name="LPU_ACCESS_FILTER" default="SELECT srv_district_id FROM PODS.SRV_DISTRICT_GCL"/>
                <query>
                    SELECT * FROM (SELECT EVENT_ID ID, t.* FROM PODS.VESSEL t) d WHERE {FILTER}
                </query>
            </dbQuery>
        </select>
        <insert>
            <dbCommand>
				<var name="CLASS_ID" type="String" direction="Input" default="PODS_VESSEL" /> 
				<var name="POLICY" default="POLICY.xml#INSERT_PODS_SEM"  />
                <var name="EVENT_GUID" default="" type="String"/>
                <var name="TYPE_CL" default="UNKNOWN" type="String"/>
                <var name="MANUFACTURER_CL" default="UNKNOWN" type="String"/>
                <var name="DATE_MANUFACTURED" default="" type="DateTime"/>
                <var name="SERIAL_NUMBER" default="" type="String"/>
                <var name="MODEL" default="" type="String"/>
                <var name="SPECIFICATION_CL" default="UNKNOWN" type="String"/>
                <var name="NOMINAL_TEMPERATURE_RATING" default="NULL" type="Decimal"/>
                <var name="NOMINAL_PRESSURE_RATING" default="NULL" type="Decimal"/>
                <var name="MILL_TEST_PRESSURE" default="NULL" type="Decimal"/>
                <var name="DATE_INSTALLED" default="" type="DateTime"/>
                <var name="DESCRIPTION" default="" type="String"/>
                <var name="SOURCE_GCL" default="UNKNOWN" type="String"/>
                <var name="COMMENTS" default="" type="String"/>
                <var name="ID" type="Int64" direction="Output" default="SELECT max(EVENT_ID) id FROM PODS.EVENT_RANGE"/>
                <var name="PODS_USER" type="String"/>
                <var name="USER_ID" default="-1" type="Int64"/>
                <query>
					DO $$
					DECLARE
					returnId integer;
                    BEGIN
                    INSERT INTO PODS.EVENT_RANGE (EVENT_GUID,FEATURE_ID,STATION_ID_BEGIN,STATION_ID_END,PODS_USER,CREATE_DATE,EFFECTIVE_FROM_DATE,CURRENT_INDICATOR_LF,POSITIONING_TYPE_CL)
                    VALUES('{EVENT_GUID}','VESSEL',0,0,NULLIF('{PODS_USER}',''),current_timestamp,current_timestamp,'Y','UNKNOWN')
                    RETURNING EVENT_ID INTO returnId;

                    INSERT INTO PODS.VESSEL(EVENT_ID,EVENT_GUID,TYPE_CL,MANUFACTURER_CL,DATE_MANUFACTURED,SERIAL_NUMBER,MODEL,SPECIFICATION_CL,NOMINAL_TEMPERATURE_RATING,NOMINAL_PRESSURE_RATING,MILL_TEST_PRESSURE,DATE_INSTALLED,DESCRIPTION,SOURCE_GCL,COMMENTS)
                    VALUES(returnId,'{EVENT_GUID}',NULLIF('{TYPE_CL}',''),NULLIF('{MANUFACTURER_CL}',''),'{DATE_MANUFACTURED}',NULLIF('{SERIAL_NUMBER}',''),NULLIF('{MODEL}',''),NULLIF('{SPECIFICATION_CL}',''),{NOMINAL_TEMPERATURE_RATING},{NOMINAL_PRESSURE_RATING},{MILL_TEST_PRESSURE},'{DATE_INSTALLED}',NULLIF('{DESCRIPTION}',''),NULLIF('{SOURCE_GCL}',''),NULLIF('{COMMENTS}',''));
					END $$;
                </query>
            </dbCommand>
        </insert>
        <update>
            <dbCommand>
				<param name="CLASS_ID" type="String" direction="Input" default="PODS_VESSEL" /> 
				<var name="POLICY" default="POLICY.xml#UPDATE_PODS_SEM"  />
                <param name="EVENT_GUID" default="" type="String"/>
                <param name="TYPE_CL" default="UNKNOWN" type="String"/>
                <param name="MANUFACTURER_CL" default="UNKNOWN" type="String"/>
                <param name="DATE_MANUFACTURED" default="" type="DateTime"/>
                <param name="SERIAL_NUMBER" default="" type="String"/>
                <param name="MODEL" default="" type="String"/>
                <param name="SPECIFICATION_CL" default="UNKNOWN" type="String"/>
                <param name="NOMINAL_TEMPERATURE_RATING" default="NULL" type="Decimal"/>
                <param name="NOMINAL_PRESSURE_RATING" default="NULL" type="Decimal"/>
                <param name="MILL_TEST_PRESSURE" default="NULL" type="Decimal"/>
                <param name="DATE_INSTALLED" default="" type="DateTime"/>
                <param name="DESCRIPTION" default="" type="String"/>
                <param name="SOURCE_GCL" default="UNKNOWN" type="String"/>
                <param name="COMMENTS" default="" type="String"/>
                <param name="ID" type="Int64"/>
                <param name="USER_ID" default="-1" type="Int64"/>
                <query>
                    UPDATE PODS.VESSEL
                    SET 
					EVENT_GUID=case when :EVENT_GUID is null then EVENT_GUID else :EVENT_GUID end,
                    TYPE_CL=case when :TYPE_CL is null then TYPE_CL else :TYPE_CL end,
                    MANUFACTURER_CL=case when :MANUFACTURER_CL is null then MANUFACTURER_CL else :MANUFACTURER_CL end,
                    DATE_MANUFACTURED=case when :DATE_MANUFACTURED is null then DATE_MANUFACTURED else :DATE_MANUFACTURED end,
                    SERIAL_NUMBER=case when :SERIAL_NUMBER is null then SERIAL_NUMBER else :SERIAL_NUMBER end,
                    MODEL=case when :MODEL is null then MODEL else :MODEL end,
                    SPECIFICATION_CL=case when :SPECIFICATION_CL is null then SPECIFICATION_CL else :SPECIFICATION_CL end,
					NOMINAL_TEMPERATURE_RATING=case when :NOMINAL_TEMPERATURE_RATING is null then NOMINAL_TEMPERATURE_RATING else :NOMINAL_TEMPERATURE_RATING end,
                    NOMINAL_PRESSURE_RATING=case when :NOMINAL_PRESSURE_RATING is null then NOMINAL_PRESSURE_RATING else :NOMINAL_PRESSURE_RATING end,
                    MILL_TEST_PRESSURE=case when :MILL_TEST_PRESSURE is null then MILL_TEST_PRESSURE else :MILL_TEST_PRESSURE end,
                    DATE_INSTALLED=case when :DATE_INSTALLED is null then DATE_INSTALLED else :DATE_INSTALLED end,
                    DESCRIPTION=case when :DESCRIPTION is null then DESCRIPTION else :DESCRIPTION end,
                    SOURCE_GCL=case when :SOURCE_GCL is null then SOURCE_GCL else :SOURCE_GCL end,
                    COMMENTS=case when :COMMENTS is null then COMMENTS else :COMMENTS end
                    WHERE EVENT_ID = :ID;
                </query>
            </dbCommand>
        </update>
        <delete>
            <dbCommand>
				<var name="CLASS_ID" type="String" direction="Input" default="PODS_VESSEL" /> 
				<var name="POLICY" default="POLICY.xml#DELETE_PODS_SEM"  />
                <var name="ID" type="Int64"/>
                <var name="USER_ID" default="-1" type="Int64"/>
                <query>
					DO $$
                    BEGIN
                    UPDATE PODS.EVENT_RANGE
                    SET CURRENT_INDICATOR_LF='N'
                    WHERE EVENT_ID = {ID};

                    DELETE FROM PODS.VESSEL
                    WHERE EVENT_ID = {ID};
                    DELETE FROM WEB50.LNK_GATE WHERE LEFT_OBJ_ID = 'PODS_VESSEL/'||CAST({ID} AS VARCHAR(30)) OR RIGHT_OBJ_ID = 'PODS_VESSEL/'||CAST({ID} AS VARCHAR(30)); 
					END $$;
                </query>
            </dbCommand>
        </delete>
    </data>
    <data table="WELLHEAD_ASSEMBLY" schema="PODS" id="PODS_WELLHEAD_ASSEMBLY" comment="PODS.WELLHEAD_ASSEMBLY">
        <select>
            <dbQuery idField="ID">
                <param name="USER_ID" default="-1" type="Int64"/>
                <var name="FILTER" default="1=1"/>
                <var name="LPU_ACCESS_FILTER" default="SELECT srv_district_id FROM PODS.SRV_DISTRICT_GCL"/>
                <query>
                    SELECT * FROM (SELECT EVENT_ID ID, t.* FROM PODS.WELLHEAD_ASSEMBLY t) d WHERE {FILTER}
                </query>
            </dbQuery>
        </select>
        <insert>
            <dbCommand>
				<var name="CLASS_ID" type="String" direction="Input" default="PODS_WELLHEAD_ASSEMBLY" /> 
				<var name="POLICY" default="POLICY.xml#INSERT_PODS_SEM"  />
                <var name="EVENT_GUID" default="" type="String"/>
                <var name="TYPE_CL" default="UNKNOWN" type="String"/>
                <var name="MATERIAL_CL" default="UNKNOWN" type="String"/>
                <var name="MANUFACTURER_CL" default="UNKNOWN" type="String"/>
                <var name="WELL_OPERATOR_CL" default="UNKNOWN" type="String"/>
                <var name="WELL_OWNER_CL" default="UNKNOWN" type="String"/>
                <var name="NOMINAL_PRESSURE_RATING" default="NULL" type="Decimal"/>
                <var name="MILL_TEST_PRESSURE" default="NULL" type="Decimal"/>
                <var name="DESIGN_MIN_TEMPERATURE" default="NULL" type="Decimal"/>
                <var name="DESIGN_MAX_TEMPERATURE" default="NULL" type="Decimal"/>
                <var name="NOMINAL_DIAMETER_GCL" default="0" type="Decimal"/>
                <var name="NOMINAL_WALL_THICKNESS_GCL" default="0" type="Decimal"/>
                <var name="CONNECTION_TYPE_CL" default="UNKNOWN" type="String"/>
                <var name="OUTLET_VALVE_TYPE_CL" default="UNKNOWN" type="String"/>
                <var name="ACTUATOR_TYPE_CL" default="UNKNOWN" type="String"/>
                <var name="DESCRIPTION" default="" type="String"/>
                <var name="SOURCE_GCL" default="UNKNOWN" type="String"/>
                <var name="COMMENTS" default="" type="String"/>
                <var name="ID" type="Int64" direction="Output" default="SELECT max(EVENT_ID) id FROM PODS.EVENT_RANGE"/>
                <var name="PODS_USER" type="String"/>
                <var name="USER_ID" default="-1" type="Int64"/>
                <query>
					DO $$
					DECLARE
					returnId integer;
                    BEGIN
                    INSERT INTO PODS.EVENT_RANGE (EVENT_GUID,FEATURE_ID,STATION_ID_BEGIN,STATION_ID_END,PODS_USER,CREATE_DATE,EFFECTIVE_FROM_DATE,CURRENT_INDICATOR_LF,POSITIONING_TYPE_CL)
                    VALUES('{EVENT_GUID}','WELLHD_ASS',0,0,NULLIF('{PODS_USER}',''),current_timestamp,current_timestamp,'Y','UNKNOWN')
                    RETURNING EVENT_ID INTO returnId;

                    INSERT INTO PODS.WELLHEAD_ASSEMBLY(EVENT_ID,EVENT_GUID,TYPE_CL,MATERIAL_CL,MANUFACTURER_CL,WELL_OPERATOR_CL,WELL_OWNER_CL,NOMINAL_PRESSURE_RATING,MILL_TEST_PRESSURE,DESIGN_MIN_TEMPERATURE,DESIGN_MAX_TEMPERATURE,NOMINAL_DIAMETER_GCL,NOMINAL_WALL_THICKNESS_GCL,CONNECTION_TYPE_CL,OUTLET_VALVE_TYPE_CL,ACTUATOR_TYPE_CL,DESCRIPTION,SOURCE_GCL,COMMENTS)
                    VALUES(returnId,'{EVENT_GUID}',NULLIF('{TYPE_CL}',''),NULLIF('{MATERIAL_CL}',''),NULLIF('{MANUFACTURER_CL}',''),NULLIF('{WELL_OPERATOR_CL}',''),NULLIF('{WELL_OWNER_CL}',''),{NOMINAL_PRESSURE_RATING},{MILL_TEST_PRESSURE},{DESIGN_MIN_TEMPERATURE},{DESIGN_MAX_TEMPERATURE},{NOMINAL_DIAMETER_GCL},{NOMINAL_WALL_THICKNESS_GCL},NULLIF('{CONNECTION_TYPE_CL}',''),NULLIF('{OUTLET_VALVE_TYPE_CL}',''),'{ACTUATOR_TYPE_CL}',NULLIF('{DESCRIPTION}',''),NULLIF('{SOURCE_GCL}',''),NULLIF('{COMMENTS}',''));
					END $$;
                </query>
            </dbCommand>
        </insert>
        <update>
            <dbCommand>
				<param name="CLASS_ID" type="String" direction="Input" default="PODS_WELLHEAD_ASSEMBLY" /> 
				<var name="POLICY" default="POLICY.xml#UPDATE_PODS_SEM"  />
                <param name="EVENT_GUID" default="" type="String"/>
                <param name="TYPE_CL" default="UNKNOWN" type="String"/>
                <param name="MATERIAL_CL" default="UNKNOWN" type="String"/>
                <param name="MANUFACTURER_CL" default="UNKNOWN" type="String"/>
                <param name="WELL_OPERATOR_CL" default="UNKNOWN" type="String"/>
                <param name="WELL_OWNER_CL" default="UNKNOWN" type="String"/>
                <param name="NOMINAL_PRESSURE_RATING" default="NULL" type="Decimal"/>
                <param name="MILL_TEST_PRESSURE" default="NULL" type="Decimal"/>
                <param name="DESIGN_MIN_TEMPERATURE" default="NULL" type="Decimal"/>
                <param name="DESIGN_MAX_TEMPERATURE" default="NULL" type="Decimal"/>
                <param name="NOMINAL_DIAMETER_GCL" default="0" type="Decimal"/>
                <param name="NOMINAL_WALL_THICKNESS_GCL" default="0" type="Decimal"/>
                <param name="CONNECTION_TYPE_CL" default="UNKNOWN" type="String"/>
                <param name="OUTLET_VALVE_TYPE_CL" default="UNKNOWN" type="String"/>
                <param name="ACTUATOR_TYPE_CL" default="UNKNOWN" type="String"/>
                <param name="DESCRIPTION" default="" type="String"/>
                <param name="SOURCE_GCL" default="UNKNOWN" type="String"/>
                <param name="COMMENTS" default="" type="String"/>
                <param name="ID" type="Int64"/>
                <param name="USER_ID" default="-1" type="Int64"/>
                <query>
                    UPDATE PODS.WELLHEAD_ASSEMBLY
                    SET 
					EVENT_GUID=case when :EVENT_GUID is null then EVENT_GUID else :EVENT_GUID end,
                    TYPE_CL=case when :TYPE_CL is null then TYPE_CL else :TYPE_CL end,
					MATERIAL_CL=case when :MATERIAL_CL is null then MATERIAL_CL else :MATERIAL_CL end,
                    MANUFACTURER_CL=case when :MANUFACTURER_CL is null then MANUFACTURER_CL else :MANUFACTURER_CL end,
					WELL_OPERATOR_CL=case when :WELL_OPERATOR_CL is null then WELL_OPERATOR_CL else :WELL_OPERATOR_CL end,
					WELL_OWNER_CL=case when :WELL_OWNER_CL is null then WELL_OWNER_CL else :WELL_OWNER_CL end,
                    NOMINAL_PRESSURE_RATING=case when :NOMINAL_PRESSURE_RATING is null then NOMINAL_PRESSURE_RATING else :NOMINAL_PRESSURE_RATING end,
                    MILL_TEST_PRESSURE=case when :MILL_TEST_PRESSURE is null then MILL_TEST_PRESSURE else :MILL_TEST_PRESSURE end,
                    DESIGN_MIN_TEMPERATURE=case when :DESIGN_MIN_TEMPERATURE is null then DESIGN_MIN_TEMPERATURE else :DESIGN_MIN_TEMPERATURE end,
                    DESIGN_MAX_TEMPERATURE=case when :DESIGN_MAX_TEMPERATURE is null then DESIGN_MAX_TEMPERATURE else :DESIGN_MAX_TEMPERATURE end,
                    NOMINAL_DIAMETER_GCL=case when :NOMINAL_DIAMETER_GCL is null then NOMINAL_DIAMETER_GCL else :NOMINAL_DIAMETER_GCL end,
                    NOMINAL_WALL_THICKNESS_GCL=case when :NOMINAL_WALL_THICKNESS_GCL is null then NOMINAL_WALL_THICKNESS_GCL else :NOMINAL_WALL_THICKNESS_GCL end,
                    CONNECTION_TYPE_CL=case when :CONNECTION_TYPE_CL is null then CONNECTION_TYPE_CL else :CONNECTION_TYPE_CL end,
					OUTLET_VALVE_TYPE_CL=case when :OUTLET_VALVE_TYPE_CL is null then OUTLET_VALVE_TYPE_CL else :OUTLET_VALVE_TYPE_CL end,
					ACTUATOR_TYPE_CL=case when :ACTUATOR_TYPE_CL is null then ACTUATOR_TYPE_CL else :ACTUATOR_TYPE_CL end,
                    DESCRIPTION=case when :DESCRIPTION is null then DESCRIPTION else :DESCRIPTION end,
                    SOURCE_GCL=case when :SOURCE_GCL is null then SOURCE_GCL else :SOURCE_GCL end,
                    COMMENTS=case when :COMMENTS is null then COMMENTS else :COMMENTS end
                    WHERE EVENT_ID = :ID;
                </query>
            </dbCommand>
        </update>
        <delete>
            <dbCommand>
				<var name="CLASS_ID" type="String" direction="Input" default="PODS_WELLHEAD_ASSEMBLY" /> 
				<var name="POLICY" default="POLICY.xml#DELETE_PODS_SEM"  />
                <var name="ID" type="Int64"/>
                <var name="USER_ID" default="-1" type="Int64"/>
                <query>
					DO $$
                    BEGIN
                    UPDATE PODS.EVENT_RANGE
                    SET CURRENT_INDICATOR_LF='N'
                    WHERE EVENT_ID = {ID};

                    DELETE FROM PODS.WELLHEAD_ASSEMBLY
                    WHERE EVENT_ID = {ID};
                    DELETE FROM WEB50.LNK_GATE WHERE LEFT_OBJ_ID = 'PODS_WELLHEAD_ASSEMBLY/'||CAST({ID} AS VARCHAR(30)) OR RIGHT_OBJ_ID = 'PODS_WELLHEAD_ASSEMBLY/'||CAST({ID} AS VARCHAR(30)); 
					END $$;
                </query>
            </dbCommand>
        </delete>
    </data>
    <data id="PODS_CP_FOREIGN_LINE_CROSSING" table="FOREIGN_LINE_CROSSING" schema="PODS" comment="PODS.FOREIGN_LINE_CROSSING">
        <select>
            <dbQuery idField="ID">
                <param name="USER_ID" default="-1" type="Int64"/>
                <var name="FILTER" default="1=1"/>
                <var name="LPU_ACCESS_FILTER" default="SELECT srv_district_id FROM PODS.SRV_DISTRICT_GCL"/>
                <query>
                    SELECT * FROM (SELECT GEOGRAPHIC_ENTITY_ID ID, t.* FROM PODS.FOREIGN_LINE_CROSSING t
                    WHERE t.TYPE_CL = 'FL_CROSS_TYPE_11' OR t.TYPE_CL = 'FL_CROSS_TYPE_12'
                    ) d WHERE {FILTER}
                </query>
            </dbQuery>
        </select>
        <insert>
            <dbCommand>
				<var name="CLASS_ID" type="String" direction="Input" default="FOREIGN_LINE_CROSSING" /> 
				<var name="POLICY" default="POLICY.xml#INSERT_PODS_SEM"  />
                <var name="EVENT_ID" default="-20" type="Decimal"/>
                <var name="EVENT_GUID" default="" type="String"/>
                <var name="TYPE_CL" default="FL_CROSS_TYPE_09" type="String"/>
                <var name="OWNER_CL" default="UNKNOWN" type="String"/>
                <var name="LINE_CLEARANCE" default="NULL" type="Decimal"/>
                <var name="MATERIAL_CL" default="UNKNOWN" type="String"/>
                <var name="FOREIGN_DIAMETER" default="0" type="Decimal"/>
                <var name="CROSSING_DATE" default="" type="DateTime"/>
                <var name="INTERSECTION_ANGLE" default="NULL" type="Decimal"/>
                <var name="SOURCE_NUMBER" default="" type="String"/>
                <var name="SCALED_GCL" default="UNKNOWN" type="String"/>
                <var name="DIRECTION_GCL" default="UNKNOWN" type="String"/>
                <var name="WIDTH" default="NULL" type="Decimal"/>
                <var name="GEOGRAPHIC_ENTITY_GUID" default="" type="String"/>
                <var name="DESCRIPTION" default="" type="String"/>
                <var name="LINE_BELOW_GROUND_LF" default="" type="String"/>
                <var name="CROSSING_BELOW_GROUND_LF" default="" type="String"/>
                <var name="CROSSING_BELOW_LINE_LF" default="" type="String"/>
                <var name="FOREIGN_BOND_LF" default="" type="String"/>
                <var name="SOURCE_GCL" default="UNKNOWN" type="String"/>
                <var name="COMMENTS" default="" type="String"/>
                <var name="ID" type="Int64" direction="Output" default="SELECT max(ENTITY_ID) id FROM PODS.GEOGRAPHIC_ENTITY"/>
                <var name="PODS_USER" type="String"/>
                <var name="USER_ID" default="-1" type="Int64"/>
                <query>
					DO $$
					DECLARE
					returnId integer;
                    BEGIN
                    INSERT INTO PODS.GEOGRAPHIC_ENTITY (ENTITY_GUID,TYPE_CL)
                    VALUES('{GEOGRAPHIC_ENTITY_GUID}','C2000018')
                    RETURNING ENTITY_ID INTO returnId;

                    INSERT INTO PODS.FOREIGN_LINE_CROSSING(GEOGRAPHIC_ENTITY_ID,EVENT_ID,EVENT_GUID,TYPE_CL,OWNER_CL,LINE_CLEARANCE,MATERIAL_CL,FOREIGN_DIAMETER,CROSSING_DATE,INTERSECTION_ANGLE,SOURCE_NUMBER,SCALED_GCL,DIRECTION_GCL,WIDTH,GEOGRAPHIC_ENTITY_GUID,DESCRIPTION,LINE_BELOW_GROUND_LF,CROSSING_BELOW_GROUND_LF,CROSSING_BELOW_LINE_LF,FOREIGN_BOND_LF,SOURCE_GCL,COMMENTS)
                    VALUES(returnId,{EVENT_ID},'{EVENT_GUID}',NULLIF('{TYPE_CL}',''),NULLIF('{OWNER_CL}',''),{LINE_CLEARANCE},NULLIF('{MATERIAL_CL}',''),{FOREIGN_DIAMETER},'{CROSSING_DATE}',{INTERSECTION_ANGLE},NULLIF('{SOURCE_NUMBER}',''),NULLIF('{SCALED_GCL}',''),NULLIF('{DIRECTION_GCL}',''),{WIDTH},'{GEOGRAPHIC_ENTITY_GUID}',NULLIF('{DESCRIPTION}',''),'{LINE_BELOW_GROUND_LF}','{CROSSING_BELOW_GROUND_LF}','{CROSSING_BELOW_LINE_LF}','{FOREIGN_BOND_LF}',NULLIF('{SOURCE_GCL}',''),NULLIF('{COMMENTS}',''));
					END $$;
                </query>
            </dbCommand>
        </insert>
        <update>
            <dbCommand>
				<param name="CLASS_ID" type="String" direction="Input" default="FOREIGN_LINE_CROSSING" /> 
				<var name="POLICY" default="POLICY.xml#UPDATE_PODS_SEM"  />
                <param name="EVENT_ID" default="-20" type="Decimal"/>
                <param name="EVENT_GUID" default="" type="String"/>
                <param name="TYPE_CL" default="FL_CROSS_TYPE_09" type="String"/>
                <param name="OWNER_CL" default="UNKNOWN" type="String"/>
                <param name="LINE_CLEARANCE" default="NULL" type="Decimal"/>
                <param name="MATERIAL_CL" default="UNKNOWN" type="String"/>
                <param name="FOREIGN_DIAMETER" default="0" type="Decimal"/>
                <param name="CROSSING_DATE" default="" type="DateTime"/>
                <param name="INTERSECTION_ANGLE" default="NULL" type="Decimal"/>
                <param name="SOURCE_NUMBER" default="" type="String"/>
                <param name="SCALED_GCL" default="UNKNOWN" type="String"/>
                <param name="DIRECTION_GCL" default="UNKNOWN" type="String"/>
                <param name="WIDTH" default="NULL" type="Decimal"/>
                <param name="GEOGRAPHIC_ENTITY_GUID" default="" type="String"/>
                <param name="DESCRIPTION" default="" type="String"/>
                <param name="LINE_BELOW_GROUND_LF" default="" type="String"/>
                <param name="CROSSING_BELOW_GROUND_LF" default="" type="String"/>
                <param name="CROSSING_BELOW_LINE_LF" default="" type="String"/>
                <param name="FOREIGN_BOND_LF" default="" type="String"/>
                <param name="SOURCE_GCL" default="UNKNOWN" type="String"/>
                <param name="COMMENTS" default="" type="String"/>
                <param name="ID" type="Int64" direction="Input"/>
                <param name="USER_ID" default="-1" type="Int64"/>
                <query>
                    UPDATE PODS.FOREIGN_LINE_CROSSING
                    SET 
					EVENT_ID=:EVENT_ID,EVENT_GUID=case when :EVENT_GUID is null then EVENT_GUID else :EVENT_GUID end,
                    TYPE_CL=case when :TYPE_CL is null then TYPE_CL else :TYPE_CL end,
                    OWNER_CL=case when :OWNER_CL is null then OWNER_CL else :OWNER_CL end,
                    LINE_CLEARANCE=case when :LINE_CLEARANCE is null then LINE_CLEARANCE else :LINE_CLEARANCE end,
					MATERIAL_CL=case when :MATERIAL_CL is null then MATERIAL_CL else :MATERIAL_CL end,
                    FOREIGN_DIAMETER=case when :FOREIGN_DIAMETER is null then FOREIGN_DIAMETER else :FOREIGN_DIAMETER end,
                    CROSSING_DATE=case when :CROSSING_DATE is null then CROSSING_DATE else :CROSSING_DATE end,
                    INTERSECTION_ANGLE=case when :INTERSECTION_ANGLE is null then INTERSECTION_ANGLE else :INTERSECTION_ANGLE end,
                    SOURCE_NUMBER=case when :SOURCE_NUMBER is null then SOURCE_NUMBER else :SOURCE_NUMBER end,
                    SCALED_GCL=case when :SCALED_GCL is null then SCALED_GCL else :SCALED_GCL end,
                    DIRECTION_GCL=case when :DIRECTION_GCL is null then DIRECTION_GCL else :DIRECTION_GCL end,
                    WIDTH=case when :WIDTH is null then WIDTH else :WIDTH end,
                    GEOGRAPHIC_ENTITY_GUID=case when :GEOGRAPHIC_ENTITY_GUID is null then GEOGRAPHIC_ENTITY_GUID else :GEOGRAPHIC_ENTITY_GUID end,
                    DESCRIPTION=case when :DESCRIPTION is null then DESCRIPTION else :DESCRIPTION end,
                    LINE_BELOW_GROUND_LF=case when :LINE_BELOW_GROUND_LF is null then LINE_BELOW_GROUND_LF else :LINE_BELOW_GROUND_LF end,
                    CROSSING_BELOW_GROUND_LF=case when :CROSSING_BELOW_GROUND_LF is null then CROSSING_BELOW_GROUND_LF else :CROSSING_BELOW_GROUND_LF end,
                    CROSSING_BELOW_LINE_LF=case when :CROSSING_BELOW_LINE_LF is null then CROSSING_BELOW_LINE_LF else :CROSSING_BELOW_LINE_LF end,
                    FOREIGN_BOND_LF=case when :FOREIGN_BOND_LF is null then FOREIGN_BOND_LF else :FOREIGN_BOND_LF end,
                    SOURCE_GCL=case when :SOURCE_GCL is null then SOURCE_GCL else :SOURCE_GCL end,
                    COMMENTS=case when :COMMENTS is null then COMMENTS else :COMMENTS end
                    WHERE GEOGRAPHIC_ENTITY_ID =:ID;
                </query>
            </dbCommand>
        </update>
        <delete>
            <dbCommand>
				<var name="CLASS_ID" type="String" direction="Input" default="FOREIGN_LINE_CROSSING" /> 
				<var name="POLICY" default="POLICY.xml#DELETE_PODS_SEM"  />
                <var name="ID" type="Int64" direction="Input"/>
                <var name="USER_ID" default="-1" type="Int64"/>
                <query>
					DO $$
                    BEGIN
                    DELETE FROM PODS.FOREIGN_LINE_CROSSING
                    WHERE GEOGRAPHIC_ENTITY_ID = {ID};

                    DELETE FROM PODS.GEOGRAPHIC_ENTITY
                    WHERE ENTITY_ID = {ID};
                    DELETE FROM WEB50.LNK_GATE WHERE LEFT_OBJ_ID = 'PODS_CP_FOREIGN_LINE_CROSSING/'||CAST({ID} AS VARCHAR(30)) OR RIGHT_OBJ_ID = 'PODS_CP_FOREIGN_LINE_CROSSING/'||CAST({ID} AS VARCHAR(30)); 
					END $$;
                </query>
            </dbCommand>
        </delete>
    </data>
    <data table="FOREIGN_LINE_CROSSING" schema="PODS" id="PODS_FOREIGN_LINE_CROSSING" comment="PODS.FOREIGN_LINE_CROSSING">
        <select>
            <dbQuery idField="ID">
                <param name="USER_ID" default="-1" type="Int64"/>
                <var name="FILTER" default="1=1"/>
                <var name="LPU_ACCESS_FILTER" default="SELECT srv_district_id FROM PODS.SRV_DISTRICT_GCL"/>
                <query>
                    SELECT * FROM (SELECT EVENT_ID ID, t.* FROM PODS.FOREIGN_LINE_CROSSING t) d WHERE {FILTER}
                </query>
            </dbQuery>
        </select>
        <insert>
            <dbCommand>
				<var name="CLASS_ID" type="String" direction="Input" default="PODS_FOREIGN_LINE_CROSSING" /> 
				<var name="POLICY" default="POLICY.xml#INSERT_PODS_SEM"  />
                <var name="EVENT_ID" default="-20" type="Decimal"/>
                <var name="EVENT_GUID" default="" type="String"/>
                <var name="TYPE_CL" default="UNKNOWN" type="String"/>
                <var name="OWNER_CL" default="UNKNOWN" type="String"/>
                <var name="LINE_CLEARANCE" default="NULL" type="Decimal"/>
                <var name="MATERIAL_CL" default="UNKNOWN" type="String"/>
                <var name="FOREIGN_DIAMETER" default="0" type="Decimal"/>
                <var name="CROSSING_DATE" default="" type="DateTime"/>
                <var name="INTERSECTION_ANGLE" default="NULL" type="Decimal"/>
                <var name="SOURCE_NUMBER" default="" type="String"/>
                <var name="SCALED_GCL" default="UNKNOWN" type="String"/>
                <var name="DIRECTION_GCL" default="UNKNOWN" type="String"/>
                <var name="WIDTH" default="NULL" type="Decimal"/>
                <var name="GEOGRAPHIC_ENTITY_GUID" default="" type="String"/>
                <var name="DESCRIPTION" default="" type="String"/>
                <var name="LINE_BELOW_GROUND_LF" default="" type="String"/>
                <var name="CROSSING_BELOW_GROUND_LF" default="" type="String"/>
                <var name="CROSSING_BELOW_LINE_LF" default="" type="String"/>
                <var name="FOREIGN_BOND_LF" default="" type="String"/>
                <var name="SOURCE_GCL" default="UNKNOWN" type="String"/>
                <var name="COMMENTS" default="" type="String"/>
                <var name="ID" type="Int64" direction="Output" default="SELECT max(EVENT_ID) id FROM PODS.EVENT_RANGE"/>
                <var name="PODS_USER" type="String"/>
                <var name="USER_ID" default="-1" type="Int64"/>
                <query>
					DO $$
					DECLARE
					returnId integer;
                    BEGIN

                    INSERT INTO PODS.EVENT_RANGE (EVENT_GUID,FEATURE_ID,STATION_ID_BEGIN,STATION_ID_END,PODS_USER,CREATE_DATE,EFFECTIVE_FROM_DATE,CURRENT_INDICATOR_LF,POSITIONING_TYPE_CL)
                    VALUES('{EVENT_GUID}','FRGN_LINE_CRSS',0,0,NULLIF('{PODS_USER}',''),current_timestamp,current_timestamp,'Y','UNKNOWN')
                    RETURNING EVENT_ID INTO returnId;

                    INSERT INTO PODS.FOREIGN_LINE_CROSSING(GEOGRAPHIC_ENTITY_ID,EVENT_ID,EVENT_GUID,TYPE_CL,OWNER_CL,LINE_CLEARANCE,MATERIAL_CL,FOREIGN_DIAMETER,CROSSING_DATE,INTERSECTION_ANGLE,SOURCE_NUMBER,SCALED_GCL,DIRECTION_GCL,WIDTH,GEOGRAPHIC_ENTITY_GUID,DESCRIPTION,LINE_BELOW_GROUND_LF,CROSSING_BELOW_GROUND_LF,CROSSING_BELOW_LINE_LF,FOREIGN_BOND_LF,SOURCE_GCL,COMMENTS)
                    VALUES(-20,returnId,'{EVENT_GUID}',NULLIF('{TYPE_CL}',''),NULLIF('{OWNER_CL}',''),{LINE_CLEARANCE},NULLIF('{MATERIAL_CL}',''),{FOREIGN_DIAMETER},'{CROSSING_DATE}',{INTERSECTION_ANGLE},NULLIF('{SOURCE_NUMBER}',''),NULLIF('{SCALED_GCL}',''),NULLIF('{DIRECTION_GCL}',''),{WIDTH},'{GEOGRAPHIC_ENTITY_GUID}',NULLIF('{DESCRIPTION}',''),'{LINE_BELOW_GROUND_LF}','{CROSSING_BELOW_GROUND_LF}','{CROSSING_BELOW_LINE_LF}','{FOREIGN_BOND_LF}',NULLIF('{SOURCE_GCL}',''),NULLIF('{COMMENTS}',''));
					END $$;
                </query>
            </dbCommand>
        </insert>
        <update>
            <dbCommand>
				<param name="CLASS_ID" type="String" direction="Input" default="PODS_FOREIGN_LINE_CROSSING" /> 
				<var name="POLICY" default="POLICY.xml#UPDATE_PODS_SEM"  />
				<param name="GEOGRAPHIC_ENTITY_ID" default="0"  type="Decimal" />
                <param name="EVENT_ID" default="-20" type="Decimal"/>
                <param name="EVENT_GUID" default="" type="String"/>
                <param name="TYPE_CL" default="UNKNOWN" type="String"/>
                <param name="OWNER_CL" default="UNKNOWN" type="String"/>
                <param name="LINE_CLEARANCE" default="NULL" type="Decimal"/>
                <param name="MATERIAL_CL" default="UNKNOWN" type="String"/>
                <param name="FOREIGN_DIAMETER" default="0" type="Decimal"/>
                <param name="CROSSING_DATE" default="" type="DateTime"/>
                <param name="INTERSECTION_ANGLE" default="NULL" type="Decimal"/>
                <param name="SOURCE_NUMBER" default="" type="String"/>
                <param name="SCALED_GCL" default="UNKNOWN" type="String"/>
                <param name="DIRECTION_GCL" default="UNKNOWN" type="String"/>
                <param name="WIDTH" default="NULL" type="Decimal"/>
                <param name="GEOGRAPHIC_ENTITY_GUID" default="" type="String"/>
                <param name="DESCRIPTION" default="" type="String"/>
                <param name="LINE_BELOW_GROUND_LF" default="" type="String"/>
                <param name="CROSSING_BELOW_GROUND_LF" default="" type="String"/>
                <param name="CROSSING_BELOW_LINE_LF" default="" type="String"/>
                <param name="FOREIGN_BOND_LF" default="" type="String"/>
                <param name="SOURCE_GCL" default="UNKNOWN" type="String"/>
                <param name="COMMENTS" default="" type="String"/>
                <param name="ID" type="Int64" direction="Input"/>
                <param name="USER_ID" default="-1" type="Int64"/>
                <query>
                    UPDATE PODS.FOREIGN_LINE_CROSSING
                    SET 
					
                    GEOGRAPHIC_ENTITY_ID=case when :GEOGRAPHIC_ENTITY_ID is null then GEOGRAPHIC_ENTITY_ID else :GEOGRAPHIC_ENTITY_ID end,EVENT_GUID=case when :EVENT_GUID is null then EVENT_GUID else :EVENT_GUID end,
                    TYPE_CL=case when :TYPE_CL is null then TYPE_CL else :TYPE_CL end,
                    OWNER_CL=case when :OWNER_CL is null then OWNER_CL else :OWNER_CL end,
                    LINE_CLEARANCE=case when :LINE_CLEARANCE is null then LINE_CLEARANCE else :LINE_CLEARANCE end,
					MATERIAL_CL=case when :MATERIAL_CL is null then MATERIAL_CL else :MATERIAL_CL end,
                    FOREIGN_DIAMETER=case when :FOREIGN_DIAMETER is null then FOREIGN_DIAMETER else :FOREIGN_DIAMETER end,
                    CROSSING_DATE=case when :CROSSING_DATE is null then CROSSING_DATE else :CROSSING_DATE end,
                    INTERSECTION_ANGLE=case when :INTERSECTION_ANGLE is null then INTERSECTION_ANGLE else :INTERSECTION_ANGLE end,
                    SOURCE_NUMBER=case when :SOURCE_NUMBER is null then SOURCE_NUMBER else :SOURCE_NUMBER end,
                    SCALED_GCL=case when :SCALED_GCL is null then SCALED_GCL else :SCALED_GCL end,
                    DIRECTION_GCL=case when :DIRECTION_GCL is null then DIRECTION_GCL else :DIRECTION_GCL end,
                    WIDTH=case when :WIDTH is null then WIDTH else :WIDTH end,
                    GEOGRAPHIC_ENTITY_GUID=case when :GEOGRAPHIC_ENTITY_GUID is null then GEOGRAPHIC_ENTITY_GUID else :GEOGRAPHIC_ENTITY_GUID end,
                    DESCRIPTION=case when :DESCRIPTION is null then DESCRIPTION else :DESCRIPTION end,
                    LINE_BELOW_GROUND_LF=case when :LINE_BELOW_GROUND_LF is null then LINE_BELOW_GROUND_LF else :LINE_BELOW_GROUND_LF end,
                    CROSSING_BELOW_GROUND_LF=case when :CROSSING_BELOW_GROUND_LF is null then CROSSING_BELOW_GROUND_LF else :CROSSING_BELOW_GROUND_LF end,
                    CROSSING_BELOW_LINE_LF=case when :CROSSING_BELOW_LINE_LF is null then CROSSING_BELOW_LINE_LF else :CROSSING_BELOW_LINE_LF end,
                    FOREIGN_BOND_LF=case when :FOREIGN_BOND_LF is null then FOREIGN_BOND_LF else :FOREIGN_BOND_LF end,
                    SOURCE_GCL=case when :SOURCE_GCL is null then SOURCE_GCL else :SOURCE_GCL end,
                    COMMENTS=case when :COMMENTS is null then COMMENTS else :COMMENTS end
                    WHERE EVENT_ID =:ID
                </query>
            </dbCommand>
        </update>
        <delete>
            <dbCommand>
				<var name="CLASS_ID" type="String" direction="Input" default="PODS_FOREIGN_LINE_CROSSING" /> 
				<var name="POLICY" default="POLICY.xml#DELETE_PODS_SEM"  />
                <var name="ID" type="Int64" direction="Input"/>
                <var name="USER_ID" default="-1" type="Int64"/>
                <query>
					DO $$
                    BEGIN
                    UPDATE PODS.EVENT_RANGE
                    SET CURRENT_INDICATOR_LF='N'
                    WHERE EVENT_ID = {ID};

                    DELETE
                    FROM PODS.FOREIGN_LINE_CROSSING
                    WHERE EVENT_ID = {ID};

                    DELETE
                    FROM WEB50.LNK_GATE
                    WHERE LEFT_OBJ_ID = 'PODS_FOREIGN_LINE_CROSSING/'||CAST({ID} AS VARCHAR(30))
                    OR RIGHT_OBJ_ID = 'PODS_FOREIGN_LINE_CROSSING/'||CAST({ID} AS VARCHAR(30)); 
					END $$;
                </query>
            </dbCommand>
        </delete>
    </data>
    <data table="FOREIGN_LINE_CROSSING" schema="PODS" id="PODS_FOREIGN_LINE_CROSSING_COR" comment="PODS.FOREIGN_LINE_CROSSING">
        <select>
            <dbQuery idField="ID">
                <param name="USER_ID" default="-1" type="Int64"/>
                <var name="FILTER" default="1=1"/>
                <var name="LPU_ACCESS_FILTER" default="SELECT srv_district_id FROM PODS.SRV_DISTRICT_GCL"/>
                <query>
                    SELECT * FROM (SELECT GEOGRAPHIC_ENTITY_ID ID, t.* FROM PODS.FOREIGN_LINE_CROSSING t) d WHERE {FILTER}
                </query>
            </dbQuery>
        </select>
        <insert>
            <dbCommand>
				<var name="CLASS_ID" type="String" direction="Input" default="PODS_FOREIGN_LINE_CROSSING_COR" /> 
				<var name="POLICY" default="POLICY.xml#INSERT_PODS_SEM"  />
                <var name="EVENT_ID" default="-20" type="Decimal"/>
                <var name="EVENT_GUID" default="" type="String"/>
                <var name="TYPE_CL" default="UNKNOWN" type="String"/>
                <var name="OWNER_CL" default="UNKNOWN" type="String"/>
                <var name="LINE_CLEARANCE" default="NULL" type="Decimal"/>
                <var name="MATERIAL_CL" default="UNKNOWN" type="String"/>
                <var name="FOREIGN_DIAMETER" default="0" type="Decimal"/>
                <var name="CROSSING_DATE" default="" type="DateTime"/>
                <var name="INTERSECTION_ANGLE" default="NULL" type="Decimal"/>
                <var name="SOURCE_NUMBER" default="" type="String"/>
                <var name="SCALED_GCL" default="UNKNOWN" type="String"/>
                <var name="DIRECTION_GCL" default="UNKNOWN" type="String"/>
                <var name="WIDTH" default="NULL" type="Decimal"/>
                <var name="GEOGRAPHIC_ENTITY_GUID" default="" type="String"/>
                <var name="DESCRIPTION" default="" type="String"/>
                <var name="LINE_BELOW_GROUND_LF" default="" type="String"/>
                <var name="CROSSING_BELOW_GROUND_LF" default="" type="String"/>
                <var name="CROSSING_BELOW_LINE_LF" default="" type="String"/>
                <var name="FOREIGN_BOND_LF" default="" type="String"/>
                <var name="SOURCE_GCL" default="UNKNOWN" type="String"/>
                <var name="COMMENTS" default="" type="String"/>
                <var name="ID" type="Int64" direction="Output" default="SELECT max(ENTITY_ID) id FROM PODS.GEOGRAPHIC_ENTITY"/>
                <var name="PODS_USER" type="String"/>
                <var name="USER_ID" default="-1" type="Int64"/>
                <query>
					DO $$
					DECLARE
					returnId integer;
                    BEGIN
                    INSERT INTO PODS.GEOGRAPHIC_ENTITY (ENTITY_GUID,TYPE_CL)
                    VALUES('{GEOGRAPHIC_ENTITY_GUID}','C2000018')
                    RETURNING ENTITY_ID INTO returnId;

                    INSERT INTO PODS.FOREIGN_LINE_CROSSING(GEOGRAPHIC_ENTITY_ID,EVENT_ID,EVENT_GUID,TYPE_CL,OWNER_CL,LINE_CLEARANCE,MATERIAL_CL,FOREIGN_DIAMETER,CROSSING_DATE,INTERSECTION_ANGLE,SOURCE_NUMBER,SCALED_GCL,DIRECTION_GCL,WIDTH,GEOGRAPHIC_ENTITY_GUID,DESCRIPTION,LINE_BELOW_GROUND_LF,CROSSING_BELOW_GROUND_LF,CROSSING_BELOW_LINE_LF,FOREIGN_BOND_LF,SOURCE_GCL,COMMENTS)
                    VALUES(returnId,{EVENT_ID},'{EVENT_GUID}',NULLIF('{TYPE_CL}',''),NULLIF('{OWNER_CL}',''),{LINE_CLEARANCE},NULLIF('{MATERIAL_CL}',''),{FOREIGN_DIAMETER},'{CROSSING_DATE}',{INTERSECTION_ANGLE},NULLIF('{SOURCE_NUMBER}',''),NULLIF('{SCALED_GCL}',''),NULLIF('{DIRECTION_GCL}',''),{WIDTH},'{GEOGRAPHIC_ENTITY_GUID}',NULLIF('{DESCRIPTION}',''),'{LINE_BELOW_GROUND_LF}','{CROSSING_BELOW_GROUND_LF}','{CROSSING_BELOW_LINE_LF}','{FOREIGN_BOND_LF}',NULLIF('{SOURCE_GCL}',''),NULLIF('{COMMENTS}',''));
					END $$;
                </query>
            </dbCommand>
        </insert>
        <update>
            <dbCommand>
				<param name="CLASS_ID" type="String" direction="Input" default="PODS_FOREIGN_LINE_CROSSING_COR" /> 
				<var name="POLICY" default="POLICY.xml#UPDATE_PODS_SEM"  />
                <param name="EVENT_ID" default="-20" type="Decimal"/>
                <param name="EVENT_GUID" default="" type="String"/>
                <param name="TYPE_CL" default="UNKNOWN" type="String"/>
                <param name="OWNER_CL" default="UNKNOWN" type="String"/>
                <param name="LINE_CLEARANCE" default="NULL" type="Decimal"/>
                <param name="MATERIAL_CL" default="UNKNOWN" type="String"/>
                <param name="FOREIGN_DIAMETER" default="0" type="Decimal"/>
                <param name="CROSSING_DATE" default="" type="DateTime"/>
                <param name="INTERSECTION_ANGLE" default="NULL" type="Decimal"/>
                <param name="SOURCE_NUMBER" default="" type="String"/>
                <param name="SCALED_GCL" default="UNKNOWN" type="String"/>
                <param name="DIRECTION_GCL" default="UNKNOWN" type="String"/>
                <param name="WIDTH" default="NULL" type="Decimal"/>
                <param name="GEOGRAPHIC_ENTITY_GUID" default="" type="String"/>
                <param name="DESCRIPTION" default="" type="String"/>
                <param name="LINE_BELOW_GROUND_LF" default="" type="String"/>
                <param name="CROSSING_BELOW_GROUND_LF" default="" type="String"/>
                <param name="CROSSING_BELOW_LINE_LF" default="" type="String"/>
                <param name="FOREIGN_BOND_LF" default="" type="String"/>
                <param name="SOURCE_GCL" default="UNKNOWN" type="String"/>
                <param name="COMMENTS" default="" type="String"/>
                <param name="ID" type="Int64" direction="Input"/>
                <param name="USER_ID" default="-1" type="Int64"/>
                <query>
                    UPDATE PODS.FOREIGN_LINE_CROSSING
                    SET 
					EVENT_ID=:EVENT_ID,EVENT_GUID=case when :EVENT_GUID is null then EVENT_GUID else :EVENT_GUID end,
                    TYPE_CL=case when :TYPE_CL is null then TYPE_CL else :TYPE_CL end,
                    OWNER_CL=case when :OWNER_CL is null then OWNER_CL else :OWNER_CL end,
                    LINE_CLEARANCE=case when :LINE_CLEARANCE is null then LINE_CLEARANCE else :LINE_CLEARANCE end,
					MATERIAL_CL=case when :MATERIAL_CL is null then MATERIAL_CL else :MATERIAL_CL end,
                    FOREIGN_DIAMETER=case when :FOREIGN_DIAMETER is null then FOREIGN_DIAMETER else :FOREIGN_DIAMETER end,
                    CROSSING_DATE=case when :CROSSING_DATE is null then CROSSING_DATE else :CROSSING_DATE end,
                    INTERSECTION_ANGLE=case when :INTERSECTION_ANGLE is null then INTERSECTION_ANGLE else :INTERSECTION_ANGLE end,
                    SOURCE_NUMBER=case when :SOURCE_NUMBER is null then SOURCE_NUMBER else :SOURCE_NUMBER end,
                    SCALED_GCL=case when :SCALED_GCL is null then SCALED_GCL else :SCALED_GCL end,
                    DIRECTION_GCL=case when :DIRECTION_GCL is null then DIRECTION_GCL else :DIRECTION_GCL end,
                    WIDTH=case when :WIDTH is null then WIDTH else :WIDTH end,
                    GEOGRAPHIC_ENTITY_GUID=case when :GEOGRAPHIC_ENTITY_GUID is null then GEOGRAPHIC_ENTITY_GUID else :GEOGRAPHIC_ENTITY_GUID end,
                    DESCRIPTION=case when :DESCRIPTION is null then DESCRIPTION else :DESCRIPTION end,
                    LINE_BELOW_GROUND_LF=case when :LINE_BELOW_GROUND_LF is null then LINE_BELOW_GROUND_LF else :LINE_BELOW_GROUND_LF end,
                    CROSSING_BELOW_GROUND_LF=case when :CROSSING_BELOW_GROUND_LF is null then CROSSING_BELOW_GROUND_LF else :CROSSING_BELOW_GROUND_LF end,
                    CROSSING_BELOW_LINE_LF=case when :CROSSING_BELOW_LINE_LF is null then CROSSING_BELOW_LINE_LF else :CROSSING_BELOW_LINE_LF end,
                    FOREIGN_BOND_LF=case when :FOREIGN_BOND_LF is null then FOREIGN_BOND_LF else :FOREIGN_BOND_LF end,
                    SOURCE_GCL=case when :SOURCE_GCL is null then SOURCE_GCL else :SOURCE_GCL end,
                    COMMENTS=case when :COMMENTS is null then COMMENTS else :COMMENTS end
                    WHERE GEOGRAPHIC_ENTITY_ID =:ID;
                </query>
            </dbCommand>
        </update>
        <delete>
            <dbCommand>
				<var name="CLASS_ID" type="String" direction="Input" default="PODS_FOREIGN_LINE_CROSSING_COR" /> 
				<var name="POLICY" default="POLICY.xml#DELETE_PODS_SEM"  />
                <var name="ID" type="Int64" direction="Input"/>
                <var name="USER_ID" default="-1" type="Int64"/>
                <query>
					DO $$
                    BEGIN
                    DELETE FROM PODS.FOREIGN_LINE_CROSSING
                    WHERE GEOGRAPHIC_ENTITY_ID = {ID};

                    DELETE FROM PODS.GEOGRAPHIC_ENTITY
                    WHERE ENTITY_ID = {ID};
                    DELETE FROM WEB50.LNK_GATE WHERE LEFT_OBJ_ID = 'PODS_FOREIGN_LINE_CROSSING/'||CAST({ID} AS VARCHAR(30)) OR RIGHT_OBJ_ID = 'PODS_FOREIGN_LINE_CROSSING/'||CAST({ID} AS VARCHAR(30)); 
					END $$;
                </query>
            </dbCommand>
        </delete>
    </data>
    <data table="HCA_BOUNDARY" schema="PODS" id="PODS_HCA_BOUNDARY" comment="PODS.HCA_BOUNDARY">
        <select>
            <dbQuery idField="ID">
                <param name="USER_ID" default="-1" type="Int64"/>
                <var name="FILTER" default="1=1"/>
                <var name="LPU_ACCESS_FILTER" default="SELECT srv_district_id FROM PODS.SRV_DISTRICT_GCL"/>
                <query>
                    SELECT * FROM (SELECT EVENT_ID ID, t.* FROM PODS.HCA_BOUNDARY t) d WHERE {FILTER}
                </query>
            </dbQuery>
        </select>
        <insert>
            <dbCommand>
				<var name="CLASS_ID" type="String" direction="Input" default="PODS_HCA_BOUNDARY" /> 
				<var name="POLICY" default="POLICY.xml#INSERT_PODS_SEM"  />
                <var name="EVENT_GUID" default="" type="String"/>
                <var name="GEOGRAPHIC_ENTITY_ID" type="Decimal"/>
                <var name="TYPE_CL" default="UNKNOWN" type="String"/>
                <var name="DETERMINATION_DATE" default="" type="DateTime"/>
                <var name="DESCRIPTION" default="" type="String"/>
                <var name="GEOGRAPHIC_ENTITY_GUID" default="" type="String"/>
                <var name="SOURCE_GCL" default="UNKNOWN" type="String"/>
                <var name="COMMENTS" default="" type="String"/>
                <var name="ID" type="Int64" direction="Output" default="SELECT max(EVENT_ID) id FROM PODS.EVENT_RANGE"/>
                <var name="PODS_USER" type="String"/>
                <var name="USER_ID" default="-1" type="Int64"/>
                <query>
					DO $$
					DECLARE
					returnId integer;
                    BEGIN
                    INSERT INTO PODS.EVENT_RANGE (EVENT_GUID,FEATURE_ID,STATION_ID_BEGIN,STATION_ID_END,PODS_USER,CREATE_DATE,EFFECTIVE_FROM_DATE,CURRENT_INDICATOR_LF,POSITIONING_TYPE_CL)
                    VALUES('{EVENT_GUID}','HCA_BOUNDARY',0,0,NULLIF('{PODS_USER}',''),current_timestamp,current_timestamp,'Y','UNKNOWN')
                    RETURNING EVENT_ID INTO returnId;

                    INSERT INTO PODS.HCA_BOUNDARY(EVENT_ID,GEOGRAPHIC_ENTITY_ID,TYPE_CL,DETERMINATION_DATE,DESCRIPTION,SOURCE_GCL,COMMENTS)
                    VALUES(returnId,{GEOGRAPHIC_ENTITY_ID},NULLIF('{TYPE_CL}',''),'{DETERMINATION_DATE}',NULLIF('{DESCRIPTION}',''),NULLIF('{SOURCE_GCL}',''),NULLIF('{COMMENTS}',''));
					END $$;
                </query>
            </dbCommand>
        </insert>
        <update>
            <dbCommand>
				<param name="CLASS_ID" type="String" direction="Input" default="PODS_HCA_BOUNDARY" /> 
				<var name="POLICY" default="POLICY.xml#UPDATE_PODS_SEM"  />
                <param name="EVENT_GUID" default="" type="String"/>
                <param name="GEOGRAPHIC_ENTITY_ID" type="Decimal"/>
                <param name="GEOGRAPHIC_GUID" type="String"/>
                <param name="TYPE_CL" default="UNKNOWN" type="String"/>
                <param name="DETERMINATION_DATE" default="" type="DateTime"/>
                <param name="DESCRIPTION" default="" type="String"/>
                <param name="SOURCE_GCL" default="UNKNOWN" type="String"/>
                <param name="COMMENTS" default="" type="String"/>
                <param name="ID" type="Int64" direction="Input"/>
                <param name="USER_ID" default="-1" type="Int64"/>
                <query>
                    UPDATE PODS.HCA_BOUNDARY
                    SET 
					GEOGRAPHIC_ENTITY_ID=case when :GEOGRAPHIC_ENTITY_ID is null then GEOGRAPHIC_ENTITY_ID else :GEOGRAPHIC_ENTITY_ID end,
                    TYPE_CL=case when :TYPE_CL is null then TYPE_CL else :TYPE_CL end,
                    DETERMINATION_DATE=case when :DETERMINATION_DATE is null then DETERMINATION_DATE else :DETERMINATION_DATE end,
                    DESCRIPTION=case when :DESCRIPTION is null then DESCRIPTION else :DESCRIPTION end,
                    SOURCE_GCL=case when :SOURCE_GCL is null then SOURCE_GCL else :SOURCE_GCL end,
                    COMMENTS=case when :COMMENTS is null then COMMENTS else :COMMENTS end
                    WHERE EVENT_ID =:ID;
                </query>
            </dbCommand>
        </update>
        <delete>
            <dbCommand>
				<var name="CLASS_ID" type="String" direction="Input" default="PODS_HCA_BOUNDARY" /> 
				<var name="POLICY" default="POLICY.xml#DELETE_PODS_SEM"  />
                <var name="ID" type="Int64" direction="Input"/>
                <var name="USER_ID" default="-1" type="Int64"/>
                <query>
					DO $$
                    DECLARE
                    v_geographic_entity_id bigint;
                    BEGIN

                    SELECT MIN(geographic_entity_id) /* avoid nodatafound exception*/
                    INTO v_geographic_entity_id
                    FROM PODS.HCA_BOUNDARY
                    WHERE EVENT_ID = {ID};

                    DELETE FROM PODS.HCA_BOUNDARY
                    WHERE EVENT_ID = {ID};

                    UPDATE PODS.EVENT_RANGE
                    SET CURRENT_INDICATOR_LF='N'
                    WHERE EVENT_ID = {ID};

                    DELETE FROM PODS.GEOGRAPHIC_ENTITY
                    WHERE ENTITY_ID = v_geographic_entity_id;

                    DELETE FROM WEB50.LNK_GATE WHERE LEFT_OBJ_ID = 'PODS_HCA_BOUNDARY/'||CAST({ID} AS VARCHAR(30)) OR RIGHT_OBJ_ID = 'PODS_HCA_BOUNDARY/'||CAST({ID} AS VARCHAR(30)); 
					END $$;
                </query>
            </dbCommand>
        </delete>
    </data>
    <data table="RAILROAD" schema="PODS" id="PODS_RAILROAD" comment="PODS.RAILROAD">
        <select>
            <dbQuery idField="ID">
                <param name="USER_ID" default="-1" type="Int64"/>
                <var name="FILTER" default="1=1"/>
                <var name="LPU_ACCESS_FILTER" default="SELECT srv_district_id FROM PODS.SRV_DISTRICT_GCL"/>
                <query>
                    SELECT * FROM (SELECT EVENT_ID ID, t.* FROM PODS.RAILROAD t) d WHERE {FILTER}
                </query>
            </dbQuery>
        </select>
        <insert>
            <dbCommand>
				<var name="CLASS_ID" type="String" direction="Input" default="PODS_RAILROAD" /> 
				<var name="POLICY" default="POLICY.xml#INSERT_PODS_SEM"  />
                <var name="EVENT_ID" default="-30" type="Decimal"/>
                <var name="EVENT_GUID" default="" type="String"/>
                <var name="TYPE_CL" default="UNKNOWN" type="String"/>
                <var name="OPERATOR_CL" default="UNKNOWN" type="String"/>
                <var name="INTERSECTION_ANGLE" default="NULL" type="Decimal"/>
                <var name="SOURCE_NUMBER" default="" type="String"/>
                <var name="SCALED_GCL" default="UNKNOWN" type="String"/>
                <var name="DIRECTION_GCL" default="UNKNOWN" type="String"/>
                <var name="WIDTH" default="NULL" type="Decimal"/>
                <var name="GEOGRAPHIC_ENTITY_GUID" default="" type="String"/>
                <var name="CASING_INDICATOR_LF" default="" type="String"/>
                <var name="DESCRIPTION" default="" type="String"/>
                <var name="SOURCE_GCL" default="UNKNOWN" type="String"/>
                <var name="COMMENTS" default="" type="String"/>
                <var name="ID" type="Int64" direction="Output" default="SELECT max(EVENT_ID) id FROM PODS.EVENT_RANGE"/>
                <var name="PODS_USER" type="String"/>
                <var name="USER_ID" default="-1" type="Int64"/>
                <query>
					DO $$
					DECLARE
					returnId integer;
                    BEGIN
                    INSERT INTO PODS.EVENT_RANGE (EVENT_GUID,FEATURE_ID,STATION_ID_BEGIN,STATION_ID_END,PODS_USER,CREATE_DATE,EFFECTIVE_FROM_DATE,CURRENT_INDICATOR_LF,POSITIONING_TYPE_CL)
                    VALUES('{EVENT_GUID}','RAILROAD',0,0,NULLIF('{PODS_USER}',''),current_timestamp,current_timestamp,'Y','UNKNOWN')
                    RETURNING EVENT_ID INTO returnId;

                    INSERT INTO PODS.RAILROAD(GEOGRAPHIC_ENTITY_ID,EVENT_ID,EVENT_GUID,TYPE_CL,OPERATOR_CL,INTERSECTION_ANGLE,SOURCE_NUMBER,SCALED_GCL,DIRECTION_GCL,WIDTH,GEOGRAPHIC_ENTITY_GUID,CASING_INDICATOR_LF,DESCRIPTION,SOURCE_GCL,COMMENTS)
                    VALUES(-30,returnId,'{EVENT_GUID}',NULLIF('{TYPE_CL}',''),NULLIF('{OPERATOR_CL}',''),{INTERSECTION_ANGLE},NULLIF('{SOURCE_NUMBER}',''),NULLIF('{SCALED_GCL}',''),NULLIF('{DIRECTION_GCL}',''),{WIDTH},'{GEOGRAPHIC_ENTITY_GUID}','{CASING_INDICATOR_LF}',NULLIF('{DESCRIPTION}',''),NULLIF('{SOURCE_GCL}',''),NULLIF('{COMMENTS}',''));
					END $$;
                </query>
            </dbCommand>
        </insert>
        <update>
            <dbCommand>
				<param name="CLASS_ID" type="String" direction="Input" default="PODS_RAILROAD" /> 
				<var name="POLICY" default="POLICY.xml#UPDATE_PODS_SEM"  />
				<param name="GEOGRAPHIC_ENTITY_ID" default="0"  type="Decimal" />
                <param name="EVENT_ID" default="-30" type="Decimal"/>
                <param name="EVENT_GUID" default="" type="String"/>
                <param name="TYPE_CL" default="UNKNOWN" type="String"/>
                <param name="OPERATOR_CL" default="UNKNOWN" type="String"/>
                <param name="INTERSECTION_ANGLE" default="NULL" type="Decimal"/>
                <param name="SOURCE_NUMBER" default="" type="String"/>
                <param name="SCALED_GCL" default="UNKNOWN" type="String"/>
                <param name="DIRECTION_GCL" default="UNKNOWN" type="String"/>
                <param name="WIDTH" default="NULL" type="Decimal"/>
                <param name="GEOGRAPHIC_ENTITY_GUID" default="" type="String"/>
                <param name="CASING_INDICATOR_LF" default="" type="String"/>
                <param name="DESCRIPTION" default="" type="String"/>
                <param name="SOURCE_GCL" default="UNKNOWN" type="String"/>
                <param name="COMMENTS" default="" type="String"/>
                <param name="ID" type="Int64" direction="Input"/>
                <param name="USER_ID" default="-1" type="Int64"/>
                <query>
                    UPDATE PODS.RAILROAD
                    SET 
                    GEOGRAPHIC_ENTITY_ID=case when :GEOGRAPHIC_ENTITY_ID is null then GEOGRAPHIC_ENTITY_ID else :GEOGRAPHIC_ENTITY_ID end,
					EVENT_GUID=case when :EVENT_GUID is null then EVENT_GUID else :EVENT_GUID end,
                    TYPE_CL=case when :TYPE_CL is null then TYPE_CL else :TYPE_CL end,
					OPERATOR_CL=case when :OPERATOR_CL is null then OPERATOR_CL else :OPERATOR_CL end,
                    INTERSECTION_ANGLE=case when :INTERSECTION_ANGLE is null then INTERSECTION_ANGLE else :INTERSECTION_ANGLE end,
                    SOURCE_NUMBER=case when :SOURCE_NUMBER is null then SOURCE_NUMBER else :SOURCE_NUMBER end,
                    SCALED_GCL=case when :SCALED_GCL is null then SCALED_GCL else :SCALED_GCL end,
                    DIRECTION_GCL=case when :DIRECTION_GCL is null then DIRECTION_GCL else :DIRECTION_GCL end,
                    WIDTH=case when :WIDTH is null then WIDTH else :WIDTH end,
                    GEOGRAPHIC_ENTITY_GUID=case when :GEOGRAPHIC_ENTITY_GUID is null then GEOGRAPHIC_ENTITY_GUID else :GEOGRAPHIC_ENTITY_GUID end,
                    CASING_INDICATOR_LF=case when :CASING_INDICATOR_LF is null then CASING_INDICATOR_LF else :CASING_INDICATOR_LF end,
                    DESCRIPTION=case when :DESCRIPTION is null then DESCRIPTION else :DESCRIPTION end,
                    SOURCE_GCL=case when :SOURCE_GCL is null then SOURCE_GCL else :SOURCE_GCL end,
                    COMMENTS=case when :COMMENTS is null then COMMENTS else :COMMENTS end
                    WHERE EVENT_ID = :ID;
                </query>
            </dbCommand>
        </update>
        <delete>
            <dbCommand>
				<var name="CLASS_ID" type="String" direction="Input" default="PODS_RAILROAD" /> 
				<var name="POLICY" default="POLICY.xml#DELETE_PODS_SEM"  />
                <var name="ID" type="Int64" direction="Input"/>
                <var name="USER_ID" default="-1" type="Int64"/>
                <query>
					DO $$
                    BEGIN
                    UPDATE PODS.EVENT_RANGE
                    SET CURRENT_INDICATOR_LF='N'
                    WHERE EVENT_ID = {ID};

                    DELETE
                    FROM PODS.RAILROAD
                    WHERE EVENT_ID = {ID};

                    DELETE
                    FROM WEB50.LNK_GATE
                    WHERE LEFT_OBJ_ID = 'PODS_RAILROAD/'||CAST({ID} AS VARCHAR(30))
                    OR RIGHT_OBJ_ID = 'PODS_RAILROAD/'||CAST({ID} AS VARCHAR(30));
                    END $$;
                </query>
            </dbCommand>
        </delete>
    </data>
    <data table="ROAD" schema="PODS" id="PODS_ROAD_ENTITY" comment="PODS.ROAD">
        <select>
            <dbQuery idField="ID">
                <param name="USER_ID" default="-1" type="Int64"/>
                <var name="FILTER" default="1=1"/>
                <var name="LPU_ACCESS_FILTER" default="SELECT srv_district_id FROM PODS.SRV_DISTRICT_GCL"/>
                <query>
                    SELECT * FROM (SELECT GEOGRAPHIC_ENTITY_ID ID, t.* FROM PODS.ROAD t WHERE EVENT_ID&lt;0) d WHERE {FILTER}
                </query>
            </dbQuery>
        </select>
        <insert>
            <dbCommand>
				<var name="CLASS_ID" type="String" direction="Input" default="PODS_ROAD_ENTITY" /> 
				<var name="POLICY" default="POLICY.xml#INSERT_PODS_SEM"  />
                <var name="EVENT_ID" default="-10" type="Decimal"/>
                <var name="EVENT_GUID" default="" type="String"/>
                <var name="TYPE_CL" default="UNKNOWN" type="String"/>
                <var name="SURFACE_CL" default="UNKNOWN" type="String"/>
                <var name="INTERSECTION_ANGLE" default="NULL" type="Decimal"/>
                <var name="SOURCE_NUMBER" default="" type="String"/>
                <var name="SCALED_GCL" default="UNKNOWN" type="String"/>
                <var name="DIRECTION_GCL" default="UNKNOWN" type="String"/>
                <var name="WIDTH" default="NULL" type="Decimal"/>
                <var name="GEOGRAPHIC_ENTITY_GUID" default="" type="String"/>
                <var name="CASING_INDICATOR_LF" default="" type="String"/>
                <var name="DESCRIPTION" default="" type="String"/>
                <var name="SOURCE_GCL" default="UNKNOWN" type="String"/>
                <var name="COMMENTS" default="" type="String"/>
                <var name="ID" type="Int64" direction="Output" default="SELECT max(ENTITY_ID) id FROM PODS.GEOGRAPHIC_ENTITY"/>
                <var name="PODS_USER" type="String"/>
                <var name="USER_ID" default="-1" type="Int64"/>
                <query>
					DO $$
					DECLARE
					returnId integer;
                    BEGIN
                    INSERT INTO PODS.GEOGRAPHIC_ENTITY (ENTITY_GUID,TYPE_CL)
                    VALUES('{GEOGRAPHIC_ENTITY_GUID}','UNKNOWN')
                    RETURNING ENTITY_ID INTO returnId;
                    INSERT INTO PODS.ROAD	(GEOGRAPHIC_ENTITY_ID,EVENT_ID,EVENT_GUID,TYPE_CL,SURFACE_CL, INTERSECTION_ANGLE,SOURCE_NUMBER,SCALED_GCL,DIRECTION_GCL,WIDTH,GEOGRAPHIC_ENTITY_GUID,CASING_INDICATOR_LF,DESCRIPTION,SOURCE_GCL,COMMENTS)
                    VALUES(returnId,-10,'{EVENT_GUID}', NULLIF('{TYPE_CL}',''),NULLIF('{SURFACE_CL}',''),{INTERSECTION_ANGLE},NULLIF('{SOURCE_NUMBER}',''),NULLIF('{SCALED_GCL}',''),NULLIF('{DIRECTION_GCL}',''),{WIDTH},'{GEOGRAPHIC_ENTITY_GUID}','{CASING_INDICATOR_LF}',NULLIF('{DESCRIPTION}',''),NULLIF('{SOURCE_GCL}',''),NULLIF('{COMMENTS}',''));

					END $$;
                </query>
            </dbCommand>
        </insert>
        <update>
            <dbCommand>
				<param name="CLASS_ID" type="String" direction="Input" default="PODS_ROAD_ENTITY" /> 
				<var name="POLICY" default="POLICY.xml#UPDATE_PODS_SEM"  />
                <param name="EVENT_ID" default="-10" type="Decimal"/>
                <param name="EVENT_GUID" default="" type="String"/>
                <param name="TYPE_CL" default="UNKNOWN" type="String"/>
                <param name="SURFACE_CL" default="UNKNOWN" type="String"/>
                <param name="INTERSECTION_ANGLE" default="NULL" type="Decimal"/>
                <param name="SOURCE_NUMBER" default="" type="String"/>
                <param name="SCALED_GCL" default="UNKNOWN" type="String"/>
                <param name="DIRECTION_GCL" default="UNKNOWN" type="String"/>
                <param name="WIDTH" default="NULL" type="Decimal"/>
                <param name="GEOGRAPHIC_ENTITY_GUID" default="" type="String"/>
                <param name="CASING_INDICATOR_LF" default="" type="String"/>
                <param name="DESCRIPTION" default="" type="String"/>
                <param name="SOURCE_GCL" default="UNKNOWN" type="String"/>
                <param name="COMMENTS" default="" type="String"/>
                <param name="ID" type="Int64" direction="Input"/>
                <param name="PODS_USER" type="String"/>
                <param name="USER_ID" default="-1" type="Int64"/>
                <query>
                    UPDATE PODS.ROAD
                    SET 
                    TYPE_CL=case when :TYPE_CL is null then TYPE_CL else :TYPE_CL end,
                    SURFACE_CL=case when :SURFACE_CL is null then SURFACE_CL else :SURFACE_CL end,
                    INTERSECTION_ANGLE=case when :INTERSECTION_ANGLE is null then INTERSECTION_ANGLE else :INTERSECTION_ANGLE end,
                    SOURCE_NUMBER=case when :SOURCE_NUMBER is null then SOURCE_NUMBER else :SOURCE_NUMBER end,
                    SCALED_GCL=case when :SCALED_GCL is null then SCALED_GCL else :SCALED_GCL end,
                    DIRECTION_GCL=case when :DIRECTION_GCL is null then DIRECTION_GCL else :DIRECTION_GCL end,
                    WIDTH=case when :WIDTH is null then WIDTH else :WIDTH end,
                    GEOGRAPHIC_ENTITY_GUID=case when :GEOGRAPHIC_ENTITY_GUID is null then GEOGRAPHIC_ENTITY_GUID else :GEOGRAPHIC_ENTITY_GUID end,
                    CASING_INDICATOR_LF=case when :CASING_INDICATOR_LF is null then CASING_INDICATOR_LF else :CASING_INDICATOR_LF end,
                    DESCRIPTION=case when :DESCRIPTION is null then DESCRIPTION else :DESCRIPTION end,
                    SOURCE_GCL=case when :SOURCE_GCL is null then SOURCE_GCL else :SOURCE_GCL end,
                    COMMENTS=case when :COMMENTS is null then COMMENTS else :COMMENTS end
                    WHERE GEOGRAPHIC_ENTITY_ID =:ID;
                </query>
            </dbCommand>
        </update>
        <delete>
            <dbCommand>
				<var name="CLASS_ID" type="String" direction="Input" default="PODS_ROAD_ENTITY" /> 
				<var name="POLICY" default="POLICY.xml#DELETE_PODS_SEM"  />
                <var name="ID" type="Int64" direction="Input"/>
                <var name="USER_ID" default="-1" type="Int64"/>
                <query>
					DO $$
                    BEGIN
                    DELETE FROM PODS.ROAD
                    WHERE GEOGRAPHIC_ENTITY_ID = {ID};

                    DELETE FROM PODS.GEOGRAPHIC_ENTITY
                    WHERE ENTITY_ID = {ID};
                    DELETE FROM WEB50.LNK_GATE WHERE LEFT_OBJ_ID = 'PODS_ROAD/'||CAST({ID} AS VARCHAR(30)) OR RIGHT_OBJ_ID = 'PODS_ROAD/'||CAST({ID} AS VARCHAR(30)); 
					END $$;
                </query>
            </dbCommand>
        </delete>
    </data>
    <data table="WATERWAY" schema="PODS" id="PODS_WATERWAY_ENTITY" comment="PODS.WATERWAY">
        <select>
            <dbQuery idField="ID">
                <param name="USER_ID" default="-1" type="Int64"/>
                <var name="FILTER" default="1=1"/>
                <var name="LPU_ACCESS_FILTER" default="SELECT srv_district_id FROM PODS.SRV_DISTRICT_GCL"/>
                <query>
                    SELECT * FROM (SELECT GEOGRAPHIC_ENTITY_ID ID, t.* FROM PODS.WATERWAY t WHERE EVENT_ID&lt;0) d WHERE {FILTER}
                </query>
            </dbQuery>
        </select>
        <insert>
            <dbCommand>
				<var name="CLASS_ID" type="String" direction="Input" default="PODS_WATERWAY_ENTITY" /> 
				<var name="POLICY" default="POLICY.xml#INSERT_PODS_SEM"  />
                <var name="EVENT_ID" default="-40" type="Decimal"/>
                <var name="EVENT_GUID" default="" type="String"/>
                <var name="TYPE_CL" default="UNKNOWN" type="String"/>
                <var name="PROTECTED_LF" default="" type="String"/>
                <var name="INTERSECTION_ANGLE" default="NULL" type="Decimal"/>
                <var name="SCALED_GCL" default="UNKNOWN" type="String"/>
                <var name="DIRECTION_GCL" default="UNKNOWN" type="String"/>
                <var name="SOURCE_NUMBER" default="" type="String"/>
                <var name="WIDTH" default="NULL" type="Decimal"/>
                <var name="GEOGRAPHIC_ENTITY_GUID" default="" type="String"/>
                <var name="CASING_INDICATOR_LF" default="" type="String"/>
                <var name="DESCRIPTION" default="" type="String"/>
                <var name="SOURCE_GCL" default="UNKNOWN" type="String"/>
                <var name="COMMENTS" default="" type="String"/>
                <var name="ID" type="Int64" direction="Output" default="SELECT max(ENTITY_ID) id FROM PODS.GEOGRAPHIC_ENTITY"/>
                <var name="PODS_USER" type="String"/>
                <var name="USER_ID" default="-1" type="Int64"/>
                <query>
					DO $$
					DECLARE
					returnId integer;
                    BEGIN

                    INSERT INTO PODS.GEOGRAPHIC_ENTITY (ENTITY_GUID,TYPE_CL)
                    VALUES('{GEOGRAPHIC_ENTITY_GUID}','UNKNOWN')
                    RETURNING ENTITY_ID INTO returnId;

                    INSERT INTO PODS.WATERWAY(GEOGRAPHIC_ENTITY_ID,EVENT_ID,EVENT_GUID,TYPE_CL,PROTECTED_LF,INTERSECTION_ANGLE,SCALED_GCL,DIRECTION_GCL,SOURCE_NUMBER,WIDTH,GEOGRAPHIC_ENTITY_GUID,CASING_INDICATOR_LF,DESCRIPTION,SOURCE_GCL,COMMENTS)
                    VALUES(returnId,{EVENT_ID},'{EVENT_GUID}',NULLIF('{TYPE_CL}',''),'{PROTECTED_LF}',{INTERSECTION_ANGLE},NULLIF('{SCALED_GCL}',''),NULLIF('{DIRECTION_GCL}',''),NULLIF('{SOURCE_NUMBER}',''),{WIDTH},'{GEOGRAPHIC_ENTITY_GUID}','{CASING_INDICATOR_LF}',NULLIF('{DESCRIPTION}',''),NULLIF('{SOURCE_GCL}',''),NULLIF('{COMMENTS}',''));

					END $$;
                </query>
            </dbCommand>
        </insert>
        <update>
            <dbCommand>
				<param name="CLASS_ID" type="String" direction="Input" default="PODS_WATERWAY_ENTITY" /> 
				<var name="POLICY" default="POLICY.xml#UPDATE_PODS_SEM"  />
                <param name="EVENT_ID" default="-40" type="Decimal"/>
                <param name="EVENT_GUID" default="" type="String"/>
                <param name="TYPE_CL" default="UNKNOWN" type="String"/>
                <param name="PROTECTED_LF" default="" type="String"/>
                <param name="INTERSECTION_ANGLE" default="NULL" type="Decimal"/>
                <param name="SCALED_GCL" default="UNKNOWN" type="String"/>
                <param name="DIRECTION_GCL" default="UNKNOWN" type="String"/>
                <param name="SOURCE_NUMBER" default="" type="String"/>
                <param name="WIDTH" default="NULL" type="Decimal"/>
                <param name="GEOGRAPHIC_ENTITY_GUID" default="" type="String"/>
                <param name="CASING_INDICATOR_LF" default="" type="String"/>
                <param name="DESCRIPTION" default="" type="String"/>
                <param name="SOURCE_GCL" default="UNKNOWN" type="String"/>
                <param name="COMMENTS" default="" type="String"/>
                <param name="ID" type="Int64" direction="Input"/>
                <param name="USER_ID" default="-1" type="Int64"/>
                <query>
		UPDATE PODS.WATERWAY
                    SET 
					EVENT_ID=:EVENT_ID,EVENT_GUID=case when :EVENT_GUID is null then EVENT_GUID else :EVENT_GUID end,
                    TYPE_CL=case when :TYPE_CL is null then TYPE_CL else :TYPE_CL end,
                    PROTECTED_LF=case when :PROTECTED_LF is null then PROTECTED_LF else :PROTECTED_LF end,
                    INTERSECTION_ANGLE=case when :INTERSECTION_ANGLE is null then INTERSECTION_ANGLE else :INTERSECTION_ANGLE end,
                    SCALED_GCL=case when :SCALED_GCL is null then SCALED_GCL else :SCALED_GCL end,
                    DIRECTION_GCL=case when :DIRECTION_GCL is null then DIRECTION_GCL else :DIRECTION_GCL end,
                    SOURCE_NUMBER=case when :SOURCE_NUMBER is null then SOURCE_NUMBER else :SOURCE_NUMBER end,
                    WIDTH=case when :WIDTH is null then WIDTH else :WIDTH end,
                    GEOGRAPHIC_ENTITY_GUID=case when :GEOGRAPHIC_ENTITY_GUID is null then GEOGRAPHIC_ENTITY_GUID else :GEOGRAPHIC_ENTITY_GUID end,
                    CASING_INDICATOR_LF=case when :CASING_INDICATOR_LF is null then CASING_INDICATOR_LF else :CASING_INDICATOR_LF end,
                    DESCRIPTION=case when :DESCRIPTION is null then DESCRIPTION else :DESCRIPTION end,
                    SOURCE_GCL=case when :SOURCE_GCL is null then SOURCE_GCL else :SOURCE_GCL end,
                    COMMENTS=case when :COMMENTS is null then COMMENTS else :COMMENTS end
  		 WHERE GEOGRAPHIC_ENTITY_ID =:ID;
                </query>
            </dbCommand>
        </update>
        <delete>
            <dbCommand>
				<var name="CLASS_ID" type="String" direction="Input" default="PODS_WATERWAY_ENTITY" /> 
				<var name="POLICY" default="POLICY.xml#DELETE_PODS_SEM"  />
                <var name="ID" type="Int64" direction="Input"/>
                <var name="USER_ID" default="-1" type="Int64"/>
                <query>
					DO $$
                    BEGIN
                    DELETE FROM PODS.WATERWAY
                    WHERE GEOGRAPHIC_ENTITY_ID = {ID};

                    DELETE FROM PODS.GEOGRAPHIC_ENTITY
                    WHERE ENTITY_ID = {ID};
                    DELETE FROM WEB50.LNK_GATE WHERE LEFT_OBJ_ID = 'PODS_WATERWAY/'||CAST({ID} AS VARCHAR(30)) OR RIGHT_OBJ_ID = 'PODS_WATERWAY/'||CAST({ID} AS VARCHAR(30)); 
					END $$;
                </query>
            </dbCommand>
        </delete>
    </data>
    <data table="RIGHT_OF_WAY" schema="PODS" id="PODS_RIGHT_OF_WAY" comment="PODS.RIGHT_OF_WAY">
        <select>
            <dbQuery idField="ID">
                <param name="USER_ID" default="-1" type="Int64"/>
                <var name="FILTER" default="1=1"/>
                <var name="LPU_ACCESS_FILTER" default="SELECT srv_district_id FROM PODS.SRV_DISTRICT_GCL"/>
                <query>
                    SELECT * FROM (SELECT GEOGRAPHIC_ENTITY_ID ID, t.* FROM PODS.RIGHT_OF_WAY t) d WHERE {FILTER}
                </query>
            </dbQuery>
        </select>
        <insert>
            <dbCommand>
				<var name="CLASS_ID" type="String" direction="Input" default="PODS_RIGHT_OF_WAY" /> 
				<var name="POLICY" default="POLICY.xml#INSERT_PODS_SEM"  />
                <var name="EVENT_ID" default="-70" type="Decimal"/>
                <var name="EVENT_GUID" default="" type="String"/>
                <var name="TYPE_CL" default="UNKNOWN" type="String"/>
                <var name="PARCEL_NUMBER" default="" type="String"/>
                <var name="OWNER_NAME" default="" type="String"/>
                <var name="PROPERTY_WIDTH" default="NULL" type="Decimal"/>
                <var name="EASEMENT_WIDTH" default="NULL" type="Decimal"/>
                <var name="ADDRESS" default="" type="String"/>
                <var name="GEOGRAPHIC_ENTITY_GUID" default="" type="String"/>
                <var name="DESCRIPTION" default="" type="String"/>
                <var name="SOURCE_GCL" default="UNKNOWN" type="String"/>
                <var name="COMMENTS" default="" type="String"/>
                <var name="ID" type="Int64" direction="Output" default="SELECT max(ENTITY_ID) id FROM PODS.GEOGRAPHIC_ENTITY"/>
                <var name="PODS_USER" type="String"/>
                <var name="USER_ID" default="-1" type="Int64"/>
                <query>
					DO $$
					DECLARE
					returnId integer;
                    BEGIN
                    INSERT INTO PODS.GEOGRAPHIC_ENTITY (ENTITY_GUID,TYPE_CL)
                    VALUES('{GEOGRAPHIC_ENTITY_GUID}','UNKNOWN')
                    RETURNING ENTITY_ID INTO returnId;

                    INSERT INTO PODS.RIGHT_OF_WAY(GEOGRAPHIC_ENTITY_ID,EVENT_ID,EVENT_GUID,TYPE_CL,PARCEL_NUMBER,OWNER_NAME,PROPERTY_WIDTH,EASEMENT_WIDTH,ADDRESS,GEOGRAPHIC_ENTITY_GUID,DESCRIPTION,SOURCE_GCL,COMMENTS)
                    VALUES(returnId,{EVENT_ID},'{EVENT_GUID}',NULLIF('{TYPE_CL}',''),NULLIF('{PARCEL_NUMBER}',''),NULLIF('{OWNER_NAME}',''),{PROPERTY_WIDTH},{EASEMENT_WIDTH},NULLIF('{ADDRESS}',''),'{GEOGRAPHIC_ENTITY_GUID}',NULLIF('{DESCRIPTION}',''),NULLIF('{SOURCE_GCL}',''),NULLIF('{COMMENTS}',''));
					END $$;
                </query>
            </dbCommand>
        </insert>
        <update>
            <dbCommand>
				<param name="CLASS_ID" type="String" direction="Input" default="PODS_RIGHT_OF_WAY" /> 
				<var name="POLICY" default="POLICY.xml#UPDATE_PODS_SEM"  />
                <param name="EVENT_ID" default="-70" type="Decimal"/>
                <param name="EVENT_GUID" default="" type="String"/>
                <param name="TYPE_CL" default="UNKNOWN" type="String"/>
                <param name="PARCEL_NUMBER" default="" type="String"/>
                <param name="OWNER_NAME" default="" type="String"/>
                <param name="PROPERTY_WIDTH" default="NULL" type="Decimal"/>
                <param name="EASEMENT_WIDTH" default="NULL" type="Decimal"/>
                <param name="ADDRESS" default="" type="String"/>
                <param name="GEOGRAPHIC_ENTITY_GUID" default="" type="String"/>
                <param name="DESCRIPTION" default="" type="String"/>
                <param name="SOURCE_GCL" default="UNKNOWN" type="String"/>
                <param name="COMMENTS" default="" type="String"/>
                <param name="ID" type="Int64" direction="Input"/>
                <param name="USER_ID" default="-1" type="Int64"/>
                <query>
                    UPDATE PODS.RIGHT_OF_WAY
                    SET EVENT_ID=:EVENT_ID,EVENT_GUID=case when :EVENT_GUID is null then EVENT_GUID else :EVENT_GUID end,
                    TYPE_CL=case when :TYPE_CL is null then TYPE_CL else :TYPE_CL end,
					PARCEL_NUMBER=case when :PARCEL_NUMBER is null then PARCEL_NUMBER else :PARCEL_NUMBER end,
					OWNER_NAME=case when :OWNER_NAME is null then OWNER_NAME else :OWNER_NAME end,
					PROPERTY_WIDTH=case when :PROPERTY_WIDTH is null then PROPERTY_WIDTH else :PROPERTY_WIDTH end,
					EASEMENT_WIDTH=case when :EASEMENT_WIDTH is null then EASEMENT_WIDTH else :EASEMENT_WIDTH end,
					ADDRESS=case when :ADDRESS is null then ADDRESS else :ADDRESS end,
                    GEOGRAPHIC_ENTITY_GUID=case when :GEOGRAPHIC_ENTITY_GUID is null then GEOGRAPHIC_ENTITY_GUID else :GEOGRAPHIC_ENTITY_GUID end,
                    DESCRIPTION=case when :DESCRIPTION is null then DESCRIPTION else :DESCRIPTION end,
                    SOURCE_GCL=case when :SOURCE_GCL is null then SOURCE_GCL else :SOURCE_GCL end,
                    COMMENTS=case when :COMMENTS is null then COMMENTS else :COMMENTS end
                    WHERE GEOGRAPHIC_ENTITY_ID =:ID;
                </query>
            </dbCommand>
        </update>
        <delete>
            <dbCommand>
				<var name="CLASS_ID" type="String" direction="Input" default="PODS_RIGHT_OF_WAY" /> 
				<var name="POLICY" default="POLICY.xml#DELETE_PODS_SEM"  />
                <var name="ID" type="Int64" direction="Input"/>
                <var name="USER_ID" default="-1" type="Int64"/>
                <query>
					DO $$
                    BEGIN
                    DELETE FROM PODS.RIGHT_OF_WAY
                    WHERE GEOGRAPHIC_ENTITY_ID = {ID};

                    DELETE FROM PODS.GEOGRAPHIC_ENTITY
                    WHERE ENTITY_ID = {ID};
                    DELETE FROM WEB50.LNK_GATE WHERE LEFT_OBJ_ID = 'PODS_RIGHT_OF_WAY/'||CAST({ID} AS VARCHAR(30)) OR RIGHT_OBJ_ID = 'PODS_RIGHT_OF_WAY/'||CAST({ID} AS VARCHAR(30)); 
					END $$;
                </query>
            </dbCommand>
        </delete>
    </data>
    <data table="ROAD" schema="PODS" id="PODS_ROAD" comment="PODS.ROAD">
        <select>
            <dbQuery idField="ID">
                <param name="USER_ID" default="-1" type="Int64"/>
                <var name="FILTER" default="1=1"/>
                <var name="LPU_ACCESS_FILTER" default="SELECT srv_district_id FROM PODS.SRV_DISTRICT_GCL"/>
                <query>
                    SELECT * FROM (SELECT EVENT_ID ID, t.* FROM PODS.ROAD t) d WHERE {FILTER}
                </query>
            </dbQuery>
        </select>
        <insert>
            <dbCommand>
				<var name="CLASS_ID" type="String" direction="Input" default="PODS_ROAD" /> 
				<var name="POLICY" default="POLICY.xml#INSERT_PODS_SEM"  />
                <var name="EVENT_ID" default="-10" type="Decimal"/>
                <var name="EVENT_GUID" default="" type="String"/>
                <var name="TYPE_CL" default="UNKNOWN" type="String"/>
                <var name="SURFACE_CL" default="UNKNOWN" type="String"/>
                <var name="INTERSECTION_ANGLE" default="NULL" type="Decimal"/>
                <var name="SOURCE_NUMBER" default="" type="String"/>
                <var name="SCALED_GCL" default="UNKNOWN" type="String"/>
                <var name="DIRECTION_GCL" default="UNKNOWN" type="String"/>
                <var name="WIDTH" default="NULL" type="Decimal"/>
                <var name="GEOGRAPHIC_ENTITY_GUID" default="" type="String"/>
                <var name="CASING_INDICATOR_LF" default="" type="String"/>
                <var name="DESCRIPTION" default="" type="String"/>
                <var name="SOURCE_GCL" default="UNKNOWN" type="String"/>
                <var name="COMMENTS" default="" type="String"/>
                <var name="ID" type="Int64" direction="Output" default="SELECT max(EVENT_ID) id FROM PODS.EVENT_RANGE"/>
                <var name="PODS_USER" type="String"/>
                <var name="USER_ID" default="-1" type="Int64"/>
                <query>
					DO $$
					DECLARE
					returnId integer;
                    BEGIN

                    INSERT INTO PODS.EVENT_RANGE (EVENT_GUID,FEATURE_ID,STATION_ID_BEGIN,STATION_ID_END,PODS_USER,CREATE_DATE,EFFECTIVE_FROM_DATE,CURRENT_INDICATOR_LF,POSITIONING_TYPE_CL)
                    VALUES('{EVENT_GUID}','ROAD',0,0,NULLIF('{PODS_USER}',''),current_timestamp,current_timestamp,'Y','UNKNOWN')
                    RETURNING EVENT_ID INTO returnId;


                    INSERT INTO PODS.ROAD(GEOGRAPHIC_ENTITY_ID,EVENT_ID,EVENT_GUID,TYPE_CL,SURFACE_CL,INTERSECTION_ANGLE,SOURCE_NUMBER,SCALED_GCL,DIRECTION_GCL,WIDTH,GEOGRAPHIC_ENTITY_GUID,CASING_INDICATOR_LF,DESCRIPTION,SOURCE_GCL,COMMENTS)
                    VALUES(-10,returnId,'{EVENT_GUID}',NULLIF('{TYPE_CL}',''),NULLIF('{SURFACE_CL}',''),{INTERSECTION_ANGLE},NULLIF('{SOURCE_NUMBER}',''),NULLIF('{SCALED_GCL}',''),NULLIF('{DIRECTION_GCL}',''),{WIDTH},'{GEOGRAPHIC_ENTITY_GUID}','{CASING_INDICATOR_LF}',NULLIF('{DESCRIPTION}',''),NULLIF('{SOURCE_GCL}',''),NULLIF('{COMMENTS}',''));
					END $$;
                </query>
            </dbCommand>
        </insert>
        <update>
            <dbCommand>
				<param name="CLASS_ID" type="String" direction="Input" default="PODS_ROAD" /> 
				<var name="POLICY" default="POLICY.xml#UPDATE_PODS_SEM"  />
				<param name="GEOGRAPHIC_ENTITY_ID" default="0"  type="Decimal" />
                <param name="EVENT_ID" default="-10" type="Decimal"/>
                <param name="EVENT_GUID" default="" type="String"/>
                <param name="TYPE_CL" default="UNKNOWN" type="String"/>
                <param name="SURFACE_CL" default="UNKNOWN" type="String"/>
                <param name="INTERSECTION_ANGLE" default="NULL" type="Decimal"/>
                <param name="SOURCE_NUMBER" default="" type="String"/>
                <param name="SCALED_GCL" default="UNKNOWN" type="String"/>
                <param name="DIRECTION_GCL" default="UNKNOWN" type="String"/>
                <param name="WIDTH" default="NULL" type="Decimal"/>
                <param name="GEOGRAPHIC_ENTITY_GUID" default="" type="String"/>
                <param name="CASING_INDICATOR_LF" default="" type="String"/>
                <param name="DESCRIPTION" default="" type="String"/>
                <param name="SOURCE_GCL" default="UNKNOWN" type="String"/>
                <param name="COMMENTS" default="" type="String"/>
                <param name="ID" type="Int64" direction="Input"/>
                <param name="USER_ID" default="-1" type="Int64"/>
                <query>
                    UPDATE PODS.ROAD
                    SET 
                    GEOGRAPHIC_ENTITY_ID=case when :GEOGRAPHIC_ENTITY_ID is null then GEOGRAPHIC_ENTITY_ID else :GEOGRAPHIC_ENTITY_ID end,
					EVENT_GUID=case when :EVENT_GUID is null then EVENT_GUID else :EVENT_GUID end,
                    TYPE_CL=case when :TYPE_CL is null then TYPE_CL else :TYPE_CL end,
                    SURFACE_CL=case when :SURFACE_CL is null then SURFACE_CL else :SURFACE_CL end,
                    INTERSECTION_ANGLE=case when :INTERSECTION_ANGLE is null then INTERSECTION_ANGLE else :INTERSECTION_ANGLE end,
                    SOURCE_NUMBER=case when :SOURCE_NUMBER is null then SOURCE_NUMBER else :SOURCE_NUMBER end,
                    SCALED_GCL=case when :SCALED_GCL is null then SCALED_GCL else :SCALED_GCL end,
                    DIRECTION_GCL=case when :DIRECTION_GCL is null then DIRECTION_GCL else :DIRECTION_GCL end,
                    WIDTH=case when :WIDTH is null then WIDTH else :WIDTH end,
                    GEOGRAPHIC_ENTITY_GUID=case when :GEOGRAPHIC_ENTITY_GUID is null then GEOGRAPHIC_ENTITY_GUID else :GEOGRAPHIC_ENTITY_GUID end,
                    CASING_INDICATOR_LF=case when :CASING_INDICATOR_LF is null then CASING_INDICATOR_LF else :CASING_INDICATOR_LF end,
                    DESCRIPTION=case when :DESCRIPTION is null then DESCRIPTION else :DESCRIPTION end,
                    SOURCE_GCL=case when :SOURCE_GCL is null then SOURCE_GCL else :SOURCE_GCL end,
                    COMMENTS=case when :COMMENTS is null then COMMENTS else :COMMENTS end
                    WHERE EVENT_ID =:ID
                </query>
            </dbCommand>
        </update>
        <delete>
            <dbCommand>
				<var name="CLASS_ID" type="String" direction="Input" default="PODS_ROAD" /> 
				<var name="POLICY" default="POLICY.xml#DELETE_PODS_SEM"  />
                <var name="ID" type="Int64" direction="Input"/>
                <var name="USER_ID" default="-1" type="Int64"/>
                <query>
					DO $$
                    BEGIN

                    UPDATE PODS.EVENT_RANGE
                    SET CURRENT_INDICATOR_LF='N'
                    WHERE EVENT_ID = {ID};

                    DELETE
                    FROM PODS.ROAD
                    WHERE EVENT_ID = {ID};

                    DELETE
                    FROM WEB50.LNK_GATE
                    WHERE LEFT_OBJ_ID = 'PODS_ROAD/'||CAST({ID} AS VARCHAR(30))
                    OR RIGHT_OBJ_ID = 'PODS_ROAD/'||CAST({ID} AS VARCHAR(30));
                    END $$;
                </query>
            </dbCommand>
        </delete>
    </data>
    <data table="WATERWAY" schema="PODS" id="PODS_WATERWAY" comment="PODS.WATERWAY">
        <select>
            <dbQuery idField="ID">
                <param name="USER_ID" default="-1" type="Int64"/>
                <var name="FILTER" default="1=1"/>
                <var name="LPU_ACCESS_FILTER" default="SELECT srv_district_id FROM PODS.SRV_DISTRICT_GCL"/>
                <query>
                    SELECT * FROM (SELECT EVENT_ID ID, t.* FROM PODS.WATERWAY t) d WHERE {FILTER}
                </query>
            </dbQuery>
        </select>
        <insert>
            <dbCommand>
				<var name="CLASS_ID" type="String" direction="Input" default="PODS_WATERWAY" /> 
				<var name="POLICY" default="POLICY.xml#INSERT_PODS_SEM"  />
                <var name="EVENT_ID" default="-40" type="Decimal"/>
                <var name="EVENT_GUID" default="" type="String"/>
                <var name="TYPE_CL" default="UNKNOWN" type="String"/>
                <var name="PROTECTED_LF" default="" type="String"/>
                <var name="INTERSECTION_ANGLE" default="NULL" type="Decimal"/>
                <var name="SCALED_GCL" default="UNKNOWN" type="String"/>
                <var name="DIRECTION_GCL" default="UNKNOWN" type="String"/>
                <var name="SOURCE_NUMBER" default="" type="String"/>
                <var name="WIDTH" default="NULL" type="Decimal"/>
                <var name="GEOGRAPHIC_ENTITY_GUID" default="" type="String"/>
                <var name="CASING_INDICATOR_LF" default="" type="String"/>
                <var name="DESCRIPTION" default="" type="String"/>
                <var name="SOURCE_GCL" default="UNKNOWN" type="String"/>
                <var name="COMMENTS" default="" type="String"/>
                <var name="ID" type="Int64" direction="Output" default="SELECT max(EVENT_ID) id FROM PODS.EVENT_RANGE"/>
                <var name="PODS_USER" type="String"/>
                <var name="USER_ID" default="-1" type="Int64"/>
                <query>

					DO $$
					DECLARE
					returnId integer;
                    BEGIN
                    INSERT INTO PODS.EVENT_RANGE (EVENT_GUID,FEATURE_ID,STATION_ID_BEGIN,STATION_ID_END,PODS_USER,CREATE_DATE,EFFECTIVE_FROM_DATE,CURRENT_INDICATOR_LF,POSITIONING_TYPE_CL)
                    VALUES('{EVENT_GUID}','WATERWAY',0,0,NULLIF('{PODS_USER}',''),current_timestamp,current_timestamp,'Y','UNKNOWN')
                    RETURNING EVENT_ID INTO returnId;

                    INSERT INTO PODS.WATERWAY(GEOGRAPHIC_ENTITY_ID,EVENT_ID,EVENT_GUID,TYPE_CL,PROTECTED_LF,INTERSECTION_ANGLE,SCALED_GCL,DIRECTION_GCL,SOURCE_NUMBER,WIDTH,GEOGRAPHIC_ENTITY_GUID,CASING_INDICATOR_LF,DESCRIPTION,SOURCE_GCL,COMMENTS)
                    VALUES(-40,returnId,'{EVENT_GUID}',NULLIF('{TYPE_CL}',''),'{PROTECTED_LF}',{INTERSECTION_ANGLE},NULLIF('{SCALED_GCL}',''),NULLIF('{DIRECTION_GCL}',''),NULLIF('{SOURCE_NUMBER}',''),{WIDTH},'{GEOGRAPHIC_ENTITY_GUID}','{CASING_INDICATOR_LF}',NULLIF('{DESCRIPTION}',''),NULLIF('{SOURCE_GCL}',''),NULLIF('{COMMENTS}',''));
					END $$;
                </query>
            </dbCommand>
        </insert>
        <update>
            <dbCommand>
				<param name="CLASS_ID" type="String" direction="Input" default="PODS_WATERWAY" /> 
				<var name="POLICY" default="POLICY.xml#UPDATE_PODS_SEM"  />
				<param name="GEOGRAPHIC_ENTITY_ID" default="0"  type="Decimal" />
                <param name="EVENT_ID" default="-40" type="Decimal"/>
                <param name="EVENT_GUID" default="" type="String"/>
                <param name="TYPE_CL" default="UNKNOWN" type="String"/>
                <param name="PROTECTED_LF" default="" type="String"/>
                <param name="INTERSECTION_ANGLE" default="NULL" type="Decimal"/>
                <param name="SCALED_GCL" default="UNKNOWN" type="String"/>
                <param name="DIRECTION_GCL" default="UNKNOWN" type="String"/>
                <param name="SOURCE_NUMBER" default="" type="String"/>
                <param name="WIDTH" default="NULL" type="Decimal"/>
                <param name="GEOGRAPHIC_ENTITY_GUID" default="" type="String"/>
                <param name="CASING_INDICATOR_LF" default="" type="String"/>
                <param name="DESCRIPTION" default="" type="String"/>
                <param name="SOURCE_GCL" default="UNKNOWN" type="String"/>
                <param name="COMMENTS" default="" type="String"/>
                <param name="ID" type="Int64" direction="Input"/>
                <param name="USER_ID" default="-1" type="Int64"/>
                <query>
                    UPDATE PODS.WATERWAY
                    SET 
                    GEOGRAPHIC_ENTITY_ID=case when :GEOGRAPHIC_ENTITY_ID is null then GEOGRAPHIC_ENTITY_ID else :GEOGRAPHIC_ENTITY_ID end,
					EVENT_GUID=case when :EVENT_GUID is null then EVENT_GUID else :EVENT_GUID end,
                    TYPE_CL=case when :TYPE_CL is null then TYPE_CL else :TYPE_CL end,
                    PROTECTED_LF=case when :PROTECTED_LF is null then PROTECTED_LF else :PROTECTED_LF end,
                    INTERSECTION_ANGLE=case when :INTERSECTION_ANGLE is null then INTERSECTION_ANGLE else :INTERSECTION_ANGLE end,
                    SCALED_GCL=case when :SCALED_GCL is null then SCALED_GCL else :SCALED_GCL end,
                    DIRECTION_GCL=case when :DIRECTION_GCL is null then DIRECTION_GCL else :DIRECTION_GCL end,
                    SOURCE_NUMBER=case when :SOURCE_NUMBER is null then SOURCE_NUMBER else :SOURCE_NUMBER end,
                    WIDTH=case when :WIDTH is null then WIDTH else :WIDTH end,
                    GEOGRAPHIC_ENTITY_GUID=case when :GEOGRAPHIC_ENTITY_GUID is null then GEOGRAPHIC_ENTITY_GUID else :GEOGRAPHIC_ENTITY_GUID end,
                    CASING_INDICATOR_LF=case when :CASING_INDICATOR_LF is null then CASING_INDICATOR_LF else :CASING_INDICATOR_LF end,
                    DESCRIPTION=case when :DESCRIPTION is null then DESCRIPTION else :DESCRIPTION end,
                    SOURCE_GCL=case when :SOURCE_GCL is null then SOURCE_GCL else :SOURCE_GCL end,
                    COMMENTS=case when :COMMENTS is null then COMMENTS else :COMMENTS end
                    WHERE EVENT_ID = :ID;
                </query>
            </dbCommand>
        </update>
        <delete>
            <dbCommand>
				<var name="CLASS_ID" type="String" direction="Input" default="PODS_WATERWAY" /> 
				<var name="POLICY" default="POLICY.xml#DELETE_PODS_SEM"  />
                <var name="ID" type="Int64" direction="Input"/>
                <var name="USER_ID" default="-1" type="Int64"/>
                <query>
					DO $$
                    BEGIN
                    DELETE
                    FROM PODS.WATERWAY
                    WHERE EVENT_ID = {ID};

                    DELETE
                    FROM WEB50.LNK_GATE
                    WHERE LEFT_OBJ_ID = 'PODS_WATERWAY/'||CAST({ID} AS VARCHAR(30))
                    OR RIGHT_OBJ_ID = 'PODS_WATERWAY/'||CAST({ID} AS VARCHAR(30));
                    END $$;
                </query>
            </dbCommand>
        </delete>
    </data>
    <data table="COMPRESSOR_STATION" schema="PODS" id="PODS_COMPRESSOR_STATION" comment="PODS.COMPRESSOR_STATION">
        <select>
            <dbQuery idField="ID">
                <param name="USER_ID" default="-1" type="Int64"/>
                <var name="FILTER" default="1=1"/>
                <var name="LPU_ACCESS_FILTER" default="SELECT srv_district_id FROM PODS.SRV_DISTRICT_GCL"/>
                <query>
                    SELECT * FROM (SELECT OFFLINE_ID ID, t.* FROM PODS.COMPRESSOR_STATION t) d WHERE {FILTER}
                </query>
            </dbQuery>
        </select>
        <insert>
            <dbCommand>
				<var name="CLASS_ID" type="String" direction="Input" default="PODS_COMPRESSOR_STATION" /> 
				<var name="POLICY" default="POLICY.xml#INSERT_PODS_SEM"  />
                <var name="OFFLINE_GUID" default="" type="String"/>
                <var name="STATION_NUMBER" default="" type="String"/>
                <var name="STATION_NAME" default="" type="String"/>
                <var name="TOTAL_HORSEPOWER" default="NULL" type="Decimal"/>
                <var name="NUMBER_OF_ENGINES" default="NULL" type="Decimal"/>
                <var name="NUMBER_OF_TURBINES" default="NULL" type="Decimal"/>
                <var name="NUMBER_OF_MOTORS" default="NULL" type="Decimal"/>
                <var name="ENGINES_USED_FOR_ELECTRICITY" default="NULL" type="Decimal"/>
                <var name="TURBINES_USED_FOR_ELECTRICITY" default="NULL" type="Decimal"/>
                <var name="TITLE_V_APPLICABLE_LF" default="" type="String"/>
                <var name="TITLE_V_SUBMITTED_DATE" default="" type="DateTime"/>
                <var name="TITLE_V_RECEIVED_DATE" default="" type="DateTime"/>
                <var name="SIP_APPLICABLE_LF" default="" type="String"/>
                <var name="SIP_SUBMITTED_DATE" default="" type="DateTime"/>
                <var name="SIP_ISSUED_DATE" default="" type="DateTime"/>
                <var name="PRIMARY_FUNCTION_CL" default="UNKNOWN" type="String"/>
                <var name="SOURCE_GCL" default="UNKNOWN" type="String"/>
                <var name="ID" type="Int64" direction="Output" default="SELECT max(OFFLINE_ID) id FROM PODS.OFFLINE_EVENT"/>
                <var name="PODS_USER" type="String"/>
                <var name="USER_ID" default="-1" type="Int64"/>
                <query>
					DO $$
					DECLARE
					returnId integer;
                    BEGIN
                    INSERT INTO PODS.OFFLINE_EVENT (OFFLINE_GUID, FEATURE_ID,EFFECTIVE_FROM_DATE,CURRENT_INDICATOR_LF,CREATE_DATE,PODS_USER)
                    VALUES('{OFFLINE_GUID}', 'COMPR_STTN',current_timestamp,'Y',current_timestamp,NULLIF('{PODS_USER}',''))
                    RETURNING OFFLINE_ID INTO returnId;

                    INSERT INTO PODS.COMPRESSOR_STATION(OFFLINE_ID,OFFLINE_GUID,STATION_NUMBER,STATION_NAME,TOTAL_HORSEPOWER,NUMBER_OF_ENGINES,NUMBER_OF_TURBINES,NUMBER_OF_MOTORS,ENGINES_USED_FOR_ELECTRICITY,TURBINES_USED_FOR_ELECTRICITY,TITLE_V_APPLICABLE_LF,TITLE_V_SUBMITTED_DATE,TITLE_V_RECEIVED_DATE,SIP_APPLICABLE_LF,SIP_SUBMITTED_DATE,SIP_ISSUED_DATE,PRIMARY_FUNCTION_CL,SOURCE_GCL)
                    VALUES(returnId,'{OFFLINE_GUID}',NULLIF('{STATION_NUMBER}',''),NULLIF('{STATION_NAME}',''),{TOTAL_HORSEPOWER},{NUMBER_OF_ENGINES},{NUMBER_OF_TURBINES},{NUMBER_OF_MOTORS},{ENGINES_USED_FOR_ELECTRICITY},{TURBINES_USED_FOR_ELECTRICITY},'{TITLE_V_APPLICABLE_LF}','{TITLE_V_SUBMITTED_DATE}','{TITLE_V_RECEIVED_DATE}','{SIP_APPLICABLE_LF}','{SIP_SUBMITTED_DATE}','{SIP_ISSUED_DATE}',NULLIF('{PRIMARY_FUNCTION_CL}',''),NULLIF('{SOURCE_GCL}',''));
					END $$;
                </query>
            </dbCommand>
        </insert>
        <update>
            <dbCommand>
				<param name="CLASS_ID" type="String" direction="Input" default="PODS_COMPRESSOR_STATION" /> 
				<var name="POLICY" default="POLICY.xml#UPDATE_PODS_SEM"  />
                <param name="OFFLINE_GUID" default="" type="String"/>
                <param name="STATION_NUMBER" default="" type="String"/>
                <param name="STATION_NAME" default="" type="String"/>
                <param name="TOTAL_HORSEPOWER" default="NULL" type="Decimal"/>
                <param name="NUMBER_OF_ENGINES" default="NULL" type="Decimal"/>
                <param name="NUMBER_OF_TURBINES" default="NULL" type="Decimal"/>
                <param name="NUMBER_OF_MOTORS" default="NULL" type="Decimal"/>
                <param name="ENGINES_USED_FOR_ELECTRICITY" default="NULL" type="Decimal"/>
                <param name="TURBINES_USED_FOR_ELECTRICITY" default="NULL" type="Decimal"/>
                <param name="TITLE_V_APPLICABLE_LF" default="" type="String"/>
                <param name="TITLE_V_SUBMITTED_DATE" default="" type="DateTime"/>
                <param name="TITLE_V_RECEIVED_DATE" default="" type="DateTime"/>
                <param name="SIP_APPLICABLE_LF" default="" type="String"/>
                <param name="SIP_SUBMITTED_DATE" default="" type="DateTime"/>
                <param name="SIP_ISSUED_DATE" default="" type="DateTime"/>
                <param name="PRIMARY_FUNCTION_CL" default="UNKNOWN" type="String"/>
                <param name="SOURCE_GCL" default="UNKNOWN" type="String"/>
                <param name="ID" type="Int64" direction="Input"/>
                <param name="USER_ID" default="-1" type="Int64"/>
                <query>
                    UPDATE PODS.COMPRESSOR_STATION
                    SET 
                    OFFLINE_GUID=case when :OFFLINE_GUID is null then OFFLINE_GUID else :OFFLINE_GUID end,
                    STATION_NUMBER=case when :STATION_NUMBER is null then STATION_NUMBER else :STATION_NUMBER end,
                    STATION_NAME=case when :STATION_NAME is null then STATION_NAME else :STATION_NAME end,
                    TOTAL_HORSEPOWER=case when :TOTAL_HORSEPOWER is null then TOTAL_HORSEPOWER else :TOTAL_HORSEPOWER end,
                    NUMBER_OF_ENGINES=case when :NUMBER_OF_ENGINES is null then NUMBER_OF_ENGINES else :NUMBER_OF_ENGINES end,
                    NUMBER_OF_TURBINES=case when :NUMBER_OF_TURBINES is null then NUMBER_OF_TURBINES else :NUMBER_OF_TURBINES end,
                    NUMBER_OF_MOTORS=case when :NUMBER_OF_MOTORS is null then NUMBER_OF_MOTORS else :NUMBER_OF_MOTORS end,
                    ENGINES_USED_FOR_ELECTRICITY=case when :ENGINES_USED_FOR_ELECTRICITY is null then ENGINES_USED_FOR_ELECTRICITY else :ENGINES_USED_FOR_ELECTRICITY end,
                    TURBINES_USED_FOR_ELECTRICITY=case when :TURBINES_USED_FOR_ELECTRICITY is null then TURBINES_USED_FOR_ELECTRICITY else :TURBINES_USED_FOR_ELECTRICITY end,
                    TITLE_V_APPLICABLE_LF=case when :TITLE_V_APPLICABLE_LF is null then TITLE_V_APPLICABLE_LF else :TITLE_V_APPLICABLE_LF end,
                    TITLE_V_SUBMITTED_DATE=case when :TITLE_V_SUBMITTED_DATE is null then TITLE_V_SUBMITTED_DATE else :TITLE_V_SUBMITTED_DATE end,
                    TITLE_V_RECEIVED_DATE=case when :TITLE_V_RECEIVED_DATE is null then TITLE_V_RECEIVED_DATE else :TITLE_V_RECEIVED_DATE end,
                    SIP_APPLICABLE_LF=case when :SIP_APPLICABLE_LF is null then SIP_APPLICABLE_LF else :SIP_APPLICABLE_LF end,
                    SIP_SUBMITTED_DATE=case when :SIP_SUBMITTED_DATE is null then SIP_SUBMITTED_DATE else :SIP_SUBMITTED_DATE end,
                    SIP_ISSUED_DATE=case when :SIP_ISSUED_DATE is null then SIP_ISSUED_DATE else :SIP_ISSUED_DATE end,
                    PRIMARY_FUNCTION_CL=case when :PRIMARY_FUNCTION_CL is null then PRIMARY_FUNCTION_CL else :PRIMARY_FUNCTION_CL end,
                    SOURCE_GCL=case when :SOURCE_GCL is null then SOURCE_GCL else :SOURCE_GCL end
                    WHERE OFFLINE_ID = :ID;
                </query>
            </dbCommand>
        </update>
        <delete>
            <dbCommand>
				<var name="CLASS_ID" type="String" direction="Input" default="PODS_COMPRESSOR_STATION" /> 
				<var name="POLICY" default="POLICY.xml#DELETE_PODS_SEM"  />
                <var name="ID" type="Int64" direction="Input"/>
                <var name="USER_ID" default="-1" type="Int64"/>
                <query>
					DO $$
                    BEGIN

                    UPDATE PODS.CENTRIFUGAL_COMPRESSOR
                    SET UNIT_ID = NULL
                    WHERE UNIT_ID = {ID};

                    UPDATE PODS.COMPRESSOR_CYLINDER
                    SET UNIT_ID = NULL
                    WHERE UNIT_ID = {ID};

                    UPDATE PODS.COMPRESSOR_EMISSIONS
                    SET UNIT_ID = NULL
                    WHERE UNIT_ID = {ID};

                    UPDATE PODS.COMPRESSOR_POCKET
                    SET UNIT_ID = NULL
                    WHERE UNIT_ID = {ID};

                    UPDATE PODS.ELECTRIC_DRIVE
                    SET UNIT_ID = NULL
                    WHERE UNIT_ID = {ID};

                    UPDATE PODS.RECIPROCATING_COMPRESSOR
                    SET UNIT_ID = NULL
                    WHERE UNIT_ID = {ID};

                    UPDATE PODS.RECIPROCATING_DRIVE
                    SET UNIT_ID = NULL
                    WHERE UNIT_ID = {ID};

                    UPDATE PODS.TURBINE_DRIVE
                    SET UNIT_ID = NULL
                    WHERE UNIT_ID = {ID};

                    DELETE
                    FROM PODS.UNIT
                    WHERE COMPRESSOR_STATION_ID = {ID};

                    DELETE
                    FROM WEB50.LNK_GATE
                    WHERE LEFT_OBJ_ID IN (SELECT 'PODS_UNIT/'||CAST(UNIT_ID AS VARCHAR(30))
                    FROM PODS.UNIT
                    WHERE COMPRESSOR_STATION_ID = {ID})
                    OR RIGHT_OBJ_ID IN (SELECT 'PODS_UNIT/'||CAST(UNIT_ID AS VARCHAR(30))
                    FROM PODS.UNIT
                    WHERE COMPRESSOR_STATION_ID = {ID});

                    DELETE
                    FROM PODS.COMPRESSOR_STATION
                    WHERE OFFLINE_ID = {ID};

                    DELETE
                    FROM PODS.OFFLINE_EVENT
                    WHERE OFFLINE_ID = {ID};

                    DELETE
                    FROM WEB50.LNK_GATE
                    WHERE LEFT_OBJ_ID = 'PODS_OFFLINE_EVENT/'||CAST({ID} AS VARCHAR(30))
                    OR RIGHT_OBJ_ID = 'PODS_OFFLINE_EVENT/'||CAST({ID} AS VARCHAR(30));

                    DELETE
                    FROM WEB50.LNK_GATE
                    WHERE LEFT_OBJ_ID = 'PODS_COMPRESSOR_STATION/'||CAST({ID} AS VARCHAR(30))
                    OR RIGHT_OBJ_ID = 'PODS_COMPRESSOR_STATION/'||CAST({ID} AS VARCHAR(30));

                    END $$;
                </query>
            </dbCommand>
        </delete>
    </data>
    <data table="DISTRIBUTION_PLANT" schema="PODS" id="PODS_DISTRIBUTION_PLANT" comment="PODS.DISTRIBUTION_PLANT">
        <select>
            <dbQuery idField="ID">
                <param name="USER_ID" default="-1" type="Int64"/>
                <var name="FILTER" default="1=1"/>
                <var name="LPU_ACCESS_FILTER" default="SELECT srv_district_id FROM PODS.SRV_DISTRICT_GCL"/>
                <query>
                    SELECT * FROM (SELECT OFFLINE_ID ID, t.* FROM PODS.DISTRIBUTION_PLANT t) d WHERE {FILTER}
                </query>
            </dbQuery>
        </select>
        <insert>
            <dbCommand>
				<var name="CLASS_ID" type="String" direction="Input" default="PODS_DISTRIBUTION_PLANT" /> 
				<var name="POLICY" default="POLICY.xml#INSERT_PODS_SEM"  />
                <var name="OFFLINE_GUID" default="" type="String"/>
                <var name="NAME" default="" type="String"/>
                <var name="TYPE_CL" default="UNKNOWN" type="String"/>
                <var name="NOMINAL_DIAMETER_INLET_GCL" default="0" type="Decimal"/>
                <var name="NOMINAL_DIAMETER_OUTLET_GCL" default="0" type="Decimal"/>
                <var name="SERIAL_NUMBER" default="" type="String"/>
                <var name="MODEL" default="" type="String"/>
                <var name="MANUFACTURER_CL" default="UNKNOWN" type="String"/>
                <var name="DATE_MANUFACTURED" default="" type="DateTime"/>
                <var name="DATE_INSTALLED" default="" type="DateTime"/>
                <var name="SPECIFICATION_CL" default="UNKNOWN" type="String"/>
                <var name="AUXILIARY_BUILDING_LF" default="" type="String"/>
                <var name="ELECTRICITY_LF" default="" type="String"/>
                <var name="VENT_PIPE_QUANTITY" default="NULL" type="Decimal"/>
                <var name="NOMINAL_PRESSURE_RATING_INLET" default="NULL" type="Decimal"/>
                <var name="NOMINAL_PRESSURE_RATING_OUTLET" default="NULL" type="Decimal"/>
                <var name="MAOP_PRESSURE_RATING_OUTLET" default="NULL" type="Decimal"/>
                <var name="MAOP_PRESSURE_RATING_INLET" default="NULL" type="Decimal"/>
                <var name="ADDRESS_ID" default="NULL" type="Decimal"/>
                <var name="ADDRESS_GUID" default="" type="String"/>
                <var name="DESCRIPTION" default="" type="String"/>
                <var name="SOURCE_GCL" default="UNKNOWN" type="String"/>
                <var name="COMMENTS" default="" type="String"/>
                <var name="ID" type="Int64" direction="Output" default="SELECT max(OFFLINE_ID) id FROM PODS.OFFLINE_EVENT"/>
                <var name="PODS_USER" type="String"/>
                <var name="USER_ID" default="-1" type="Int64"/>
                <query>
					DO $$
					DECLARE
					returnId integer;
                    BEGIN
                    INSERT INTO PODS.OFFLINE_EVENT (OFFLINE_GUID, FEATURE_ID,EFFECTIVE_FROM_DATE,CURRENT_INDICATOR_LF,CREATE_DATE,PODS_USER)
                    VALUES('{OFFLINE_GUID}', 'DISTRIB_PLANT',current_timestamp,'Y',current_timestamp,NULLIF('{PODS_USER}',''))
                    RETURNING OFFLINE_ID INTO returnId;

                    INSERT INTO PODS.DISTRIBUTION_PLANT(OFFLINE_ID,OFFLINE_GUID,NAME,TYPE_CL,NOMINAL_DIAMETER_INLET_GCL,NOMINAL_DIAMETER_OUTLET_GCL,SERIAL_NUMBER,MODEL,MANUFACTURER_CL,DATE_MANUFACTURED,DATE_INSTALLED,SPECIFICATION_CL,AUXILIARY_BUILDING_LF,ELECTRICITY_LF,VENT_PIPE_QUANTITY,NOMINAL_PRESSURE_RATING_INLET,NOMINAL_PRESSURE_RATING_OUTLET,MAOP_PRESSURE_RATING_OUTLET,MAOP_PRESSURE_RATING_INLET,ADDRESS_ID,ADDRESS_GUID,DESCRIPTION,SOURCE_GCL,COMMENTS)
                    VALUES(returnId,'{OFFLINE_GUID}',NULLIF('{NAME}',''),NULLIF('{TYPE_CL}',''),{NOMINAL_DIAMETER_INLET_GCL},{NOMINAL_DIAMETER_OUTLET_GCL},NULLIF('{SERIAL_NUMBER}',''),NULLIF('{MODEL}',''),NULLIF('{MANUFACTURER_CL}',''),'{DATE_MANUFACTURED}','{DATE_INSTALLED}',NULLIF('{SPECIFICATION_CL}',''),'{AUXILIARY_BUILDING_LF}','{ELECTRICITY_LF}',{VENT_PIPE_QUANTITY},{NOMINAL_PRESSURE_RATING_INLET},{NOMINAL_PRESSURE_RATING_OUTLET},{MAOP_PRESSURE_RATING_OUTLET},{MAOP_PRESSURE_RATING_INLET},{ADDRESS_ID},'{ADDRESS_GUID}',NULLIF('{DESCRIPTION}',''),NULLIF('{SOURCE_GCL}',''),NULLIF('{COMMENTS}',''));
					END $$;
                </query>
            </dbCommand>
        </insert>
        <update>
            <dbCommand>
				<param name="CLASS_ID" type="String" direction="Input" default="PODS_DISTRIBUTION_PLANT" /> 
				<var name="POLICY" default="POLICY.xml#UPDATE_PODS_SEM"  />
                <param name="OFFLINE_GUID" default="" type="String"/>
                <param name="NAME" default="" type="String"/>
                <param name="TYPE_CL" default="UNKNOWN" type="String"/>
                <param name="NOMINAL_DIAMETER_INLET_GCL" default="0" type="Decimal"/>
                <param name="NOMINAL_DIAMETER_OUTLET_GCL" default="0" type="Decimal"/>
                <param name="SERIAL_NUMBER" default="" type="String"/>
                <param name="MODEL" default="" type="String"/>
                <param name="MANUFACTURER_CL" default="UNKNOWN" type="String"/>
                <param name="DATE_MANUFACTURED" default="" type="DateTime"/>
                <param name="DATE_INSTALLED" default="" type="DateTime"/>
                <param name="SPECIFICATION_CL" default="UNKNOWN" type="String"/>
                <param name="AUXILIARY_BUILDING_LF" default="" type="String"/>
                <param name="ELECTRICITY_LF" default="" type="String"/>
                <param name="VENT_PIPE_QUANTITY" default="NULL" type="Decimal"/>
                <param name="NOMINAL_PRESSURE_RATING_INLET" default="NULL" type="Decimal"/>
                <param name="NOMINAL_PRESSURE_RATING_OUTLET" default="NULL" type="Decimal"/>
                <param name="MAOP_PRESSURE_RATING_OUTLET" default="NULL" type="Decimal"/>
                <param name="MAOP_PRESSURE_RATING_INLET" default="NULL" type="Decimal"/>
                <param name="ADDRESS_ID" default="NULL" type="Decimal"/>
                <param name="ADDRESS_GUID" default="" type="String"/>
                <param name="DESCRIPTION" default="" type="String"/>
                <param name="SOURCE_GCL" default="UNKNOWN" type="String"/>
                <param name="COMMENTS" default="" type="String"/>
                <param name="ID" type="Int64" direction="Input"/>
                <param name="USER_ID" default="-1" type="Int64"/>
                <query>
                    UPDATE PODS.DISTRIBUTION_PLANT
                    SET 
                    OFFLINE_GUID=case when :OFFLINE_GUID is null then OFFLINE_GUID else :OFFLINE_GUID end,
					NAME=case when :NAME is null then NAME else :NAME end,
                    TYPE_CL=case when :TYPE_CL is null then TYPE_CL else :TYPE_CL end,
                    NOMINAL_DIAMETER_INLET_GCL=case when :NOMINAL_DIAMETER_INLET_GCL is null then NOMINAL_DIAMETER_INLET_GCL else :NOMINAL_DIAMETER_INLET_GCL end,
                    NOMINAL_DIAMETER_OUTLET_GCL=case when :NOMINAL_DIAMETER_OUTLET_GCL is null then NOMINAL_DIAMETER_OUTLET_GCL else :NOMINAL_DIAMETER_OUTLET_GCL end,
                    SERIAL_NUMBER=case when :SERIAL_NUMBER is null then SERIAL_NUMBER else :SERIAL_NUMBER end,
                    MODEL=case when :MODEL is null then MODEL else :MODEL end,
                    MANUFACTURER_CL=case when :MANUFACTURER_CL is null then MANUFACTURER_CL else :MANUFACTURER_CL end,
                    DATE_MANUFACTURED=case when :DATE_MANUFACTURED is null then DATE_MANUFACTURED else :DATE_MANUFACTURED end,
                    DATE_INSTALLED=case when :DATE_INSTALLED is null then DATE_INSTALLED else :DATE_INSTALLED end,
                    SPECIFICATION_CL=case when :SPECIFICATION_CL is null then SPECIFICATION_CL else :SPECIFICATION_CL end,
                    AUXILIARY_BUILDING_LF=case when :AUXILIARY_BUILDING_LF is null then AUXILIARY_BUILDING_LF else :AUXILIARY_BUILDING_LF end,
                    ELECTRICITY_LF=case when :ELECTRICITY_LF is null then ELECTRICITY_LF else :ELECTRICITY_LF end,
                    VENT_PIPE_QUANTITY=case when :VENT_PIPE_QUANTITY is null then VENT_PIPE_QUANTITY else :VENT_PIPE_QUANTITY end,
                    NOMINAL_PRESSURE_RATING_INLET=case when :NOMINAL_PRESSURE_RATING_INLET is null then NOMINAL_PRESSURE_RATING_INLET else :NOMINAL_PRESSURE_RATING_INLET end,
                    NOMINAL_PRESSURE_RATING_OUTLET=case when :NOMINAL_PRESSURE_RATING_OUTLET is null then NOMINAL_PRESSURE_RATING_OUTLET else :NOMINAL_PRESSURE_RATING_OUTLET end,
                    MAOP_PRESSURE_RATING_OUTLET=case when :MAOP_PRESSURE_RATING_OUTLET is null then MAOP_PRESSURE_RATING_OUTLET else :MAOP_PRESSURE_RATING_OUTLET end,
                    MAOP_PRESSURE_RATING_INLET=case when :MAOP_PRESSURE_RATING_INLET is null then MAOP_PRESSURE_RATING_INLET else :MAOP_PRESSURE_RATING_INLET end,
                    ADDRESS_ID=case when :ADDRESS_ID is null then ADDRESS_ID else :ADDRESS_ID end,
                    ADDRESS_GUID=case when :ADDRESS_GUID is null then ADDRESS_GUID else :ADDRESS_GUID end,
                    DESCRIPTION=case when :DESCRIPTION is null then DESCRIPTION else :DESCRIPTION end,
                    SOURCE_GCL=case when :SOURCE_GCL is null then SOURCE_GCL else :SOURCE_GCL end,
                    COMMENTS=case when :COMMENTS is null then COMMENTS else :COMMENTS end
                    WHERE OFFLINE_ID = :ID;
                </query>
            </dbCommand>
        </update>
        <delete>
            <dbCommand>
				<var name="CLASS_ID" type="String" direction="Input" default="PODS_DISTRIBUTION_PLANT" /> 
				<var name="POLICY" default="POLICY.xml#DELETE_PODS_SEM"  />
                <var name="ID" type="Int64" direction="Input"/>
                <var name="USER_ID" default="-1" type="Int64"/>
                <query>
					DO $$
                    BEGIN
                    DELETE FROM PODS.DISTRIBUTION_PLANT
                    WHERE OFFLINE_ID = {ID};

                    DELETE FROM pods.offline_event
                    WHERE offline_id = {ID};
                    DELETE FROM WEB50.LNK_GATE WHERE LEFT_OBJ_ID = 'PODS_DISTRIBUTION_PLANT/'||CAST({ID} AS VARCHAR(30)) OR RIGHT_OBJ_ID = 'PODS_DISTRIBUTION_PLANT/'||CAST({ID} AS VARCHAR(30)); 
					END $$;
                </query>
            </dbCommand>
        </delete>
    </data>
    <data table="HCA_IDENTIFIED_SITE" schema="PODS" id="PODS_HCA_IDENTIFIED_SITE" comment="PODS.HCA_IDENTIFIED_SITE">
        <select>
            <dbQuery idField="ID">
                <param name="USER_ID" default="-1" type="Int64"/>
                <var name="FILTER" default="1=1"/>
                <var name="LPU_ACCESS_FILTER" default="SELECT srv_district_id FROM PODS.SRV_DISTRICT_GCL"/>
                <query>
                    SELECT * FROM (SELECT OFFLINE_ID ID, t.* FROM PODS.HCA_IDENTIFIED_SITE t) d WHERE {FILTER}
                </query>
            </dbQuery>
        </select>
        <insert>
            <dbCommand>
				<param name="CLASS_ID" type="String" direction="Input" default="PODS_HCA_IDENTIFIED_SITE" /> 
				<var name="POLICY" default="POLICY.xml#INSERT_PODS_SEM"  />
                <param name="HCA_IDENTIFIED_SITE_ID" default="NULL" type="Decimal"/>
                <param name="HCA_IDENTIFIED_SITE_GUID" default="" type="String"/>
                <param name="OFFLINE_GUID" default="" type="String"/>
                <param name="TYPE_CL" default="UNKNOWN" type="String"/>
                <param name="DESCRIPTION" default="" type="String"/>
                <param name="VISIBLE_EXTERNAL_SIGNAGE_LF" default="" type="String"/>
                <param name="FREQUENCY_OF_USE_CL" default="UNKNOWN" type="String"/>
                <param name="OCCUPANTS_REDUCED_MOBILITY_LF" default="" type="String"/>
                <param name="OUTDOOR_GATHERING_LF" default="" type="String"/>
                <param name="SOURCE_GCL" default="UNKNOWN" type="String"/>
                <var name="ID" type="Int64" direction="Output" default="SELECT max(OFFLINE_ID) id FROM PODS.OFFLINE_EVENT"/>
                <param name="PODS_USER" type="String"/>
                <param name="USER_ID" default="-1" type="Int64"/>
                <query>
					DO $$
					DECLARE
					returnId integer;
                    BEGIN
                    INSERT INTO PODS.OFFLINE_EVENT (OFFLINE_GUID, FEATURE_ID,EFFECTIVE_FROM_DATE,CURRENT_INDICATOR_LF,CREATE_DATE,PODS_USER)
                    VALUES('{OFFLINE_GUID}', 'HCA_ID_SITE',current_timestamp,'Y',current_timestamp,NULLIF('{PODS_USER}',''))
                    RETURNING OFFLINE_ID INTO returnId;

                    INSERT INTO PODS.HCA_IDENTIFIED_SITE(OFFLINE_ID,HCA_IDENTIFIED_SITE_ID,HCA_IDENTIFIED_SITE_GUID,OFFLINE_GUID,TYPE_CL,DESCRIPTION,VISIBLE_EXTERNAL_SIGNAGE_LF,FREQUENCY_OF_USE_CL,OCCUPANTS_REDUCED_MOBILITY_LF,OUTDOOR_GATHERING_LF,SOURCE_GCL)
                    VALUES(returnId,{HCA_IDENTIFIED_SITE_ID},'{HCA_IDENTIFIED_SITE_GUID}','{OFFLINE_GUID}',NULLIF('{TYPE_CL}',''),NULLIF('{DESCRIPTION}',''),'{VISIBLE_EXTERNAL_SIGNAGE_LF}',NULLIF('{FREQUENCY_OF_USE_CL}',''),'{OCCUPANTS_REDUCED_MOBILITY_LF}','{OUTDOOR_GATHERING_LF}',NULLIF('{SOURCE_GCL}',''));
					END $$;
                </query>
            </dbCommand>
        </insert>
        <update>
            <dbCommand>
				<param name="CLASS_ID" type="String" direction="Input" default="PODS_HCA_IDENTIFIED_SITE" /> 
				<var name="POLICY" default="POLICY.xml#UPDATE_PODS_SEM"  />
                <param name="HCA_IDENTIFIED_SITE_ID" default="NULL" type="Decimal"/>
                <param name="HCA_IDENTIFIED_SITE_GUID" default="" type="String"/>
                <param name="OFFLINE_GUID" default="" type="String"/>
                <param name="TYPE_CL" default="UNKNOWN" type="String"/>
                <param name="DESCRIPTION" default="" type="String"/>
                <param name="VISIBLE_EXTERNAL_SIGNAGE_LF" default="" type="String"/>
                <param name="FREQUENCY_OF_USE_CL" default="UNKNOWN" type="String"/>
                <param name="OCCUPANTS_REDUCED_MOBILITY_LF" default="" type="String"/>
                <param name="OUTDOOR_GATHERING_LF" default="" type="String"/>
                <param name="SOURCE_GCL" default="UNKNOWN" type="String"/>
                <param name="ID" type="Int64" direction="Input"/>
                <param name="USER_ID" default="-1" type="Int64"/>
                <query>
                    UPDATE PODS.HCA_IDENTIFIED_SITE
                    SET 
                    HCA_IDENTIFIED_SITE_ID=case when :HCA_IDENTIFIED_SITE_ID is null then HCA_IDENTIFIED_SITE_ID else :HCA_IDENTIFIED_SITE_ID end,
                    HCA_IDENTIFIED_SITE_GUID=case when :HCA_IDENTIFIED_SITE_GUID is null then HCA_IDENTIFIED_SITE_GUID else :HCA_IDENTIFIED_SITE_GUID end,
                    OFFLINE_GUID=case when :OFFLINE_GUID is null then OFFLINE_GUID else :OFFLINE_GUID end,
                    TYPE_CL=case when :TYPE_CL is null then TYPE_CL else :TYPE_CL end,
                    DESCRIPTION=case when :DESCRIPTION is null then DESCRIPTION else :DESCRIPTION end,
                    VISIBLE_EXTERNAL_SIGNAGE_LF=case when :VISIBLE_EXTERNAL_SIGNAGE_LF is null then VISIBLE_EXTERNAL_SIGNAGE_LF else :VISIBLE_EXTERNAL_SIGNAGE_LF end,
                    FREQUENCY_OF_USE_CL=case when :FREQUENCY_OF_USE_CL is null then FREQUENCY_OF_USE_CL else :FREQUENCY_OF_USE_CL end,
                    OCCUPANTS_REDUCED_MOBILITY_LF=case when :OCCUPANTS_REDUCED_MOBILITY_LF is null then OCCUPANTS_REDUCED_MOBILITY_LF else :OCCUPANTS_REDUCED_MOBILITY_LF end,
                    OUTDOOR_GATHERING_LF=case when :OUTDOOR_GATHERING_LF is null then OUTDOOR_GATHERING_LF else :OUTDOOR_GATHERING_LF end,
                    SOURCE_GCL=case when :SOURCE_GCL is null then SOURCE_GCL else :SOURCE_GCL end
                    WHERE OFFLINE_ID = :ID;
                </query>
            </dbCommand>
        </update>
        <delete>
            <dbCommand>
				<var name="CLASS_ID" type="String" direction="Input" default="PODS_HCA_IDENTIFIED_SITE" /> 
				<var name="POLICY" default="POLICY.xml#DELETE_PODS_SEM"  />
                <var name="ID" type="Int64" direction="Input"/>
                <var name="USER_ID" default="-1" type="Int64"/>
                <query>
					DO $$
                    BEGIN
                    DELETE FROM PODS.HCA_IDENTIFIED_SITE
                    WHERE OFFLINE_ID = {ID};

                    DELETE FROM pods.offline_event
                    WHERE offline_id = {ID};
                    DELETE FROM WEB50.LNK_GATE WHERE LEFT_OBJ_ID = 'PODS_HCA_IDENTIFIED_SITE/'||CAST({ID} AS VARCHAR(30)) OR RIGHT_OBJ_ID = 'PODS_HCA_IDENTIFIED_SITE/'||CAST({ID} AS VARCHAR(30)); 
					END $$;
                </query>
            </dbCommand>
        </delete>
    </data>
    <data table="POPULATED_AREA" schema="PODS" id="PODS_POPULATED_AREA" comment="PODS.POPULATED_AREA">
        <select>
            <dbQuery idField="ID">
                <param name="USER_ID" default="-1" type="Int64"/>
                <var name="FILTER" default="1=1"/>
                <var name="LPU_ACCESS_FILTER" default="SELECT srv_district_id FROM PODS.SRV_DISTRICT_GCL"/>
                <query>
                    SELECT * FROM (SELECT OFFLINE_ID ID, t.* FROM PODS.POPULATED_AREA t) d WHERE {FILTER}
                </query>
            </dbQuery>
        </select>
        <insert>
            <dbCommand>
				<var name="CLASS_ID" type="String" direction="Input" default="PODS_POPULATED_AREA" /> 
				<var name="POLICY" default="POLICY.xml#INSERT_PODS_SEM"  />
                <var name="OFFLINE_GUID" default="" type="String"/>
                <var name="TYPE_CL" default="UNKNOWN" type="String"/>
                <var name="NAME" default="" type="String"/>
                <var name="OCCUPANT_COUNT" default="NULL" type="Decimal"/>
                <var name="OCCUPANCY_CATEGORY_GCL" default="UNKNOWN" type="String"/>
                <var name="DETERMINATION_DATE" default="" type="DateTime"/>
                <var name="DETERMINATION_METHOD_GCL" default="UNKNOWN" type="String"/>
                <var name="SITE_ADDRESS_ID" default="NULL" type="Decimal"/>
                <var name="SITE_ADDRESS_GUID" default="" type="String"/>
                <var name="CONTACT_ID" default="NULL" type="Decimal"/>
                <var name="CONTACT_GUID" default="" type="String"/>
                <var name="SOURCE_GCL" default="UNKNOWN" type="String"/>
                <var name="COMMENTS" default="" type="String"/>
                <var name="ID" type="Int64" direction="Output" default="SELECT max(OFFLINE_ID) id FROM PODS.OFFLINE_EVENT"/>
                <var name="PODS_USER" type="String"/>
                <var name="USER_ID" default="-1" type="Int64"/>
                <query>
					DO $$
					DECLARE
					returnId integer;
                    BEGIN
                    INSERT INTO PODS.OFFLINE_EVENT (OFFLINE_GUID, FEATURE_ID,EFFECTIVE_FROM_DATE,CURRENT_INDICATOR_LF,CREATE_DATE,PODS_USER)
                    VALUES('{OFFLINE_GUID}', 'POPULATED_AREA',current_timestamp,'Y',current_timestamp,NULLIF('{PODS_USER}',''))
                    RETURNING OFFLINE_ID INTO returnId;

                    INSERT INTO PODS.POPULATED_AREA(OFFLINE_ID,OFFLINE_GUID,TYPE_CL,NAME,OCCUPANT_COUNT,OCCUPANCY_CATEGORY_GCL,DETERMINATION_DATE,DETERMINATION_METHOD_GCL,SITE_ADDRESS_ID,SITE_ADDRESS_GUID,CONTACT_ID,CONTACT_GUID,SOURCE_GCL,COMMENTS)
                    VALUES(returnId,'{OFFLINE_GUID}',NULLIF('{TYPE_CL}',''),NULLIF('{NAME}',''),{OCCUPANT_COUNT},NULLIF('{OCCUPANCY_CATEGORY_GCL}',''),'{DETERMINATION_DATE}',NULLIF('{DETERMINATION_METHOD_GCL}',''),{SITE_ADDRESS_ID},'{SITE_ADDRESS_GUID}',{CONTACT_ID},'{CONTACT_GUID}',NULLIF('{SOURCE_GCL}',''),NULLIF('{COMMENTS}',''));
					END $$;
                </query>
            </dbCommand>
        </insert>
        <update>
            <dbCommand>
				<param name="CLASS_ID" type="String" direction="Input" default="PODS_POPULATED_AREA" /> 
				<var name="POLICY" default="POLICY.xml#UPDATE_PODS_SEM"  />
                <param name="OFFLINE_GUID" default="" type="String"/>
                <param name="TYPE_CL" default="UNKNOWN" type="String"/>
                <param name="NAME" default="" type="String"/>
                <param name="OCCUPANT_COUNT" default="NULL" type="Decimal"/>
                <param name="OCCUPANCY_CATEGORY_GCL" default="UNKNOWN" type="String"/>
                <param name="DETERMINATION_DATE" default="" type="DateTime"/>
                <param name="DETERMINATION_METHOD_GCL" default="UNKNOWN" type="String"/>
                <param name="SITE_ADDRESS_ID" default="NULL" type="Decimal"/>
                <param name="SITE_ADDRESS_GUID" default="" type="String"/>
                <param name="CONTACT_ID" default="NULL" type="Decimal"/>
                <param name="CONTACT_GUID" default="" type="String"/>
                <param name="SOURCE_GCL" default="UNKNOWN" type="String"/>
                <param name="COMMENTS" default="" type="String"/>
                <param name="ID" type="Int64" direction="Input"/>
                <param name="USER_ID" default="-1" type="Int64"/>
                <query>
                    UPDATE PODS.POPULATED_AREA
                    SET 
                    OFFLINE_GUID=case when :OFFLINE_GUID is null then OFFLINE_GUID else :OFFLINE_GUID end,
                    TYPE_CL=case when :TYPE_CL is null then TYPE_CL else :TYPE_CL end,
					NAME=case when :NAME is null then NAME else :NAME end,
                    OCCUPANT_COUNT=case when :OCCUPANT_COUNT is null then OCCUPANT_COUNT else :OCCUPANT_COUNT end,
                    OCCUPANCY_CATEGORY_GCL=case when :OCCUPANCY_CATEGORY_GCL is null then OCCUPANCY_CATEGORY_GCL else :OCCUPANCY_CATEGORY_GCL end,
                    DETERMINATION_DATE=case when :DETERMINATION_DATE is null then DETERMINATION_DATE else :DETERMINATION_DATE end,
                    DETERMINATION_METHOD_GCL=case when :DETERMINATION_METHOD_GCL is null then DETERMINATION_METHOD_GCL else :DETERMINATION_METHOD_GCL end,
                    SITE_ADDRESS_ID=case when :SITE_ADDRESS_ID is null then SITE_ADDRESS_ID else :SITE_ADDRESS_ID end,
                    SITE_ADDRESS_GUID=case when :SITE_ADDRESS_GUID is null then SITE_ADDRESS_GUID else :SITE_ADDRESS_GUID end,
                    CONTACT_ID=case when :CONTACT_ID is null then CONTACT_ID else :CONTACT_ID end,
                    CONTACT_GUID=case when :CONTACT_GUID is null then CONTACT_GUID else :CONTACT_GUID end,
                    SOURCE_GCL=case when :SOURCE_GCL is null then SOURCE_GCL else :SOURCE_GCL end,
                    COMMENTS=case when :COMMENTS is null then COMMENTS else :COMMENTS end
                    WHERE OFFLINE_ID = :ID;
                </query>
            </dbCommand>
        </update>
        <delete>
            <dbCommand>
				<var name="CLASS_ID" type="String" direction="Input" default="PODS_POPULATED_AREA" /> 
				<var name="POLICY" default="POLICY.xml#DELETE_PODS_SEM"  />
                <var name="ID" type="Int64" direction="Input"/>
                <var name="USER_ID" default="-1" type="Int64"/>
                <query>
					DO $$
                    BEGIN

                    DELETE
                    FROM WEB50.LNK_GATE
                    WHERE LEFT_OBJ_ID IN (SELECT 'PODS_HCA_IDENTIFIED_SITE/'||CAST(HCA_IDENTIFIED_SITE_ID AS VARCHAR(30))
                    FROM PODS.HCA_IDENTIFIED_SITE
                    WHERE OFFLINE_ID = {ID})
                    OR RIGHT_OBJ_ID IN (SELECT 'PODS_HCA_IDENTIFIED_SITE/'||CAST(HCA_IDENTIFIED_SITE_ID AS VARCHAR(30))
                    FROM PODS.HCA_IDENTIFIED_SITE
                    WHERE OFFLINE_ID = {ID});

                    DELETE
                    FROM PODS.HCA_IDENTIFIED_SITE
                    WHERE OFFLINE_ID = {ID};

                    DELETE
                    FROM PODS.POPULATED_AREA
                    WHERE OFFLINE_ID = {ID};

                    DELETE
                    FROM PODS.OFFLINE_EVENT
                    WHERE OFFLINE_ID = {ID};

                    DELETE
                    FROM WEB50.LNK_GATE
                    WHERE LEFT_OBJ_ID = 'PODS_POPULATED_AREA/'||CAST({ID} AS VARCHAR(30))
                    OR RIGHT_OBJ_ID = 'PODS_POPULATED_AREA/'||CAST({ID} AS VARCHAR(30));

                    DELETE
                    FROM WEB50.LNK_GATE
                    WHERE LEFT_OBJ_ID = 'PODS_OFFLINE_EVENT/'||CAST({ID} AS VARCHAR(30))
                    OR RIGHT_OBJ_ID = 'PODS_OFFLINE_EVENT/'||CAST({ID} AS VARCHAR(30));

                    END $$;
                </query>
            </dbCommand>
        </delete>
    </data>
    <data table="PUMP_STATION" schema="PODS" id="PODS_PUMP_STATION" comment="PODS.PUMP_STATION">
        <select>
            <dbQuery idField="ID">
                <param name="USER_ID" default="-1" type="Int64"/>
                <var name="FILTER" default="1=1"/>
                <var name="LPU_ACCESS_FILTER" default="SELECT srv_district_id FROM PODS.SRV_DISTRICT_GCL"/>
                <query>
                    SELECT * FROM (SELECT OFFLINE_ID ID, t.* FROM PODS.PUMP_STATION t) d WHERE {FILTER}
                </query>
            </dbQuery>
        </select>
        <insert>
            <dbCommand>
				<var name="CLASS_ID" type="String" direction="Input" default="PODS_PUMP_STATION" /> 
				<var name="POLICY" default="POLICY.xml#INSERT_PODS_SEM"  />
                <var name="OFFLINE_GUID" default="" type="String"/>
                <var name="STATION_NUMBER" default="" type="String"/>
                <var name="NAME" default="" type="String"/>
                <var name="STATE_GCL" default="UNKNOWN" type="String"/>
                <var name="TOTAL_HORSEPOWER" default="NULL" type="Decimal"/>
                <var name="NUMBER_OF_UNITS" default="NULL" type="Decimal"/>
                <var name="SOURCE_GCL" default="UNKNOWN" type="String"/>
                <var name="ID" type="Int64" direction="Output" default="SELECT max(OFFLINE_ID) id FROM PODS.OFFLINE_EVENT"/>
                <var name="PODS_USER" type="String"/>
                <var name="USER_ID" default="-1" type="Int64"/>
                <query>
					DO $$
					DECLARE
					returnId integer;
                    BEGIN
                    INSERT INTO PODS.OFFLINE_EVENT (OFFLINE_GUID, FEATURE_ID,EFFECTIVE_FROM_DATE,CURRENT_INDICATOR_LF,CREATE_DATE,PODS_USER)
                    VALUES('{OFFLINE_GUID}', 'POPULATED_AREA',current_timestamp,'Y',current_timestamp,NULLIF('{PODS_USER}',''))
                    RETURNING OFFLINE_ID INTO returnId;

                    INSERT INTO PODS.PUMP_STATION(OFFLINE_ID,OFFLINE_GUID,STATION_NUMBER,NAME,STATE_GCL,TOTAL_HORSEPOWER,NUMBER_OF_UNITS,SOURCE_GCL)
                    VALUES(returnId,'{OFFLINE_GUID}',NULLIF('{STATION_NUMBER}',''),NULLIF('{NAME}',''),NULLIF('{STATE_GCL}',''),'{TOTAL_HORSEPOWER}',{NUMBER_OF_UNITS},NULLIF('{SOURCE_GCL}',''));
					END $$;
                </query>
            </dbCommand>
        </insert>
        <update>
            <dbCommand>
				<param name="CLASS_ID" type="String" direction="Input" default="PODS_PUMP_STATION" /> 
				<var name="POLICY" default="POLICY.xml#UPDATE_PODS_SEM"  />
                <param name="OFFLINE_GUID" default="" type="String"/>
                <param name="STATION_NUMBER" default="" type="String"/>
                <param name="NAME" default="" type="String"/>
                <param name="STATE_GCL" default="UNKNOWN" type="String"/>
                <param name="TOTAL_HORSEPOWER" default="NULL" type="Decimal"/>
                <param name="NUMBER_OF_UNITS" default="NULL" type="Decimal"/>
                <param name="SOURCE_GCL" default="UNKNOWN" type="String"/>
                <param name="ID" type="Int64" direction="Input"/>
                <param name="USER_ID" default="-1" type="Int64"/>
                <query>
                    UPDATE PODS.PUMP_STATION
                    SET 
                    OFFLINE_GUID=case when :OFFLINE_GUID is null then OFFLINE_GUID else :OFFLINE_GUID end,
                    STATION_NUMBER=case when :STATION_NUMBER is null then STATION_NUMBER else :STATION_NUMBER end,
					NAME=case when :NAME is null then NAME else :NAME end,
                    STATE_GCL=case when :STATE_GCL is null then STATE_GCL else :STATE_GCL end,
					TOTAL_HORSEPOWER=case when :TOTAL_HORSEPOWER is null then TOTAL_HORSEPOWER else :TOTAL_HORSEPOWER end,
					NUMBER_OF_UNITS=case when :NUMBER_OF_UNITS is null then NUMBER_OF_UNITS else :NUMBER_OF_UNITS end,
                    SOURCE_GCL=case when :SOURCE_GCL is null then SOURCE_GCL else :SOURCE_GCL end
                    WHERE OFFLINE_ID = :ID;
                </query>
            </dbCommand>
        </update>
        <delete>
            <dbCommand>
				<var name="CLASS_ID" type="String" direction="Input" default="PODS_PUMP_STATION" /> 
				<var name="POLICY" default="POLICY.xml#DELETE_PODS_SEM"  />
                <var name="ID" type="Int64" direction="Input"/>
                <var name="USER_ID" default="-1" type="Int64"/>
                <query>
					DO $$
                    BEGIN
                    DELETE
                    FROM PODS.PUMP_STATION
                    WHERE OFFLINE_ID = {ID};

                    DELETE
                    FROM PODS.OFFLINE_EVENT
                    WHERE OFFLINE_ID = {ID};

                    DELETE
                    FROM WEB50.LNK_GATE
                    WHERE LEFT_OBJ_ID = 'PODS_OFFLINE_EVENT/'||CAST({ID} AS VARCHAR(30))
                    OR RIGHT_OBJ_ID = 'PODS_OFFLINE_EVENT/'||CAST({ID} AS VARCHAR(30));

                    DELETE
                    FROM WEB50.LNK_GATE
                    WHERE LEFT_OBJ_ID = 'PODS_PUMP_STATION/'||CAST({ID} AS VARCHAR(30))
                    OR RIGHT_OBJ_ID = 'PODS_PUMP_STATION/'||CAST({ID} AS VARCHAR(30));

                    END $$;
                </query>
            </dbCommand>
        </delete>
    </data>
    <data table="STRUCTURE" schema="PODS" id="PODS_STRUCTURE" comment="PODS.STRUCTURE">
        <select>
            <dbQuery idField="ID">
                <param name="USER_ID" default="-1" type="Int64"/>
                <var name="FILTER" default="1=1"/>
                <var name="LPU_ACCESS_FILTER" default="SELECT srv_district_id FROM PODS.SRV_DISTRICT_GCL"/>
                <query>
                    SELECT * FROM (SELECT OFFLINE_ID ID, t.* FROM PODS.STRUCTURE t WHERE t.type_cl NOT IN ('STRUCT_TYPE_16','STRUCT_TYPE_17')) d WHERE {FILTER}
                </query>
            </dbQuery>
        </select>
        <insert>
            <dbCommand>
				<var name="CLASS_ID" type="String" direction="Input" default="PODS_STRUCTURE" /> 
				<var name="POLICY" default="POLICY.xml#INSERT_PODS_SEM"  />
                <var name="OFFLINE_GUID" default="" type="String"/>
                <var name="TYPE_CL" default="UNKNOWN" type="String"/>
                <var name="NAME" default="" type="String"/>
                <var name="OCCUPANT_COUNT" default="NULL" type="Decimal"/>
                <var name="OCCUPANCY_CATEGORY_GCL" default="UNKNOWN" type="String"/>
                <var name="DETERMINATION_DATE" default="" type="DateTime"/>
                <var name="DETERMINATION_METHOD_GCL" default="UNKNOWN" type="String"/>
                <var name="SITE_ADDRESS_ID" default="NULL" type="Decimal"/>
                <var name="SITE_ADDRESS_GUID" default="" type="String"/>
                <var name="CONTACT_ID" default="NULL" type="Decimal"/>
                <var name="CONTACT_GUID" default="" type="String"/>
                <var name="SOURCE_GCL" default="UNKNOWN" type="String"/>
                <var name="ID" type="Int64" direction="Output" default="SELECT max(OFFLINE_ID) id FROM PODS.OFFLINE_EVENT"/>
                <var name="PODS_USER" type="String"/>
                <var name="USER_ID" default="-1" type="Int64"/>
                <query>
					DO $$
					DECLARE
					returnId integer;
                    BEGIN
                    INSERT INTO PODS.OFFLINE_EVENT (OFFLINE_GUID, FEATURE_ID,EFFECTIVE_FROM_DATE,CURRENT_INDICATOR_LF,CREATE_DATE,PODS_USER)
                    VALUES('{OFFLINE_GUID}', 'STRUCTURE',current_timestamp,'Y',current_timestamp,NULLIF('{PODS_USER}',''))
                    RETURNING OFFLINE_ID INTO returnId;

                    INSERT INTO PODS.STRUCTURE(OFFLINE_ID,OFFLINE_GUID,TYPE_CL,NAME,OCCUPANT_COUNT,OCCUPANCY_CATEGORY_GCL,DETERMINATION_DATE,DETERMINATION_METHOD_GCL,SITE_ADDRESS_ID,SITE_ADDRESS_GUID,CONTACT_ID,CONTACT_GUID,SOURCE_GCL)
                    VALUES(returnId,'{OFFLINE_GUID}',NULLIF('{TYPE_CL}',''),NULLIF('{NAME}',''),{OCCUPANT_COUNT},NULLIF('{OCCUPANCY_CATEGORY_GCL}',''),'{DETERMINATION_DATE}',NULLIF('{DETERMINATION_METHOD_GCL}',''),{SITE_ADDRESS_ID},'{SITE_ADDRESS_GUID}',{CONTACT_ID},'{CONTACT_GUID}',NULLIF('{SOURCE_GCL}',''));
					END $$;
                </query>
            </dbCommand>
        </insert>
        <update>
            <dbCommand>
				<param name="CLASS_ID" type="String" direction="Input" default="PODS_STRUCTURE" /> 
				<var name="POLICY" default="POLICY.xml#UPDATE_PODS_SEM"  />
                <param name="OFFLINE_GUID" default="" type="String"/>
                <param name="TYPE_CL" default="UNKNOWN" type="String"/>
                <param name="NAME" default="" type="String"/>
                <param name="OCCUPANT_COUNT" default="NULL" type="Decimal"/>
                <param name="OCCUPANCY_CATEGORY_GCL" default="UNKNOWN" type="String"/>
                <param name="DETERMINATION_DATE" default="" type="DateTime"/>
                <param name="DETERMINATION_METHOD_GCL" default="UNKNOWN" type="String"/>
                <param name="SITE_ADDRESS_ID" default="NULL" type="Decimal"/>
                <param name="SITE_ADDRESS_GUID" default="" type="String"/>
                <param name="CONTACT_ID" default="NULL" type="Decimal"/>
                <param name="CONTACT_GUID" default="" type="String"/>
                <param name="SOURCE_GCL" default="UNKNOWN" type="String"/>
                <param name="ID" type="Int64" direction="Input"/>
                <param name="USER_ID" default="-1" type="Int64"/>
                <query>
                    UPDATE PODS.STRUCTURE
                    SET 
                    OFFLINE_GUID=case when :OFFLINE_GUID is null then OFFLINE_GUID else :OFFLINE_GUID end,
                    TYPE_CL=case when :TYPE_CL is null then TYPE_CL else :TYPE_CL end,
					NAME=case when :NAME is null then NAME else :NAME end,
                    OCCUPANT_COUNT=case when :OCCUPANT_COUNT is null then OCCUPANT_COUNT else :OCCUPANT_COUNT end,
                    OCCUPANCY_CATEGORY_GCL=case when :OCCUPANCY_CATEGORY_GCL is null then OCCUPANCY_CATEGORY_GCL else :OCCUPANCY_CATEGORY_GCL end,
                    DETERMINATION_DATE=case when :DETERMINATION_DATE is null then DETERMINATION_DATE else :DETERMINATION_DATE end,
                    DETERMINATION_METHOD_GCL=case when :DETERMINATION_METHOD_GCL is null then DETERMINATION_METHOD_GCL else :DETERMINATION_METHOD_GCL end,
                    SITE_ADDRESS_ID=case when :SITE_ADDRESS_ID is null then SITE_ADDRESS_ID else :SITE_ADDRESS_ID end,
                    SITE_ADDRESS_GUID=case when :SITE_ADDRESS_GUID is null then SITE_ADDRESS_GUID else :SITE_ADDRESS_GUID end,
                    CONTACT_ID=case when :CONTACT_ID is null then CONTACT_ID else :CONTACT_ID end,
                    CONTACT_GUID=case when :CONTACT_GUID is null then CONTACT_GUID else :CONTACT_GUID end,
                    SOURCE_GCL=case when :SOURCE_GCL is null then SOURCE_GCL else :SOURCE_GCL end
                    WHERE OFFLINE_ID = :ID;
                </query>
            </dbCommand>
        </update>
        <delete>
            <dbCommand>
				<var name="CLASS_ID" type="String" direction="Input" default="PODS_STRUCTURE" /> 
				<var name="POLICY" default="POLICY.xml#DELETE_PODS_SEM"  />
                <var name="ID" type="Int64" direction="Input"/>
                <var name="USER_ID" default="-1" type="Int64"/>
                <query>
					DO $$
                    BEGIN
                    DELETE FROM PODS.STRUCTURE
                    WHERE OFFLINE_ID = {ID};

                    DELETE FROM pods.offline_event
                    WHERE offline_id = {ID};
                    DELETE FROM WEB50.LNK_GATE WHERE LEFT_OBJ_ID = 'PODS_STRUCTURE/'||CAST({ID} AS VARCHAR(30)) OR RIGHT_OBJ_ID = 'PODS_STRUCTURE/'||CAST({ID} AS VARCHAR(30)); 
					END $$;
                </query>
            </dbCommand>
        </delete>
    </data>
    <data table="TANK" schema="PODS" id="PODS_TANK" comment="PODS.TANK">
        <select>
            <dbQuery idField="ID">
                <param name="USER_ID" default="-1" type="Int64"/>
                <var name="FILTER" default="1=1"/>
                <var name="LPU_ACCESS_FILTER" default="SELECT srv_district_id FROM PODS.SRV_DISTRICT_GCL"/>
                <query>
                    SELECT * FROM (SELECT OFFLINE_ID ID, t.* FROM PODS.TANK t) d WHERE {FILTER}
                </query>
            </dbQuery>
        </select>
        <insert>
            <dbCommand>
				<var name="CLASS_ID" type="String" direction="Input" default="PODS_TANK" /> 
				<var name="POLICY" default="POLICY.xml#INSERT_PODS_SEM"  />
                <var name="OFFLINE_GUID" default="" type="String"/>
                <var name="TANK_NUMBER" default="" type="String"/>
                <var name="COMPANY_GCL" default="UNKNOWN" type="String"/>
                <var name="BREAKOUT_TANK_LF" default="" type="String"/>
                <var name="SAP_EQUIPMENT_NUMBER" default="" type="String"/>
                <var name="NOMINAL_CAPACITY" default="NULL" type="Decimal"/>
                <var name="DIAMETER" default="0" type="Decimal"/>
                <var name="SHELL_HEIGHT" default="NULL" type="Decimal"/>
                <var name="MAX_PUMPING_RATE" default="NULL" type="Decimal"/>
                <var name="ROOF_TYPE_CL" default="UNKNOWN" type="String"/>
                <var name="FLOATING_ROOF_DESIGN_CL" default="UNKNOWN" type="String"/>
                <var name="PRIMARY_ROOF_SEAL_TYPE_CL" default="UNKNOWN" type="String"/>
                <var name="SECONDARY_ROOF_SEAL_TYPE_CL" default="UNKNOWN" type="String"/>
                <var name="ROOF_DRAIN_TYPE_CL" default="UNKNOWN" type="String"/>
                <var name="BOTTOM_TYPE_CL" default="UNKNOWN" type="String"/>
                <var name="BOTTOM_DESIGN_CL" default="UNKNOWN" type="String"/>
                <var name="FOUNDATION_TYPE_CL" default="UNKNOWN" type="String"/>
                <var name="NUMBER_OF_TANK_MIXERS" default="NULL" type="Decimal"/>
                <var name="API_STANDARD" default="" type="String"/>
                <var name="INTERNAL_LINING_LF" default="" type="String"/>
                <var name="CONSTRUCTION_YEAR" default="NULL" type="Decimal"/>
                <var name="SOURCE_GCL" default="UNKNOWN" type="String"/>
                <var name="ID" type="Int64" direction="Output" default="SELECT max(OFFLINE_ID) id FROM PODS.OFFLINE_EVENT"/>
                <var name="PODS_USER" type="String"/>
                <var name="USER_ID" default="-1" type="Int64"/>
                <query>
					DO $$
					DECLARE
					returnId integer;
                    BEGIN
                    INSERT INTO PODS.OFFLINE_EVENT (OFFLINE_GUID, FEATURE_ID,EFFECTIVE_FROM_DATE,CURRENT_INDICATOR_LF,CREATE_DATE,PODS_USER)
                    VALUES('{OFFLINE_GUID}', 'TANK',current_timestamp,'Y',current_timestamp,NULLIF('{PODS_USER}',''))
                    RETURNING OFFLINE_ID INTO returnId;

                    INSERT INTO PODS.TANK(OFFLINE_ID,OFFLINE_GUID,TANK_NUMBER,COMPANY_GCL,BREAKOUT_TANK_LF,SAP_EQUIPMENT_NUMBER,NOMINAL_CAPACITY,DIAMETER,SHELL_HEIGHT,MAX_PUMPING_RATE,ROOF_TYPE_CL,FLOATING_ROOF_DESIGN_CL,PRIMARY_ROOF_SEAL_TYPE_CL,SECONDARY_ROOF_SEAL_TYPE_CL,ROOF_DRAIN_TYPE_CL,BOTTOM_TYPE_CL,BOTTOM_DESIGN_CL,FOUNDATION_TYPE_CL,NUMBER_OF_TANK_MIXERS,API_STANDARD,INTERNAL_LINING_LF,CONSTRUCTION_YEAR,SOURCE_GCL)
                    VALUES(returnId,'{OFFLINE_GUID}',NULLIF('{TANK_NUMBER}',''),NULLIF('{COMPANY_GCL}',''),'{BREAKOUT_TANK_LF}',NULLIF('{SAP_EQUIPMENT_NUMBER}',''),{NOMINAL_CAPACITY},{DIAMETER},{SHELL_HEIGHT},{MAX_PUMPING_RATE},NULLIF('{ROOF_TYPE_CL}',''),NULLIF('{FLOATING_ROOF_DESIGN_CL}',''),NULLIF('{PRIMARY_ROOF_SEAL_TYPE_CL}',''),NULLIF('{SECONDARY_ROOF_SEAL_TYPE_CL}',''),NULLIF('{ROOF_DRAIN_TYPE_CL}',''),NULLIF('{BOTTOM_TYPE_CL}',''),NULLIF('{BOTTOM_DESIGN_CL}',''),NULLIF('{FOUNDATION_TYPE_CL}',''),{NUMBER_OF_TANK_MIXERS},NULLIF('{API_STANDARD}',''),'{INTERNAL_LINING_LF}',{CONSTRUCTION_YEAR},NULLIF('{SOURCE_GCL}',''));
					END $$;
                </query>
            </dbCommand>
        </insert>
        <update>
            <dbCommand>
				<param name="CLASS_ID" type="String" direction="Input" default="PODS.TANK" /> 
				<var name="POLICY" default="POLICY.xml#UPDATE_PODS_SEM"  />
                <param name="OFFLINE_GUID" default="" type="String"/>
                <param name="TANK_NUMBER" default="" type="String"/>
                <param name="COMPANY_GCL" default="UNKNOWN" type="String"/>
                <param name="BREAKOUT_TANK_LF" default="" type="String"/>
                <param name="SAP_EQUIPMENT_NUMBER" default="" type="String"/>
                <param name="NOMINAL_CAPACITY" default="NULL" type="Decimal"/>
                <param name="DIAMETER" default="0" type="Decimal"/>
                <param name="SHELL_HEIGHT" default="NULL" type="Decimal"/>
                <param name="MAX_PUMPING_RATE" default="NULL" type="Decimal"/>
                <param name="ROOF_TYPE_CL" default="UNKNOWN" type="String"/>
                <param name="FLOATING_ROOF_DESIGN_CL" default="UNKNOWN" type="String"/>
                <param name="PRIMARY_ROOF_SEAL_TYPE_CL" default="UNKNOWN" type="String"/>
                <param name="SECONDARY_ROOF_SEAL_TYPE_CL" default="UNKNOWN" type="String"/>
                <param name="ROOF_DRAIN_TYPE_CL" default="UNKNOWN" type="String"/>
                <param name="BOTTOM_TYPE_CL" default="UNKNOWN" type="String"/>
                <param name="BOTTOM_DESIGN_CL" default="UNKNOWN" type="String"/>
                <param name="FOUNDATION_TYPE_CL" default="UNKNOWN" type="String"/>
                <param name="NUMBER_OF_TANK_MIXERS" default="NULL" type="Decimal"/>
                <param name="API_STANDARD" default="" type="String"/>
                <param name="INTERNAL_LINING_LF" default="" type="String"/>
                <param name="CONSTRUCTION_YEAR" default="NULL" type="Decimal"/>
                <param name="SOURCE_GCL" default="UNKNOWN" type="String"/>
                <param name="ID" type="Int64" direction="Input"/>
                <param name="USER_ID" default="-1" type="Int64"/>
                <query>
                    UPDATE PODS.TANK
                    SET 
                    OFFLINE_GUID=case when :OFFLINE_GUID is null then OFFLINE_GUID else :OFFLINE_GUID end,
					TANK_NUMBER=case when :TANK_NUMBER is null then TANK_NUMBER else :TANK_NUMBER end,
                    COMPANY_GCL=case when :COMPANY_GCL is null then COMPANY_GCL else :COMPANY_GCL end,
                    BREAKOUT_TANK_LF=case when :BREAKOUT_TANK_LF is null then BREAKOUT_TANK_LF else :BREAKOUT_TANK_LF end,
                    SAP_EQUIPMENT_NUMBER=case when :SAP_EQUIPMENT_NUMBER is null then SAP_EQUIPMENT_NUMBER else :SAP_EQUIPMENT_NUMBER end,
                    NOMINAL_CAPACITY=case when :NOMINAL_CAPACITY is null then NOMINAL_CAPACITY else :NOMINAL_CAPACITY end,
                    DIAMETER=case when :DIAMETER is null then DIAMETER else :DIAMETER end,
                    SHELL_HEIGHT=case when :SHELL_HEIGHT is null then SHELL_HEIGHT else :SHELL_HEIGHT end,
                    MAX_PUMPING_RATE=case when :MAX_PUMPING_RATE is null then MAX_PUMPING_RATE else :MAX_PUMPING_RATE end,
                    ROOF_TYPE_CL=case when :ROOF_TYPE_CL is null then ROOF_TYPE_CL else :ROOF_TYPE_CL end,
                    FLOATING_ROOF_DESIGN_CL=case when :FLOATING_ROOF_DESIGN_CL is null then FLOATING_ROOF_DESIGN_CL else :FLOATING_ROOF_DESIGN_CL end,
                    PRIMARY_ROOF_SEAL_TYPE_CL=case when :PRIMARY_ROOF_SEAL_TYPE_CL is null then PRIMARY_ROOF_SEAL_TYPE_CL else :PRIMARY_ROOF_SEAL_TYPE_CL end,
                    SECONDARY_ROOF_SEAL_TYPE_CL=case when :SECONDARY_ROOF_SEAL_TYPE_CL is null then SECONDARY_ROOF_SEAL_TYPE_CL else :SECONDARY_ROOF_SEAL_TYPE_CL end,
                    ROOF_DRAIN_TYPE_CL=case when :ROOF_DRAIN_TYPE_CL is null then ROOF_DRAIN_TYPE_CL else :ROOF_DRAIN_TYPE_CL end,
                    BOTTOM_TYPE_CL=case when :BOTTOM_TYPE_CL is null then BOTTOM_TYPE_CL else :BOTTOM_TYPE_CL end,
                    BOTTOM_DESIGN_CL=case when :BOTTOM_DESIGN_CL is null then BOTTOM_DESIGN_CL else :BOTTOM_DESIGN_CL end,
                    FOUNDATION_TYPE_CL=case when :FOUNDATION_TYPE_CL is null then FOUNDATION_TYPE_CL else :FOUNDATION_TYPE_CL end,
                    NUMBER_OF_TANK_MIXERS=case when :NUMBER_OF_TANK_MIXERS is null then NUMBER_OF_TANK_MIXERS else :NUMBER_OF_TANK_MIXERS end,
                    API_STANDARD=case when :API_STANDARD is null then API_STANDARD else :API_STANDARD end,
                    INTERNAL_LINING_LF=case when :INTERNAL_LINING_LF is null then INTERNAL_LINING_LF else :INTERNAL_LINING_LF end,
                    CONSTRUCTION_YEAR=case when :CONSTRUCTION_YEAR is null then CONSTRUCTION_YEAR else :CONSTRUCTION_YEAR end,
                    SOURCE_GCL=case when :SOURCE_GCL is null then SOURCE_GCL else :SOURCE_GCL end
                    WHERE OFFLINE_ID = :ID;
                </query>
            </dbCommand>
        </update>
        <delete>
            <dbCommand>
				<var name="CLASS_ID" type="String" direction="Input" default="PODS.TANK" /> 
				<var name="POLICY" default="POLICY.xml#DELETE_PODS_SEM"  />
                <var name="ID" type="Int64" direction="Input"/>
                <var name="USER_ID" default="-1" type="Int64"/>
                <query>
					DO $$
                    BEGIN

                    DELETE
                    FROM PODS.TANK_OPERATION
                    WHERE OFFLINE_ID = {ID};

                    DELETE
                    FROM PODS.TANK_COURSE
                    WHERE OFFLINE_ID = {ID};

                    DELETE
                    FROM PODS.TANK_CONSTRUCTION
                    WHERE OFFLINE_ID = {ID};

                    UPDATE PODS.EVENT_RANGE
                    SET CURRENT_INDICATOR_LF='N'
                    WHERE EVENT_ID = (SELECT EVENT_ID
                    FROM PODS.PI_TANK
                    WHERE OFFLINE_ID = {ID});

                    DELETE
                    FROM WEB50.LNK_GATE
                    WHERE LEFT_OBJ_ID IN (SELECT 'PODS_PI_TANK/'||CAST(EVENT_ID  AS VARCHAR(30))
                    FROM PODS.PI_TANK
                    WHERE OFFLINE_ID = {ID})
                    OR RIGHT_OBJ_ID IN (SELECT 'PODS_PI_TANK/'||CAST(EVENT_ID  AS VARCHAR(30))
                    FROM PODS.PI_TANK
                    WHERE OFFLINE_ID = {ID});

                    DELETE
                    FROM PODS.PI_TANK
                    WHERE OFFLINE_ID = {ID};

                    DELETE
                    FROM PODS.TANK
                    WHERE OFFLINE_ID = {ID};

                    DELETE
                    FROM PODS.OFFLINE_EVENT
                    WHERE OFFLINE_ID = {ID};

                    DELETE
                    FROM WEB50.LNK_GATE
                    WHERE LEFT_OBJ_ID = 'PODS_OFFLINE_EVENT/'||CAST({ID} AS VARCHAR(30))
                    OR RIGHT_OBJ_ID = 'PODS_OFFLINE_EVENT/'||CAST({ID} AS VARCHAR(30));

                    DELETE
                    FROM WEB50.LNK_GATE
                    WHERE LEFT_OBJ_ID = 'PODS_TANK/'||CAST({ID} AS VARCHAR(30))
                    OR RIGHT_OBJ_ID = 'PODS_TANK/'||CAST({ID} AS VARCHAR(30));

                    DELETE
                    FROM WEB50.LNK_GATE
                    WHERE LEFT_OBJ_ID = 'PODS_TANK_CONSTRUCTION/'||CAST({ID} AS VARCHAR(30))
                    OR RIGHT_OBJ_ID = 'PODS_TANK_CONSTRUCTION/'||CAST({ID} AS VARCHAR(30));

                    DELETE
                    FROM WEB50.LNK_GATE
                    WHERE LEFT_OBJ_ID = 'PODS_TANK_COURSE/'||CAST({ID} AS VARCHAR(30))
                    OR RIGHT_OBJ_ID = 'PODS_TANK_COURSE/'||CAST({ID} AS VARCHAR(30));

                    DELETE
                    FROM WEB50.LNK_GATE
                    WHERE LEFT_OBJ_ID = 'PODS_TANK_OPERATION/'||CAST({ID} AS VARCHAR(30))
                    OR RIGHT_OBJ_ID = 'PODS_TANK_OPERATION/'||CAST({ID} AS VARCHAR(30));

                    END $$;
                </query>
            </dbCommand>
        </delete>
    </data>
    <data table="UMBILICAL" schema="PODS" id="PODS_UMBILICAL" comment="PODS.UMBILICAL">
        <select>
            <dbQuery idField="ID">
                <param name="USER_ID" default="-1" type="Int64"/>
                <var name="FILTER" default="1=1"/>
                <var name="LPU_ACCESS_FILTER" default="SELECT srv_district_id FROM PODS.SRV_DISTRICT_GCL"/>
                <query>
                    SELECT * FROM (SELECT OFFLINE_ID ID, t.* FROM PODS.UMBILICAL t) d WHERE {FILTER}
                </query>
            </dbQuery>
        </select>
        <insert>
            <dbCommand>
				<var name="CLASS_ID" type="String" direction="Input" default="PODS_UMBILICAL" /> 
				<var name="POLICY" default="POLICY.xml#INSERT_PODS_SEM"  />
                <var name="OFFLINE_GUID" default="" type="String"/>
                <var name="FUNCTION_CL" default="UNKNOWN" type="String"/>
                <var name="TYPE_CL" default="UNKNOWN" type="String"/>
                <var name="LENGTH" default="NULL" type="Decimal"/>
                <var name="CONNECTED_FROM_LOCATION" default="" type="String"/>
                <var name="CONNECTED_TO_LOCATION" default="" type="String"/>
                <var name="MATERIAL_CL" default="UNKNOWN" type="String"/>
                <var name="NOMINAL_DIAMETER_GCL" default="0" type="Decimal"/>
                <var name="DESCRIPTION" default="" type="String"/>
                <var name="SOURCE_GCL" default="UNKNOWN" type="String"/>
                <var name="COMMENTS" default="" type="String"/>
                <var name="ID" type="Int64" direction="Output" default="SELECT max(OFFLINE_ID) id FROM PODS.OFFLINE_EVENT"/>
                <var name="PODS_USER" type="String"/>
                <var name="USER_ID" default="-1" type="Int64"/>
                <query>
					DO $$
					DECLARE
					returnId integer;
                    BEGIN
                    INSERT INTO PODS.OFFLINE_EVENT (OFFLINE_GUID, FEATURE_ID,EFFECTIVE_FROM_DATE,CURRENT_INDICATOR_LF,CREATE_DATE,PODS_USER)
                    VALUES('{OFFLINE_GUID}', 'UMBILICAL',current_timestamp,'Y',current_timestamp,NULLIF('{PODS_USER}',''))
                    RETURNING OFFLINE_ID INTO returnId;

                    INSERT INTO PODS.UMBILICAL(OFFLINE_ID,OFFLINE_GUID,FUNCTION_CL,TYPE_CL,LENGTH,CONNECTED_FROM_LOCATION,CONNECTED_TO_LOCATION,MATERIAL_CL,NOMINAL_DIAMETER_GCL,DESCRIPTION,SOURCE_GCL,COMMENTS)
                    VALUES(returnId,'{OFFLINE_GUID}',NULLIF('{FUNCTION_CL}',''),NULLIF('{TYPE_CL}',''),{LENGTH},NULLIF('{CONNECTED_FROM_LOCATION}',''),NULLIF('{CONNECTED_TO_LOCATION}',''),NULLIF('{MATERIAL_CL}',''),{NOMINAL_DIAMETER_GCL},NULLIF('{DESCRIPTION}',''),NULLIF('{SOURCE_GCL}',''),NULLIF('{COMMENTS}',''));
					END $$;
                </query>
            </dbCommand>
        </insert>
        <update>
            <dbCommand>
				<param name="CLASS_ID" type="String" direction="Input" default="PODS_UMBILICAL" /> 
				<var name="POLICY" default="POLICY.xml#UPDATE_PODS_SEM"  />
                <param name="OFFLINE_GUID" default="" type="String"/>
                <param name="FUNCTION_CL" default="UNKNOWN" type="String"/>
                <param name="TYPE_CL" default="UNKNOWN" type="String"/>
                <param name="LENGTH" default="NULL" type="Decimal"/>
                <param name="CONNECTED_FROM_LOCATION" default="" type="String"/>
                <param name="CONNECTED_TO_LOCATION" default="" type="String"/>
                <param name="MATERIAL_CL" default="UNKNOWN" type="String"/>
                <param name="NOMINAL_DIAMETER_GCL" default="0" type="Decimal"/>
                <param name="DESCRIPTION" default="" type="String"/>
                <param name="SOURCE_GCL" default="UNKNOWN" type="String"/>
                <param name="COMMENTS" default="" type="String"/>
                <param name="ID" type="Int64" direction="Input"/>
                <param name="USER_ID" default="-1" type="Int64"/>
                <query>
                    UPDATE PODS.UMBILICAL
                    SET 
                    OFFLINE_GUID=case when :OFFLINE_GUID is null then OFFLINE_GUID else :OFFLINE_GUID end,
                    FUNCTION_CL=case when :FUNCTION_CL is null then FUNCTION_CL else :FUNCTION_CL end,
                    TYPE_CL=case when :TYPE_CL is null then TYPE_CL else :TYPE_CL end,
                    LENGTH=case when :LENGTH is null then LENGTH else :LENGTH end,
                    CONNECTED_FROM_LOCATION=case when :CONNECTED_FROM_LOCATION is null then CONNECTED_FROM_LOCATION else :CONNECTED_FROM_LOCATION end,
                    CONNECTED_TO_LOCATION=case when :CONNECTED_TO_LOCATION is null then CONNECTED_TO_LOCATION else :CONNECTED_TO_LOCATION end,
					MATERIAL_CL=case when :MATERIAL_CL is null then MATERIAL_CL else :MATERIAL_CL end,
                    NOMINAL_DIAMETER_GCL=case when :NOMINAL_DIAMETER_GCL is null then NOMINAL_DIAMETER_GCL else :NOMINAL_DIAMETER_GCL end,
                    DESCRIPTION=case when :DESCRIPTION is null then DESCRIPTION else :DESCRIPTION end,
                    SOURCE_GCL=case when :SOURCE_GCL is null then SOURCE_GCL else :SOURCE_GCL end,
                    COMMENTS=case when :COMMENTS is null then COMMENTS else :COMMENTS end
                    WHERE OFFLINE_ID = :ID;
                </query>
            </dbCommand>
        </update>
        <delete>
            <dbCommand>
				<var name="CLASS_ID" type="String" direction="Input" default="PODS_UMBILICAL" /> 
				<var name="POLICY" default="POLICY.xml#DELETE_PODS_SEM"  />
                <var name="ID" type="Int64" direction="Input"/>
                <var name="USER_ID" default="-1" type="Int64"/>
                <query>
					DO $$
                    BEGIN
                    DELETE FROM PODS.UMBILICAL
                    WHERE OFFLINE_ID = {ID};

                    DELETE FROM pods.offline_event
                    WHERE offline_id = {ID};
                    DELETE FROM WEB50.LNK_GATE WHERE LEFT_OBJ_ID = 'PODS_UMBILICAL/'||CAST({ID} AS VARCHAR(30)) OR RIGHT_OBJ_ID = 'PODS_UMBILICAL/'||CAST({ID} AS VARCHAR(30)); 
					END $$;
                </query>
            </dbCommand>
        </delete>
    </data>
    <data table="COMMENTS" schema="PODS" id="PODS_COMMENTS" comment="PODS.COMMENTS">
        <select>
            <dbQuery idField="ID">
                <param name="USER_ID" default="-1" type="Int64"/>
                <var name="FILTER" default="1=1"/>
                <var name="LPU_ACCESS_FILTER" default="SELECT srv_district_id FROM PODS.SRV_DISTRICT_GCL"/>
                <query>

                    SELECT * FROM (SELECT t.* FROM PODS.COMMENTS t) d WHERE {FILTER}
                </query>
            </dbQuery>
        </select>
        <insert>
            <dbCommand>
				<var name="CLASS_ID" type="String" direction="Input" default="PODS_COMMENTS" /> 
				<var name="POLICY" default="POLICY.xml#INSERT_PODS_SEM"  />
                <var name="COMMENTS_GUID" default="" type="String"/>
                <var name="TABLE_ID" default="" type="String"/>
                <var name="ID" default="" type="String"/>
                <var name="GUID" default="" type="String"/>
                <var name="COMMENTS" default="" type="String"/>
                <var name="COMMENT_DATE" default="" type="DateTime"/>
                <var name="COMMENT_BY" default="" type="String"/>
                <var name="SOURCE_GCL" default="UNKNOWN" type="String"/>
                <var name="ORIGINAL_COMMENTS_ID" default="NULL" type="Decimal"/>
                <var name="ORIGINAL_COMMENTS_GUID" default="" type="String"/>
                <var name="EFFECTIVE_TO_DATE" default="" type="DateTime"/>
                <var name="EFFECTIVE_FROM_DATE" default="" type="DateTime"/>
                <var name="CURRENT_INDICATOR_LF" default="Y" type="String"/>
                <var name="PODS_USER" type="String"/>
                <var name="CREATE_DATE" default="" type="DateTime"/>
                <var name="PREVIOUS_COMMENTS_ID" default="NULL" type="Decimal"/>
                <var name="PREVIOUS_COMMENTS_GUID" default="" type="String"/>
                <var name="ID" direction="Output" type="Int64"/>
                <var name="USER_ID" default="-1" type="Int64"/>
                <query>
					DO $$
					DECLARE
					returnId integer;
                    BEGIN
                    INSERT INTO PODS.COMMENTS(COMMENTS_GUID,TABLE_ID,ID,GUID,COMMENTS,COMMENT_DATE,COMMENT_BY,SOURCE_GCL,ORIGINAL_COMMENTS_ID,ORIGINAL_COMMENTS_GUID,EFFECTIVE_TO_DATE,EFFECTIVE_FROM_DATE,CURRENT_INDICATOR_LF,PODS_USER,CREATE_DATE,PREVIOUS_COMMENTS_ID,PREVIOUS_COMMENTS_GUID)
                    VALUES('{COMMENTS_GUID}',NULLIF('{TABLE_ID}',''),returnId,'{GUID}',NULLIF('{COMMENTS}',''),'{COMMENT_DATE}',NULLIF('{COMMENT_BY}',''),NULLIF('{SOURCE_GCL}',''),{ORIGINAL_COMMENTS_ID},'{ORIGINAL_COMMENTS_GUID}','{EFFECTIVE_TO_DATE}','{EFFECTIVE_FROM_DATE}','{CURRENT_INDICATOR_LF}',NULLIF('{PODS_USER}',''),'{CREATE_DATE}',{PREVIOUS_COMMENTS_ID},'{PREVIOUS_COMMENTS_GUID}')
                    RETURNING COMMENTS_ID INTO returnId;
					END $$;
                </query>
            </dbCommand>
        </insert>
        <update>
            <dbCommand>
				<param name="CLASS_ID" type="String" direction="Input" default="PODS_COMMENTS" /> 
				<var name="POLICY" default="POLICY.xml#UPDATE_PODS_SEM"  />
                <param name="COMMENTS_GUID" default="" type="String"/>
                <param name="TABLE_ID" default="" type="String"/>
                <param name="ID" default="" type="String"/>
                <param name="GUID" default="" type="String"/>
                <param name="COMMENTS" default="" type="String"/>
                <param name="COMMENT_DATE" default="" type="DateTime"/>
                <param name="COMMENT_BY" default="" type="String"/>
                <param name="SOURCE_GCL" default="UNKNOWN" type="String"/>
                <param name="ORIGINAL_COMMENTS_ID" default="NULL" type="Decimal"/>
                <param name="ORIGINAL_COMMENTS_GUID" default="" type="String"/>
                <param name="EFFECTIVE_TO_DATE" default="" type="DateTime"/>
                <param name="EFFECTIVE_FROM_DATE" default="" type="DateTime"/>
                <param name="CURRENT_INDICATOR_LF" default="Y" type="String"/>
                <param name="PODS_USER" type="String"/>
                <param name="CREATE_DATE" default="" type="DateTime"/>
                <param name="PREVIOUS_COMMENTS_ID" default="NULL" type="Decimal"/>
                <param name="PREVIOUS_COMMENTS_GUID" default="" type="String"/>
                <param name="ID" type="Int64"/>
                <param name="USER_ID" default="-1" type="Int64"/>
                <query>
                    UPDATE PODS.COMMENTS
                    SET 
                    COMMENTS_GUID=case when :COMMENTS_GUID is null then COMMENTS_GUID else :COMMENTS_GUID end,
                    TABLE_ID=case when :TABLE_ID is null then TABLE_ID else :TABLE_ID end,
					ID={ID},
					GUID=case when :GUID is null then GUID else :GUID end,
                    COMMENTS=case when :COMMENTS is null then COMMENTS else :COMMENTS end,
                    COMMENT_DATE=case when :COMMENT_DATE is null then COMMENT_DATE else :COMMENT_DATE end,
                    COMMENT_BY=case when :COMMENT_BY is null then COMMENT_BY else :COMMENT_BY end,
                    SOURCE_GCL=case when :SOURCE_GCL is null then SOURCE_GCL else :SOURCE_GCL end,
                    ORIGINAL_COMMENTS_ID=case when :ORIGINAL_COMMENTS_ID is null then ORIGINAL_COMMENTS_ID else :ORIGINAL_COMMENTS_ID end,
                    ORIGINAL_COMMENTS_GUID=case when :ORIGINAL_COMMENTS_GUID is null then ORIGINAL_COMMENTS_GUID else :ORIGINAL_COMMENTS_GUID end,
                    EFFECTIVE_TO_DATE=case when :EFFECTIVE_TO_DATE is null then EFFECTIVE_TO_DATE else :EFFECTIVE_TO_DATE end,
                    EFFECTIVE_FROM_DATE=case when :EFFECTIVE_FROM_DATE is null then EFFECTIVE_FROM_DATE else :EFFECTIVE_FROM_DATE end,
                    CURRENT_INDICATOR_LF=case when :CURRENT_INDICATOR_LF is null then CURRENT_INDICATOR_LF else :CURRENT_INDICATOR_LF end,
                    PODS_USER=case when :PODS_USER is null then PODS_USER else :PODS_USER end,
                    CREATE_DATE=case when :CREATE_DATE is null then CREATE_DATE else :CREATE_DATE end,
                    PREVIOUS_COMMENTS_ID=case when :PREVIOUS_COMMENTS_ID is null then PREVIOUS_COMMENTS_ID else :PREVIOUS_COMMENTS_ID end,
                    PREVIOUS_COMMENTS_GUID=case when :PREVIOUS_COMMENTS_GUID is null then PREVIOUS_COMMENTS_GUID else :PREVIOUS_COMMENTS_GUID end
                    WHERE COMMENTS_ID = :ID;
                </query>
            </dbCommand>
        </update>
        <delete>
            <dbCommand>
				<param name="CLASS_ID" type="String" direction="Input" default="PODS_COMMENTS" /> 
				<var name="POLICY" default="POLICY.xml#DELETE_PODS_SEM"  />
                <param name="ID" type="Int64"/>
                <param name="USER_ID" default="-1" type="Int64"/>
                <query>
					DO $$
                    BEGIN
                    DELETE FROM PODS.COMMENTS
                    WHERE COMMENTS_ID = {ID};
                    DELETE FROM WEB50.LNK_GATE WHERE LEFT_OBJ_ID = 'PODS_COMMENTS/'||CAST({ID} AS VARCHAR(30)) OR RIGHT_OBJ_ID = 'PODS_COMMENTS/'||CAST({ID} AS VARCHAR(30));
					END $$;					
                </query>
            </dbCommand>
        </delete>
    </data>
    <data table="COUPON" schema="PODS" id="PODS_COUPON" comment="PODS.COUPON">
        <select>
            <dbQuery idField="ID">
                <param name="USER_ID" default="-1" type="Int64"/>
                <var name="FILTER" default="1=1"/>
                <var name="LPU_ACCESS_FILTER" default="SELECT srv_district_id FROM PODS.SRV_DISTRICT_GCL"/>
                <query>

                    SELECT * FROM (SELECT COUPON_ID ID, t.* FROM PODS.COUPON t) d WHERE {FILTER}
                </query>
            </dbQuery>
        </select>
        <insert>
            <dbCommand>
				<var name="CLASS_ID" type="String" direction="Input" default="PODS_COUPON" /> 
				<var name="POLICY" default="POLICY.xml#INSERT_PODS_SEM"  />
                <var name="COUPON_SITE_EVENT_ID" default="NULL" type="Decimal"/>
                <var name="COUPON_SITE_EVENT_GUID" default="" type="String"/>
                <var name="METAL_DENSITY" default="NULL" type="Decimal"/>
                <var name="TYPE_CL" default="UNKNOWN" type="String"/>
                <var name="MATERIAL_CL" default="UNKNOWN" type="String"/>
                <var name="SURFACE_AREA" default="NULL" type="Decimal"/>
                <var name="SURFACE_FINISH_CL" default="UNKNOWN" type="String"/>
                <var name="MASS_AT_INSTALL" default="NULL" type="Decimal"/>
                <var name="DEPTH_OF_COVER" default="NULL" type="Decimal"/>
                <var name="DESCRIPTION" default="" type="String"/>
                <var name="DATE_INSTALLED" default="" type="DateTime"/>
                <var name="MANUFACTURER_CL" default="UNKNOWN" type="String"/>
                <var name="COMMENTS" default="" type="String"/>
                <var name="SOURCE_GCL" default="UNKNOWN" type="String"/>
                <var name="ID" direction="Output" type="Int64"/>
                <var name="USER_ID" default="-1" type="Int64"/>
                <query>
					DO $$
					DECLARE
					returnId integer;
                    BEGIN
                    INSERT INTO PODS.COUPON(COUPON_SITE_EVENT_ID,COUPON_SITE_EVENT_GUID,METAL_DENSITY,TYPE_CL,MATERIAL_CL,SURFACE_AREA,SURFACE_FINISH_CL,MASS_AT_INSTALL,DEPTH_OF_COVER,DESCRIPTION,DATE_INSTALLED,MANUFACTURER_CL,COMMENTS,SOURCE_GCL)
                    VALUES({COUPON_SITE_EVENT_ID},'{COUPON_SITE_EVENT_GUID}',{METAL_DENSITY},NULLIF('{TYPE_CL}',''),NULLIF('{MATERIAL_CL}',''),{SURFACE_AREA},NULLIF('{SURFACE_FINISH_CL}',''),{MASS_AT_INSTALL},{DEPTH_OF_COVER},NULLIF('{DESCRIPTION}',''),'{DATE_INSTALLED}',NULLIF('{MANUFACTURER_CL}',''),NULLIF('{COMMENTS}',''),NULLIF('{SOURCE_GCL}',''))
                    RETURNING COUPON_ID INTO returnId;
					END $$;
                </query>
            </dbCommand>
        </insert>
        <update>
            <dbCommand>
				<param name="CLASS_ID" type="String" direction="Input" default="PODS_COUPON" /> 
				<var name="POLICY" default="POLICY.xml#UPDATE_PODS_SEM"  />
                <param name="COUPON_SITE_EVENT_ID" default="NULL" type="Decimal"/>
                <param name="COUPON_SITE_EVENT_GUID" default="" type="String"/>
                <param name="METAL_DENSITY" default="NULL" type="Decimal"/>
                <param name="TYPE_CL" default="UNKNOWN" type="String"/>
                <param name="MATERIAL_CL" default="UNKNOWN" type="String"/>
                <param name="SURFACE_AREA" default="NULL" type="Decimal"/>
                <param name="SURFACE_FINISH_CL" default="UNKNOWN" type="String"/>
                <param name="MASS_AT_INSTALL" default="NULL" type="Decimal"/>
                <param name="DEPTH_OF_COVER" default="NULL" type="Decimal"/>
                <param name="DESCRIPTION" default="" type="String"/>
                <param name="DATE_INSTALLED" default="" type="DateTime"/>
                <param name="MANUFACTURER_CL" default="UNKNOWN" type="String"/>
                <param name="COMMENTS" default="" type="String"/>
                <param name="SOURCE_GCL" default="UNKNOWN" type="String"/>
                <param name="ID" type="Int64"/>
                <param name="USER_ID" default="-1" type="Int64"/>
                <query>
                    UPDATE PODS.COUPON
                    SET 
                    COUPON_SITE_EVENT_ID=case when :COUPON_SITE_EVENT_ID is null then COUPON_SITE_EVENT_ID else :COUPON_SITE_EVENT_ID end,
                    COUPON_SITE_EVENT_GUID=case when :COUPON_SITE_EVENT_GUID is null then COUPON_SITE_EVENT_GUID else :COUPON_SITE_EVENT_GUID end,
                    METAL_DENSITY=case when :METAL_DENSITY is null then METAL_DENSITY else :METAL_DENSITY end,
                    TYPE_CL=case when :TYPE_CL is null then TYPE_CL else :TYPE_CL end,
					MATERIAL_CL=case when :MATERIAL_CL is null then MATERIAL_CL else :MATERIAL_CL end,
                    SURFACE_AREA=case when :SURFACE_AREA is null then SURFACE_AREA else :SURFACE_AREA end,
                    SURFACE_FINISH_CL=case when :SURFACE_FINISH_CL is null then SURFACE_FINISH_CL else :SURFACE_FINISH_CL end,
                    MASS_AT_INSTALL=case when :MASS_AT_INSTALL is null then MASS_AT_INSTALL else :MASS_AT_INSTALL end,
                    DEPTH_OF_COVER=case when :DEPTH_OF_COVER is null then DEPTH_OF_COVER else :DEPTH_OF_COVER end,
                    DESCRIPTION=case when :DESCRIPTION is null then DESCRIPTION else :DESCRIPTION end,
                    DATE_INSTALLED=case when :DATE_INSTALLED is null then DATE_INSTALLED else :DATE_INSTALLED end,
                    MANUFACTURER_CL=case when :MANUFACTURER_CL is null then MANUFACTURER_CL else :MANUFACTURER_CL end,
                    COMMENTS=case when :COMMENTS is null then COMMENTS else :COMMENTS end,
                    SOURCE_GCL=case when :SOURCE_GCL is null then SOURCE_GCL else :SOURCE_GCL end
                    WHERE COUPON_ID = :ID;
                </query>
            </dbCommand>
        </update>
        <delete>
            <dbCommand>
				<var name="CLASS_ID" type="String" direction="Input" default="PODS_COUPON" /> 
				<var name="POLICY" default="POLICY.xml#DELETE_PODS_SEM"  />
                <var name="ID" type="Int64"/>
                <var name="USER_ID" default="-1" type="Int64"/>
                <query>
					DO $$
                    BEGIN
                    UPDATE PODS.PI_IC_COUPON_READING
                    SET REF_COUPON_ID = NULL
                    WHERE REF_COUPON_ID = {ID};

                    DELETE
                    FROM PODS.COUPON
                    WHERE COUPON_ID = {ID};

                    DELETE
                    FROM WEB50.LNK_GATE
                    WHERE LEFT_OBJ_ID = 'PODS_COUPON/'||'{ID}'
                    OR RIGHT_OBJ_ID = 'PODS_COUPON/'||'{ID}';
                    END $$;
                </query>
            </dbCommand>
        </delete>
    </data>
    <data table="ILI_INSPECTION" schema="PODS" id="PODS_ILI_INSPECTION" comment="PODS.ILI_INSPECTION">
        <select>
            <dbQuery idField="ID">
                <param name="USER_ID" default="-1" type="Int64"/>
                <var name="FILTER" default="1=1"/>
                <var name="LPU_ACCESS_FILTER" default="SELECT srv_district_id FROM PODS.SRV_DISTRICT_GCL"/>
                <query>
                    SELECT *
                    FROM (SELECT t.ili_inspection_id ID, t.*,c.sto_292_2007_damage_mechanical,
                    c.sto_292_2007_value_weld, c.sto_292_2007_damage_crack,
                    c.sto_292_2007_damage_corrosion, c.sto_292_2007_damage_dent,
                    c.sto_292_2007_value_pipe, c.sto_292_2007_damage_duty_var,
                    c.sto_292_2007_bad_pipe_count, c.sto_292_2007_value_condition,
                    c.sto_401_2003_op_rep_pipe_count, c.sto_401_2003_time_limit_expl,
                    c.sto_401_2003_mean_time_fail, c.priority_cond,
                    c.priority_time_exp, c.priority_probab, c.priority_time_fai,
                    c.priority_summary, c.sto_095_2007_next_insp_scc,
                    c.sto_095_2007_next_insp, c.sto_095_2007_next_comp_insp
                    FROM pods.ili_inspection t LEFT JOIN pods.sto_ili_inspection_calc c
                    ON t.ili_inspection_id = c.ili_inspection_id
                    ) d WHERE {FILTER}
                </query>
            </dbQuery>
        </select>
        <insert>
            <dbCommand>
				<var name="CLASS_ID" type="String" direction="Input" default="PODS_ILI_INSPECTION" /> 
				<var name="POLICY" default="POLICY.xml#INSERT_PODS_SEM"  />
                <var name="ILI_INSPECTION_GUID" default="" type="String"/>
                <var name="BEGIN_DATE" default="" type="DateTime"/>
                <var name="END_DATE" default="" type="DateTime"/>
                <var name="TOOL_TYPE_CL" default="UNKNOWN" type="String"/>
                <var name="TOOL_VENDOR_CL" default="UNKNOWN" type="String"/>
                <var name="SAMPLING_FREQUENCY" default="" type="String"/>
                <var name="RESOLUTION" default="" type="String"/>
                <var name="MODEL" default="" type="String"/>
                <var name="SENSOR_GCL" default="UNKNOWN" type="String"/>
                <var name="SENSOR_SPACING_MIN" default="NULL" type="Decimal"/>
                <var name="SENSOR_SPACING_MAX" default="NULL" type="Decimal"/>
                <var name="MAX_TEMP" default="NULL" type="Decimal"/>
                <var name="MIN_TEMP" default="NULL" type="Decimal"/>
                <var name="AVG_TEMP" default="NULL" type="Decimal"/>
                <var name="MAX_VELOCITY" default="NULL" type="Decimal"/>
                <var name="MIN_VELOCITY" default="NULL" type="Decimal"/>
                <var name="AVG_VELOCITY" default="NULL" type="Decimal"/>
                <var name="RATED_MAX_VELOCITY" default="NULL" type="Decimal"/>
                <var name="RATED_MAX_WT" default="NULL" type="Decimal"/>
                <var name="START_ODOMETER" default="NULL" type="Decimal"/>
                <var name="END_ODOMETER" default="NULL" type="Decimal"/>
                <var name="CLUSTER_RULE_CL" default="UNKNOWN" type="String"/>
                <var name="COMMENTS" default="" type="String"/>
                <var name="SOURCE_GCL" default="UNKNOWN" type="String"/>
                <var name="ID" direction="Output" type="Int64"/>
                <var name="USER_ID" default="-1" type="Int64"/>
                <query>
					DO $$
					DECLARE
					returnId integer;
                    BEGIN
                    INSERT INTO PODS.ILI_INSPECTION(ILI_INSPECTION_GUID,BEGIN_DATE,END_DATE,TOOL_TYPE_CL,TOOL_VENDOR_CL,SAMPLING_FREQUENCY,RESOLUTION,MODEL,SENSOR_GCL,SENSOR_SPACING_MIN,SENSOR_SPACING_MAX,MAX_TEMP,MIN_TEMP,AVG_TEMP,MAX_VELOCITY,MIN_VELOCITY,AVG_VELOCITY,RATED_MAX_VELOCITY,RATED_MAX_WT,START_ODOMETER,END_ODOMETER,CLUSTER_RULE_CL,COMMENTS,SOURCE_GCL)
                    VALUES('{ILI_INSPECTION_GUID}','{BEGIN_DATE}','{END_DATE}',NULLIF('{TOOL_TYPE_CL}',''),NULLIF('{TOOL_VENDOR_CL}',''),NULLIF('{SAMPLING_FREQUENCY}',''),NULLIF('{RESOLUTION}',''),NULLIF('{MODEL}',''),NULLIF('{SENSOR_GCL}',''),{SENSOR_SPACING_MIN},{SENSOR_SPACING_MAX},{MAX_TEMP},{MIN_TEMP},{AVG_TEMP},{MAX_VELOCITY},{MIN_VELOCITY},{AVG_VELOCITY},{RATED_MAX_VELOCITY},{RATED_MAX_WT},{START_ODOMETER},{END_ODOMETER},NULLIF('{CLUSTER_RULE_CL}',''),NULLIF('{COMMENTS}',''),NULLIF('{SOURCE_GCL}',''))
                    RETURNING ILI_INSPECTION_ID INTO returnId;
					END $$;
                </query>
            </dbCommand>
        </insert>
        <update>
            <dbCommand>
				<param name="CLASS_ID" type="String" direction="Input" default="PODS_ILI_INSPECTION" /> 
				<var name="POLICY" default="POLICY.xml#UPDATE_PODS_SEM"  />
                <param name="ILI_INSPECTION_GUID" default="" type="String"/>
                <param name="BEGIN_DATE" default="" type="DateTime"/>
                <param name="END_DATE" default="" type="DateTime"/>
                <param name="TOOL_TYPE_CL" default="UNKNOWN" type="String"/>
                <param name="TOOL_VENDOR_CL" default="UNKNOWN" type="String"/>
                <param name="SAMPLING_FREQUENCY" default="" type="String"/>
                <param name="RESOLUTION" default="" type="String"/>
                <param name="MODEL" default="" type="String"/>
                <param name="SENSOR_GCL" default="UNKNOWN" type="String"/>
                <param name="SENSOR_SPACING_MIN" default="NULL" type="Decimal"/>
                <param name="SENSOR_SPACING_MAX" default="NULL" type="Decimal"/>
                <param name="MAX_TEMP" default="NULL" type="Decimal"/>
                <param name="MIN_TEMP" default="NULL" type="Decimal"/>
                <param name="AVG_TEMP" default="NULL" type="Decimal"/>
                <param name="MAX_VELOCITY" default="NULL" type="Decimal"/>
                <param name="MIN_VELOCITY" default="NULL" type="Decimal"/>
                <param name="AVG_VELOCITY" default="NULL" type="Decimal"/>
                <param name="RATED_MAX_VELOCITY" default="NULL" type="Decimal"/>
                <param name="RATED_MAX_WT" default="NULL" type="Decimal"/>
                <param name="START_ODOMETER" default="NULL" type="Decimal"/>
                <param name="END_ODOMETER" default="NULL" type="Decimal"/>
                <param name="CLUSTER_RULE_CL" default="UNKNOWN" type="String"/>
                <param name="COMMENTS" default="" type="String"/>
                <param name="SOURCE_GCL" default="UNKNOWN" type="String"/>
                <param name="ID" type="Int64"/>
                <param name="USER_ID" default="-1" type="Int64"/>
                <query>
                    UPDATE PODS.ILI_INSPECTION
                    SET 
                    ILI_INSPECTION_GUID=case when :ILI_INSPECTION_GUID is null then ILI_INSPECTION_GUID else :ILI_INSPECTION_GUID end,
                    BEGIN_DATE=case when :BEGIN_DATE is null then BEGIN_DATE else :BEGIN_DATE end,
                    END_DATE=case when :END_DATE is null then END_DATE else :END_DATE end,
                    TOOL_TYPE_CL=case when :TOOL_TYPE_CL is null then TOOL_TYPE_CL else :TOOL_TYPE_CL end,
                    TOOL_VENDOR_CL=case when :TOOL_VENDOR_CL is null then TOOL_VENDOR_CL else :TOOL_VENDOR_CL end,
                    SAMPLING_FREQUENCY=case when :SAMPLING_FREQUENCY is null then SAMPLING_FREQUENCY else :SAMPLING_FREQUENCY end,
                    RESOLUTION=case when :RESOLUTION is null then RESOLUTION else :RESOLUTION end,
                    MODEL=case when :MODEL is null then MODEL else :MODEL end,
                    SENSOR_GCL=case when :SENSOR_GCL is null then SENSOR_GCL else :SENSOR_GCL end,
                    SENSOR_SPACING_MIN=case when :SENSOR_SPACING_MIN is null then SENSOR_SPACING_MIN else :SENSOR_SPACING_MIN end,
                    SENSOR_SPACING_MAX=case when :SENSOR_SPACING_MAX is null then SENSOR_SPACING_MAX else :SENSOR_SPACING_MAX end,
                    MAX_TEMP=case when :MAX_TEMP is null then MAX_TEMP else :MAX_TEMP end,
                    MIN_TEMP=case when :MIN_TEMP is null then MIN_TEMP else :MIN_TEMP end,
                    AVG_TEMP=case when :AVG_TEMP is null then AVG_TEMP else :AVG_TEMP end,
                    MAX_VELOCITY=case when :MAX_VELOCITY is null then MAX_VELOCITY else :MAX_VELOCITY end,
                    MIN_VELOCITY=case when :MIN_VELOCITY is null then MIN_VELOCITY else :MIN_VELOCITY end,
                    AVG_VELOCITY=case when :AVG_VELOCITY is null then AVG_VELOCITY else :AVG_VELOCITY end,
                    RATED_MAX_VELOCITY=case when :RATED_MAX_VELOCITY is null then RATED_MAX_VELOCITY else :RATED_MAX_VELOCITY end,
                    RATED_MAX_WT=case when :RATED_MAX_WT is null then RATED_MAX_WT else :RATED_MAX_WT end,
                    START_ODOMETER=case when :START_ODOMETER is null then START_ODOMETER else :START_ODOMETER end,
                    END_ODOMETER=case when :END_ODOMETER is null then END_ODOMETER else :END_ODOMETER end,
                    CLUSTER_RULE_CL=case when :CLUSTER_RULE_CL is null then CLUSTER_RULE_CL else :CLUSTER_RULE_CL end,
                    COMMENTS=case when :COMMENTS is null then COMMENTS else :COMMENTS end,
                    SOURCE_GCL=case when :SOURCE_GCL is null then SOURCE_GCL else :SOURCE_GCL end
                    WHERE ILI_INSPECTION_ID = :ID;
                </query>
            </dbCommand>
        </update>
        <delete>
            <dbCommand>
				<param name="CLASS_ID" type="String" direction="Input" default="PODS_ILI_INSPECTION" /> 
				<var name="POLICY" default="POLICY.xml#DELETE_PODS_SEM"  />
                <param name="ID" type="Int64"/>
                <param name="USER_ID" default="-1" type="Int64"/>
                <query>
					DO $$
					DECLARE

                    BEGIN

                    BEGIN

                    /* Чистим GATE с учетом возможности отсутствия схемы GIS_INTEGRATION */

                    EXECUTE $OP$DELETE FROM GIS_INTEGRATION50.GATE
                    WHERE TABLE_NAME = 'ILI_INSPECTION'
                    AND KEY_FIELDS = 'ILI_INSPECTION_ID'
                    AND KEY_VALUES =$1::text$OP$
                    USING {ID};

                    EXECUTE $OP$DELETE FROM GIS_INTEGRATION50.GATE
                    WHERE TABLE_NAME = 'ILI_DATA'
                    AND KEY_FIELDS = 'ILI_DATA_ID'
                    AND KEY_VALUES in (SELECT ILI_DATA_ID::text
                    FROM PODS.ILI_DATA
                    WHERE ILI_INSPECTION_ID =$1)$OP$
                    USING {ID};

                    EXCEPTION WHEN undefined_table
                    THEN NULL;
                    WHEN OTHERS
                    THEN RAISE;
                    END;

                    UPDATE PODS.EVENT_RANGE
                    SET CURRENT_INDICATOR_LF='N'
                    WHERE EVENT_ID IN (SELECT EVENT_ID FROM PODS.ILI_DATA WHERE ILI_INSPECTION_ID = {ID});

                    UPDATE PODS.EVENT_RANGE
                    SET CURRENT_INDICATOR_LF='N'
                    WHERE EVENT_ID IN (SELECT EVENT_ID FROM PODS.ILI_PIPE_LENGTH WHERE ILI_INSPECTION_ID = {ID});

                    UPDATE PODS.EVENT_RANGE
                    SET CURRENT_INDICATOR_LF='N'
                    WHERE EVENT_ID IN (SELECT EVENT_ID FROM PODS.ILI_INSPECTION_RANGE WHERE ILI_INSPECTION_ID = {ID});

                    UPDATE PODS.EVENT_RANGE
                    SET CURRENT_INDICATOR_LF='N'
                    WHERE EVENT_ID IN (SELECT EVENT_ID FROM PODS.STO_ILI_INSPECTION_CALC WHERE ILI_INSPECTION_ID = {ID});

                    UPDATE PODS.EVENT_RANGE
                    SET CURRENT_INDICATOR_LF='N'
                    WHERE EVENT_ID IN (SELECT EVENT_ID FROM PODS.STO_EHZ_CALC WHERE ILI_INSPECTION_ID = {ID});

                    DELETE
                    FROM WEB50.LNK_GATE
                    WHERE LEFT_OBJ_ID IN (SELECT 'PODS_ILI_DATA/'||CAST(ILI_DATA_ID AS VARCHAR(30))
                    FROM PODS.ILI_DATA
                    WHERE ILI_INSPECTION_ID = {ID})
                    OR RIGHT_OBJ_ID IN (SELECT 'PODS_ILI_DATA/'||CAST(ILI_DATA_ID AS VARCHAR(30))
                    FROM PODS.ILI_DATA
                    WHERE ILI_INSPECTION_ID = {ID});

					
					delete from pods.sto_sheet_excavate_list l where l.ili_data_id in (select ili_data_id from pods.ili_data d where d.ILI_INSPECTION_ID = {ID});
					
                    delete from pods.sto_sheet_excavate WHERE ILI_INSPECTION_ID = {ID};
					
					delete from pods.sto_sheet_repair_list l where l.ili_data_id in (select ili_data_id from pods.ili_data d where d.ILI_INSPECTION_ID = {ID});
					
                    delete from pods.sto_sheet_repair WHERE ILI_INSPECTION_ID = {ID};

                    delete from pods.sto_sheet_mtd WHERE ILI_INSPECTION_ID = {ID};
					
					DELETE FROM pods.sto_ili_inspection_sheet WHERE ILI_INSPECTION_ID = {ID};

					DELETE
                    FROM PODS.STO_ILI_DATA_ADV
                    WHERE ILI_INSPECTION_ID = {ID};
					
                    DELETE
                    FROM PODS.STO_ILI_DATA_CALC_ADV
                    WHERE ILI_INSPECTION_ID = {ID};

                    DELETE
                    FROM PODS.STO_ILI_DATA_CALC
                    WHERE ILI_INSPECTION_ID = {ID};

                    DELETE
                    FROM PODS.STO_ILI_CLUSTER_CALC_ADV
                    WHERE ILI_INSPECTION_ID = {ID};

                    DELETE
                    FROM PODS.STO_ILI_CLUSTER_CALC
                    WHERE ILI_INSPECTION_ID = {ID};

                    DELETE
                    FROM PODS.STO_ILI_INSPECTION_CALC
                    WHERE ILI_INSPECTION_ID = {ID};

                    DELETE
                    FROM PODS.STO_EHZ_CALC
                    WHERE ILI_INSPECTION_ID = {ID};

                    DELETE
                    FROM PODS.ILI_DATA
                    WHERE ILI_INSPECTION_ID = {ID};

                    DELETE
                    FROM WEB50.LNK_GATE
                    WHERE LEFT_OBJ_ID IN (SELECT 'PODS_ILI_PIPE_LENGTH/'||CAST(ILI_PIPE_LENGTH_ID AS VARCHAR(30))
                    FROM PODS.ILI_PIPE_LENGTH
                    WHERE ILI_INSPECTION_ID = {ID})
                    OR RIGHT_OBJ_ID IN (SELECT 'PODS_ILI_PIPE_LENGTH/'||CAST(ILI_PIPE_LENGTH_ID AS VARCHAR(30))
                    FROM PODS.ILI_PIPE_LENGTH
                    WHERE ILI_INSPECTION_ID = {ID});

                    DELETE
                    FROM PODS.ILI_PIPE_LENGTH
                    WHERE ILI_INSPECTION_ID = {ID};

                    DELETE
                    FROM WEB50.LNK_GATE
                    WHERE LEFT_OBJ_ID IN (SELECT 'PODS_ILI_INSPECTION_RANGE/'||CAST(ILI_INSPECTION_RANGE_ID AS VARCHAR(30))
                    FROM PODS.ILI_INSPECTION_RANGE
                    WHERE ILI_INSPECTION_ID = {ID})
                    OR RIGHT_OBJ_ID IN (SELECT 'PODS_ILI_INSPECTION_RANGE/'||CAST(ILI_INSPECTION_RANGE_ID AS VARCHAR(30))
                    FROM PODS.ILI_INSPECTION_RANGE
                    WHERE ILI_INSPECTION_ID = {ID});

                    DELETE
                    FROM PODS.ILI_INSPECTION_RANGE
                    WHERE ILI_INSPECTION_ID = {ID};

                    DELETE
                    FROM WEB50.LNK_GATE
                    WHERE LEFT_OBJ_ID IN (SELECT 'PODS_ILI_CLUSTER/'||CAST(ILI_CLUSTER_ID AS VARCHAR(30))
                    FROM PODS.ILI_CLUSTER
                    WHERE ILI_INSPECTION_ID = {ID})
                    OR RIGHT_OBJ_ID IN (SELECT 'PODS_ILI_CLUSTER/'||CAST(ILI_CLUSTER_ID AS VARCHAR(30))
                    FROM PODS.ILI_CLUSTER
                    WHERE ILI_INSPECTION_ID = {ID});


                    DELETE
                    FROM PODS.ILI_CLUSTER
                    WHERE ILI_INSPECTION_ID = {ID};

                    DELETE
                    FROM WEB50.LNK_GATE
                    WHERE LEFT_OBJ_ID IN (SELECT 'PODS_INSPECTION_CONTACT/'||CAST(ILI_INSPECTION_ID AS VARCHAR(30))||';'||CAST(CONTACT_ID AS VARCHAR(30))
                    FROM PODS.INSPECTION_CONTACT
                    WHERE ILI_INSPECTION_ID = {ID})
                    OR RIGHT_OBJ_ID IN (SELECT 'PODS_INSPECTION_CONTACT/'||CAST(ILI_INSPECTION_ID AS VARCHAR(30))||';'||CAST(CONTACT_ID AS VARCHAR(30))
                    FROM PODS.INSPECTION_CONTACT
                    WHERE ILI_INSPECTION_ID = {ID});

                    DELETE
                    FROM PODS.INSPECTION_CONTACT
                    WHERE ILI_INSPECTION_ID = {ID};

                    DELETE
                    FROM PODS.ILI_INSPECTION
                    WHERE ILI_INSPECTION_ID = {ID};

                    DELETE
                    FROM WEB50.LNK_GATE
                    WHERE LEFT_OBJ_ID = 'PODS_ILI_INSPECTION/'||CAST({ID} AS VARCHAR(30))
                    OR RIGHT_OBJ_ID = 'PODS_ILI_INSPECTION/'||CAST({ID} AS VARCHAR(30));

                    END $$;
                </query>
            </dbCommand>
        </delete>
    </data>
    <data table="LINE" schema="PODS" id="PODS_LINE" comment="PODS.LINE">
        <select>
            <dbQuery idField="ID">
                <param name="USER_ID" default="-1" type="Int64"/>
                <var name="FILTER" default="1=1"/>
                <var name="LPU_ACCESS_FILTER" default="SELECT srv_district_id FROM PODS.SRV_DISTRICT_GCL"/>
                <query>

                    SELECT * FROM (SELECT LINE_ID ID, t.* FROM PODS.LINE t) d WHERE {FILTER}
                </query>
            </dbQuery>
        </select>
        <insert>
            <dbCommand>
				<var name="CLASS_ID" type="String" direction="Input" default="PODS_LINE" /> 
				<var name="POLICY" default="POLICY.xml#INSERT_PODS_SEM"  />
                <var name="LINE_GUID" default="" type="String"/>
                <var name="DESIGNATOR" default="" type="String"/>
                <var name="DESCRIPTION" default="" type="String"/>
                <var name="TYPE_CL" default="UNKNOWN" type="String"/>
                <var name="PRODUCT_TYPE_SCL" default="UNKNOWN" type="String"/>
                <var name="PRODUCT_SUBTYPE_SCL" default="NONE" type="String"/>
                <var name="OPERATING_STATUS_GCL" default="UNKNOWN" type="String"/>
                <var name="SYSTEM_TYPE_CL" default="UNKNOWN" type="String"/>
                <var name="INTERSTATE_LF" default="" type="String"/>
                <var name="ID" direction="Output" type="Int64"/>
                <var name="USER_ID" default="-1" type="Int64"/>
                <query>
					DO $$
					DECLARE
					returnId integer;
                    BEGIN
                    INSERT INTO PODS.LINE(LINE_GUID,DESIGNATOR,DESCRIPTION,TYPE_CL,PRODUCT_TYPE_SCL,PRODUCT_SUBTYPE_SCL,OPERATING_STATUS_GCL,SYSTEM_TYPE_CL,INTERSTATE_LF)
                    VALUES('{LINE_GUID}','{DESIGNATOR}',NULLIF('{DESCRIPTION}',''),NULLIF('{TYPE_CL}',''),NULLIF('{PRODUCT_TYPE_SCL}',''),NULLIF('{PRODUCT_SUBTYPE_SCL}',''),NULLIF('{OPERATING_STATUS_GCL}',''),'{SYSTEM_TYPE_CL}','{INTERSTATE_LF}')
                    RETURNING LINE_ID INTO returnId;
					END $$;
                </query>
            </dbCommand>
        </insert>
        <update>
            <dbCommand>
				<param name="CLASS_ID" type="String" direction="Input" default="PODS_LINE" /> 
				<var name="POLICY" default="POLICY.xml#UPDATE_PODS_SEM"  />
                <param name="LINE_GUID" default="" type="String"/>
                <param name="DESIGNATOR" default="" type="String"/>
                <param name="DESCRIPTION" default="" type="String"/>
                <param name="TYPE_CL" default="UNKNOWN" type="String"/>
                <param name="PRODUCT_TYPE_SCL" default="UNKNOWN" type="String"/>
                <param name="PRODUCT_SUBTYPE_SCL" default="NONE" type="String"/>
                <param name="OPERATING_STATUS_GCL" default="UNKNOWN" type="String"/>
                <param name="SYSTEM_TYPE_CL" default="UNKNOWN" type="String"/>
                <param name="INTERSTATE_LF" default="" type="String"/>
                <param name="ID" type="Int64"/>
                <param name="USER_ID" default="-1" type="Int64"/>
                <query>
                    UPDATE PODS.LINE
                    SET 
                    LINE_GUID=case when :LINE_GUID is null then LINE_GUID else :LINE_GUID end,
                    DESIGNATOR=case when :DESIGNATOR is null then DESIGNATOR else :DESIGNATOR end,
                    DESCRIPTION=case when :DESCRIPTION is null then DESCRIPTION else :DESCRIPTION end,
                    TYPE_CL=case when :TYPE_CL is null then TYPE_CL else :TYPE_CL end,
                    PRODUCT_TYPE_SCL=case when :PRODUCT_TYPE_SCL is null then PRODUCT_TYPE_SCL else :PRODUCT_TYPE_SCL end,
                    PRODUCT_SUBTYPE_SCL=case when :PRODUCT_SUBTYPE_SCL is null then PRODUCT_SUBTYPE_SCL else :PRODUCT_SUBTYPE_SCL end,
                    OPERATING_STATUS_GCL=case when :OPERATING_STATUS_GCL is null then OPERATING_STATUS_GCL else :OPERATING_STATUS_GCL end,
                    SYSTEM_TYPE_CL=case when :SYSTEM_TYPE_CL is null then SYSTEM_TYPE_CL else :SYSTEM_TYPE_CL end,
                    INTERSTATE_LF=case when :INTERSTATE_LF is null then INTERSTATE_LF else :INTERSTATE_LF end
                    WHERE LINE_ID = :ID;
                </query>
            </dbCommand>
        </update>
        <delete>
            <dbCommand>
				<var name="CLASS_ID" type="String" direction="Input" default="PODS_LINE" /> 
				<var name="POLICY" default="POLICY.xml#DELETE_PODS_SEM"  />
                <var name="ID" type="Int64"/>
                <var name="USER_ID" default="-1" type="Int64"/>
                <query>
					DO $$
                    BEGIN

                    UPDATE PODS.STATION_POINT
                    SET ROUTE_ID  = 0
                    ,LINE_ID = 0
                    ,SERIES = 0
                    WHERE LINE_ID = {ID};

                    DELETE
                    FROM WEB50.LNK_GATE
                    WHERE LEFT_OBJ_ID IN (SELECT 'PODS_LINE_HIERARCHY/'||CAST(LINE_HIERARCHY_ID AS VARCHAR(30))
                    FROM PODS.LINE_HIERARCHY
                    WHERE PARENT_LINE_ID = {ID}
                    OR CHILD_LINE_LINE_ID = {ID})
                    OR RIGHT_OBJ_ID IN (SELECT 'PODS_LINE_HIERARCHY/'||CAST(LINE_HIERARCHY_ID AS VARCHAR(30))
                    FROM PODS.LINE_HIERARCHY
                    WHERE PARENT_LINE_ID = {ID}
                    OR CHILD_LINE_LINE_ID = {ID});

                    DELETE
                    FROM PODS.LINE_HIERARCHY
                    WHERE PARENT_LINE_ID = {ID}
                    OR CHILD_LINE_LINE_ID = {ID};


                    DELETE
                    FROM WEB50.LNK_GATE
                    WHERE LEFT_OBJ_ID IN (SELECT 'PODS_LINE_INTEREST/'||COMPANY_GCL||';'||CAST(LINE_ID  AS VARCHAR(30))
                    FROM PODS.LINE_INTEREST
                    WHERE LINE_ID  = {ID})
                    OR RIGHT_OBJ_ID IN (SELECT 'PODS_LINE_INTEREST/'||COMPANY_GCL||';'||CAST(LINE_ID  AS VARCHAR(30))
                    FROM PODS.LINE_INTEREST
                    WHERE LINE_ID  = {ID});

                    DELETE
                    FROM PODS.LINE_INTEREST
                    WHERE LINE_ID = {ID};


                    DELETE
                    FROM WEB50.LNK_GATE
                    WHERE LEFT_OBJ_ID IN (SELECT 'PODS_PIPE_SYSTEM_BOUNDARY/'
                    ||CAST(PIPE_SYSTEM_ID AS VARCHAR(30))
                    ||';'||CAST(LINE_ID AS VARCHAR(30))
                    ||';'||CAST(KM_BEGIN AS VARCHAR(30))
                    ||';'||CAST(KM_END AS VARCHAR(30))
                    FROM PODS.PIPE_SYSTEM_BOUNDARY
                    WHERE LINE_ID = {ID})
                    OR RIGHT_OBJ_ID IN (SELECT 'PODS_PIPE_SYSTEM_BOUNDARY/'
                    ||CAST(PIPE_SYSTEM_ID AS VARCHAR(30))
                    ||';'||CAST(LINE_ID AS VARCHAR(30))
                    ||';'||CAST(KM_BEGIN AS VARCHAR(30))
                    ||';'||CAST(KM_END AS VARCHAR(30))
                    FROM PODS.PIPE_SYSTEM_BOUNDARY
                    WHERE LINE_ID = {ID});

                    DELETE
                    FROM PODS.PIPE_SYSTEM_BOUNDARY
                    WHERE LINE_ID = {ID};

                    DELETE
                    FROM WEB50.LNK_GATE
                    WHERE LEFT_OBJ_ID IN (SELECT 'PODS_SERIES/'||CAST(SERIES_ID AS VARCHAR(30))
                    FROM PODS.SERIES
                    WHERE LINE_ID = {ID})
                    OR RIGHT_OBJ_ID IN (SELECT 'PODS_SERIES/'||CAST(SERIES_ID AS VARCHAR(30))
                    FROM PODS.SERIES
                    WHERE LINE_ID = {ID});

                    DELETE
                    FROM WEB50.LNK_GATE
                    WHERE LEFT_OBJ_ID IN (SELECT 'PODS_NPMS_ROUTE/'||CAST(ROUTE_ID AS VARCHAR(30))
                    FROM PODS.ROUTE
                    WHERE LINE_ID = {ID})
                    OR RIGHT_OBJ_ID IN (SELECT 'PODS_NPMS_ROUTE/'||CAST(ROUTE_ID AS VARCHAR(30))
                    FROM PODS.ROUTE
                    WHERE LINE_ID = {ID});

                    DELETE
                    FROM PODS.NPMS_ROUTE
                    WHERE ROUTE_ID IN (SELECT ROUTE_ID
                    FROM PODS.ROUTE
                    WHERE LINE_ID = {ID});

                    DELETE
                    FROM PODS.SERIES
                    WHERE LINE_ID = {ID};

                    DELETE
                    FROM WEB50.LNK_GATE
                    WHERE LEFT_OBJ_ID IN (SELECT 'PODS_ROUTE/'||CAST(ROUTE_ID AS VARCHAR(30))
                    FROM PODS.ROUTE
                    WHERE LINE_ID = {ID})
                    OR RIGHT_OBJ_ID IN (SELECT 'PODS_ROUTE/'||CAST(ROUTE_ID AS VARCHAR(30))
                    FROM PODS.ROUTE
                    WHERE LINE_ID = {ID});

                    DELETE
                    FROM PODS.ROUTE
                    WHERE LINE_ID = {ID};

                    DELETE
                    FROM PODS.LINE
                    WHERE LINE_ID = {ID};

                    DELETE
                    FROM WEB50.LNK_GATE
                    WHERE LEFT_OBJ_ID = 'PODS_LINE/'||CAST({ID} AS VARCHAR(30))
                    OR RIGHT_OBJ_ID = 'PODS_LINE/'||CAST({ID} AS VARCHAR(30));

                    END $$;
                </query>
            </dbCommand>
        </delete>
    </data>
    <data table="LINE_INTEREST" schema="PODS" id="PODS_LINE_INTEREST" comment="PODS.LINE_INTEREST">
        <select>
            <dbQuery idField="ID">
                <param name="USER_ID" default="-1" type="Int64"/>
                <var name="FILTER" default="1=1"/>
                <var name="LPU_ACCESS_FILTER" default="SELECT srv_district_id FROM PODS.SRV_DISTRICT_GCL"/>
                <query>

                    SELECT * FROM (SELECT LINE_ID||';'||COMPANY_GCL ID, t.* FROM PODS.LINE_INTEREST t) d WHERE {FILTER}
                </query>
            </dbQuery>
        </select>
        <insert>
            <dbCommand>
				<var name="CLASS_ID" type="String" direction="Input" default="PODS_LINE_INTEREST" /> 
				<var name="POLICY" default="POLICY.xml#INSERT_PODS_SEM"  />
                <var name="LINE_ID" default="0" type="Decimal"/>
                <var name="COMPANY_GCL" default="UNKNOWN" type="String"/>
                <var name="TYPE_CL" default="UNKNOWN" type="String"/>
                <var name="PERCENT_INTEREST" default="NULL" type="Decimal"/>
                <var name="ID" direction="Output" type="String"/>
                <var name="USER_ID" default="-1" type="Int64"/>
                <query>
					DO $$
					DECLARE
					returnId integer;
                    BEGIN
                    INSERT INTO PODS.LINE_INTEREST(LINE_ID,COMPANY_GCL,TYPE_CL,PERCENT_INTEREST)
                    VALUES({LINE_ID},NULLIF('{COMPANY_GCL}',''),NULLIF('{TYPE_CL}',''),{PERCENT_INTEREST})
                    RETURNING LINE_ID||';'||COMPANY_GCL INTO returnId;
					END $$;
                </query>
            </dbCommand>
        </insert>
        <update>
            <dbCommand>
				<param name="CLASS_ID" type="String" direction="Input" default="PODS_LINE_INTEREST" /> 
				<var name="POLICY" default="POLICY.xml#UPDATE_PODS_SEM"  />
                <param name="LINE_ID" default="0" type="Decimal"/>
                <param name="COMPANY_GCL" default="UNKNOWN" type="String"/>
                <param name="TYPE_CL" default="UNKNOWN" type="String"/>
                <param name="PERCENT_INTEREST" default="NULL" type="Decimal"/>
                <param name="ID" type="String"/>
                <param name="USER_ID" default="-1" type="Int64"/>
                <query>
                    UPDATE PODS.LINE_INTEREST
                    SET 
					LINE_ID=case when :LINE_ID is null then LINE_ID else :LINE_ID end,
                    COMPANY_GCL=case when :COMPANY_GCL is null then COMPANY_GCL else :COMPANY_GCL end,
                    TYPE_CL=case when :TYPE_CL is null then TYPE_CL else :TYPE_CL end,
					PERCENT_INTEREST=case when :PERCENT_INTEREST is null then PERCENT_INTEREST else :PERCENT_INTEREST end
                    WHERE LINE_ID||';'||COMPANY_GCL = :ID;
                </query>
            </dbCommand>
        </update>
        <delete>
            <dbCommand>
				<var name="CLASS_ID" type="String" direction="Input" default="PODS_LINE_INTEREST" /> 
				<var name="POLICY" default="POLICY.xml#DELETE_PODS_SEM"  />
                <var name="ID" type="String"/>
                <var name="USER_ID" default="-1" type="Int64"/>
                <query>
					DO $$
                    BEGIN
                    DELETE FROM PODS.LINE_INTEREST
                    WHERE LINE_ID||';'||COMPANY_GCL = '{ID}';
                    DELETE FROM WEB50.LNK_GATE WHERE LEFT_OBJ_ID = 'PODS_LINE_INTEREST/'||'{ID}' 
												 OR RIGHT_OBJ_ID = 'PODS_LINE_INTEREST/'||'{ID}'; 
					END $$;
                </query>
            </dbCommand>
        </delete>
    </data>
    <data table="MONUMENT" schema="PODS" id="PODS_MONUMENT" comment="PODS.MONUMENT">
        <select>
            <dbQuery idField="ID">
                <param name="USER_ID" default="-1" type="Int64"/>
                <var name="FILTER" default="1=1"/>
                <var name="LPU_ACCESS_FILTER" default="SELECT srv_district_id FROM PODS.SRV_DISTRICT_GCL"/>
                <query>

                    SELECT * FROM (SELECT MONUMENT_ID ID, t.* FROM PODS.MONUMENT t) d WHERE {FILTER}
                </query>
            </dbQuery>
        </select>
        <insert>
            <dbCommand>
				<var name="CLASS_ID" type="String" direction="Input" default="PODS_MONUMENT" /> 
				<var name="POLICY" default="POLICY.xml#INSERT_PODS_SEM"  />
                <var name="MONUMENT_GUID" default="" type="String"/>
                <var name="COORDINATE_ID" default="-1" type="Decimal"/>
                <var name="COORDINATE_GUID" default="" type="String"/>
                <var name="REF_EVENT_ID" default="NULL" type="Decimal"/>
                <var name="REF_EVENT_GUID" default="" type="String"/>
                <var name="TYPE_CL" default="UNKNOWN" type="String"/>
                <var name="DESCRIPTION" default="" type="String"/>
                <var name="SOURCE_GCL" default="UNKNOWN" type="String"/>
                <var name="COMMENTS" default="" type="String"/>
                <var name="ID" direction="Output" type="Int64"/>
                <var name="USER_ID" default="-1" type="Int64"/>
                <query>
					DO $$
					DECLARE
					returnId integer;
                    BEGIN
                    INSERT INTO PODS.MONUMENT(MONUMENT_GUID,COORDINATE_ID,COORDINATE_GUID,REF_EVENT_ID,REF_EVENT_GUID,TYPE_CL,DESCRIPTION,SOURCE_GCL,COMMENTS)
                    VALUES('{MONUMENT_GUID}',{COORDINATE_ID},'{COORDINATE_GUID}',{REF_EVENT_ID},'{REF_EVENT_GUID}',NULLIF('{TYPE_CL}',''),NULLIF('{DESCRIPTION}',''),NULLIF('{SOURCE_GCL}',''),NULLIF('{COMMENTS}',''))
                    RETURNING MONUMENT_ID INTO returnId;
					END $$;
                </query>
            </dbCommand>
        </insert>
        <update>
            <dbCommand>
				<param name="CLASS_ID" type="String" direction="Input" default="PODS_MONUMENT" /> 
				<var name="POLICY" default="POLICY.xml#UPDATE_PODS_SEM"  />
                <param name="MONUMENT_GUID" default="" type="String"/>
                <param name="COORDINATE_ID" default="-1" type="Decimal"/>
                <param name="COORDINATE_GUID" default="" type="String"/>
                <param name="REF_EVENT_ID" default="NULL" type="Decimal"/>
                <param name="REF_EVENT_GUID" default="" type="String"/>
                <param name="TYPE_CL" default="UNKNOWN" type="String"/>
                <param name="DESCRIPTION" default="" type="String"/>
                <param name="SOURCE_GCL" default="UNKNOWN" type="String"/>
                <param name="COMMENTS" default="" type="String"/>
                <param name="ID" type="Int64"/>
                <param name="USER_ID" default="-1" type="Int64"/>
                <query>
                    UPDATE PODS.MONUMENT
                    SET 
					MONUMENT_GUID=case when :MONUMENT_GUID is null then MONUMENT_GUID else :MONUMENT_GUID end,
					COORDINATE_ID=case when :COORDINATE_ID is null then COORDINATE_ID else :COORDINATE_ID end,
					COORDINATE_GUID=case when :COORDINATE_GUID is null then COORDINATE_GUID else :COORDINATE_GUID end,
                    REF_EVENT_ID=case when :REF_EVENT_ID is null then REF_EVENT_ID else :REF_EVENT_ID end,
                    REF_EVENT_GUID=case when :REF_EVENT_GUID is null then REF_EVENT_GUID else :REF_EVENT_GUID end,
                    TYPE_CL=case when :TYPE_CL is null then TYPE_CL else :TYPE_CL end,
                    DESCRIPTION=case when :DESCRIPTION is null then DESCRIPTION else :DESCRIPTION end,
                    SOURCE_GCL=case when :SOURCE_GCL is null then SOURCE_GCL else :SOURCE_GCL end,
                    COMMENTS=case when :COMMENTS is null then COMMENTS else :COMMENTS end
                    WHERE MONUMENT_ID = :ID;
                </query>
            </dbCommand>
        </update>
        <delete>
            <dbCommand>
				<param name="CLASS_ID" type="String" direction="Input" default="PODS_MONUMENT" /> 
				<var name="POLICY" default="POLICY.xml#DELETE_PODS_SEM"  />
                <param name="ID" type="Int64"/>
                <param name="USER_ID" default="-1" type="Int64"/>
                <query>
					DO $$
                    BEGIN
                    DELETE FROM PODS.MONUMENT
                    WHERE MONUMENT_ID = {ID};
                    DELETE FROM WEB50.LNK_GATE WHERE LEFT_OBJ_ID = 'PODS_MONUMENT/'||CAST({ID} AS VARCHAR(30)) OR RIGHT_OBJ_ID = 'PODS_MONUMENT/'||CAST({ID} AS VARCHAR(30));
					END $$;
                </query>
            </dbCommand>
        </delete>
    </data>
    <data table="UNIT" schema="PODS" id="PODS_UNIT" comment="PODS.UNIT">
        <select>
            <dbQuery idField="ID">
                <param name="USER_ID" default="-1" type="Int64"/>
                <var name="FILTER" default="1=1"/>
                <var name="LPU_ACCESS_FILTER" default="SELECT srv_district_id FROM PODS.SRV_DISTRICT_GCL"/>
                <query>

                    SELECT * FROM (SELECT UNIT_ID ID, t.* FROM PODS.UNIT t) d WHERE {FILTER}
                </query>
            </dbQuery>
        </select>
        <insert>
            <dbCommand>
				<var name="CLASS_ID" type="String" direction="Input" default="PODS_UNIT" /> 
				<var name="POLICY" default="POLICY.xml#INSERT_PODS_SEM"  />
                <var name="UNIT_GUID" default="" type="String"/>
                <var name="COMPRESSOR_STATION_ID" default="NULL" type="Decimal"/>
                <var name="COMPRESSOR_STATION_GUID" default="" type="String"/>
                <var name="COMPRESSOR_TYPE_CL" default="UNKNOWN" type="String"/>
                <var name="DRIVE_TYPE_CL" default="UNKNOWN" type="String"/>
                <var name="NAME" default="" type="String"/>
                <var name="DESCRIPTION" default="" type="String"/>
                <var name="INTEGRAL_LF" default="" type="String"/>
                <var name="SOURCE_GCL" default="UNKNOWN" type="String"/>
                <var name="COMMENTS" default="" type="String"/>
                <var name="ID" direction="Output" type="Int64"/>
                <var name="USER_ID" default="-1" type="Int64"/>
                <query>
					DO $$
					DECLARE
					returnId integer;
                    BEGIN
                    INSERT INTO PODS.UNIT(UNIT_GUID,COMPRESSOR_STATION_ID,COMPRESSOR_STATION_GUID,COMPRESSOR_TYPE_CL,DRIVE_TYPE_CL,NAME,DESCRIPTION,INTEGRAL_LF,SOURCE_GCL,COMMENTS)
                    VALUES('{UNIT_GUID}',{COMPRESSOR_STATION_ID},'{COMPRESSOR_STATION_GUID}',NULLIF('{COMPRESSOR_TYPE_CL}',''),NULLIF('{DRIVE_TYPE_CL}',''),NULLIF('{NAME}',''),NULLIF('{DESCRIPTION}',''),'{INTEGRAL_LF}',NULLIF('{SOURCE_GCL}',''),NULLIF('{COMMENTS}',''))
                    RETURNING UNIT_ID INTO returnId;
					END $$;
                </query>
            </dbCommand>
        </insert>
        <update>
            <dbCommand>
				<param name="CLASS_ID" type="String" direction="Input" default="PODS_UNIT" /> 
				<var name="POLICY" default="POLICY.xml#UPDATE_PODS_SEM"  />
                <param name="UNIT_GUID" default="" type="String"/>
                <param name="COMPRESSOR_STATION_ID" default="NULL" type="Decimal"/>
                <param name="COMPRESSOR_STATION_GUID" default="" type="String"/>
                <param name="COMPRESSOR_TYPE_CL" default="UNKNOWN" type="String"/>
                <param name="DRIVE_TYPE_CL" default="UNKNOWN" type="String"/>
                <param name="NAME" default="" type="String"/>
                <param name="DESCRIPTION" default="" type="String"/>
                <param name="INTEGRAL_LF" default="" type="String"/>
                <param name="SOURCE_GCL" default="UNKNOWN" type="String"/>
                <param name="COMMENTS" default="" type="String"/>
                <param name="ID" type="Int64"/>
                <param name="USER_ID" default="-1" type="Int64"/>
                <query>
                    UPDATE PODS.UNIT
                    SET 
                    UNIT_GUID=case when :UNIT_GUID is null then UNIT_GUID else :UNIT_GUID end,
                    COMPRESSOR_STATION_ID=case when :COMPRESSOR_STATION_ID is null then COMPRESSOR_STATION_ID else :COMPRESSOR_STATION_ID end,
                    COMPRESSOR_STATION_GUID=case when :COMPRESSOR_STATION_GUID is null then COMPRESSOR_STATION_GUID else :COMPRESSOR_STATION_GUID end,
                    COMPRESSOR_TYPE_CL=case when :COMPRESSOR_TYPE_CL is null then COMPRESSOR_TYPE_CL else :COMPRESSOR_TYPE_CL end,
                    DRIVE_TYPE_CL=case when :DRIVE_TYPE_CL is null then DRIVE_TYPE_CL else :DRIVE_TYPE_CL end,
					NAME=case when :NAME is null then NAME else :NAME end,
                    DESCRIPTION=case when :DESCRIPTION is null then DESCRIPTION else :DESCRIPTION end,
					INTEGRAL_LF=case when :INTEGRAL_LF is null then INTEGRAL_LF else :INTEGRAL_LF end,
                    SOURCE_GCL=case when :SOURCE_GCL is null then SOURCE_GCL else :SOURCE_GCL end,
                    COMMENTS=case when :COMMENTS is null then COMMENTS else :COMMENTS end
                    WHERE UNIT_ID = :ID;
                </query>
            </dbCommand>
        </update>
        <delete>
            <dbCommand>
				<var name="CLASS_ID" type="String" direction="Input" default="PODS_UNIT" /> 
				<var name="POLICY" default="POLICY.xml#DELETE_PODS_SEM"  />
                <var name="ID" type="Int64"/>
                <var name="USER_ID" default="-1" type="Int64"/>
                <query>
					DO $$
                    BEGIN

                    UPDATE PODS.CENTRIFUGAL_COMPRESSOR
                    SET UNIT_ID = NULL
                    WHERE UNIT_ID = {ID};

                    UPDATE PODS.COMPRESSOR_CYLINDER
                    SET UNIT_ID = NULL
                    WHERE UNIT_ID = {ID};

                    UPDATE PODS.COMPRESSOR_EMISSIONS
                    SET UNIT_ID = NULL
                    WHERE UNIT_ID = {ID};

                    UPDATE PODS.COMPRESSOR_POCKET
                    SET UNIT_ID = NULL
                    WHERE UNIT_ID = {ID};

                    UPDATE PODS.ELECTRIC_DRIVE
                    SET UNIT_ID = NULL
                    WHERE UNIT_ID = {ID};

                    UPDATE PODS.RECIPROCATING_COMPRESSOR
                    SET UNIT_ID = NULL
                    WHERE UNIT_ID = {ID};

                    UPDATE PODS.RECIPROCATING_DRIVE
                    SET UNIT_ID = NULL
                    WHERE UNIT_ID = {ID};

                    UPDATE PODS.TURBINE_DRIVE
                    SET UNIT_ID = NULL
                    WHERE UNIT_ID = {ID};

                    DELETE
                    FROM PODS.UNIT
                    WHERE COMPRESSOR_STATION_ID = {ID};

                    DELETE
                    FROM WEB50.LNK_GATE
                    WHERE LEFT_OBJ_ID = 'PODS_UNIT/'||CAST({ID} AS VARCHAR(30))
                    OR RIGHT_OBJ_ID = 'PODS_UNIT/'||CAST({ID} AS VARCHAR(30));

                    END $$;
                </query>
            </dbCommand>
        </delete>
    </data>
    <data table="WORK_ORDER" schema="PODS" id="PODS_WORK_ORDER" comment="PODS.WORK_ORDER">
        <select>
            <dbQuery idField="ID">
                <param name="USER_ID" default="-1" type="Int64"/>
                <var name="FILTER" default="1=1"/>
                <var name="LPU_ACCESS_FILTER" default="SELECT srv_district_id FROM PODS.SRV_DISTRICT_GCL"/>
                <query>

                    SELECT * FROM (SELECT WORK_ORDER_ID ID, t.* FROM PODS.WORK_ORDER t) d WHERE {FILTER}
                </query>
            </dbQuery>
        </select>
        <insert>
            <dbCommand>
				<var name="CLASS_ID" type="String" direction="Input" default="PODS_WORK_ORDER" /> 
				<var name="POLICY" default="POLICY.xml#INSERT_PODS_SEM"  />
                <var name="WORK_ORDER_GUID" default="" type="String"/>
                <var name="WORK_ORDER_NUMBER" default="" type="String"/>
                <var name="COMPANY_GCL" default="UNKNOWN" type="String"/>
                <var name="TYPE_CL" default="UNKNOWN" type="String"/>
                <var name="DESCRIPTION" default="" type="String"/>
                <var name="AFE" default="" type="String"/>
                <var name="STARTING_DATE" default="" type="DateTime"/>
                <var name="ENDING_DATE" default="" type="DateTime"/>
                <var name="ORDERED_DATE" default="" type="DateTime"/>
                <var name="PLANNED_START_DATE" default="" type="DateTime"/>
                <var name="PLANNED_END_DATE" default="" type="DateTime"/>
                <var name="VENDOR_COMPANY_GCL" default="UNKNOWN" type="String"/>
                <var name="VENDOR_WORK_NUMBER" default="" type="String"/>
                <var name="SOURCE_GCL" default="UNKNOWN" type="String"/>
                <var name="COMMENTS" default="UNKNOWN" type="String"/>
                <var name="ID" direction="Output" type="Int64"/>
                <var name="USER_ID" default="-1" type="Int64"/>
                <query>
					DO $$
					DECLARE
					returnId integer;
                    BEGIN
                    INSERT INTO PODS.WORK_ORDER(WORK_ORDER_GUID,WORK_ORDER_NUMBER,COMPANY_GCL,TYPE_CL,DESCRIPTION,AFE,STARTING_DATE,ENDING_DATE,ORDERED_DATE,PLANNED_START_DATE,PLANNED_END_DATE,VENDOR_COMPANY_GCL,VENDOR_WORK_NUMBER,SOURCE_GCL,COMMENTS)
                    VALUES('{WORK_ORDER_GUID}','{WORK_ORDER_NUMBER}',NULLIF('{COMPANY_GCL}',''),NULLIF('{TYPE_CL}',''),NULLIF('{DESCRIPTION}',''),NULLIF('{AFE}',''),'{STARTING_DATE}','{ENDING_DATE}','{ORDERED_DATE}','{PLANNED_START_DATE}','{PLANNED_END_DATE}',NULLIF('{VENDOR_COMPANY_GCL}',''),NULLIF('{VENDOR_WORK_NUMBER}',''),NULLIF('{SOURCE_GCL}',''),NULLIF('{COMMENTS}',''))
                    RETURNING WORK_ORDER_ID INTO returnId;
					END $$;
                </query>
            </dbCommand>
        </insert>
        <update>
            <dbCommand>
				<param name="CLASS_ID" type="String" direction="Input" default="PODS_WORK_ORDER" /> 
				<var name="POLICY" default="POLICY.xml#UPDATE_PODS_SEM"  />
                <param name="WORK_ORDER_GUID" default="" type="String"/>
                <param name="WORK_ORDER_NUMBER" default="" type="String"/>
                <param name="COMPANY_GCL" default="UNKNOWN" type="String"/>
                <param name="TYPE_CL" default="UNKNOWN" type="String"/>
                <param name="DESCRIPTION" default="" type="String"/>
                <param name="AFE" default="" type="String"/>
                <param name="STARTING_DATE" default="" type="DateTime"/>
                <param name="ENDING_DATE" default="" type="DateTime"/>
                <param name="ORDERED_DATE" default="" type="DateTime"/>
                <param name="PLANNED_START_DATE" default="" type="DateTime"/>
                <param name="PLANNED_END_DATE" default="" type="DateTime"/>
                <param name="VENDOR_COMPANY_GCL" default="UNKNOWN" type="String"/>
                <param name="VENDOR_WORK_NUMBER" default="" type="String"/>
                <param name="SOURCE_GCL" default="UNKNOWN" type="String"/>
                <param name="COMMENTS" default="UNKNOWN" type="String"/>
                <param name="ID" type="Int64"/>
                <param name="USER_ID" default="-1" type="Int64"/>
                <query>
                    UPDATE PODS.WORK_ORDER
                    SET 
                    WORK_ORDER_GUID=case when :WORK_ORDER_GUID is null then WORK_ORDER_GUID else :WORK_ORDER_GUID end,
                    WORK_ORDER_NUMBER=case when :WORK_ORDER_NUMBER is null then WORK_ORDER_NUMBER else :WORK_ORDER_NUMBER end,
                    COMPANY_GCL=case when :COMPANY_GCL is null then COMPANY_GCL else :COMPANY_GCL end,
                    TYPE_CL=case when :TYPE_CL is null then TYPE_CL else :TYPE_CL end,
                    DESCRIPTION=case when :DESCRIPTION is null then DESCRIPTION else :DESCRIPTION end,
                    AFE=case when :AFE is null then AFE else :AFE end,
                    STARTING_DATE=case when :STARTING_DATE is null then STARTING_DATE else :STARTING_DATE end,
                    ENDING_DATE=case when :ENDING_DATE is null then ENDING_DATE else :ENDING_DATE end,
                    ORDERED_DATE=case when :ORDERED_DATE is null then ORDERED_DATE else :ORDERED_DATE end,
                    PLANNED_START_DATE=case when :PLANNED_START_DATE is null then PLANNED_START_DATE else :PLANNED_START_DATE end,
                    PLANNED_END_DATE=case when :PLANNED_END_DATE is null then PLANNED_END_DATE else :PLANNED_END_DATE end,
                    VENDOR_COMPANY_GCL=case when :VENDOR_COMPANY_GCL is null then VENDOR_COMPANY_GCL else :VENDOR_COMPANY_GCL end,
                    VENDOR_WORK_NUMBER=case when :VENDOR_WORK_NUMBER is null then VENDOR_WORK_NUMBER else :VENDOR_WORK_NUMBER end,
                    SOURCE_GCL=case when :SOURCE_GCL is null then SOURCE_GCL else :SOURCE_GCL end,
                    COMMENTS=case when :COMMENTS is null then COMMENTS else :COMMENTS end
                    WHERE WORK_ORDER_ID = :ID;
                </query>
            </dbCommand>
        </update>
        <delete>
            <dbCommand>
				<var name="CLASS_ID" type="String" direction="Input" default="PODS_WORK_ORDER" /> 
				<var name="POLICY" default="POLICY.xml#DELETE_PODS_SEM"  />
                <var name="ID" type="Int64"/>
                <var name="USER_ID" default="-1" type="Int64"/>
                <query>
					DO $$
                    BEGIN

                    UPDATE PODS.ILI_INSPECTION_RANGE
                    SET WORK_ORDER_ID = NULL
                    WHERE WORK_ORDER_ID = {ID};

                    UPDATE PODS.MAINTENANCE
                    SET WORK_ORDER_ID = NULL
                    WHERE WORK_ORDER_ID = {ID};

                    DELETE
                    FROM PODS.WORK_ORDER
                    WHERE WORK_ORDER_ID = {ID};

                    DELETE
                    FROM WEB50.LNK_GATE
                    WHERE LEFT_OBJ_ID = 'PODS_WORK_ORDER/'||CAST({ID} AS VARCHAR(30))
                    OR RIGHT_OBJ_ID = 'PODS_WORK_ORDER/'||CAST({ID} AS VARCHAR(30));

                    END $$;
                </query>
            </dbCommand>
        </delete>
    </data>
    <data table="ROUTE" schema="PODS" id="PODS_ROUTE" comment="PODS.ROUTE">
        <select>
            <dbQuery idField="ID">
                <param name="USER_ID" default="-1" type="Int64"/>
                <var name="FILTER" default="1=1"/>
                <var name="LPU_ACCESS_FILTER" default="SELECT srv_district_id FROM PODS.SRV_DISTRICT_GCL"/>
                <query>
                    SELECT * FROM (SELECT r.ROUTE_ID ID
                    , r.*
                    ,s.SERIES_ID
                    ,s.DESCRIPTION AS SERIES_DESCRIPTION
                    ,s.SERIES
                    ,s.STATION_BEGIN
                    ,s.STATION_END
                    ,s.ASCENDING
                    FROM PODS.ROUTE r
                    JOIN PODS.SERIES s ON s.ROUTE_ID=r.ROUTE_ID
                    WHERE r.route_id!=0) d WHERE {FILTER}
                </query>
            </dbQuery>
        </select>
        <insert>
            <dbCommand>
				<var name="CLASS_ID" type="String" direction="Input" default="PODS_ROUTE" /> 
				<var name="POLICY" default="POLICY.xml#INSERT_PODS_SEM"  />
                <var name="ROUTE_GUID" default="" type="String"/>
                <var name="LINE_ID" default="NULL" type="Decimal"/>
                <var name="LINE_GUID" default="" type="String"/>
                <var name="EVENT_ID" default="NULL" type="Decimal"/>
                <var name="EVENT_GUID" default="" type="String"/>
                <var name="DESCRIPTION" default="" type="String"/>
                <var name="SEQUENCE" default="NULL" type="Decimal"/>
                <var name="TYPE_CL" default="UNKNOWN" type="String"/>
                <var name="OPERATING_STATUS_GCL" default="UNKNOWN" type="String"/>
                <var name="CURRENT_INDICATOR_LF" default="Y" type="String"/>
                <var name="PREVIOUS_ROUTE_ID" default="null" type="Decimal"/>
                <var name="PREVIOUS_ROUTE_GUID" default="" type="String"/>
				<var name="EFFECTIVE_FROM_DATE" default="" type="DateTime"/>
                <var name="EFFECTIVE_TO_DATE" default="" type="DateTime"/>
                <var name="ORIGINAL_ROUTE_ID" default="null" type="Decimal"/>
                <var name="ORIGINAL_ROUTE_GUID" default="" type="String"/>
                <var name="PODS_USER" default="" type="String"/>
                <var name="CREATE_DATE" default="" type="DateTime"/>
                <var name="SERIES_ID" default="NULL" type="Int64"/>
                <var name="SERIES_DESCRIPTION" default="" type="String"/>
                <var name="SERIES" default="10" type="Decimal"/>
                <var name="STATION_BEGIN" default="0" type="Double"/>
                <var name="STATION_END" default="0" type="Double"/>
                <var name="ASCENDING" default="1" type="Decimal"/>
                <var name="ID" type="Int64" direction="Output" default="SELECT max(ROUTE_ID) id FROM PODS.ROUTE"/>
                <var name="USER_LOGIN" type="String" direction="Input"/>
                <var name="USER_ID" default="-1" type="Int64"/>
                <query>
					DO $$
					DECLARE
					returnId integer;
                    BEGIN
                    INSERT INTO PODS.ROUTE(ROUTE_GUID,LINE_ID,LINE_GUID,EVENT_ID,EVENT_GUID,DESCRIPTION,SEQUENCE,TYPE_CL,OPERATING_STATUS_GCL,CURRENT_INDICATOR_LF,PREVIOUS_ROUTE_ID,PREVIOUS_ROUTE_GUID,EFFECTIVE_FROM_DATE,EFFECTIVE_TO_DATE,ORIGINAL_ROUTE_ID,ORIGINAL_ROUTE_GUID,PODS_USER,CREATE_DATE)
                    VALUES('{ROUTE_GUID}',{LINE_ID},'{LINE_GUID}',{EVENT_ID},'{EVENT_GUID}',NULLIF('{DESCRIPTION}',''),{SEQUENCE},NULLIF('{TYPE_CL}',''),NULLIF('{OPERATING_STATUS_GCL}',''),'{CURRENT_INDICATOR_LF}',{PREVIOUS_ROUTE_ID},'{PREVIOUS_ROUTE_GUID}',
					case when replace(upper('{EFFECTIVE_FROM_DATE}'),'NULL','') like '' then current_timestamp else '{EFFECTIVE_FROM_DATE}' end,'{EFFECTIVE_TO_DATE}',{ORIGINAL_ROUTE_ID},'{ORIGINAL_ROUTE_GUID}','{USER_LOGIN}',current_timestamp)
                    RETURNING ROUTE_ID INTO returnId;

                    INSERT INTO PODS.SERIES(DESCRIPTION, LINE_ID, ASCENDING, ROUTE_ID, SERIES, STATION_BEGIN, STATION_END, CURRENT_INDICATOR_LF, EFFECTIVE_FROM_DATE, PODS_USER, CREATE_DATE)
                    VALUES(NULLIF('{DESCRIPTION}',''),{LINE_ID},{ASCENDING}, returnId,{SERIES},{STATION_BEGIN},{STATION_END}, 'Y', current_timestamp,'{USER_LOGIN}', current_timestamp);
					END $$;
                </query>
            </dbCommand>
        </insert>
        <update>
            <dbCommand>
				<param name="CLASS_ID" type="String" direction="Input" default="PODS_ROUTE" /> 
				<var name="POLICY" default="POLICY.xml#UPDATE_PODS_SEM"  />
                <var name="SYS_OBJ_ID" type="Int64" direction="Input"/>
                <var name="ROUTE_GUID" default="" type="String" direction="Input"/>
                <var name="LINE_ID" default="NULL" type="Decimal" direction="Input"/>
                <var name="LINE_GUID" default="" type="String" direction="Input"/>
                <var name="EVENT_ID" default="NULL" type="Decimal" direction="Input"/>
                <var name="EVENT_GUID" default="" type="String" direction="Input"/>
                <var name="DESCRIPTION" default="" type="String" direction="Input"/>
                <var name="SEQUENCE" default="NULL" type="Decimal" direction="Input"/>
                <var name="TYPE_CL" default="" type="String" direction="Input"/>
                <var name="OPERATING_STATUS_GCL" default="" type="String" direction="Input"/>
                <var name="CURRENT_INDICATOR_LF" default="" type="String" direction="Input"/>
                <var name="PREVIOUS_ROUTE_ID" default="NULL" type="Decimal" direction="Input"/>
                <var name="PREVIOUS_ROUTE_GUID" default="" type="String" direction="Input"/>
                <var name="EFFECTIVE_FROM_DATE" default="" type="DateTime" direction="Input"/>
                <var name="EFFECTIVE_TO_DATE" default="" type="DateTime" direction="Input"/>
                <var name="ORIGINAL_ROUTE_ID" default="NULL" type="Decimal" direction="Input"/>
                <var name="ORIGINAL_ROUTE_GUID" default="" type="String" direction="Input"/>
                <var name="PODS_USER" default="" type="String" direction="Input"/>
                <var name="CREATE_DATE" default="" type="DateTime" direction="Input"/>
                <var name="SERIES_ID" default="NULL" type="Int64" direction="Input"/>
                <var name="SERIES_DESCRIPTION" default="" type="String" direction="Input"/>
                <var name="SERIES" default="10" type="Double" direction="Input"/>
                <var name="STATION_BEGIN" default="0" type="Double" direction="Input"/>
                <var name="STATION_END" default="0" type="Double" direction="Input"/>
                <var name="ASCENDING" default="1" type="Int64" direction="Input"/>
                <var name="USER_ID" default="-1" type="Int64"/>
                <query>
					DO $$
                    BEGIN
                    UPDATE PODS.ROUTE 
                    SET ROUTE_GUID='{ROUTE_GUID}',
					LINE_ID={LINE_ID},LINE_GUID='{LINE_GUID}',
					EVENT_ID={EVENT_ID},EVENT_GUID='{EVENT_GUID}',
					DESCRIPTION=NULLIF('{DESCRIPTION}',''),
					SEQUENCE={SEQUENCE},TYPE_CL=NULLIF('{TYPE_CL}',''),
					OPERATING_STATUS_GCL=NULLIF('{OPERATING_STATUS_GCL}',''),
					CURRENT_INDICATOR_LF='{CURRENT_INDICATOR_LF}',
					PREVIOUS_ROUTE_ID={PREVIOUS_ROUTE_ID},
					PREVIOUS_ROUTE_GUID='{PREVIOUS_ROUTE_GUID}',
					EFFECTIVE_FROM_DATE='{EFFECTIVE_FROM_DATE}',
					EFFECTIVE_TO_DATE='{EFFECTIVE_TO_DATE}',
					ORIGINAL_ROUTE_ID={ORIGINAL_ROUTE_ID},
					ORIGINAL_ROUTE_GUID='{ORIGINAL_ROUTE_GUID}',PODS_USER=NULLIF('{PODS_USER}',''),
					CREATE_DATE='{CREATE_DATE}'
                    WHERE ROUTE_ID = {SYS_OBJ_ID};

                    UPDATE PODS.SERIES 
                    SET DESCRIPTION='{SERIES_DESCRIPTION}',
					SERIES={SERIES},
					STATION_BEGIN={STATION_BEGIN},
					STATION_END={STATION_END},
					ASCENDING={ASCENDING},
					LINE_ID={LINE_ID},
					LINE_GUID='{LINE_GUID}'
                    WHERE ROUTE_ID = {SYS_OBJ_ID};

                    UPDATE PODS.STATION_POINT 
                    SET LINE_ID={LINE_ID},
					LINE_GUID='{LINE_GUID}'
                    WHERE ROUTE_ID = {SYS_OBJ_ID};          
					END $$;
                </query>
            </dbCommand>
        </update>
        <delete>
            <dbCommand>
				<var name="CLASS_ID" type="String" direction="Input" default="PODS_ROUTE" /> 
				<var name="POLICY" default="POLICY.xml#DELETE_PODS_SEM"  />
                <var name="ID" type="Int64" direction="Input"/>
                <var name="USER_ID" default="-1" type="Int64"/>
                <query>
					DO $$
                    BEGIN

                    UPDATE PODS.EVENT_RANGE
                    SET CURRENT_INDICATOR_LF = 'N'
                    WHERE STATION_ID_BEGIN IN (SELECT STATION_ID
                    FROM PODS.STATION_POINT
                    WHERE ROUTE_ID = {ID} )
                    OR STATION_ID_END   IN (SELECT STATION_ID
                    FROM PODS.STATION_POINT
                    WHERE ROUTE_ID = {ID} );

                    UPDATE PODS.STATION_POINT
                    SET ROUTE_ID  = 0
                    ,LINE_ID = 0
                    ,SERIES = 0
                    ,SERIES_ID=0
                    ,MEASURE = 0
                    WHERE ROUTE_ID = {ID};

                    DELETE
                    FROM WEB50.LNK_GATE
                    WHERE LEFT_OBJ_ID = 'PODS_NPMS_ROUTE/'||CAST({ID} AS VARCHAR(30))
                    OR RIGHT_OBJ_ID = 'PODS_NPMS_ROUTE/'||CAST({ID} AS VARCHAR(30));

                    DELETE
                    FROM PODS.NPMS_ROUTE
                    WHERE ROUTE_ID = {ID};


                    DELETE
                    FROM WEB50.LNK_GATE
                    WHERE LEFT_OBJ_ID IN (SELECT 'PODS_SERIES/'||CAST(SERIES_ID AS VARCHAR(30))
                    FROM PODS.SERIES
                    WHERE ROUTE_ID = {ID})
                    OR RIGHT_OBJ_ID IN (SELECT 'PODS_SERIES/'||CAST(SERIES_ID AS VARCHAR(30))
                    FROM PODS.SERIES
                    WHERE ROUTE_ID = {ID});

                    UPDATE PODS.SERIES
                    SET CURRENT_INDICATOR_LF = 'N'
                    WHERE ROUTE_ID = {ID};

                    UPDATE PODS.ROUTE
                    SET CURRENT_INDICATOR_LF = 'N'
                    WHERE ROUTE_ID = {ID};

                    DELETE
                    FROM WEB50.LNK_GATE
                    WHERE LEFT_OBJ_ID = 'PODS_ROUTE/'||CAST({ID} AS VARCHAR(30))
                    OR RIGHT_OBJ_ID = 'PODS_ROUTE/'||CAST({ID} AS VARCHAR(30));

                    END $$;
                </query>
            </dbCommand>
        </delete>
    </data>
    <data table="SITE" schema="PODS" id="PODS_SITE" comment="PODS.SITE">
        <select>
            <dbQuery idField="ID">
                <param name="USER_ID" default="-1" type="Int64"/>
                <var name="FILTER" default="1=1"/>
                <var name="LPU_ACCESS_FILTER" default="SELECT srv_district_id FROM PODS.SRV_DISTRICT_GCL"/>
                <query>
                    SELECT * FROM (SELECT s.site_id ID, s.* FROM PODS.SITE s) d WHERE {FILTER}
                </query>
            </dbQuery>
        </select>
        <insert>
            <dbCommand>
				<var name="CLASS_ID" type="String" direction="Input" default="PODS_SITE" /> 
				<var name="POLICY" default="POLICY.xml#INSERT_PODS_SEM"  />
                <var name="SITE_GUID" default="" type="String"/>
                <var name="TYPE_CL" default="UNKNOWN" type="String"/>
                <var name="NAME" default="" type="String"/>
                <var name="OWNER" default="" type="String"/>
                <var name="OPERATOR" default="" type="String"/>
                <var name="CONTACT_ID" default="NULL" type="Decimal"/>
                <var name="CONTACT_GUID" default="" type="String"/>
                <var name="FRP_NUMBER" default="NULL" type="Decimal"/>
                <var name="CITY" default="" type="String"/>
                <var name="STATE_GCL" default="UNKNOWN" type="String"/>
                <var name="LOCATION_ID" default="-1" type="Decimal"/>
                <var name="LOCATION_GUID" default="" type="String"/>
                <var name="SHAPE_ID" default="NULL" type="Decimal"/>
                <var name="SHAPE_GUID" default="" type="String"/>
                <var name="DESCRIPTION" default="" type="String"/>
                <var name="SOURCE_GCL" default="UNKNOWN" type="String"/>
                <var name="COMMENTS" default="" type="String"/>
                <var name="ID" type="Int64" direction="Output" default="SELECT max(SITE_ID) id FROM PODS.SITE"/>
                <var name="USER_ID" default="-1" type="Int64"/>
                <query>
					DO $$
					DECLARE
					returnId integer;
                    BEGIN
                    INSERT INTO PODS.SITE(SITE_GUID,TYPE_CL,NAME,OWNER,OPERATOR,CONTACT_ID,CONTACT_GUID,FRP_NUMBER,CITY,STATE_GCL,LOCATION_ID,LOCATION_GUID,SHAPE_ID,SHAPE_GUID,DESCRIPTION,SOURCE_GCL,COMMENTS)
                    VALUES('{SITE_GUID}',NULLIF('{TYPE_CL}',''),NULLIF('{NAME}',''),NULLIF('{OWNER}',''),NULLIF('{OPERATOR}',''),{CONTACT_ID},'{CONTACT_GUID}',{FRP_NUMBER},NULLIF('{CITY}',''),NULLIF('{STATE_GCL}',''),{LOCATION_ID},'{LOCATION_GUID}',{SHAPE_ID},'{SHAPE_GUID}',NULLIF('{DESCRIPTION}',''),NULLIF('{SOURCE_GCL}',''),NULLIF('{COMMENTS}',''))
                    RETURNING SITE_ID INTO returnId;
					END $$;
                </query>
            </dbCommand>
        </insert>
        <update>
            <dbCommand>
				<param name="CLASS_ID" type="String" direction="Input" default="PODS_SITE" /> 
				<var name="POLICY" default="POLICY.xml#UPDATE_PODS_SEM"  />
                <param name="SITE_GUID" default="" type="String"/>
                <param name="TYPE_CL" default="" type="String"/>
                <param name="NAME" default="" type="String"/>
                <param name="OWNER" default="" type="String"/>
                <param name="OPERATOR" default="" type="String"/>
                <param name="CONTACT_ID" default="NULL" type="Decimal"/>
                <param name="CONTACT_GUID" default="" type="String"/>
                <param name="FRP_NUMBER" default="NULL" type="Decimal"/>
                <param name="CITY" default="" type="String"/>
                <param name="STATE_GCL" default="" type="String"/>
                <param name="LOCATION_ID" default="NULL" type="Decimal"/>
                <param name="LOCATION_GUID" default="" type="String"/>
                <param name="SHAPE_ID" default="NULL" type="Decimal"/>
                <param name="SHAPE_GUID" default="" type="String"/>
                <param name="DESCRIPTION" default="" type="String"/>
                <param name="SOURCE_GCL" default="" type="String"/>
                <param name="COMMENTS" default="" type="String"/>
                <param name="ID" type="Int64" direction="Input"/>
                <param name="USER_ID" default="-1" type="Int64"/>
                <query>
                    UPDATE PODS.SITE
                    SET 
					SITE_GUID=case when :SITE_GUID is null then SITE_GUID else :SITE_GUID end,
                    TYPE_CL=case when :TYPE_CL is null then TYPE_CL else :TYPE_CL end,
					NAME=case when :NAME is null then NAME else :NAME end,
					OWNER=case when :OWNER is null then OWNER else :OWNER end,
					OPERATOR=case when :OPERATOR is null then OPERATOR else :OPERATOR end,
                    CONTACT_ID=case when :CONTACT_ID is null then CONTACT_ID else :CONTACT_ID end,
                    CONTACT_GUID=case when :CONTACT_GUID is null then CONTACT_GUID else :CONTACT_GUID end,
					FRP_NUMBER=case when :FRP_NUMBER is null then FRP_NUMBER else :FRP_NUMBER end,
                    STATE_GCL=case when :STATE_GCL is null then STATE_GCL else :STATE_GCL end,
					LOCATION_ID=case when :LOCATION_ID is null then LOCATION_ID else :LOCATION_ID end,
					LOCATION_GUID=case when :LOCATION_GUID is null then LOCATION_GUID else :LOCATION_GUID end,
					SHAPE_ID=case when :SHAPE_ID is null then SHAPE_ID else :SHAPE_ID end,
					SHAPE_GUID=case when :SHAPE_GUID is null then SHAPE_GUID else :SHAPE_GUID end,
                    DESCRIPTION=case when :DESCRIPTION is null then DESCRIPTION else :DESCRIPTION end,
                    SOURCE_GCL=case when :SOURCE_GCL is null then SOURCE_GCL else :SOURCE_GCL end,
                    COMMENTS=case when :COMMENTS is null then COMMENTS else :COMMENTS end
                    WHERE SITE_ID = :ID;
                </query>
            </dbCommand>
        </update>
        <delete>
            <dbCommand>
				<var name="CLASS_ID" type="String" direction="Input" default="PODS_SITE" /> 
				<var name="POLICY" default="POLICY.xml#DELETE_PODS_SEM"  />
                <var name="ID" type="Int64" direction="Input"/>
                <var name="USER_ID" default="-1" type="Int64"/>
                <query>
					DO $$
                    BEGIN

                    UPDATE PODS.STRUCTURE
                    SET SITE_ADDRESS_ID = NULL
                    WHERE SITE_ADDRESS_ID in (SELECT SITE_ADDRESS_ID
                    FROM PODS.SITE
                    WHERE SITE_ID = {ID});


                    UPDATE PODS.POPULATED_AREA
                    SET SITE_ADDRESS_ID = NULL
                    WHERE SITE_ADDRESS_ID in (SELECT SITE_ADDRESS_ID
                    FROM PODS.SITE
                    WHERE SITE_ID = {ID});

                    UPDATE PODS.OFFLINE_EVENT
                    SET SITE_ID = NULL
                    WHERE SITE_ID = {ID};

                    DELETE
                    FROM PODS.SITE
                    WHERE SITE_ID = {ID};

                    DELETE
                    FROM WEB50.LNK_GATE
                    WHERE LEFT_OBJ_ID = 'PODS_SITE/'||CAST({ID} AS VARCHAR(30))
                    OR RIGHT_OBJ_ID = 'PODS_SITE/'||CAST({ID} AS VARCHAR(30));

                    END $$;
                </query>
            </dbCommand>
        </delete>
    </data>
    <data table="SRV_DISTRICT_GCL" schema="PODS" id="PODS_SRV_DISTRICT_GCL" comment="PODS.SRV_DISTRICT_GCL">
        <select>
            <dbQuery idField="ID">
                <param name="USER_ID" default="-1" type="Int64"/>
                <var name="FILTER" default="1=1"/>
                <var name="LPU_ACCESS_FILTER" default="SELECT srv_district_id FROM PODS.SRV_DISTRICT_GCL"/>
                <query>
                    SELECT * FROM (SELECT d.SRV_DISTRICT_ID ID, d.* FROM PODS.SRV_DISTRICT_GCL d) d WHERE {FILTER}
                </query>
            </dbQuery>
        </select>
        <insert>
            <dbCommand>
				<var name="CLASS_ID" type="String" direction="Input" default="PODS_SRV_DISTRICT_GCL" /> 
				<var name="POLICY" default="POLICY.xml#INSERT_PODS_SEM"  />
                <var name="SRV_DISTRICT_GUID" default="" type="String"/>
                <var name="COMPANY_GCL" default="" type="String"/>
                <var name="DESCRIPTION" default="" type="String"/>
                <var name="SOURCE_GCL" default="" type="String"/>
                <var name="COMMENTS" default="" type="String"/>
                <var name="ID" type="Int64" direction="Output" default="SELECT max(SRV_DISTRICT_ID) id FROM PODS.SRV_DISTRICT_GCL"/>
                <var name="USER_ID" default="-1" type="Int64"/>
                <query>
					DO $$
					DECLARE
					returnId integer;
                    BEGIN
                    INSERT INTO PODS.SRV_DISTRICT_GCL(SRV_DISTRICT_GUID,COMPANY_GCL,DESCRIPTION,SOURCE_GCL,COMMENTS)
                    VALUES('{SRV_DISTRICT_GUID}',NULLIF('{COMPANY_GCL}',''),NULLIF('{DESCRIPTION}',''),NULLIF('{SOURCE_GCL}',''),NULLIF('{COMMENTS}',''))
                    RETURNING SRV_DISTRICT_ID INTO returnId;
					END $$;
                </query>
            </dbCommand>
        </insert>
        <update>
            <dbCommand>
				<param name="CLASS_ID" type="String" direction="Input" default="PODS_SRV_DISTRICT_GCL" /> 
				<var name="POLICY" default="POLICY.xml#UPDATE_PODS_SEM"  />
                <param name="SRV_DISTRICT_GUID" default="" type="String"/>
                <param name="COMPANY_GCL" default="" type="String"/>
                <param name="DESCRIPTION" default="" type="String"/>
                <param name="SOURCE_GCL" default="" type="String"/>
                <param name="COMMENTS" default="" type="String"/>
                <param name="GID" default="NULL" type="Decimal"/>
                <param name="ID" type="Int64" direction="Input"/>
                <param name="USER_ID" default="-1" type="Int64"/>
                <query>
                    UPDATE PODS.SRV_DISTRICT_GCL
                    SET 
					SRV_DISTRICT_GUID=case when :SRV_DISTRICT_GUID is null then SRV_DISTRICT_GUID else :SRV_DISTRICT_GUID end,
                    COMPANY_GCL=case when :COMPANY_GCL is null then COMPANY_GCL else :COMPANY_GCL end,
                    DESCRIPTION=case when :DESCRIPTION is null then DESCRIPTION else :DESCRIPTION end,
                    SOURCE_GCL=case when :SOURCE_GCL is null then SOURCE_GCL else :SOURCE_GCL end,
                    COMMENTS=case when :COMMENTS is null then COMMENTS else :COMMENTS end,
					GID=case when :GID is null then GID else :GID end
                    WHERE SRV_DISTRICT_ID = :ID;
                </query>
            </dbCommand>
        </update>
        <delete>
            <dbCommand>
				<var name="CLASS_ID" type="String" direction="Input" default="PODS_SRV_DISTRICT_GCL" /> 
				<var name="POLICY" default="POLICY.xml#DELETE_PODS_SEM"  />
                <var name="ID" type="Int64" direction="Input"/>
                <var name="USER_ID" default="-1" type="Int64"/>
                <query>
					DO $$
                    BEGIN
                    UPDATE PODS.LOCATION SET SRV_DISTRICT_GCL = 0
                    WHERE SRV_DISTRICT_GCL = {ID};

                    DELETE FROM PODS.SRV_DISTRICT_GCL
                    WHERE SRV_DISTRICT_ID = {ID};
                    DELETE FROM WEB50.LNK_GATE WHERE LEFT_OBJ_ID = 'PODS_SRV_DISTRICT_GCL/'||CAST({ID} AS VARCHAR(30)) OR RIGHT_OBJ_ID = 'PODS_SRV_DISTRICT_GCL/'||CAST({ID} AS VARCHAR(30)); 
					END $$;
                </query>
            </dbCommand>
        </delete>
    </data>
    <data table="PIPE_SYSTEM_CL" schema="PODS" id="PODS_PIPE_SYSTEM_CL" comment="PODS.PIPE_SYSTEM_CL">
        <select>
            <dbQuery idField="ID">
                <param name="USER_ID" default="-1" type="Int64"/>
                <var name="FILTER" default="1=1"/>
                <var name="LPU_ACCESS_FILTER" default="SELECT srv_district_id FROM PODS.SRV_DISTRICT_GCL"/>
                <query>
                    SELECT * FROM (SELECT d.PIPE_SYSTEM_ID ID, d.* FROM PODS.PIPE_SYSTEM_CL d) d WHERE {FILTER}
                </query>
            </dbQuery>
        </select>
        <insert>
            <dbCommand>
				<var name="CLASS_ID" type="String" direction="Input" default="PODS_PIPE_SYSTEM_CL" /> 
				<var name="POLICY" default="POLICY.xml#INSERT_PODS_SEM"  />
                <var name="PIPE_SYSTEM_GUID" default="" type="String"/>
                <var name="DESCRIPTION" default="" type="String"/>
                <var name="SOURCE_GCL" default="" type="String"/>
                <var name="COMMENTS" default="" type="String"/>
                <var name="ID" type="Int64" direction="Output" default="SELECT max(EVENT_ID) id FROM PODS.EVENT_RANGE"/>
                <var name="USER_ID" default="-1" type="Int64"/>
                <query>
					DO $$
					DECLARE
					returnId integer;
                    BEGIN
                    INSERT INTO PODS.PIPE_SYSTEM_CL(PIPE_SYSTEM_GUID,DESCRIPTION,SOURCE_GCL,COMMENTS)
                    VALUES('{PIPE_SYSTEM_GUID}',NULLIF('{DESCRIPTION}',''),NULLIF('{SOURCE_GCL}',''),NULLIF('{COMMENTS}',''))
                    RETURNING PIPE_SYSTEM_ID INTO  returnId;
					END $$;
                </query>
            </dbCommand>
        </insert>
        <update>
            <dbCommand>
				<param name="CLASS_ID" type="String" direction="Input" default="PODS_PIPE_SYSTEM_CL" /> 
				<var name="POLICY" default="POLICY.xml#UPDATE_PODS_SEM"  />
                <param name="PIPE_SYSTEM_GUID" default="" type="String"/>
                <param name="DESCRIPTION" default="" type="String"/>
                <param name="SOURCE_GCL" default="" type="String"/>
                <param name="COMMENTS" default="" type="String"/>
                <param name="ID" type="Int64" direction="Input"/>
                <param name="USER_ID" default="-1" type="Int64"/>
                <query>
                    UPDATE PODS.PIPE_SYSTEM_CL
                    SET 
					PIPE_SYSTEM_GUID=case when :PIPE_SYSTEM_GUID is null then PIPE_SYSTEM_GUID else :PIPE_SYSTEM_GUID end,
                    DESCRIPTION=case when :DESCRIPTION is null then DESCRIPTION else :DESCRIPTION end,
                    SOURCE_GCL=case when :SOURCE_GCL is null then SOURCE_GCL else :SOURCE_GCL end,
                    COMMENTS=case when :COMMENTS is null then COMMENTS else :COMMENTS end
                    WHERE PIPE_SYSTEM_ID = :ID;
                </query>
            </dbCommand>
        </update>
        <delete>
            <dbCommand>
				<var name="CLASS_ID" type="String" direction="Input" default="PODS_PIPE_SYSTEM_CL" /> 
				<var name="POLICY" default="POLICY.xml#DELETE_PODS_SEM"  />
                <var name="ID" type="Int64" direction="Input"/>
                <var name="USER_ID" default="-1" type="Int64"/>
                <query>
					DO $$
                    BEGIN

                    DELETE
                    FROM WEB50.PS_INDEX_OBJ
                    WHERE PIPE_SYSTEM_ID = {ID};

                    DELETE
                    FROM WEB50.LNK_GATE
                    WHERE LEFT_OBJ_ID IN (SELECT 'PODS_PIPE_SYSTEM_BOUNDARY/'||CAST(PIPE_SYSTEM_ID AS VARCHAR(30))||';'
                    ||CAST(LINE_ID AS VARCHAR(30))||';'
                    ||CAST(KM_BEGIN AS VARCHAR(30))||';'
                    ||CAST(KM_END AS VARCHAR(30))||';'
                    FROM PODS.PIPE_SYSTEM_BOUNDARY
                    WHERE PIPE_SYSTEM_ID = {ID})
                    OR RIGHT_OBJ_ID IN (SELECT 'PODS_PIPE_SYSTEM_BOUNDARY/'||CAST(PIPE_SYSTEM_ID AS VARCHAR(30))||';'
                    ||CAST(LINE_ID AS VARCHAR(30))||';'
                    ||CAST(KM_BEGIN AS VARCHAR(30))||';'
                    ||CAST(KM_END AS VARCHAR(30))||';'
                    FROM PODS.PIPE_SYSTEM_BOUNDARY
                    WHERE PIPE_SYSTEM_ID = {ID});


                    DELETE
                    FROM PODS.PIPE_SYSTEM_BOUNDARY
                    WHERE PIPE_SYSTEM_ID = {ID};

                    DELETE
                    FROM PODS.PIPE_SYSTEM_CL
                    WHERE PIPE_SYSTEM_ID = {ID};

                    DELETE
                    FROM PODS.PIPE_SYSTEM_AXIS_G  ag
                    WHERE NOT EXISTS (SELECT 1
                    FROM PODS.PIPE_SYSTEM_CL ps
                    WHERE PS.AXIS_GID = AG.GID);

                    DELETE
                    FROM PODS.PIPE_SYSTEM_BUFFER_G bg
                    WHERE NOT EXISTS (SELECT 1
                    FROM PODS.PIPE_SYSTEM_CL ps
                    WHERE PS.BUFFER_GID = BG.GID);

                    DELETE
                    FROM WEB50.LNK_GATE
                    WHERE LEFT_OBJ_ID = 'PODS_PIPE_SYSTEM_CL/'||CAST({ID} AS VARCHAR(30))
                    OR RIGHT_OBJ_ID = 'PODS_PIPE_SYSTEM_CL/'||CAST({ID} AS VARCHAR(30));

                    END $$;
                </query>
            </dbCommand>
        </delete>
    </data>
    <data table="ILI_DATA" schema="PODS" id="PODS_ILI_DATA" comment="PODS.ILI_DATA">
        <select>
            <dbQuery idField="ID">
                <param name="USER_ID" default="-1" type="Int64"/>
                <var name="FILTER" default="1=1"/>
                <var name="LPU_ACCESS_FILTER" default="SELECT srv_district_id FROM PODS.SRV_DISTRICT_GCL"/>
                <query>
                    SELECT *
                    FROM (SELECT t.ili_data_id ID, t.*,
                    c.cluster_comment, c.r_595_2011_repair_method,
                    c.r_595_2011_depth_abrasion, c.r_595_2011_square_abrasion,
                    c.r_595_2011_length_pipe_repair, c.r_595_2011_comment,
                    c.sto_112_2007_assurance_factor,
                    c.sto_112_2007_destruct_pressure, c.sto_112_2007_allow_pressure,
                    c.sto_112_2007_performance_eval,
                    c.sto_173_2007_critical_pressure, c.sto_173_2007_danger_degree,
                    c.sto_173_2007_safe_pressure, c.sto_292_2007_danger_rank,
                    c.sto_401_2009_fail_probability
                    FROM pods.ili_data t JOIN pods.ili_anomaly_type_cl ia
                    ON t.anomaly_type_cl = ia.code
                    LEFT JOIN pods.sto_ili_data_calc c ON t.ili_data_id = c.ili_data_id
                    ) d WHERE {FILTER}
                </query>
            </dbQuery>
        </select>
        <insert>
            <dbCommand>
				<var name="CLASS_ID" type="String" direction="Input" default="PODS_ILI_DATA" /> 
				<var name="POLICY" default="POLICY.xml#INSERT_PODS_SEM"  />
                <var name="ILI_DATA_GUID" default="" type="String"/>
                <var name="EVENT_GUID" default="" type="String"/>
                <var name="WELD_NUMBER" default="" type="String"/>
                <var name="US_WELD_NUMBER" default="" type="String"/>
                <var name="DATE_COLLECTED" default="" type="DateTime"/>
                <var name="ABSOLUTE_ODOMETER" default="NULL" type="Decimal"/>
                <var name="US_WELD_ODOMETER" default="NULL" type="Decimal"/>
                <var name="US_WELD_DISTANCE" default="NULL" type="Decimal"/>
                <var name="DS_WELD_ODOMETER" default="NULL" type="Decimal"/>
                <var name="DS_WELD_DISTANCE" default="NULL" type="Decimal"/>
                <var name="US_AGM_DISTANCE" default="NULL" type="Decimal"/>
                <var name="DS_AGM_DISTANCE" default="NULL" type="Decimal"/>
                <var name="US_AGM_REFERENCE" default="" type="String"/>
                <var name="DS_AGM_REFERENCE" default="" type="String"/>
                <var name="RAW_REFERENCE_KEY" default="" type="String"/>
                <var name="MAX_DEPTH_PCT" default="NULL" type="Decimal"/>
                <var name="MAX_DEPTH_MEASURED" default="NULL" type="Decimal"/>
                <var name="AVERAGE_DEPTH" default="NULL" type="Decimal"/>
                <var name="LENGTH" default="NULL" type="Decimal"/>
                <var name="WIDTH" default="NULL" type="Decimal"/>
                <var name="ORIENTATION_DEG" default="NULL" type="Decimal"/>
                <var name="ANOMALY_TYPE_CL" default="0" type="Decimal"/>
                <var name="INTERNAL_EXTERNAL_CL" default="UNKNOWN" type="String"/>
                <var name="ANOMALY_EXTENSION_CL" default="UNKNOWN" type="String"/>
                <var name="MAX_DIAMETER" default="0" type="Decimal"/>
                <var name="MIN_DIAMETER" default="0" type="Decimal"/>
                <var name="OVALITY" default="NULL" type="Decimal"/>
                <var name="AXIAL_OVALITY" default="NULL" type="Decimal"/>
                <var name="SEAM_ORIENTATION" default="NULL" type="Decimal"/>
                <var name="MEASURED_WALL_THICKNESS" default="0" type="Decimal"/>
                <var name="NOMINAL_WALL_THICKNESS" default="0" type="Decimal"/>
                <var name="PIPE_SMYS" default="NULL" type="Decimal"/>
                <var name="B31G_MAOP" default="NULL" type="Decimal"/>
                <var name="B31G_ERF" default="NULL" type="Decimal"/>
                <var name="MODB31G_MAOP" default="NULL" type="Decimal"/>
                <var name="MODB31G_ERF" default="NULL" type="Decimal"/>
                <var name="BPR_CALCULATED" default="NULL" type="Decimal"/>
                <var name="BPR_PIG" default="NULL" type="Decimal"/>
                <var name="BURST_PRESSURE" default="NULL" type="Decimal"/>
                <var name="BPR_VARIANCE" default="NULL" type="Decimal"/>
                <var name="RPR_CALCULATED" default="NULL" type="Decimal"/>
                <var name="RPR_PIG" default="NULL" type="Decimal"/>
                <var name="RPR_VARIANCE" default="NULL" type="Decimal"/>
                <var name="MILEPOST" default="" type="String"/>
                <var name="COORDINATE_ID" default="-1" type="Decimal"/>
                <var name="COORDINATE_GUID" default="" type="String"/>
                <var name="CERTAINTY_INTERVAL" default="NULL" type="Decimal"/>
                <var name="DEPTH_ACCURACY" default="" type="String"/>
                <var name="LENGTH_ACCURACY" default="" type="String"/>
                <var name="WIDTH_ACCURACY" default="" type="String"/>
                <var name="WITHIN_SPECIFICATION_LF" default="" type="String"/>
                <var name="FEATURE_DESCRIPTION" default="" type="String"/>
                <var name="CONTROL_POINT_LF" default="" type="String"/>
                <var name="ILI_CLUSTER_ID" default="NULL" type="Decimal"/>
                <var name="ILI_CLUSTER_GUID" default="" type="String"/>
                <var name="REF_EVENT_ID" default="NULL" type="Decimal"/>
                <var name="REF_EVENT_GUID" default="" type="String"/>
                <var name="ILI_INSPECTION_ID" default="NULL" type="Decimal"/>
                <var name="ILI_INSPECTION_GUID" default="" type="String"/>
                <var name="STATION_REPORTED" default="" type="String"/>
                <var name="CALIBRATED_MEASURE" default="NULL" type="Decimal"/>
                <var name="DESCRIPTION" default="" type="String"/>
                <var name="SOURCE_GCL" default="UNKNOWN" type="String"/>
                <var name="COMMENTS" default="" type="String"/>
                <var name="ID" type="Int64" direction="Output" default="SELECT max(EVENT_ID) id FROM PODS.EVENT_RANGE"/>
                <var name="PODS_USER" type="String"/>
                <var name="USER_ID" default="-1" type="Int64"/>
                <query>
					DO $$
                    DECLARE
                    e_id NUMERIC (16, 0);
					returnId integer;
                    BEGIN
                    INSERT INTO PODS.EVENT_RANGE (EVENT_GUID,FEATURE_ID,STATION_ID_BEGIN,STATION_ID_END,PODS_USER,CREATE_DATE,EFFECTIVE_FROM_DATE,CURRENT_INDICATOR_LF,POSITIONING_TYPE_CL)
                    VALUES('{EVENT_GUID}','ILI_DATA',0,0,NULLIF('{PODS_USER}',''),current_timestamp,current_timestamp,'Y','UNKNOWN')
                    RETURNING EVENT_ID INTO e_id;

                    INSERT INTO PODS.ILI_DATA(EVENT_ID,ILI_DATA_GUID,EVENT_GUID,WELD_NUMBER,US_WELD_NUMBER,DATE_COLLECTED,ABSOLUTE_ODOMETER,US_WELD_ODOMETER,US_WELD_DISTANCE,DS_WELD_ODOMETER,DS_WELD_DISTANCE,US_AGM_DISTANCE,DS_AGM_DISTANCE,US_AGM_REFERENCE,DS_AGM_REFERENCE,RAW_REFERENCE_KEY,MAX_DEPTH_PCT,MAX_DEPTH_MEASURED,AVERAGE_DEPTH,LENGTH,WIDTH,ORIENTATION_DEG,ANOMALY_TYPE_CL,INTERNAL_EXTERNAL_CL,ANOMALY_EXTENSION_CL,MAX_DIAMETER,MIN_DIAMETER,OVALITY,AXIAL_OVALITY,SEAM_ORIENTATION,MEASURED_WALL_THICKNESS,NOMINAL_WALL_THICKNESS,PIPE_SMYS,B31G_MAOP,B31G_ERF,MODB31G_MAOP,MODB31G_ERF,BPR_CALCULATED,BPR_PIG,BURST_PRESSURE,BPR_VARIANCE,RPR_CALCULATED,RPR_PIG,RPR_VARIANCE,MILEPOST,COORDINATE_ID,COORDINATE_GUID,CERTAINTY_INTERVAL,DEPTH_ACCURACY,LENGTH_ACCURACY,WIDTH_ACCURACY,WITHIN_SPECIFICATION_LF,FEATURE_DESCRIPTION,CONTROL_POINT_LF,ILI_CLUSTER_ID,ILI_CLUSTER_GUID,REF_EVENT_ID,REF_EVENT_GUID,ILI_INSPECTION_ID,ILI_INSPECTION_GUID,STATION_REPORTED,CALIBRATED_MEASURE,DESCRIPTION,SOURCE_GCL,COMMENTS)
                    VALUES(e_id,'{ILI_DATA_GUID}','{EVENT_GUID}',NULLIF('{WELD_NUMBER}',''),NULLIF('{US_WELD_NUMBER}',''),'{DATE_COLLECTED}',{ABSOLUTE_ODOMETER},{US_WELD_ODOMETER},{US_WELD_DISTANCE},{DS_WELD_ODOMETER},{DS_WELD_DISTANCE},{US_AGM_DISTANCE},{DS_AGM_DISTANCE},NULLIF('{US_AGM_REFERENCE}',''),NULLIF('{DS_AGM_REFERENCE}',''),NULLIF('{RAW_REFERENCE_KEY}',''),{MAX_DEPTH_PCT},{MAX_DEPTH_MEASURED},{AVERAGE_DEPTH},{LENGTH},{WIDTH},{ORIENTATION_DEG},{ANOMALY_TYPE_CL},NULLIF('{INTERNAL_EXTERNAL_CL}',''),NULLIF('{ANOMALY_EXTENSION_CL}',''),{MAX_DIAMETER},{MIN_DIAMETER},{OVALITY},{AXIAL_OVALITY},{SEAM_ORIENTATION},{MEASURED_WALL_THICKNESS},{NOMINAL_WALL_THICKNESS},{PIPE_SMYS},{B31G_MAOP},{B31G_ERF},{MODB31G_MAOP},{MODB31G_ERF},{BPR_CALCULATED},{BPR_PIG},{BURST_PRESSURE},{BPR_VARIANCE},{RPR_CALCULATED},{RPR_PIG},{RPR_VARIANCE},NULLIF('{MILEPOST}',''),{COORDINATE_ID},'{COORDINATE_GUID}',{CERTAINTY_INTERVAL},'{DEPTH_ACCURACY}','{LENGTH_ACCURACY}','{WIDTH_ACCURACY}','{WITHIN_SPECIFICATION_LF}',NULLIF('{FEATURE_DESCRIPTION}',''),'{CONTROL_POINT_LF}',{ILI_CLUSTER_ID},'{ILI_CLUSTER_GUID}',{REF_EVENT_ID},'{REF_EVENT_GUID}',{ILI_INSPECTION_ID},'{ILI_INSPECTION_GUID}','{STATION_REPORTED}',{CALIBRATED_MEASURE},NULLIF('{DESCRIPTION}',''),NULLIF('{SOURCE_GCL}',''),NULLIF('{COMMENTS}',''))
                    RETURNING ILI_DATA_ID INTO returnId;
					END $$;
                </query>
            </dbCommand>
        </insert>
        <update>
            <dbCommand>
				<param name="CLASS_ID" type="String" direction="Input" default="PODS_ILI_DATA" /> 
				<var name="POLICY" default="POLICY.xml#UPDATE_PODS_SEM"  />
                <param name="ILI_DATA_GUID" default="" type="String"/>
                <param name="EVENT_GUID" default="" type="String"/>
                <param name="WELD_NUMBER" default="" type="String"/>
                <param name="US_WELD_NUMBER" default="" type="String"/>
                <param name="DATE_COLLECTED" default="" type="DateTime"/>
                <param name="ABSOLUTE_ODOMETER" default="NULL" type="Decimal"/>
                <param name="US_WELD_ODOMETER" default="NULL" type="Decimal"/>
                <param name="US_WELD_DISTANCE" default="NULL" type="Decimal"/>
                <param name="DS_WELD_ODOMETER" default="NULL" type="Decimal"/>
                <param name="DS_WELD_DISTANCE" default="NULL" type="Decimal"/>
                <param name="US_AGM_DISTANCE" default="NULL" type="Decimal"/>
                <param name="DS_AGM_DISTANCE" default="NULL" type="Decimal"/>
                <param name="US_AGM_REFERENCE" default="" type="String"/>
                <param name="DS_AGM_REFERENCE" default="" type="String"/>
                <param name="RAW_REFERENCE_KEY" default="" type="String"/>
                <param name="MAX_DEPTH_PCT" default="NULL" type="Decimal"/>
                <param name="MAX_DEPTH_MEASURED" default="NULL" type="Decimal"/>
                <param name="AVERAGE_DEPTH" default="NULL" type="Decimal"/>
                <param name="LENGTH" default="NULL" type="Decimal"/>
                <param name="WIDTH" default="NULL" type="Decimal"/>
                <param name="ORIENTATION_DEG" default="NULL" type="Decimal"/>
                <param name="ANOMALY_TYPE_CL" default="0" type="Decimal"/>
                <param name="INTERNAL_EXTERNAL_CL" default="UNKNOWN" type="String"/>
                <param name="ANOMALY_EXTENSION_CL" default="UNKNOWN" type="String"/>
                <param name="MAX_DIAMETER" default="0" type="Decimal"/>
                <param name="MIN_DIAMETER" default="0" type="Decimal"/>
                <param name="OVALITY" default="NULL" type="Decimal"/>
                <param name="AXIAL_OVALITY" default="NULL" type="Decimal"/>
                <param name="SEAM_ORIENTATION" default="NULL" type="Decimal"/>
                <param name="MEASURED_WALL_THICKNESS" default="0" type="Decimal"/>
                <param name="NOMINAL_WALL_THICKNESS" default="0" type="Decimal"/>
                <param name="PIPE_SMYS" default="NULL" type="Decimal"/>
                <param name="B31G_MAOP" default="NULL" type="Decimal"/>
                <param name="B31G_ERF" default="NULL" type="Decimal"/>
                <param name="MODB31G_MAOP" default="NULL" type="Decimal"/>
                <param name="MODB31G_ERF" default="NULL" type="Decimal"/>
                <param name="BPR_CALCULATED" default="NULL" type="Decimal"/>
                <param name="BPR_PIG" default="NULL" type="Decimal"/>
                <param name="BURST_PRESSURE" default="NULL" type="Decimal"/>
                <param name="BPR_VARIANCE" default="NULL" type="Decimal"/>
                <param name="RPR_CALCULATED" default="NULL" type="Decimal"/>
                <param name="RPR_PIG" default="NULL" type="Decimal"/>
                <param name="RPR_VARIANCE" default="NULL" type="Decimal"/>
                <param name="MILEPOST" default="" type="String"/>
                <param name="COORDINATE_ID" default="-1" type="Decimal"/>
                <param name="COORDINATE_GUID" default="" type="String"/>
                <param name="CERTAINTY_INTERVAL" default="NULL" type="Decimal"/>
                <param name="DEPTH_ACCURACY" default="" type="String"/>
                <param name="LENGTH_ACCURACY" default="" type="String"/>
                <param name="WIDTH_ACCURACY" default="" type="String"/>
                <param name="WITHIN_SPECIFICATION_LF" default="" type="String"/>
                <param name="FEATURE_DESCRIPTION" default="" type="String"/>
                <param name="CONTROL_POINT_LF" default="" type="String"/>
                <param name="ILI_CLUSTER_ID" default="NULL" type="Decimal"/>
                <param name="ILI_CLUSTER_GUID" default="" type="String"/>
                <param name="REF_EVENT_ID" default="NULL" type="Decimal"/>
                <param name="REF_EVENT_GUID" default="" type="String"/>
                <param name="ILI_INSPECTION_ID" default="NULL" type="Decimal"/>
                <param name="ILI_INSPECTION_GUID" default="" type="String"/>
                <param name="STATION_REPORTED" default="" type="String"/>
                <param name="CALIBRATED_MEASURE" default="NULL" type="Decimal"/>
                <param name="DESCRIPTION" default="" type="String"/>
                <param name="SOURCE_GCL" default="UNKNOWN" type="String"/>
                <param name="COMMENTS" default="" type="String"/>
                <param name="ID" type="Int64" direction="Input"/>
                <param name="USER_ID" default="-1" type="Int64"/>
                <query>
                    UPDATE PODS.ILI_DATA
                    SET 
					ILI_DATA_GUID=case when :ILI_DATA_GUID is null then ILI_DATA_GUID else :ILI_DATA_GUID end,
                    EVENT_GUID=case when :EVENT_GUID is null then EVENT_GUID else :EVENT_GUID end,
                    WELD_NUMBER=case when :WELD_NUMBER is null then WELD_NUMBER else :WELD_NUMBER end,
                    US_WELD_NUMBER=case when :US_WELD_NUMBER is null then US_WELD_NUMBER else :US_WELD_NUMBER end,
                    DATE_COLLECTED=case when :DATE_COLLECTED is null then DATE_COLLECTED else :DATE_COLLECTED end,
                    ABSOLUTE_ODOMETER=case when :ABSOLUTE_ODOMETER is null then ABSOLUTE_ODOMETER else :ABSOLUTE_ODOMETER end,
                    US_WELD_ODOMETER=case when :US_WELD_ODOMETER is null then US_WELD_ODOMETER else :US_WELD_ODOMETER end,
                    US_WELD_DISTANCE=case when :US_WELD_DISTANCE is null then US_WELD_DISTANCE else :US_WELD_DISTANCE end,
                    DS_WELD_ODOMETER=case when :DS_WELD_ODOMETER is null then DS_WELD_ODOMETER else :DS_WELD_ODOMETER end,
                    DS_WELD_DISTANCE=case when :DS_WELD_DISTANCE is null then DS_WELD_DISTANCE else :DS_WELD_DISTANCE end,
                    US_AGM_DISTANCE=case when :US_AGM_DISTANCE is null then US_AGM_DISTANCE else :US_AGM_DISTANCE end,
                    DS_AGM_DISTANCE=case when :DS_AGM_DISTANCE is null then DS_AGM_DISTANCE else :DS_AGM_DISTANCE end,
                    US_AGM_REFERENCE=case when :US_AGM_REFERENCE is null then US_AGM_REFERENCE else :US_AGM_REFERENCE end,
                    DS_AGM_REFERENCE=case when :DS_AGM_REFERENCE is null then DS_AGM_REFERENCE else :DS_AGM_REFERENCE end,
                    RAW_REFERENCE_KEY=case when :RAW_REFERENCE_KEY is null then RAW_REFERENCE_KEY else :RAW_REFERENCE_KEY end,
                    MAX_DEPTH_PCT=case when :MAX_DEPTH_PCT is null then MAX_DEPTH_PCT else :MAX_DEPTH_PCT end,
                    MAX_DEPTH_MEASURED=case when :MAX_DEPTH_MEASURED is null then MAX_DEPTH_MEASURED else :MAX_DEPTH_MEASURED end,
                    AVERAGE_DEPTH=case when :AVERAGE_DEPTH is null then AVERAGE_DEPTH else :AVERAGE_DEPTH end,
                    LENGTH=case when :LENGTH is null then LENGTH else :LENGTH end,
                    WIDTH=case when :WIDTH is null then WIDTH else :WIDTH end,
                    ORIENTATION_DEG=case when :ORIENTATION_DEG is null then ORIENTATION_DEG else :ORIENTATION_DEG end,
                    ANOMALY_TYPE_CL=case when :ANOMALY_TYPE_CL is null then ANOMALY_TYPE_CL else :ANOMALY_TYPE_CL end,
                    INTERNAL_EXTERNAL_CL=case when :INTERNAL_EXTERNAL_CL is null then INTERNAL_EXTERNAL_CL else :INTERNAL_EXTERNAL_CL end,
                    ANOMALY_EXTENSION_CL=case when :ANOMALY_EXTENSION_CL is null then ANOMALY_EXTENSION_CL else :ANOMALY_EXTENSION_CL end,
                    MAX_DIAMETER=case when :MAX_DIAMETER is null then MAX_DIAMETER else :MAX_DIAMETER end,
                    MIN_DIAMETER=case when :MIN_DIAMETER is null then MIN_DIAMETER else :MIN_DIAMETER end,
                    OVALITY=case when :OVALITY is null then OVALITY else :OVALITY end,
                    AXIAL_OVALITY=case when :AXIAL_OVALITY is null then AXIAL_OVALITY else :AXIAL_OVALITY end,
                    SEAM_ORIENTATION=case when :SEAM_ORIENTATION is null then SEAM_ORIENTATION else :SEAM_ORIENTATION end,
                    MEASURED_WALL_THICKNESS=case when :MEASURED_WALL_THICKNESS is null then MEASURED_WALL_THICKNESS else :MEASURED_WALL_THICKNESS end,
                    NOMINAL_WALL_THICKNESS=case when :NOMINAL_WALL_THICKNESS is null then NOMINAL_WALL_THICKNESS else :NOMINAL_WALL_THICKNESS end,
                    PIPE_SMYS=case when :PIPE_SMYS is null then PIPE_SMYS else :PIPE_SMYS end,
                    B31G_MAOP=case when :B31G_MAOP is null then B31G_MAOP else :B31G_MAOP end,
                    B31G_ERF=case when :B31G_ERF is null then B31G_ERF else :B31G_ERF end,
                    MODB31G_MAOP=case when :MODB31G_MAOP is null then MODB31G_MAOP else :MODB31G_MAOP end,
                    MODB31G_ERF=case when :MODB31G_ERF is null then MODB31G_ERF else :MODB31G_ERF end,
                    BPR_CALCULATED=case when :BPR_CALCULATED is null then BPR_CALCULATED else :BPR_CALCULATED end,
                    BPR_PIG=case when :BPR_PIG is null then BPR_PIG else :BPR_PIG end,
                    BURST_PRESSURE=case when :BURST_PRESSURE is null then BURST_PRESSURE else :BURST_PRESSURE end,
                    BPR_VARIANCE=case when :BPR_VARIANCE is null then BPR_VARIANCE else :BPR_VARIANCE end,
                    RPR_CALCULATED=case when :RPR_CALCULATED is null then RPR_CALCULATED else :RPR_CALCULATED end,
                    RPR_PIG=case when :RPR_PIG is null then RPR_PIG else :RPR_PIG end,
                    RPR_VARIANCE=case when :RPR_VARIANCE is null then RPR_VARIANCE else :RPR_VARIANCE end,
                    MILEPOST=case when :MILEPOST is null then MILEPOST else :MILEPOST end,
                    COORDINATE_ID=case when :COORDINATE_ID is null then COORDINATE_ID else :COORDINATE_ID end,
                    COORDINATE_GUID=case when :COORDINATE_GUID is null then COORDINATE_GUID else :COORDINATE_GUID end,
                    CERTAINTY_INTERVAL=case when :CERTAINTY_INTERVAL is null then CERTAINTY_INTERVAL else :CERTAINTY_INTERVAL end,
                    DEPTH_ACCURACY=case when :DEPTH_ACCURACY is null then DEPTH_ACCURACY else :DEPTH_ACCURACY end,
                    LENGTH_ACCURACY=case when :LENGTH_ACCURACY is null then LENGTH_ACCURACY else :LENGTH_ACCURACY end,
                    WIDTH_ACCURACY=case when :WIDTH_ACCURACY is null then WIDTH_ACCURACY else :WIDTH_ACCURACY end,
                    WITHIN_SPECIFICATION_LF=case when :WITHIN_SPECIFICATION_LF is null then WITHIN_SPECIFICATION_LF else :WITHIN_SPECIFICATION_LF end,
                    FEATURE_DESCRIPTION=case when :FEATURE_DESCRIPTION is null then FEATURE_DESCRIPTION else :FEATURE_DESCRIPTION end,
                    CONTROL_POINT_LF=case when :CONTROL_POINT_LF is null then CONTROL_POINT_LF else :CONTROL_POINT_LF end,
                    ILI_CLUSTER_ID=case when :ILI_CLUSTER_ID is null then ILI_CLUSTER_ID else :ILI_CLUSTER_ID end,
                    ILI_CLUSTER_GUID=case when :ILI_CLUSTER_GUID is null then ILI_CLUSTER_GUID else :ILI_CLUSTER_GUID end,
                    REF_EVENT_ID=case when :REF_EVENT_ID is null then REF_EVENT_ID else :REF_EVENT_ID end,
                    REF_EVENT_GUID=case when :REF_EVENT_GUID is null then REF_EVENT_GUID else :REF_EVENT_GUID end,
                    ILI_INSPECTION_ID=case when :ILI_INSPECTION_ID is null then ILI_INSPECTION_ID else :ILI_INSPECTION_ID end,
                    ILI_INSPECTION_GUID=case when :ILI_INSPECTION_GUID is null then ILI_INSPECTION_GUID else :ILI_INSPECTION_GUID end,
                    STATION_REPORTED=case when :STATION_REPORTED is null then STATION_REPORTED else :STATION_REPORTED end,
                    CALIBRATED_MEASURE=case when :CALIBRATED_MEASURE is null then CALIBRATED_MEASURE else :CALIBRATED_MEASURE end,
                    DESCRIPTION=case when :DESCRIPTION is null then DESCRIPTION else :DESCRIPTION end,
                    SOURCE_GCL=case when :SOURCE_GCL is null then SOURCE_GCL else :SOURCE_GCL end,
                    COMMENTS=case when :COMMENTS is null then COMMENTS else :COMMENTS end
                    WHERE ILI_DATA_ID = :ID;
                </query>
            </dbCommand>
        </update>
        <delete>
            <dbCommand>
				<var name="CLASS_ID" type="String" direction="Input" default="PODS_ILI_DATA" /> 
				<var name="POLICY" default="POLICY.xml#DELETE_PODS_SEM"  />
                <var name="ID" type="Int64" direction="Input"/>
                <var name="USER_ID" default="-1" type="Int64"/>
                <query>
					DO $$
                    BEGIN
                    UPDATE PODS.EVENT_RANGE
                    SET CURRENT_INDICATOR_LF='N'
                    WHERE EVENT_ID IN (SELECT EVENT_ID FROM PODS.ILI_DATA WHERE ILI_DATA_ID = {ID});

                    DELETE FROM PODS.STO_ILI_DATA_CALC_ADV
                    WHERE ILI_DATA_ID = {ID};

                    DELETE FROM PODS.STO_ILI_DATA_CALC
                    WHERE ILI_DATA_ID = {ID};
					
					delete from pods.sto_sheet_excavate_list l where l.ili_data_id  = {ID};
					
					delete from pods.sto_sheet_repair_list l where l.ili_data_id = {ID};


                    DELETE FROM PODS.ILI_DATA
                    WHERE ILI_DATA_ID = {ID};
                    DELETE FROM WEB50.LNK_GATE WHERE LEFT_OBJ_ID = 'PODS_ILI_DATA/'||CAST({ID} AS VARCHAR(30)) OR RIGHT_OBJ_ID = 'PODS_ILI_DATA/'||CAST({ID} AS VARCHAR(30)); 
					END $$;
                </query>
            </dbCommand>
        </delete>
    </data>
    <data table="ILI_DATA" schema="PODS" id="PODS_ILI_DATA_FEATURE" comment="PODS.ILI_DATA">
        <select>
            <dbQuery idField="ID">
                <param name="USER_ID" default="-1" type="Int64"/>
                <var name="FILTER" default="1=1"/>
                <var name="LPU_ACCESS_FILTER" default="SELECT srv_district_id FROM PODS.SRV_DISTRICT_GCL"/>
                <query>
                    SELECT * FROM (SELECT ILI_DATA_ID ID, t.* FROM PODS.ILI_DATA t JOIN pods.ili_anomaly_type_cl ia ON t.anomaly_type_cl = ia.code AND ia.category_cl = 2) d WHERE {FILTER}
                </query>
            </dbQuery>
        </select>
        <insert>
            <dbCommand>
				<var name="CLASS_ID" type="String" direction="Input" default="PODS_ILI_DATA_FEATURE" /> 
				<var name="POLICY" default="POLICY.xml#INSERT_PODS_SEM"  />
                <var name="ILI_DATA_GUID" default="" type="String"/>
                <var name="EVENT_GUID" default="" type="String"/>
                <var name="WELD_NUMBER" default="" type="String"/>
                <var name="US_WELD_NUMBER" default="" type="String"/>
                <var name="DATE_COLLECTED" default="" type="DateTime"/>
                <var name="ABSOLUTE_ODOMETER" default="NULL" type="Decimal"/>
                <var name="US_WELD_ODOMETER" default="NULL" type="Decimal"/>
                <var name="US_WELD_DISTANCE" default="NULL" type="Decimal"/>
                <var name="DS_WELD_ODOMETER" default="NULL" type="Decimal"/>
                <var name="DS_WELD_DISTANCE" default="NULL" type="Decimal"/>
                <var name="US_AGM_DISTANCE" default="NULL" type="Decimal"/>
                <var name="DS_AGM_DISTANCE" default="NULL" type="Decimal"/>
                <var name="US_AGM_REFERENCE" default="" type="String"/>
                <var name="DS_AGM_REFERENCE" default="" type="String"/>
                <var name="RAW_REFERENCE_KEY" default="" type="String"/>
                <var name="MAX_DEPTH_PCT" default="NULL" type="Decimal"/>
                <var name="MAX_DEPTH_MEASURED" default="NULL" type="Decimal"/>
                <var name="AVERAGE_DEPTH" default="NULL" type="Decimal"/>
                <var name="LENGTH" default="NULL" type="Decimal"/>
                <var name="WIDTH" default="NULL" type="Decimal"/>
                <var name="ORIENTATION_DEG" default="NULL" type="Decimal"/>
                <var name="ANOMALY_TYPE_CL" default="0" type="Decimal"/>
                <var name="INTERNAL_EXTERNAL_CL" default="UNKNOWN" type="String"/>
                <var name="ANOMALY_EXTENSION_CL" default="UNKNOWN" type="String"/>
                <var name="MAX_DIAMETER" default="0" type="Decimal"/>
                <var name="MIN_DIAMETER" default="0" type="Decimal"/>
                <var name="OVALITY" default="NULL" type="Decimal"/>
                <var name="AXIAL_OVALITY" default="NULL" type="Decimal"/>
                <var name="SEAM_ORIENTATION" default="NULL" type="Decimal"/>
                <var name="MEASURED_WALL_THICKNESS" default="0" type="Decimal"/>
                <var name="NOMINAL_WALL_THICKNESS" default="0" type="Decimal"/>
                <var name="PIPE_SMYS" default="NULL" type="Decimal"/>
                <var name="B31G_MAOP" default="NULL" type="Decimal"/>
                <var name="B31G_ERF" default="NULL" type="Decimal"/>
                <var name="MODB31G_MAOP" default="NULL" type="Decimal"/>
                <var name="MODB31G_ERF" default="NULL" type="Decimal"/>
                <var name="BPR_CALCULATED" default="NULL" type="Decimal"/>
                <var name="BPR_PIG" default="NULL" type="Decimal"/>
                <var name="BURST_PRESSURE" default="NULL" type="Decimal"/>
                <var name="BPR_VARIANCE" default="NULL" type="Decimal"/>
                <var name="RPR_CALCULATED" default="NULL" type="Decimal"/>
                <var name="RPR_PIG" default="NULL" type="Decimal"/>
                <var name="RPR_VARIANCE" default="NULL" type="Decimal"/>
                <var name="MILEPOST" default="" type="String"/>
                <var name="COORDINATE_ID" default="-1" type="Decimal"/>
                <var name="COORDINATE_GUID" default="" type="String"/>
                <var name="CERTAINTY_INTERVAL" default="NULL" type="Decimal"/>
                <var name="DEPTH_ACCURACY" default="" type="String"/>
                <var name="LENGTH_ACCURACY" default="" type="String"/>
                <var name="WIDTH_ACCURACY" default="" type="String"/>
                <var name="WITHIN_SPECIFICATION_LF" default="" type="String"/>
                <var name="FEATURE_DESCRIPTION" default="" type="String"/>
                <var name="CONTROL_POINT_LF" default="" type="String"/>
                <var name="ILI_CLUSTER_ID" default="NULL" type="Decimal"/>
                <var name="ILI_CLUSTER_GUID" default="" type="String"/>
                <var name="REF_EVENT_ID" default="NULL" type="Decimal"/>
                <var name="REF_EVENT_GUID" default="" type="String"/>
                <var name="ILI_INSPECTION_ID" default="NULL" type="Decimal"/>
                <var name="ILI_INSPECTION_GUID" default="" type="String"/>
                <var name="STATION_REPORTED" default="" type="String"/>
                <var name="CALIBRATED_MEASURE" default="NULL" type="Decimal"/>
                <var name="DESCRIPTION" default="" type="String"/>
                <var name="SOURCE_GCL" default="UNKNOWN" type="String"/>
                <var name="COMMENTS" default="" type="String"/>
                <var name="ID" type="Int64" direction="Output" default="SELECT max(EVENT_ID) id FROM PODS.EVENT_RANGE"/>
                <var name="PODS_USER" type="String"/>
                <var name="USER_ID" default="-1" type="Int64"/>
                <query>
					DO $$
					DECLARE
					e_id NUMERIC (16, 0);
					returnId integer;
                    BEGIN
                    INSERT INTO PODS.EVENT_RANGE (EVENT_GUID,FEATURE_ID,STATION_ID_BEGIN,STATION_ID_END,PODS_USER,CREATE_DATE,EFFECTIVE_FROM_DATE,CURRENT_INDICATOR_LF,POSITIONING_TYPE_CL)
                    VALUES('{EVENT_GUID}','ILI_DATA',0,0,NULLIF('{PODS_USER}',''),current_timestamp,current_timestamp,'Y','UNKNOWN')
                    RETURNING EVENT_ID INTO e_id;

                    INSERT INTO PODS.ILI_DATA(EVENT_ID,ILI_DATA_GUID,EVENT_GUID,WELD_NUMBER,US_WELD_NUMBER,DATE_COLLECTED,ABSOLUTE_ODOMETER,US_WELD_ODOMETER,US_WELD_DISTANCE,DS_WELD_ODOMETER,DS_WELD_DISTANCE,US_AGM_DISTANCE,DS_AGM_DISTANCE,US_AGM_REFERENCE,DS_AGM_REFERENCE,RAW_REFERENCE_KEY,MAX_DEPTH_PCT,MAX_DEPTH_MEASURED,AVERAGE_DEPTH,LENGTH,WIDTH,ORIENTATION_DEG,ANOMALY_TYPE_CL,INTERNAL_EXTERNAL_CL,ANOMALY_EXTENSION_CL,MAX_DIAMETER,MIN_DIAMETER,OVALITY,AXIAL_OVALITY,SEAM_ORIENTATION,MEASURED_WALL_THICKNESS,NOMINAL_WALL_THICKNESS,PIPE_SMYS,B31G_MAOP,B31G_ERF,MODB31G_MAOP,MODB31G_ERF,BPR_CALCULATED,BPR_PIG,BURST_PRESSURE,BPR_VARIANCE,RPR_CALCULATED,RPR_PIG,RPR_VARIANCE,MILEPOST,COORDINATE_ID,COORDINATE_GUID,CERTAINTY_INTERVAL,DEPTH_ACCURACY,LENGTH_ACCURACY,WIDTH_ACCURACY,WITHIN_SPECIFICATION_LF,FEATURE_DESCRIPTION,CONTROL_POINT_LF,ILI_CLUSTER_ID,ILI_CLUSTER_GUID,REF_EVENT_ID,REF_EVENT_GUID,ILI_INSPECTION_ID,ILI_INSPECTION_GUID,STATION_REPORTED,CALIBRATED_MEASURE,DESCRIPTION,SOURCE_GCL,COMMENTS)
                    VALUES(e_id,'{ILI_DATA_GUID}','{EVENT_GUID}',NULLIF('{WELD_NUMBER}',''),NULLIF('{US_WELD_NUMBER}',''),'{DATE_COLLECTED}',{ABSOLUTE_ODOMETER},{US_WELD_ODOMETER},{US_WELD_DISTANCE},{DS_WELD_ODOMETER},{DS_WELD_DISTANCE},{US_AGM_DISTANCE},{DS_AGM_DISTANCE},NULLIF('{US_AGM_REFERENCE}',''),NULLIF('{DS_AGM_REFERENCE}',''),NULLIF('{RAW_REFERENCE_KEY}',''),{MAX_DEPTH_PCT},{MAX_DEPTH_MEASURED},{AVERAGE_DEPTH},{LENGTH},{WIDTH},{ORIENTATION_DEG},{ANOMALY_TYPE_CL},NULLIF('{INTERNAL_EXTERNAL_CL}',''),NULLIF('{ANOMALY_EXTENSION_CL}',''),{MAX_DIAMETER},{MIN_DIAMETER},{OVALITY},{AXIAL_OVALITY},{SEAM_ORIENTATION},{MEASURED_WALL_THICKNESS},{NOMINAL_WALL_THICKNESS},{PIPE_SMYS},{B31G_MAOP},{B31G_ERF},{MODB31G_MAOP},{MODB31G_ERF},{BPR_CALCULATED},{BPR_PIG},{BURST_PRESSURE},{BPR_VARIANCE},{RPR_CALCULATED},{RPR_PIG},{RPR_VARIANCE},NULLIF('{MILEPOST}',''),{COORDINATE_ID},'{COORDINATE_GUID}',{CERTAINTY_INTERVAL},'{DEPTH_ACCURACY}','{LENGTH_ACCURACY}','{WIDTH_ACCURACY}','{WITHIN_SPECIFICATION_LF}',NULLIF('{FEATURE_DESCRIPTION}',''),'{CONTROL_POINT_LF}',{ILI_CLUSTER_ID},'{ILI_CLUSTER_GUID}',{REF_EVENT_ID},'{REF_EVENT_GUID}',{ILI_INSPECTION_ID},'{ILI_INSPECTION_GUID}','{STATION_REPORTED}',{CALIBRATED_MEASURE},NULLIF('{DESCRIPTION}',''),NULLIF('{SOURCE_GCL}',''),NULLIF('{COMMENTS}',''))
                    RETURNING ILI_DATA_ID INTO returnId;
					END $$;
                </query>
            </dbCommand>
        </insert>
        <update>
            <dbCommand>
				<param name="CLASS_ID" type="String" direction="Input" default="PODS_ILI_DATA_FEATURE" /> 
				<var name="POLICY" default="POLICY.xml#UPDATE_PODS_SEM"  />
                <param name="ILI_DATA_GUID" default="" type="String"/>
                <param name="EVENT_GUID" default="" type="String"/>
                <param name="WELD_NUMBER" default="" type="String"/>
                <param name="US_WELD_NUMBER" default="" type="String"/>
                <param name="DATE_COLLECTED" default="" type="DateTime"/>
                <param name="ABSOLUTE_ODOMETER" default="NULL" type="Decimal"/>
                <param name="US_WELD_ODOMETER" default="NULL" type="Decimal"/>
                <param name="US_WELD_DISTANCE" default="NULL" type="Decimal"/>
                <param name="DS_WELD_ODOMETER" default="NULL" type="Decimal"/>
                <param name="DS_WELD_DISTANCE" default="NULL" type="Decimal"/>
                <param name="US_AGM_DISTANCE" default="NULL" type="Decimal"/>
                <param name="DS_AGM_DISTANCE" default="NULL" type="Decimal"/>
                <param name="US_AGM_REFERENCE" default="" type="String"/>
                <param name="DS_AGM_REFERENCE" default="" type="String"/>
                <param name="RAW_REFERENCE_KEY" default="" type="String"/>
                <param name="MAX_DEPTH_PCT" default="NULL" type="Decimal"/>
                <param name="MAX_DEPTH_MEASURED" default="NULL" type="Decimal"/>
                <param name="AVERAGE_DEPTH" default="NULL" type="Decimal"/>
                <param name="LENGTH" default="NULL" type="Decimal"/>
                <param name="WIDTH" default="NULL" type="Decimal"/>
                <param name="ORIENTATION_DEG" default="NULL" type="Decimal"/>
                <param name="ANOMALY_TYPE_CL" default="0" type="Decimal"/>
                <param name="INTERNAL_EXTERNAL_CL" default="UNKNOWN" type="String"/>
                <param name="ANOMALY_EXTENSION_CL" default="UNKNOWN" type="String"/>
                <param name="MAX_DIAMETER" default="0" type="Decimal"/>
                <param name="MIN_DIAMETER" default="0" type="Decimal"/>
                <param name="OVALITY" default="NULL" type="Decimal"/>
                <param name="AXIAL_OVALITY" default="NULL" type="Decimal"/>
                <param name="SEAM_ORIENTATION" default="NULL" type="Decimal"/>
                <param name="MEASURED_WALL_THICKNESS" default="0" type="Decimal"/>
                <param name="NOMINAL_WALL_THICKNESS" default="0" type="Decimal"/>
                <param name="PIPE_SMYS" default="NULL" type="Decimal"/>
                <param name="B31G_MAOP" default="NULL" type="Decimal"/>
                <param name="B31G_ERF" default="NULL" type="Decimal"/>
                <param name="MODB31G_MAOP" default="NULL" type="Decimal"/>
                <param name="MODB31G_ERF" default="NULL" type="Decimal"/>
                <param name="BPR_CALCULATED" default="NULL" type="Decimal"/>
                <param name="BPR_PIG" default="NULL" type="Decimal"/>
                <param name="BURST_PRESSURE" default="NULL" type="Decimal"/>
                <param name="BPR_VARIANCE" default="NULL" type="Decimal"/>
                <param name="RPR_CALCULATED" default="NULL" type="Decimal"/>
                <param name="RPR_PIG" default="NULL" type="Decimal"/>
                <param name="RPR_VARIANCE" default="NULL" type="Decimal"/>
                <param name="MILEPOST" default="" type="String"/>
                <param name="COORDINATE_ID" default="-1" type="Decimal"/>
                <param name="COORDINATE_GUID" default="" type="String"/>
                <param name="CERTAINTY_INTERVAL" default="NULL" type="Decimal"/>
                <param name="DEPTH_ACCURACY" default="" type="String"/>
                <param name="LENGTH_ACCURACY" default="" type="String"/>
                <param name="WIDTH_ACCURACY" default="" type="String"/>
                <param name="WITHIN_SPECIFICATION_LF" default="" type="String"/>
                <param name="FEATURE_DESCRIPTION" default="" type="String"/>
                <param name="CONTROL_POINT_LF" default="" type="String"/>
                <param name="ILI_CLUSTER_ID" default="NULL" type="Decimal"/>
                <param name="ILI_CLUSTER_GUID" default="" type="String"/>
                <param name="REF_EVENT_ID" default="NULL" type="Decimal"/>
                <param name="REF_EVENT_GUID" default="" type="String"/>
                <param name="ILI_INSPECTION_ID" default="NULL" type="Decimal"/>
                <param name="ILI_INSPECTION_GUID" default="" type="String"/>
                <param name="STATION_REPORTED" default="" type="String"/>
                <param name="CALIBRATED_MEASURE" default="NULL" type="Decimal"/>
                <param name="DESCRIPTION" default="" type="String"/>
                <param name="SOURCE_GCL" default="UNKNOWN" type="String"/>
                <param name="COMMENTS" default="" type="String"/>
                <param name="ID" type="Int64" direction="Input"/>
                <param name="USER_ID" default="-1" type="Int64"/>
                <query>
                    UPDATE PODS.ILI_DATA
                    SET 
                    ILI_DATA_GUID=case when :ILI_DATA_GUID is null then ILI_DATA_GUID else :ILI_DATA_GUID end,
                    EVENT_GUID=case when :EVENT_GUID is null then EVENT_GUID else :EVENT_GUID end,
                    WELD_NUMBER=case when :WELD_NUMBER is null then WELD_NUMBER else :WELD_NUMBER end,
                    US_WELD_NUMBER=case when :US_WELD_NUMBER is null then US_WELD_NUMBER else :US_WELD_NUMBER end,
                    DATE_COLLECTED=case when :DATE_COLLECTED is null then DATE_COLLECTED else :DATE_COLLECTED end,
                    ABSOLUTE_ODOMETER=case when :ABSOLUTE_ODOMETER is null then ABSOLUTE_ODOMETER else :ABSOLUTE_ODOMETER end,
                    US_WELD_ODOMETER=case when :US_WELD_ODOMETER is null then US_WELD_ODOMETER else :US_WELD_ODOMETER end,
                    US_WELD_DISTANCE=case when :US_WELD_DISTANCE is null then US_WELD_DISTANCE else :US_WELD_DISTANCE end,
                    DS_WELD_ODOMETER=case when :DS_WELD_ODOMETER is null then DS_WELD_ODOMETER else :DS_WELD_ODOMETER end,
                    DS_WELD_DISTANCE=case when :DS_WELD_DISTANCE is null then DS_WELD_DISTANCE else :DS_WELD_DISTANCE end,
                    US_AGM_DISTANCE=case when :US_AGM_DISTANCE is null then US_AGM_DISTANCE else :US_AGM_DISTANCE end,
                    DS_AGM_DISTANCE=case when :DS_AGM_DISTANCE is null then DS_AGM_DISTANCE else :DS_AGM_DISTANCE end,
                    US_AGM_REFERENCE=case when :US_AGM_REFERENCE is null then US_AGM_REFERENCE else :US_AGM_REFERENCE end,
                    DS_AGM_REFERENCE=case when :DS_AGM_REFERENCE is null then DS_AGM_REFERENCE else :DS_AGM_REFERENCE end,
                    RAW_REFERENCE_KEY=case when :RAW_REFERENCE_KEY is null then RAW_REFERENCE_KEY else :RAW_REFERENCE_KEY end,
                    MAX_DEPTH_PCT=case when :MAX_DEPTH_PCT is null then MAX_DEPTH_PCT else :MAX_DEPTH_PCT end,
                    MAX_DEPTH_MEASURED=case when :MAX_DEPTH_MEASURED is null then MAX_DEPTH_MEASURED else :MAX_DEPTH_MEASURED end,
                    AVERAGE_DEPTH=case when :AVERAGE_DEPTH is null then AVERAGE_DEPTH else :AVERAGE_DEPTH end,
                    LENGTH=case when :LENGTH is null then LENGTH else :LENGTH end,
                    WIDTH=case when :WIDTH is null then WIDTH else :WIDTH end,
                    ORIENTATION_DEG=case when :ORIENTATION_DEG is null then ORIENTATION_DEG else :ORIENTATION_DEG end,
                    ANOMALY_TYPE_CL=case when :ANOMALY_TYPE_CL is null then ANOMALY_TYPE_CL else :ANOMALY_TYPE_CL end,
                    INTERNAL_EXTERNAL_CL=case when :INTERNAL_EXTERNAL_CL is null then INTERNAL_EXTERNAL_CL else :INTERNAL_EXTERNAL_CL end,
                    ANOMALY_EXTENSION_CL=case when :ANOMALY_EXTENSION_CL is null then ANOMALY_EXTENSION_CL else :ANOMALY_EXTENSION_CL end,
                    MAX_DIAMETER=case when :MAX_DIAMETER is null then MAX_DIAMETER else :MAX_DIAMETER end,
                    MIN_DIAMETER=case when :MIN_DIAMETER is null then MIN_DIAMETER else :MIN_DIAMETER end,
                    OVALITY=case when :OVALITY is null then OVALITY else :OVALITY end,
                    AXIAL_OVALITY=case when :AXIAL_OVALITY is null then AXIAL_OVALITY else :AXIAL_OVALITY end,
                    SEAM_ORIENTATION=case when :SEAM_ORIENTATION is null then SEAM_ORIENTATION else :SEAM_ORIENTATION end,
                    MEASURED_WALL_THICKNESS=case when :MEASURED_WALL_THICKNESS is null then MEASURED_WALL_THICKNESS else :MEASURED_WALL_THICKNESS end,
                    NOMINAL_WALL_THICKNESS=case when :NOMINAL_WALL_THICKNESS is null then NOMINAL_WALL_THICKNESS else :NOMINAL_WALL_THICKNESS end,
                    PIPE_SMYS=case when :PIPE_SMYS is null then PIPE_SMYS else :PIPE_SMYS end,
                    B31G_MAOP=case when :B31G_MAOP is null then B31G_MAOP else :B31G_MAOP end,
                    B31G_ERF=case when :B31G_ERF is null then B31G_ERF else :B31G_ERF end,
                    MODB31G_MAOP=case when :MODB31G_MAOP is null then MODB31G_MAOP else :MODB31G_MAOP end,
                    MODB31G_ERF=case when :MODB31G_ERF is null then MODB31G_ERF else :MODB31G_ERF end,
                    BPR_CALCULATED=case when :BPR_CALCULATED is null then BPR_CALCULATED else :BPR_CALCULATED end,
                    BPR_PIG=case when :BPR_PIG is null then BPR_PIG else :BPR_PIG end,
                    BURST_PRESSURE=case when :BURST_PRESSURE is null then BURST_PRESSURE else :BURST_PRESSURE end,
                    BPR_VARIANCE=case when :BPR_VARIANCE is null then BPR_VARIANCE else :BPR_VARIANCE end,
                    RPR_CALCULATED=case when :RPR_CALCULATED is null then RPR_CALCULATED else :RPR_CALCULATED end,
                    RPR_PIG=case when :RPR_PIG is null then RPR_PIG else :RPR_PIG end,
                    RPR_VARIANCE=case when :RPR_VARIANCE is null then RPR_VARIANCE else :RPR_VARIANCE end,
                    MILEPOST=case when :MILEPOST is null then MILEPOST else :MILEPOST end,
                    COORDINATE_ID=case when :COORDINATE_ID is null then COORDINATE_ID else :COORDINATE_ID end,
                    COORDINATE_GUID=case when :COORDINATE_GUID is null then COORDINATE_GUID else :COORDINATE_GUID end,
                    CERTAINTY_INTERVAL=case when :CERTAINTY_INTERVAL is null then CERTAINTY_INTERVAL else :CERTAINTY_INTERVAL end,
                    DEPTH_ACCURACY=case when :DEPTH_ACCURACY is null then DEPTH_ACCURACY else :DEPTH_ACCURACY end,
                    LENGTH_ACCURACY=case when :LENGTH_ACCURACY is null then LENGTH_ACCURACY else :LENGTH_ACCURACY end,
                    WIDTH_ACCURACY=case when :WIDTH_ACCURACY is null then WIDTH_ACCURACY else :WIDTH_ACCURACY end,
                    WITHIN_SPECIFICATION_LF=case when :WITHIN_SPECIFICATION_LF is null then WITHIN_SPECIFICATION_LF else :WITHIN_SPECIFICATION_LF end,
                    FEATURE_DESCRIPTION=case when :FEATURE_DESCRIPTION is null then FEATURE_DESCRIPTION else :FEATURE_DESCRIPTION end,
                    CONTROL_POINT_LF=case when :CONTROL_POINT_LF is null then CONTROL_POINT_LF else :CONTROL_POINT_LF end,
                    ILI_CLUSTER_ID=case when :ILI_CLUSTER_ID is null then ILI_CLUSTER_ID else :ILI_CLUSTER_ID end,
                    ILI_CLUSTER_GUID=case when :ILI_CLUSTER_GUID is null then ILI_CLUSTER_GUID else :ILI_CLUSTER_GUID end,
                    REF_EVENT_ID=case when :REF_EVENT_ID is null then REF_EVENT_ID else :REF_EVENT_ID end,
                    REF_EVENT_GUID=case when :REF_EVENT_GUID is null then REF_EVENT_GUID else :REF_EVENT_GUID end,
                    ILI_INSPECTION_ID=case when :ILI_INSPECTION_ID is null then ILI_INSPECTION_ID else :ILI_INSPECTION_ID end,
                    ILI_INSPECTION_GUID=case when :ILI_INSPECTION_GUID is null then ILI_INSPECTION_GUID else :ILI_INSPECTION_GUID end,
                    STATION_REPORTED=case when :STATION_REPORTED is null then STATION_REPORTED else :STATION_REPORTED end,
                    CALIBRATED_MEASURE=case when :CALIBRATED_MEASURE is null then CALIBRATED_MEASURE else :CALIBRATED_MEASURE end,
                    DESCRIPTION=case when :DESCRIPTION is null then DESCRIPTION else :DESCRIPTION end,
                    SOURCE_GCL=case when :SOURCE_GCL is null then SOURCE_GCL else :SOURCE_GCL end,
                    COMMENTS=case when :COMMENTS is null then COMMENTS else :COMMENTS end
                    WHERE ILI_DATA_ID = :ID;
                </query>
            </dbCommand>
        </update>
        <delete>
            <dbCommand>
				<var name="CLASS_ID" type="String" direction="Input" default="PODS_ILI_DATA_FEATURE" /> 
				<var name="POLICY" default="POLICY.xml#DELETE_PODS_SEM"  />
                <var name="ID" type="Int64" direction="Input"/>
                <var name="USER_ID" default="-1" type="Int64"/>
                <query>
					DO $$
                    BEGIN
                    UPDATE PODS.EVENT_RANGE
                    SET CURRENT_INDICATOR_LF='N'
                    WHERE EVENT_ID IN (SELECT EVENT_ID FROM PODS.ILI_DATA WHERE ILI_DATA_ID = {ID});

                    DELETE FROM PODS.STO_ILI_DATA_CALC
                    WHERE ILI_DATA_ID = {ID};

                    DELETE FROM PODS.ILI_DATA
                    WHERE ILI_DATA_ID = {ID};

                    DELETE FROM WEB50.LNK_GATE WHERE LEFT_OBJ_ID = 'PODS_ILI_DATA/'||CAST({ID} AS VARCHAR(30)) OR RIGHT_OBJ_ID = 'PODS_ILI_DATA/'||CAST({ID} AS VARCHAR(30)); 
					END $$;
                </query>
            </dbCommand>
        </delete>
    </data>
    <data table="ILI_DATA" schema="PODS" id="PODS_ILI_DATA_JUNCTION" comment="PODS.ILI_DATA">
        <select>
            <dbQuery idField="ID">
                <param name="USER_ID" default="-1" type="Int64"/>
                <var name="FILTER" default="1=1"/>
                <var name="LPU_ACCESS_FILTER" default="SELECT srv_district_id FROM PODS.SRV_DISTRICT_GCL"/>
                <query>
                    SELECT * FROM (SELECT ILI_DATA_ID ID, t.* FROM PODS.ILI_DATA t WHERE t.anomaly_type_cl = 5001) d WHERE {FILTER}
                </query>
            </dbQuery>
        </select>
        <insert>
            <dbCommand>
				<var name="CLASS_ID" type="String" direction="Input" default="PODS_ILI_DATA_JUNCTION" /> 
				<var name="POLICY" default="POLICY.xml#INSERT_PODS_SEM"  />
                <var name="ILI_DATA_GUID" default="" type="String"/>
                <var name="EVENT_GUID" default="" type="String"/>
                <var name="WELD_NUMBER" default="" type="String"/>
                <var name="US_WELD_NUMBER" default="" type="String"/>
                <var name="DATE_COLLECTED" default="" type="DateTime"/>
                <var name="ABSOLUTE_ODOMETER" default="NULL" type="Decimal"/>
                <var name="US_WELD_ODOMETER" default="NULL" type="Decimal"/>
                <var name="US_WELD_DISTANCE" default="NULL" type="Decimal"/>
                <var name="DS_WELD_ODOMETER" default="NULL" type="Decimal"/>
                <var name="DS_WELD_DISTANCE" default="NULL" type="Decimal"/>
                <var name="US_AGM_DISTANCE" default="NULL" type="Decimal"/>
                <var name="DS_AGM_DISTANCE" default="NULL" type="Decimal"/>
                <var name="US_AGM_REFERENCE" default="" type="String"/>
                <var name="DS_AGM_REFERENCE" default="" type="String"/>
                <var name="RAW_REFERENCE_KEY" default="" type="String"/>
                <var name="MAX_DEPTH_PCT" default="NULL" type="Decimal"/>
                <var name="MAX_DEPTH_MEASURED" default="NULL" type="Decimal"/>
                <var name="AVERAGE_DEPTH" default="NULL" type="Decimal"/>
                <var name="LENGTH" default="NULL" type="Decimal"/>
                <var name="WIDTH" default="NULL" type="Decimal"/>
                <var name="ORIENTATION_DEG" default="NULL" type="Decimal"/>
                <var name="ANOMALY_TYPE_CL" default="0" type="Decimal"/>
                <var name="INTERNAL_EXTERNAL_CL" default="UNKNOWN" type="String"/>
                <var name="ANOMALY_EXTENSION_CL" default="UNKNOWN" type="String"/>
                <var name="MAX_DIAMETER" default="0" type="Decimal"/>
                <var name="MIN_DIAMETER" default="0" type="Decimal"/>
                <var name="OVALITY" default="NULL" type="Decimal"/>
                <var name="AXIAL_OVALITY" default="NULL" type="Decimal"/>
                <var name="SEAM_ORIENTATION" default="NULL" type="Decimal"/>
                <var name="MEASURED_WALL_THICKNESS" default="0" type="Decimal"/>
                <var name="NOMINAL_WALL_THICKNESS" default="0" type="Decimal"/>
                <var name="PIPE_SMYS" default="NULL" type="Decimal"/>
                <var name="B31G_MAOP" default="NULL" type="Decimal"/>
                <var name="B31G_ERF" default="NULL" type="Decimal"/>
                <var name="MODB31G_MAOP" default="NULL" type="Decimal"/>
                <var name="MODB31G_ERF" default="NULL" type="Decimal"/>
                <var name="BPR_CALCULATED" default="NULL" type="Decimal"/>
                <var name="BPR_PIG" default="NULL" type="Decimal"/>
                <var name="BURST_PRESSURE" default="NULL" type="Decimal"/>
                <var name="BPR_VARIANCE" default="NULL" type="Decimal"/>
                <var name="RPR_CALCULATED" default="NULL" type="Decimal"/>
                <var name="RPR_PIG" default="NULL" type="Decimal"/>
                <var name="RPR_VARIANCE" default="NULL" type="Decimal"/>
                <var name="MILEPOST" default="" type="String"/>
                <var name="COORDINATE_ID" default="-1" type="Decimal"/>
                <var name="COORDINATE_GUID" default="" type="String"/>
                <var name="CERTAINTY_INTERVAL" default="NULL" type="Decimal"/>
                <var name="DEPTH_ACCURACY" default="" type="String"/>
                <var name="LENGTH_ACCURACY" default="" type="String"/>
                <var name="WIDTH_ACCURACY" default="" type="String"/>
                <var name="WITHIN_SPECIFICATION_LF" default="" type="String"/>
                <var name="FEATURE_DESCRIPTION" default="" type="String"/>
                <var name="CONTROL_POINT_LF" default="" type="String"/>
                <var name="ILI_CLUSTER_ID" default="NULL" type="Decimal"/>
                <var name="ILI_CLUSTER_GUID" default="" type="String"/>
                <var name="REF_EVENT_ID" default="NULL" type="Decimal"/>
                <var name="REF_EVENT_GUID" default="" type="String"/>
                <var name="ILI_INSPECTION_ID" default="NULL" type="Decimal"/>
                <var name="ILI_INSPECTION_GUID" default="" type="String"/>
                <var name="STATION_REPORTED" default="" type="String"/>
                <var name="CALIBRATED_MEASURE" default="NULL" type="Decimal"/>
                <var name="DESCRIPTION" default="" type="String"/>
                <var name="SOURCE_GCL" default="UNKNOWN" type="String"/>
                <var name="COMMENTS" default="" type="String"/>
                <var name="ID" type="Int64" direction="Output" default="SELECT max(EVENT_ID) id FROM PODS.EVENT_RANGE"/>
                <var name="PODS_USER" type="String"/>
                <var name="USER_ID" default="-1" type="Int64"/>
                <query>
					DO $$
					DECLARE
                    e_id NUMERIC (16, 0);					
					returnId integer;
                    BEGIN
                    INSERT INTO PODS.EVENT_RANGE (EVENT_GUID,FEATURE_ID,STATION_ID_BEGIN,STATION_ID_END,PODS_USER,CREATE_DATE,EFFECTIVE_FROM_DATE,CURRENT_INDICATOR_LF,POSITIONING_TYPE_CL)
                    VALUES('{EVENT_GUID}','ILI_DATA',0,0,NULLIF('{PODS_USER}',''),current_timestamp,current_timestamp,'Y','UNKNOWN')
                    RETURNING EVENT_ID INTO e_id;

                    INSERT INTO PODS.ILI_DATA(EVENT_ID,ILI_DATA_GUID,EVENT_GUID,WELD_NUMBER,US_WELD_NUMBER,DATE_COLLECTED,ABSOLUTE_ODOMETER,US_WELD_ODOMETER,US_WELD_DISTANCE,DS_WELD_ODOMETER,DS_WELD_DISTANCE,US_AGM_DISTANCE,DS_AGM_DISTANCE,US_AGM_REFERENCE,DS_AGM_REFERENCE,RAW_REFERENCE_KEY,MAX_DEPTH_PCT,MAX_DEPTH_MEASURED,AVERAGE_DEPTH,LENGTH,WIDTH,ORIENTATION_DEG,ANOMALY_TYPE_CL,INTERNAL_EXTERNAL_CL,ANOMALY_EXTENSION_CL,MAX_DIAMETER,MIN_DIAMETER,OVALITY,AXIAL_OVALITY,SEAM_ORIENTATION,MEASURED_WALL_THICKNESS,NOMINAL_WALL_THICKNESS,PIPE_SMYS,B31G_MAOP,B31G_ERF,MODB31G_MAOP,MODB31G_ERF,BPR_CALCULATED,BPR_PIG,BURST_PRESSURE,BPR_VARIANCE,RPR_CALCULATED,RPR_PIG,RPR_VARIANCE,MILEPOST,COORDINATE_ID,COORDINATE_GUID,CERTAINTY_INTERVAL,DEPTH_ACCURACY,LENGTH_ACCURACY,WIDTH_ACCURACY,WITHIN_SPECIFICATION_LF,FEATURE_DESCRIPTION,CONTROL_POINT_LF,ILI_CLUSTER_ID,ILI_CLUSTER_GUID,REF_EVENT_ID,REF_EVENT_GUID,ILI_INSPECTION_ID,ILI_INSPECTION_GUID,STATION_REPORTED,CALIBRATED_MEASURE,DESCRIPTION,SOURCE_GCL,COMMENTS)
                    VALUES(e_id,'{ILI_DATA_GUID}','{EVENT_GUID}',NULLIF('{WELD_NUMBER}',''),NULLIF('{US_WELD_NUMBER}',''),'{DATE_COLLECTED}',{ABSOLUTE_ODOMETER},{US_WELD_ODOMETER},{US_WELD_DISTANCE},{DS_WELD_ODOMETER},{DS_WELD_DISTANCE},{US_AGM_DISTANCE},{DS_AGM_DISTANCE},NULLIF('{US_AGM_REFERENCE}',''),NULLIF('{DS_AGM_REFERENCE}',''),NULLIF('{RAW_REFERENCE_KEY}',''),{MAX_DEPTH_PCT},{MAX_DEPTH_MEASURED},{AVERAGE_DEPTH},{LENGTH},{WIDTH},{ORIENTATION_DEG},{ANOMALY_TYPE_CL},NULLIF('{INTERNAL_EXTERNAL_CL}',''),NULLIF('{ANOMALY_EXTENSION_CL}',''),{MAX_DIAMETER},{MIN_DIAMETER},{OVALITY},{AXIAL_OVALITY},{SEAM_ORIENTATION},{MEASURED_WALL_THICKNESS},{NOMINAL_WALL_THICKNESS},{PIPE_SMYS},{B31G_MAOP},{B31G_ERF},{MODB31G_MAOP},{MODB31G_ERF},{BPR_CALCULATED},{BPR_PIG},{BURST_PRESSURE},{BPR_VARIANCE},{RPR_CALCULATED},{RPR_PIG},{RPR_VARIANCE},NULLIF('{MILEPOST}',''),{COORDINATE_ID},'{COORDINATE_GUID}',{CERTAINTY_INTERVAL},'{DEPTH_ACCURACY}','{LENGTH_ACCURACY}','{WIDTH_ACCURACY}','{WITHIN_SPECIFICATION_LF}',NULLIF('{FEATURE_DESCRIPTION}',''),'{CONTROL_POINT_LF}',{ILI_CLUSTER_ID},'{ILI_CLUSTER_GUID}',{REF_EVENT_ID},'{REF_EVENT_GUID}',{ILI_INSPECTION_ID},'{ILI_INSPECTION_GUID}','{STATION_REPORTED}',{CALIBRATED_MEASURE},NULLIF('{DESCRIPTION}',''),NULLIF('{SOURCE_GCL}',''),NULLIF('{COMMENTS}',''))
                    RETURNING ILI_DATA_ID INTO returnId;
					END $$;
                </query>
            </dbCommand>
        </insert>
        <update>
            <dbCommand>
				<param name="CLASS_ID" type="String" direction="Input" default="PODS_ILI_DATA_JUNCTION" /> 
				<var name="POLICY" default="POLICY.xml#UPDATE_PODS_SEM"  />
                <param name="ILI_DATA_GUID" default="" type="String"/>
                <param name="EVENT_GUID" default="" type="String"/>
                <param name="WELD_NUMBER" default="" type="String"/>
                <param name="US_WELD_NUMBER" default="" type="String"/>
                <param name="DATE_COLLECTED" default="" type="DateTime"/>
                <param name="ABSOLUTE_ODOMETER" default="NULL" type="Decimal"/>
                <param name="US_WELD_ODOMETER" default="NULL" type="Decimal"/>
                <param name="US_WELD_DISTANCE" default="NULL" type="Decimal"/>
                <param name="DS_WELD_ODOMETER" default="NULL" type="Decimal"/>
                <param name="DS_WELD_DISTANCE" default="NULL" type="Decimal"/>
                <param name="US_AGM_DISTANCE" default="NULL" type="Decimal"/>
                <param name="DS_AGM_DISTANCE" default="NULL" type="Decimal"/>
                <param name="US_AGM_REFERENCE" default="" type="String"/>
                <param name="DS_AGM_REFERENCE" default="" type="String"/>
                <param name="RAW_REFERENCE_KEY" default="" type="String"/>
                <param name="MAX_DEPTH_PCT" default="NULL" type="Decimal"/>
                <param name="MAX_DEPTH_MEASURED" default="NULL" type="Decimal"/>
                <param name="AVERAGE_DEPTH" default="NULL" type="Decimal"/>
                <param name="LENGTH" default="NULL" type="Decimal"/>
                <param name="WIDTH" default="NULL" type="Decimal"/>
                <param name="ORIENTATION_DEG" default="NULL" type="Decimal"/>
                <param name="ANOMALY_TYPE_CL" default="0" type="Decimal"/>
                <param name="INTERNAL_EXTERNAL_CL" default="UNKNOWN" type="String"/>
                <param name="ANOMALY_EXTENSION_CL" default="UNKNOWN" type="String"/>
                <param name="MAX_DIAMETER" default="0" type="Decimal"/>
                <param name="MIN_DIAMETER" default="0" type="Decimal"/>
                <param name="OVALITY" default="NULL" type="Decimal"/>
                <param name="AXIAL_OVALITY" default="NULL" type="Decimal"/>
                <param name="SEAM_ORIENTATION" default="NULL" type="Decimal"/>
                <param name="MEASURED_WALL_THICKNESS" default="0" type="Decimal"/>
                <param name="NOMINAL_WALL_THICKNESS" default="0" type="Decimal"/>
                <param name="PIPE_SMYS" default="NULL" type="Decimal"/>
                <param name="B31G_MAOP" default="NULL" type="Decimal"/>
                <param name="B31G_ERF" default="NULL" type="Decimal"/>
                <param name="MODB31G_MAOP" default="NULL" type="Decimal"/>
                <param name="MODB31G_ERF" default="NULL" type="Decimal"/>
                <param name="BPR_CALCULATED" default="NULL" type="Decimal"/>
                <param name="BPR_PIG" default="NULL" type="Decimal"/>
                <param name="BURST_PRESSURE" default="NULL" type="Decimal"/>
                <param name="BPR_VARIANCE" default="NULL" type="Decimal"/>
                <param name="RPR_CALCULATED" default="NULL" type="Decimal"/>
                <param name="RPR_PIG" default="NULL" type="Decimal"/>
                <param name="RPR_VARIANCE" default="NULL" type="Decimal"/>
                <param name="MILEPOST" default="" type="String"/>
                <param name="COORDINATE_ID" default="-1" type="Decimal"/>
                <param name="COORDINATE_GUID" default="" type="String"/>
                <param name="CERTAINTY_INTERVAL" default="NULL" type="Decimal"/>
                <param name="DEPTH_ACCURACY" default="" type="String"/>
                <param name="LENGTH_ACCURACY" default="" type="String"/>
                <param name="WIDTH_ACCURACY" default="" type="String"/>
                <param name="WITHIN_SPECIFICATION_LF" default="" type="String"/>
                <param name="FEATURE_DESCRIPTION" default="" type="String"/>
                <param name="CONTROL_POINT_LF" default="" type="String"/>
                <param name="ILI_CLUSTER_ID" default="NULL" type="Decimal"/>
                <param name="ILI_CLUSTER_GUID" default="" type="String"/>
                <param name="REF_EVENT_ID" default="NULL" type="Decimal"/>
                <param name="REF_EVENT_GUID" default="" type="String"/>
                <param name="ILI_INSPECTION_ID" default="NULL" type="Decimal"/>
                <param name="ILI_INSPECTION_GUID" default="" type="String"/>
                <param name="STATION_REPORTED" default="" type="String"/>
                <param name="CALIBRATED_MEASURE" default="NULL" type="Decimal"/>
                <param name="DESCRIPTION" default="" type="String"/>
                <param name="SOURCE_GCL" default="UNKNOWN" type="String"/>
                <param name="COMMENTS" default="" type="String"/>
                <param name="ID" type="Int64" direction="Input"/>
                <param name="USER_ID" default="-1" type="Int64"/>
                <query>
                    UPDATE PODS.ILI_DATA
                    SET 
					ILI_DATA_GUID=:ILI_DATA_GUID,EVENT_GUID=case when :EVENT_GUID is null then EVENT_GUID else :EVENT_GUID end,
                    WELD_NUMBER=case when :WELD_NUMBER is null then WELD_NUMBER else :WELD_NUMBER end,
					US_WELD_NUMBER=case when :US_WELD_NUMBER is null then US_WELD_NUMBER else :US_WELD_NUMBER end,
					DATE_COLLECTED=case when :DATE_COLLECTED is null then DATE_COLLECTED else :DATE_COLLECTED end,
					ABSOLUTE_ODOMETER=case when :ABSOLUTE_ODOMETER is null then ABSOLUTE_ODOMETER else :ABSOLUTE_ODOMETER end,
					US_WELD_ODOMETER=case when :US_WELD_ODOMETER is null then US_WELD_ODOMETER else :US_WELD_ODOMETER end,
					US_WELD_DISTANCE=case when :US_WELD_DISTANCE is null then US_WELD_DISTANCE else :US_WELD_DISTANCE end,
					DS_WELD_ODOMETER=case when :DS_WELD_ODOMETER is null then DS_WELD_ODOMETER else :DS_WELD_ODOMETER end,
					DS_WELD_DISTANCE=case when :DS_WELD_DISTANCE is null then DS_WELD_DISTANCE else :DS_WELD_DISTANCE end,
					US_AGM_DISTANCE=case when :US_AGM_DISTANCE is null then US_AGM_DISTANCE else :US_AGM_DISTANCE end,
					DS_AGM_DISTANCE=case when :DS_AGM_DISTANCE is null then DS_AGM_DISTANCE else :DS_AGM_DISTANCE end,
					US_AGM_REFERENCE=case when :US_AGM_REFERENCE is null then US_AGM_REFERENCE else :US_AGM_REFERENCE end,
					DS_AGM_REFERENCE=case when :DS_AGM_REFERENCE is null then DS_AGM_REFERENCE else :DS_AGM_REFERENCE end,
					RAW_REFERENCE_KEY=case when :RAW_REFERENCE_KEY is null then RAW_REFERENCE_KEY else :RAW_REFERENCE_KEY end,
					MAX_DEPTH_PCT=case when :MAX_DEPTH_PCT is null then MAX_DEPTH_PCT else :MAX_DEPTH_PCT end,
					MAX_DEPTH_MEASURED=case when :MAX_DEPTH_MEASURED is null then MAX_DEPTH_MEASURED else :MAX_DEPTH_MEASURED end,
					AVERAGE_DEPTH=case when :AVERAGE_DEPTH is null then AVERAGE_DEPTH else :AVERAGE_DEPTH end,
                    LENGTH=case when :LENGTH is null then LENGTH else :LENGTH end,
                    WIDTH=case when :WIDTH is null then WIDTH else :WIDTH end,
					ORIENTATION_DEG=case when :ORIENTATION_DEG is null then ORIENTATION_DEG else :ORIENTATION_DEG end,
					ANOMALY_TYPE_CL=case when :ANOMALY_TYPE_CL is null then ANOMALY_TYPE_CL else :ANOMALY_TYPE_CL end,
					INTERNAL_EXTERNAL_CL=case when :INTERNAL_EXTERNAL_CL is null then INTERNAL_EXTERNAL_CL else :INTERNAL_EXTERNAL_CL end,
					ANOMALY_EXTENSION_CL=case when :ANOMALY_EXTENSION_CL is null then ANOMALY_EXTENSION_CL else :ANOMALY_EXTENSION_CL end,
					MAX_DIAMETER=case when :MAX_DIAMETER is null then MAX_DIAMETER else :MAX_DIAMETER end,
					MIN_DIAMETER=case when :MIN_DIAMETER is null then MIN_DIAMETER else :MIN_DIAMETER end,
					OVALITY=case when :OVALITY is null then OVALITY else :OVALITY end,
					AXIAL_OVALITY=case when :AXIAL_OVALITY is null then AXIAL_OVALITY else :AXIAL_OVALITY end,
					SEAM_ORIENTATION=case when :SEAM_ORIENTATION is null then SEAM_ORIENTATION else :SEAM_ORIENTATION end,
                    MEASURED_WALL_THICKNESS=case when :MEASURED_WALL_THICKNESS is null then MEASURED_WALL_THICKNESS else :MEASURED_WALL_THICKNESS end,
                    NOMINAL_WALL_THICKNESS=case when :NOMINAL_WALL_THICKNESS is null then NOMINAL_WALL_THICKNESS else :NOMINAL_WALL_THICKNESS end,
					PIPE_SMYS=case when :PIPE_SMYS is null then PIPE_SMYS else :PIPE_SMYS end,
					B31G_MAOP=case when :B31G_MAOP is null then B31G_MAOP else :B31G_MAOP end,
					B31G_ERF=case when :B31G_ERF is null then B31G_ERF else :B31G_ERF end,
					MODB31G_MAOP=case when :MODB31G_MAOP is null then MODB31G_MAOP else :MODB31G_MAOP end,
					MODB31G_ERF=case when :MODB31G_ERF is null then MODB31G_ERF else :MODB31G_ERF end,
					BPR_CALCULATED=case when :BPR_CALCULATED is null then BPR_CALCULATED else :BPR_CALCULATED end,
					BPR_PIG=case when :BPR_PIG is null then BPR_PIG else :BPR_PIG end,
					BURST_PRESSURE=case when :BURST_PRESSURE is null then BURST_PRESSURE else :BURST_PRESSURE end,
					BPR_VARIANCE=case when :BPR_VARIANCE is null then BPR_VARIANCE else :BPR_VARIANCE end,
					RPR_CALCULATED=case when :RPR_CALCULATED is null then RPR_CALCULATED else :RPR_CALCULATED end,
					RPR_PIG=case when :RPR_PIG is null then RPR_PIG else :RPR_PIG end,
					RPR_VARIANCE=case when :RPR_VARIANCE is null then RPR_VARIANCE else :RPR_VARIANCE end,
					MILEPOST=case when :MILEPOST is null then MILEPOST else :MILEPOST end,
                    COORDINATE_ID=case when :COORDINATE_ID is null then COORDINATE_ID else :COORDINATE_ID end,
                    COORDINATE_GUID=case when :COORDINATE_GUID is null then COORDINATE_GUID else :COORDINATE_GUID end,
					CERTAINTY_INTERVAL=case when :CERTAINTY_INTERVAL is null then CERTAINTY_INTERVAL else :CERTAINTY_INTERVAL end,
					DEPTH_ACCURACY=case when :DEPTH_ACCURACY is null then DEPTH_ACCURACY else :DEPTH_ACCURACY end,
					LENGTH_ACCURACY=case when :LENGTH_ACCURACY is null then LENGTH_ACCURACY else :LENGTH_ACCURACY end,
					WIDTH_ACCURACY=case when :WIDTH_ACCURACY is null then WIDTH_ACCURACY else :WIDTH_ACCURACY end,
					WITHIN_SPECIFICATION_LF=case when :WITHIN_SPECIFICATION_LF is null then WITHIN_SPECIFICATION_LF else :WITHIN_SPECIFICATION_LF end,
					FEATURE_DESCRIPTION=case when :FEATURE_DESCRIPTION is null then FEATURE_DESCRIPTION else :FEATURE_DESCRIPTION end,
					CONTROL_POINT_LF=case when :CONTROL_POINT_LF is null then CONTROL_POINT_LF else :CONTROL_POINT_LF end,
					ILI_CLUSTER_ID=case when :ILI_CLUSTER_ID is null then ILI_CLUSTER_ID else :ILI_CLUSTER_ID end,
					ILI_CLUSTER_GUID=case when :ILI_CLUSTER_GUID is null then ILI_CLUSTER_GUID else :ILI_CLUSTER_GUID end,
                    REF_EVENT_ID=case when :REF_EVENT_ID is null then REF_EVENT_ID else :REF_EVENT_ID end,
                    REF_EVENT_GUID=case when :REF_EVENT_GUID is null then REF_EVENT_GUID else :REF_EVENT_GUID end,
                    ILI_INSPECTION_ID=case when :ILI_INSPECTION_ID is null then ILI_INSPECTION_ID else :ILI_INSPECTION_ID end,
                    STATION_REPORTED=case when :STATION_REPORTED is null then STATION_REPORTED else :STATION_REPORTED end,
                    CALIBRATED_MEASURE=case when :CALIBRATED_MEASURE is null then CALIBRATED_MEASURE else :CALIBRATED_MEASURE end,
                    DESCRIPTION=case when :DESCRIPTION is null then DESCRIPTION else :DESCRIPTION end,
                    SOURCE_GCL=case when :SOURCE_GCL is null then SOURCE_GCL else :SOURCE_GCL end,
                    COMMENTS=case when :COMMENTS is null then COMMENTS else :COMMENTS end
                    WHERE ILI_DATA_ID = :ID;
                </query>
            </dbCommand>
        </update>
        <delete>
            <dbCommand>
				<var name="CLASS_ID" type="String" direction="Input" default="PODS_ILI_DATA_JUNCTION" /> 
				<var name="POLICY" default="POLICY.xml#DELETE_PODS_SEM"  />
                <var name="ID" type="Int64" direction="Input"/>
                <var name="USER_ID" default="-1" type="Int64"/>
                <query>
					DO $$
                    BEGIN
                    UPDATE PODS.EVENT_RANGE
                    SET CURRENT_INDICATOR_LF='N'
                    WHERE EVENT_ID IN (SELECT EVENT_ID FROM PODS.ILI_DATA WHERE ILI_DATA_ID = {ID});

                    DELETE FROM PODS.STO_ILI_DATA_CALC
                    WHERE ILI_DATA_ID = {ID};

                    DELETE FROM PODS.ILI_DATA
                    WHERE ILI_DATA_ID = {ID};

                    DELETE FROM WEB50.LNK_GATE WHERE LEFT_OBJ_ID = 'PODS_ILI_DATA/'||CAST({ID} AS VARCHAR(30)) OR RIGHT_OBJ_ID = 'PODS_ILI_DATA/'||CAST({ID} AS VARCHAR(30)); 
					END $$;
                </query>
            </dbCommand>
        </delete>
    </data>
    <data table="ILI_INSPECTION_RANGE" schema="PODS" id="PODS_ILI_INSPECTION_RANGE" comment="PODS.ILI_INSPECTION_RANGE">
        <select>
            <dbQuery idField="ID">
                <param name="USER_ID" default="-1" type="Int64"/>
                <var name="FILTER" default="1=1"/>
                <var name="LPU_ACCESS_FILTER" default="SELECT srv_district_id FROM PODS.SRV_DISTRICT_GCL"/>
                <query>
                    SELECT * FROM (SELECT EVENT_ID ID, t.* FROM PODS.ILI_INSPECTION_RANGE t) d WHERE {FILTER}
                </query>
            </dbQuery>
        </select>
        <insert>
            <dbCommand>
				<var name="CLASS_ID" type="String" direction="Input" default="PODS_ILI_INSPECTION_RANGE" /> 
				<var name="POLICY" default="POLICY.xml#INSERT_PODS_SEM"  />
                <var name="ILI_INSPECTION_RANGE_GUID" default="" type="String"/>
                <var name="EVENT_GUID" default="" type="String"/>
                <var name="WORK_ORDER_ID" default="NULL" type="Decimal"/>
                <var name="WORK_ORDER_GUID" default="" type="String"/>
                <var name="START_ODOMETER" default="NULL" type="Decimal"/>
                <var name="END_ODOMETER" default="NULL" type="Decimal"/>
                <var name="ASCENDING" default="NULL" type="Decimal"/>
                <var name="SEQUENCE" default="NULL" type="Decimal"/>
                <var name="ILI_INSPECTION_ID" default="NULL" type="Decimal"/>
                <var name="ILI_INSPECTION_GUID" default="" type="String"/>
                <var name="LAUNCHER_EVENT_ID" default="NULL" type="Decimal"/>
                <var name="LAUNCHER_EVENT_GUID" default="" type="String"/>
                <var name="RECEIVER_EVENT_ID" default="NULL" type="Decimal"/>
                <var name="RECEIVER_EVENT_GUID" default="" type="String"/>
                <var name="WELD_START_NUMBER" default="" type="String"/>
                <var name="WELD_INCREMENT" default="NULL" type="Decimal"/>
                <var name="DESCRIPTION" default="" type="String"/>
                <var name="SOURCE_GCL" default="UNKNOWN" type="String"/>
                <var name="COMMENTS" default="" type="String"/>
                <var name="ID" type="Int64" direction="Output" default="SELECT max(EVENT_ID) id FROM PODS.EVENT_RANGE"/>
                <var name="PODS_USER" type="String"/>
                <var name="USER_ID" default="-1" type="Int64"/>
                <query>
					DO $$
					DECLARE
                    v_ili_inspection_range_id NUMERIC (16, 0);
                    v_launcher_event_id bigint DEFAULT NULL;
                    v_receiver_event_id bigint DEFAULT NULL;					
					returnId integer;
                    BEGIN
                    INSERT INTO PODS.EVENT_RANGE (EVENT_GUID,FEATURE_ID,STATION_ID_BEGIN,STATION_ID_END,PODS_USER,CREATE_DATE,EFFECTIVE_FROM_DATE,CURRENT_INDICATOR_LF,POSITIONING_TYPE_CL)
                    VALUES('{EVENT_GUID}','ILI_INSP_RNG',0,0,NULLIF('{PODS_USER}',''),current_timestamp,current_timestamp,'Y','UNKNOWN')
                    RETURNING EVENT_ID INTO returnId;

                    INSERT INTO PODS.ILI_INSPECTION_RANGE(EVENT_ID,ILI_INSPECTION_RANGE_GUID,EVENT_GUID,WORK_ORDER_ID,WORK_ORDER_GUID,START_ODOMETER,END_ODOMETER,ASCENDING,SEQUENCE,ILI_INSPECTION_ID,ILI_INSPECTION_GUID,LAUNCHER_EVENT_ID,LAUNCHER_EVENT_GUID,RECEIVER_EVENT_ID,RECEIVER_EVENT_GUID,WELD_START_NUMBER,WELD_INCREMENT,DESCRIPTION,SOURCE_GCL,COMMENTS)
                    VALUES(returnId,'{ILI_INSPECTION_RANGE_GUID}','{EVENT_GUID}',{WORK_ORDER_ID},'{WORK_ORDER_GUID}',{START_ODOMETER},{END_ODOMETER},{ASCENDING},{SEQUENCE},{ILI_INSPECTION_ID},'{ILI_INSPECTION_GUID}',{LAUNCHER_EVENT_ID},'{LAUNCHER_EVENT_GUID}',{RECEIVER_EVENT_ID},'{RECEIVER_EVENT_GUID}','{WELD_START_NUMBER}',{WELD_INCREMENT},NULLIF('{DESCRIPTION}',''),NULLIF('{SOURCE_GCL}',''),NULLIF('{COMMENTS}',''))
                    RETURNING ILI_INSPECTION_RANGE_ID INTO v_ili_inspection_range_id;

                    SELECT MIN(LR.EVENT_ID)
                    INTO v_launcher_event_id
                    FROM PODS.ILI_INSPECTION_RANGE IR
                    JOIN PODS.EVENT_RANGE ER
                    ON IR.EVENT_ID = ER.EVENT_ID
                    JOIN PODS.STATION_POINT SPB
                    ON ER.STATION_ID_BEGIN = SPB.STATION_ID
                    JOIN PODS.STATION_POINT SPL
                    ON SPB.ROUTE_ID = SPL.ROUTE_ID
                    JOIN PODS.EVENT_RANGE ERL
                    ON ERL.STATION_ID_BEGIN = SPL.STATION_ID
                    JOIN PODS.LAUNCHER_RECEIVER LR
                    ON ERL.EVENT_ID = LR.EVENT_ID
                    WHERE ERL.FEATURE_ID = 'LAUNC_REC'
                    AND LR.TYPE_CL = 'LAUNCH_R_TYPE_06'  /* Запуск */
                    AND SPB.STATION = SPL.STATION
                    AND IR.ILI_INSPECTION_RANGE_ID = v_ili_inspection_range_id;


                    SELECT MIN(LR.EVENT_ID)
                    INTO v_receiver_event_id
                    FROM PODS.ILI_INSPECTION_RANGE IR
                    JOIN PODS.EVENT_RANGE ER
                    ON IR.EVENT_ID = ER.EVENT_ID
                    JOIN PODS.STATION_POINT SPB
                    ON ER.STATION_ID_BEGIN = SPB.STATION_ID
                    JOIN PODS.STATION_POINT SPL
                    ON SPB.ROUTE_ID = SPL.ROUTE_ID
                    JOIN PODS.EVENT_RANGE ERL
                    ON ERL.STATION_ID_BEGIN = SPL.STATION_ID
                    JOIN PODS.LAUNCHER_RECEIVER LR
                    ON ERL.EVENT_ID = LR.EVENT_ID
                    WHERE ERL.FEATURE_ID = 'LAUNC_REC'
                    AND LR.TYPE_CL = 'LAUNCH_R_TYPE_07' /* Прием */
                    AND SPB.STATION = SPL.STATION
                    AND IR.ILI_INSPECTION_RANGE_ID = v_ili_inspection_range_id;

                    UPDATE PODS.ILI_INSPECTION_RANGE
                    SET LAUNCHER_EVENT_ID = v_launcher_event_id
                    ,RECEIVER_EVENT_ID = v_receiver_event_id
                    WHERE ILI_INSPECTION_RANGE_ID = v_ili_inspection_range_id;



					END $$;
                </query>
            </dbCommand>
        </insert>
        <update>
            <dbCommand>
				<param name="CLASS_ID" type="String" direction="Input" default="PODS_ILI_INSPECTION_RANGE" /> 
				<var name="POLICY" default="POLICY.xml#UPDATE_PODS_SEM"  />
                <param name="ILI_INSPECTION_RANGE_GUID" default="" type="String"/>
                <param name="EVENT_GUID" default="" type="String"/>
                <param name="WORK_ORDER_ID" default="NULL" type="Decimal"/>
                <param name="WORK_ORDER_GUID" default="" type="String"/>
                <param name="START_ODOMETER" default="NULL" type="Decimal"/>
                <param name="END_ODOMETER" default="NULL" type="Decimal"/>
                <param name="ASCENDING" default="NULL" type="Decimal"/>
                <param name="SEQUENCE" default="NULL" type="Decimal"/>
                <param name="ILI_INSPECTION_ID" default="NULL" type="Decimal"/>
                <param name="ILI_INSPECTION_GUID" default="" type="String"/>
                <param name="LAUNCHER_EVENT_ID" default="NULL" type="Decimal"/>
                <param name="LAUNCHER_EVENT_GUID" default="" type="String"/>
                <param name="RECEIVER_EVENT_ID" default="NULL" type="Decimal"/>
                <param name="RECEIVER_EVENT_GUID" default="" type="String"/>
                <param name="WELD_START_NUMBER" default="" type="String"/>
                <param name="WELD_INCREMENT" default="NULL" type="Decimal"/>
                <param name="DESCRIPTION" default="" type="String"/>
                <param name="SOURCE_GCL" default="UNKNOWN" type="String"/>
                <param name="COMMENTS" default="" type="String"/>
                <param name="ID" type="Int64" direction="Input"/>
                <param name="USER_ID" default="-1" type="Int64"/>
                <query>
                    UPDATE PODS.ILI_INSPECTION_RANGE
                    SET 
                    ILI_INSPECTION_RANGE_GUID=case when :ILI_INSPECTION_RANGE_GUID is null then ILI_INSPECTION_RANGE_GUID else :ILI_INSPECTION_RANGE_GUID end,
					EVENT_GUID=case when :EVENT_GUID is null then EVENT_GUID else :EVENT_GUID end,
                    WORK_ORDER_ID=case when :WORK_ORDER_ID is null then WORK_ORDER_ID else :WORK_ORDER_ID end,
                    WORK_ORDER_GUID=case when :WORK_ORDER_GUID is null then WORK_ORDER_GUID else :WORK_ORDER_GUID end,
                    START_ODOMETER=case when :START_ODOMETER is null then START_ODOMETER else :START_ODOMETER end,
                    END_ODOMETER=case when :END_ODOMETER is null then END_ODOMETER else :END_ODOMETER end,
                    ASCENDING=case when :ASCENDING is null then ASCENDING else :ASCENDING end,
                    SEQUENCE=case when :SEQUENCE is null then SEQUENCE else :SEQUENCE end,
                    ILI_INSPECTION_ID=case when :ILI_INSPECTION_ID is null then ILI_INSPECTION_ID else :ILI_INSPECTION_ID end,
                    ILI_INSPECTION_GUID=case when :ILI_INSPECTION_GUID is null then ILI_INSPECTION_GUID else :ILI_INSPECTION_GUID end,
                    LAUNCHER_EVENT_ID=case when :LAUNCHER_EVENT_ID is null then LAUNCHER_EVENT_ID else :LAUNCHER_EVENT_ID end,
                    LAUNCHER_EVENT_GUID=case when :LAUNCHER_EVENT_GUID is null then LAUNCHER_EVENT_GUID else :LAUNCHER_EVENT_GUID end,
                    RECEIVER_EVENT_ID=case when :RECEIVER_EVENT_ID is null then RECEIVER_EVENT_ID else :RECEIVER_EVENT_ID end,
                    RECEIVER_EVENT_GUID=case when :RECEIVER_EVENT_GUID is null then RECEIVER_EVENT_GUID else :RECEIVER_EVENT_GUID end,
                    WELD_START_NUMBER=case when :WELD_START_NUMBER is null then WELD_START_NUMBER else :WELD_START_NUMBER end,
                    WELD_INCREMENT=case when :WELD_INCREMENT is null then WELD_INCREMENT else :WELD_INCREMENT end,
                    DESCRIPTION=case when :DESCRIPTION is null then DESCRIPTION else :DESCRIPTION end,
                    SOURCE_GCL=case when :SOURCE_GCL is null then SOURCE_GCL else :SOURCE_GCL end,
                    COMMENTS=case when :COMMENTS is null then COMMENTS else :COMMENTS end
                    WHERE EVENT_ID = :ID;
                </query>
            </dbCommand>
        </update>
        <delete>
            <dbCommand>
				<var name="CLASS_ID" type="String" direction="Input" default="PODS_ILI_INSPECTION_RANGE" /> 
				<var name="POLICY" default="POLICY.xml#DELETE_PODS_SEM"  />
                <var name="ID" type="Int64" direction="Input"/>
                <var name="USER_ID" default="-1" type="Int64"/>
                <query>
					DO $$
                    BEGIN
                    UPDATE PODS.EVENT_RANGE
                    SET CURRENT_INDICATOR_LF='N'
                    WHERE EVENT_ID  = {ID};

                    DELETE FROM PODS.ILI_INSPECTION_RANGE
                    WHERE EVENT_ID = {ID};
                    DELETE FROM WEB50.LNK_GATE WHERE LEFT_OBJ_ID = 'PODS_ILI_INSPECTION_RANGE/'||CAST({ID} AS VARCHAR(30)) OR RIGHT_OBJ_ID = 'PODS_ILI_INSPECTION_RANGE/'||CAST({ID} AS VARCHAR(30)); 
					END $$;
                </query>
            </dbCommand>
        </delete>
    </data>
    <data table="PIPE_SYSTEM_BOUNDARY" schema="PODS" id="PODS_PIPE_SYSTEM_BOUNDARY" comment="PODS.PIPE_SYSTEM_BOUNDARY">
        <select>
            <dbQuery idField="ID">
                <param name="USER_ID" default="-1" type="Int64"/>
                <var name="FILTER" default="1=1"/>
                <var name="LPU_ACCESS_FILTER" default="SELECT srv_district_id FROM PODS.SRV_DISTRICT_GCL"/>
                <query>

                    SELECT * FROM (SELECT PIPE_SYSTEM_ID||';'||LINE_ID||';'||KM_BEGIN||';'||KM_END ID, t.* FROM PODS.PIPE_SYSTEM_BOUNDARY t) d WHERE {FILTER}
                </query>
            </dbQuery>
        </select>
		<insert>
            <dbCommand>
				<var name="CLASS_ID" type="String" direction="Input" default="PODS_PIPE_SYSTEM_BOUNDARY" /> 
				<var name="POLICY" default="POLICY.xml#INSERT_PODS_SEM"  />
                <var name="PIPE_SYSTEM_ID" default="NULL" type="Decimal"/>
                <var name="PIPE_SYSTEM_GUID" default="" type="String"/>
                <var name="LINE_ID" default="0" type="Decimal"/>
                <var name="KM_BEGIN" default="NULL" type="Decimal"/>
                <var name="KM_END" default="NULL" type="Decimal"/>
                <var name="EVENT_ID" default="NULL" type="Decimal"/>
                <var name="EVENT_GUID" default="" type="String"/>
                <var name="TITLE_EVENT_INDICATOR_LF" type="String" direction="Output" default="SELECT case when COUNT(*)=0 then 'N' else 'Y' END FROM PODS.PIPE_SYSTEM_BOUNDARY psb WHERE psb.TITLE_EVENT_INDICATOR_LF='Y' AND psb.PIPE_SYSTEM_ID = {PIPE_SYSTEM_ID}" />
                <var name="DESCRIPTION" default="" type="String"/>
                <var name="SOURCE_GCL" default="UNKNOWN" type="String"/>
                <var name="COMMENTS" default="" type="String"/>
                <var name="ID" direction="Output" type="String" default="SELECT PIPE_SYSTEM_ID||';'||LINE_ID||';'||KM_BEGIN||';'||KM_END FROM PODS.PIPE_SYSTEM_BOUNDARY WHERE PIPE_SYSTEM_ID={PIPE_SYSTEM_ID}"/>
                <var name="USER_ID" default="-1" type="Int64"/>
                <query>
					DO $$
					DECLARE
                  			 var_tmp varchar(1);					
                    BEGIN
                    SELECT case when COUNT(*)=0 then 'N' else 'Y' END INTO var_tmp FROM PODS.PIPE_SYSTEM_BOUNDARY psb WHERE psb.TITLE_EVENT_INDICATOR_LF='Y' AND psb.PIPE_SYSTEM_ID = {PIPE_SYSTEM_ID};

                    INSERT INTO PODS.PIPE_SYSTEM_BOUNDARY(PIPE_SYSTEM_ID,PIPE_SYSTEM_GUID,LINE_ID,KM_BEGIN,KM_END,EVENT_ID,EVENT_GUID,TITLE_EVENT_INDICATOR_LF,DESCRIPTION,SOURCE_GCL,COMMENTS)
                    VALUES({PIPE_SYSTEM_ID},'{PIPE_SYSTEM_GUID}',{LINE_ID},{KM_BEGIN},{KM_END},{EVENT_ID},'{EVENT_GUID}',var_tmp ,NULLIF('{DESCRIPTION}',''),NULLIF('{SOURCE_GCL}',''),NULLIF('{COMMENTS}',''));
					END $$;
                </query>
            </dbCommand>
        </insert>
        <update>
            <dbCommand>
				<var name="CLASS_ID" type="String" direction="Input" default="PODS_PIPE_SYSTEM_BOUNDARY" /> 
				<var name="POLICY" default="POLICY.xml#UPDATE_PODS_SEM"  />
                <var name="PIPE_SYSTEM_ID" default="NULL" type="Decimal"/>
                <var name="PIPE_SYSTEM_GUID" default="" type="String"/>
                <var name="LINE_ID" default="0" type="Decimal"/>
                <var name="KM_BEGIN" default="NULL" type="Decimal"/>
                <var name="KM_END" default="NULL" type="Decimal"/>
                <var name="EVENT_ID" default="NULL" type="Decimal"/>
                <var name="EVENT_GUID" default="" type="String"/>
                <var name="TITLE_EVENT_INDICATOR_LF" type="String" direction="Output" default="SELECT case when COUNT(*)=0 then 'N' else 'Y' END FROM PODS.PIPE_SYSTEM_BOUNDARY psb WHERE psb.TITLE_EVENT_INDICATOR_LF='Y' AND psb.PIPE_SYSTEM_ID = {PIPE_SYSTEM_ID}" />
                <var name="DESCRIPTION" default="" type="String"/>
                <var name="SOURCE_GCL" default="UNKNOWN" type="String"/>
                <var name="COMMENTS" default="" type="String"/>
                <var name="ID" type="String"/>
                <var name="USER_ID" default="-1" type="Int64"/>
                <query>
					DO $$
					DECLARE var_tmp varchar(1);
                    BEGIN
                    SELECT COUNT(*)=0 then 'N' else 'Y' END INTO var_tmp FROM PODS.PIPE_SYSTEM_BOUNDARY psb WHERE psb.TITLE_EVENT_INDICATOR_LF='Y' AND psb.PIPE_SYSTEM_ID = {PIPE_SYSTEM_ID};
                  
                    UPDATE PODS.PIPE_SYSTEM_BOUNDARY
                    SET PIPE_SYSTEM_ID={PIPE_SYSTEM_ID},PIPE_SYSTEM_GUID='{PIPE_SYSTEM_GUID}',LINE_ID={LINE_ID},KM_BEGIN={KM_BEGIN},KM_END={KM_END},EVENT_ID={EVENT_ID},EVENT_GUID='{EVENT_GUID}',TITLE_EVENT_INDICATOR_LF=:var_tmp ,DESCRIPTION=NULLIF('{DESCRIPTION}',''),SOURCE_GCL=NULLIF('{SOURCE_GCL}',''),COMMENTS=NULLIF('{COMMENTS}','')
                    WHERE PIPE_SYSTEM_ID||';'||LINE_ID||';'||KM_BEGIN||';'||KM_END = {ID};
                    END $$;
                </query>
            </dbCommand>
        </update>
        <delete>
            <dbCommand>
				<var name="CLASS_ID" type="String" direction="Input" default="PODS_PIPE_SYSTEM_BOUNDARY" /> 
				<var name="POLICY" default="POLICY.xml#DELETE_PODS_SEM"  />
                <var name="ID" type="String"/>
                <var name="USER_ID" default="-1" type="Int64"/>
                <query>
					DO $$
                    BEGIN
                    DELETE FROM PODS.PIPE_SYSTEM_BOUNDARY
                    WHERE PIPE_SYSTEM_ID||';'||LINE_ID||';'||KM_BEGIN||';'||KM_END = {ID};
                    DELETE FROM WEB50.LNK_GATE WHERE LEFT_OBJ_ID = 'PODS_PIPE_SYSTEM_BOUNDARY/'||'{ID}' 
												 OR RIGHT_OBJ_ID = 'PODS_PIPE_SYSTEM_BOUNDARY/'||'{ID}'; 
					END $$;
                </query>
            </dbCommand>
        </delete>
    </data>
    <data table="STRUCTURE" schema="PODS" id="PODS_STRUCTURE_CP_BLOCK" comment="PODS.STRUCTURE">
        <select>
            <dbQuery idField="ID">
                <param name="USER_ID" default="-1" type="Int64"/>
                <var name="FILTER" default="1=1"/>
                <var name="LPU_ACCESS_FILTER" default="SELECT srv_district_id FROM PODS.SRV_DISTRICT_GCL"/>
                <query>
                    SELECT * FROM (SELECT OFFLINE_ID ID, t.* FROM PODS.STRUCTURE t WHERE t.TYPE_CL='STRUCT_TYPE_16') d WHERE {FILTER}
                </query>
            </dbQuery>
        </select>
        <insert>
            <dbCommand>
				<var name="CLASS_ID" type="String" direction="Input" default="PODS_STRUCTURE_CP_BLOCK" /> 
				<var name="POLICY" default="POLICY.xml#INSERT_PODS_SEM"  />
                <var name="OFFLINE_GUID" default="" type="String"/>
                <var name="TYPE_CL" default="UNKNOWN" type="String"/>
                <var name="NAME" default="" type="String"/>
                <var name="OCCUPANT_COUNT" default="NULL" type="Decimal"/>
                <var name="OCCUPANCY_CATEGORY_GCL" default="UNKNOWN" type="String"/>
                <var name="DETERMINATION_DATE" default="" type="DateTime"/>
                <var name="DETERMINATION_METHOD_GCL" default="UNKNOWN" type="String"/>
                <var name="SITE_ADDRESS_ID" default="NULL" type="Decimal"/>
                <var name="SITE_ADDRESS_GUID" default="" type="String"/>
                <var name="CONTACT_ID" default="NULL" type="Decimal"/>
                <var name="CONTACT_GUID" default="" type="String"/>
                <var name="SOURCE_GCL" default="UNKNOWN" type="String"/>
                <var name="ID" type="Int64" direction="Output" default="SELECT max(OFFLINE_ID) id FROM PODS.STRUCTURE"/>
                <var name="PODS_USER" type="String"/>
                <var name="USER_ID" default="-1" type="Int64"/>
                <query>
					DO $$
					DECLARE
					returnId integer;
                    BEGIN
                    INSERT INTO PODS.OFFLINE_EVENT (OFFLINE_GUID, FEATURE_ID,EFFECTIVE_FROM_DATE,CURRENT_INDICATOR_LF,CREATE_DATE,PODS_USER)
                    VALUES('{OFFLINE_GUID}', 'STRUCTURE',current_timestamp,'Y',current_timestamp,NULLIF('{PODS_USER}',''))
                    RETURNING OFFLINE_ID INTO returnId;

                    INSERT INTO PODS.STRUCTURE(OFFLINE_ID,OFFLINE_GUID,TYPE_CL,NAME,OCCUPANT_COUNT,OCCUPANCY_CATEGORY_GCL,DETERMINATION_DATE,DETERMINATION_METHOD_GCL,SITE_ADDRESS_ID,SITE_ADDRESS_GUID,CONTACT_ID,CONTACT_GUID,SOURCE_GCL)
                    VALUES(returnId,'{OFFLINE_GUID}',NULLIF('{TYPE_CL}',''),NULLIF('{NAME}',''),{OCCUPANT_COUNT},NULLIF('{OCCUPANCY_CATEGORY_GCL}',''),'{DETERMINATION_DATE}',NULLIF('{DETERMINATION_METHOD_GCL}',''),{SITE_ADDRESS_ID},'{SITE_ADDRESS_GUID}',{CONTACT_ID},'{CONTACT_GUID}',NULLIF('{SOURCE_GCL}',''));
					END $$;
                </query>
            </dbCommand>
        </insert>
        <update>
            <dbCommand>
				<param name="CLASS_ID" type="String" direction="Input" default="PODS_STRUCTURE_CP_BLOCK" /> 
				<var name="POLICY" default="POLICY.xml#UPDATE_PODS_SEM"  />
                <param name="OFFLINE_GUID" default="" type="String"/>
                <param name="TYPE_CL" default="UNKNOWN" type="String"/>
                <param name="NAME" default="" type="String"/>
                <param name="OCCUPANT_COUNT" default="NULL" type="Decimal"/>
                <param name="OCCUPANCY_CATEGORY_GCL" default="UNKNOWN" type="String"/>
                <param name="DETERMINATION_DATE" default="" type="DateTime"/>
                <param name="DETERMINATION_METHOD_GCL" default="UNKNOWN" type="String"/>
                <param name="SITE_ADDRESS_ID" default="NULL" type="Decimal"/>
                <param name="SITE_ADDRESS_GUID" default="" type="String"/>
                <param name="CONTACT_ID" default="NULL" type="Decimal"/>
                <param name="CONTACT_GUID" default="" type="String"/>
                <param name="SOURCE_GCL" default="UNKNOWN" type="String"/>
                <param name="ID" type="Int64" direction="Input"/>
                <param name="USER_ID" default="-1" type="Int64"/>
                <query>
                    UPDATE PODS.STRUCTURE
                    SET 
                    OFFLINE_GUID=case when :OFFLINE_GUID is null then OFFLINE_GUID else :OFFLINE_GUID end,
                    TYPE_CL=case when :TYPE_CL is null then TYPE_CL else :TYPE_CL end,
					NAME=case when :NAME is null then NAME else :NAME end,
                    OCCUPANT_COUNT=case when :OCCUPANT_COUNT is null then OCCUPANT_COUNT else :OCCUPANT_COUNT end,
                    OCCUPANCY_CATEGORY_GCL=case when :OCCUPANCY_CATEGORY_GCL is null then OCCUPANCY_CATEGORY_GCL else :OCCUPANCY_CATEGORY_GCL end,
                    DETERMINATION_DATE=case when :DETERMINATION_DATE is null then DETERMINATION_DATE else :DETERMINATION_DATE end,
                    DETERMINATION_METHOD_GCL=case when :DETERMINATION_METHOD_GCL is null then DETERMINATION_METHOD_GCL else :DETERMINATION_METHOD_GCL end,
                    SITE_ADDRESS_ID=case when :SITE_ADDRESS_ID is null then SITE_ADDRESS_ID else :SITE_ADDRESS_ID end,
                    SITE_ADDRESS_GUID=case when :SITE_ADDRESS_GUID is null then SITE_ADDRESS_GUID else :SITE_ADDRESS_GUID end,
                    CONTACT_ID=case when :CONTACT_ID is null then CONTACT_ID else :CONTACT_ID end,
                    CONTACT_GUID=case when :CONTACT_GUID is null then CONTACT_GUID else :CONTACT_GUID end,
                    SOURCE_GCL=case when :SOURCE_GCL is null then SOURCE_GCL else :SOURCE_GCL end
                    WHERE OFFLINE_ID = :ID;
                </query>
            </dbCommand>
        </update>
        <delete>
            <dbCommand>
				<var name="CLASS_ID" type="String" direction="Input" default="PODS_STRUCTURE_CP_BLOCK" /> 
				<var name="POLICY" default="POLICY.xml#DELETE_PODS_SEM"  />
                <var name="ID" type="Int64" direction="Input"/>
                <var name="USER_ID" default="-1" type="Int64"/>
                <query>
					DO $$
                    BEGIN
                    DELETE FROM PODS.STRUCTURE
                    WHERE OFFLINE_ID = {ID};

                    DELETE FROM pods.offline_event
                    WHERE offline_id = {ID};
                    DELETE FROM WEB50.LNK_GATE WHERE LEFT_OBJ_ID = 'PODS_STRUCTURE/'||CAST({ID} AS VARCHAR(30)) OR RIGHT_OBJ_ID = 'PODS_STRUCTURE/'||CAST({ID} AS VARCHAR(30)); 
					END $$;
                </query>
            </dbCommand>
        </delete>
    </data>
    <data table="STRUCTURE" schema="PODS" id="PODS_STRUCTURE_CP_TRANS" comment="PODS.STRUCTURE">
        <select>
            <dbQuery idField="ID">
                <param name="USER_ID" default="-1" type="Int64"/>
                <var name="FILTER" default="1=1"/>
                <var name="LPU_ACCESS_FILTER" default="SELECT srv_district_id FROM PODS.SRV_DISTRICT_GCL"/>
                <query>
                    SELECT * FROM (SELECT OFFLINE_ID ID, t.* FROM PODS.STRUCTURE t WHERE t.TYPE_CL='STRUCT_TYPE_17') d WHERE {FILTER}
                </query>
            </dbQuery>
        </select>
        <insert>
            <dbCommand>
				<var name="CLASS_ID" type="String" direction="Input" default="PODS_STRUCTURE_CP_TRANS" /> 
				<var name="POLICY" default="POLICY.xml#INSERT_PODS_SEM"  />
                <var name="OFFLINE_GUID" default="" type="String"/>
                <var name="TYPE_CL" default="UNKNOWN" type="String"/>
                <var name="NAME" default="" type="String"/>
                <var name="OCCUPANT_COUNT" default="NULL" type="Decimal"/>
                <var name="OCCUPANCY_CATEGORY_GCL" default="UNKNOWN" type="String"/>
                <var name="DETERMINATION_DATE" default="" type="DateTime"/>
                <var name="DETERMINATION_METHOD_GCL" default="UNKNOWN" type="String"/>
                <var name="SITE_ADDRESS_ID" default="NULL" type="Decimal"/>
                <var name="SITE_ADDRESS_GUID" default="" type="String"/>
                <var name="CONTACT_ID" default="NULL" type="Decimal"/>
                <var name="CONTACT_GUID" default="" type="String"/>
                <var name="SOURCE_GCL" default="UNKNOWN" type="String"/>
                <var name="ID" type="Int64" direction="Output" default="SELECT max(OFFLINE_ID) id FROM PODS.OFFLINE_EVENT"/>
                <var name="PODS_USER" type="String"/>
                <var name="USER_ID" default="-1" type="Int64"/>
                <query>
					DO $$
					DECLARE
					returnId integer;
                    BEGIN
                    INSERT INTO PODS.OFFLINE_EVENT (OFFLINE_GUID, FEATURE_ID,EFFECTIVE_FROM_DATE,CURRENT_INDICATOR_LF,CREATE_DATE,PODS_USER)
                    VALUES('{OFFLINE_GUID}', 'STRUCTURE',current_timestamp,'Y',current_timestamp,NULLIF('{PODS_USER}',''))
                    RETURNING OFFLINE_ID INTO returnId;

                    INSERT INTO PODS.STRUCTURE(OFFLINE_ID,OFFLINE_GUID,TYPE_CL,NAME,OCCUPANT_COUNT,OCCUPANCY_CATEGORY_GCL,DETERMINATION_DATE,DETERMINATION_METHOD_GCL,SITE_ADDRESS_ID,SITE_ADDRESS_GUID,CONTACT_ID,CONTACT_GUID,SOURCE_GCL)
                    VALUES(returnId,'{OFFLINE_GUID}',NULLIF('{TYPE_CL}',''),NULLIF('{NAME}',''),{OCCUPANT_COUNT},NULLIF('{OCCUPANCY_CATEGORY_GCL}',''),'{DETERMINATION_DATE}',NULLIF('{DETERMINATION_METHOD_GCL}',''),{SITE_ADDRESS_ID},'{SITE_ADDRESS_GUID}',{CONTACT_ID},'{CONTACT_GUID}',NULLIF('{SOURCE_GCL}',''));
					END $$;
                </query>
            </dbCommand>
        </insert>
        <update>
            <dbCommand>
				<param name="CLASS_ID" type="String" direction="Input" default="PODS_STRUCTURE_CP_TRANS" /> 
				<var name="POLICY" default="POLICY.xml#UPDATE_PODS_SEM"  />
                <param name="OFFLINE_GUID" default="" type="String"/>
                <param name="TYPE_CL" default="UNKNOWN" type="String"/>
                <param name="NAME" default="" type="String"/>
                <param name="OCCUPANT_COUNT" default="NULL" type="Decimal"/>
                <param name="OCCUPANCY_CATEGORY_GCL" default="UNKNOWN" type="String"/>
                <param name="DETERMINATION_DATE" default="" type="DateTime"/>
                <param name="DETERMINATION_METHOD_GCL" default="UNKNOWN" type="String"/>
                <param name="SITE_ADDRESS_ID" default="NULL" type="Decimal"/>
                <param name="SITE_ADDRESS_GUID" default="" type="String"/>
                <param name="CONTACT_ID" default="NULL" type="Decimal"/>
                <param name="CONTACT_GUID" default="" type="String"/>
                <param name="SOURCE_GCL" default="UNKNOWN" type="String"/>
                <param name="ID" type="Int64" direction="Input"/>
                <param name="USER_ID" default="-1" type="Int64"/>
                <query>
                    UPDATE PODS.STRUCTURE
                    SET 
                    OFFLINE_GUID=case when :OFFLINE_GUID is null then OFFLINE_GUID else :OFFLINE_GUID end,
                    TYPE_CL=case when :TYPE_CL is null then TYPE_CL else :TYPE_CL end,
					NAME=case when :NAME is null then NAME else :NAME end,
                    OCCUPANT_COUNT=case when :OCCUPANT_COUNT is null then OCCUPANT_COUNT else :OCCUPANT_COUNT end,
                    OCCUPANCY_CATEGORY_GCL=case when :OCCUPANCY_CATEGORY_GCL is null then OCCUPANCY_CATEGORY_GCL else :OCCUPANCY_CATEGORY_GCL end,
                    DETERMINATION_DATE=case when :DETERMINATION_DATE is null then DETERMINATION_DATE else :DETERMINATION_DATE end,
                    DETERMINATION_METHOD_GCL=case when :DETERMINATION_METHOD_GCL is null then DETERMINATION_METHOD_GCL else :DETERMINATION_METHOD_GCL end,
                    SITE_ADDRESS_ID=case when :SITE_ADDRESS_ID is null then SITE_ADDRESS_ID else :SITE_ADDRESS_ID end,
                    SITE_ADDRESS_GUID=case when :SITE_ADDRESS_GUID is null then SITE_ADDRESS_GUID else :SITE_ADDRESS_GUID end,
                    CONTACT_ID=case when :CONTACT_ID is null then CONTACT_ID else :CONTACT_ID end,
                    CONTACT_GUID=case when :CONTACT_GUID is null then CONTACT_GUID else :CONTACT_GUID end,
                    SOURCE_GCL=case when :SOURCE_GCL is null then SOURCE_GCL else :SOURCE_GCL end
                    WHERE OFFLINE_ID = :ID;
                </query>
            </dbCommand>
        </update>
        <delete>
            <dbCommand>
				<var name="CLASS_ID" type="String" direction="Input" default="PODS_STRUCTURE_CP_TRANS" /> 
				<var name="POLICY" default="POLICY.xml#DELETE_PODS_SEM"  />
                <var name="ID" type="Int64" direction="Input"/>
                <var name="USER_ID" default="-1" type="Int64"/>
                <query>
					DO $$
                    BEGIN
                    DELETE FROM PODS.STRUCTURE
                    WHERE OFFLINE_ID = {ID};

                    DELETE FROM pods.offline_event
                    WHERE offline_id = {ID};
                    DELETE FROM WEB50.LNK_GATE WHERE LEFT_OBJ_ID = 'PODS_STRUCTURE/'||CAST({ID} AS VARCHAR(30)) OR RIGHT_OBJ_ID = 'PODS_STRUCTURE/'||CAST({ID} AS VARCHAR(30)); 
					END $$;
                </query>
            </dbCommand>
        </delete>
    </data>
    <data table="SHEET_NOTE" schema="PODS" id="PODS_SHEET_NOTE_LINK" comment="PODS.SHEET_NOTE">
        <select>
            <dbQuery idField="ID">
                <param name="USER_ID" default="-1" type="Int64"/>
                <var name="FILTER" default="1=1"/>
                <var name="LPU_ACCESS_FILTER" default="SELECT srv_district_id FROM PODS.SRV_DISTRICT_GCL"/>
                <query>
                    SELECT * FROM (SELECT EVENT_ID ID, t.* FROM PODS.SHEET_NOTE t WHERE TYPE_CL IN ('C1400059')) d WHERE {FILTER}
                </query>
            </dbQuery>
        </select>
        <insert>
            <dbCommand>
				<var name="CLASS_ID" type="String" direction="Input" default="PODS_SHEET_NOTE_LINK" /> 
				<var name="POLICY" default="POLICY.xml#INSERT_PODS_SEM"  />
                <var name="EVENT_GUID" default="" type="String"/>
                <var name="TYPE_CL" default="UNKNOWN" type="String"/>
                <var name="SOURCE_NUMBER" default="" type="String"/>
                <var name="SCALED_GCL" default="UNKNOWN" type="String"/>
                <var name="DIRECTION_GCL" default="UNKNOWN" type="String"/>
                <var name="INTERSECTION_ANGLE" default="NULL" type="Decimal"/>
                <var name="WIDTH" default="NULL" type="Decimal"/>
                <var name="DESCRIPTION" default="" type="String"/>
                <var name="SOURCE_GCL" default="UNKNOWN" type="String"/>
                <var name="COMMENTS" default="" type="String"/>
                <var name="ID" type="Int64" direction="Output" default="SELECT max(EVENT_ID) id FROM PODS.EVENT_RANGE"/>
                <var name="PODS_USER" type="String"/>
                <var name="USER_ID" default="-1" type="Int64"/>
                <query>
					DO $$
					DECLARE
					returnId integer;
                    BEGIN
                    INSERT INTO PODS.EVENT_RANGE (EVENT_GUID,FEATURE_ID,STATION_ID_BEGIN,STATION_ID_END,PODS_USER,CREATE_DATE,EFFECTIVE_FROM_DATE,CURRENT_INDICATOR_LF,POSITIONING_TYPE_CL)
                    VALUES('{EVENT_GUID}','SHEET_NOTE',0,0,NULLIF('{PODS_USER}',''),current_timestamp,current_timestamp,'Y','UNKNOWN')
                    RETURNING EVENT_ID INTO returnId;

                    INSERT INTO PODS.SHEET_NOTE(EVENT_ID,EVENT_GUID,TYPE_CL,SOURCE_NUMBER,SCALED_GCL,DIRECTION_GCL,INTERSECTION_ANGLE,WIDTH,DESCRIPTION,SOURCE_GCL,COMMENTS)
                    VALUES(returnId,'{EVENT_GUID}',NULLIF('{TYPE_CL}',''),NULLIF('{SOURCE_NUMBER}',''),NULLIF('{SCALED_GCL}',''),NULLIF('{DIRECTION_GCL}',''),{INTERSECTION_ANGLE},{WIDTH},NULLIF('{DESCRIPTION}',''),NULLIF('{SOURCE_GCL}',''),NULLIF('{COMMENTS}',''));
					END $$;
                </query>
            </dbCommand>
        </insert>
        <update>
            <dbCommand>
				<param name="CLASS_ID" type="String" direction="Input" default="PODS_SHEET_NOTE_LINK" /> 
				<var name="POLICY" default="POLICY.xml#UPDATE_PODS_SEM"  />
                <param name="EVENT_GUID" default="" type="String"/>
                <param name="TYPE_CL" default="UNKNOWN" type="String"/>
                <param name="SOURCE_NUMBER" default="" type="String"/>
                <param name="SCALED_GCL" default="UNKNOWN" type="String"/>
                <param name="DIRECTION_GCL" default="UNKNOWN" type="String"/>
                <param name="INTERSECTION_ANGLE" default="NULL" type="Decimal"/>
                <param name="WIDTH" default="NULL" type="Decimal"/>
                <param name="DESCRIPTION" default="" type="String"/>
                <param name="SOURCE_GCL" default="UNKNOWN" type="String"/>
                <param name="COMMENTS" default="" type="String"/>
                <param name="ID" type="Int64"/>
                <param name="USER_ID" default="-1" type="Int64"/>
                <query>
                    UPDATE PODS.SHEET_NOTE
                    SET EVENT_GUID=case when :EVENT_GUID is null then EVENT_GUID else :EVENT_GUID end,
                    TYPE_CL=case when :TYPE_CL is null then TYPE_CL else :TYPE_CL end,
                    SOURCE_NUMBER=case when :SOURCE_NUMBER is null then SOURCE_NUMBER else :SOURCE_NUMBER end,
                    SCALED_GCL=case when :SCALED_GCL is null then SCALED_GCL else :SCALED_GCL end,
                    DIRECTION_GCL=case when :DIRECTION_GCL is null then DIRECTION_GCL else :DIRECTION_GCL end,
                    INTERSECTION_ANGLE=case when :INTERSECTION_ANGLE is null then INTERSECTION_ANGLE else :INTERSECTION_ANGLE end,
                    WIDTH=case when :WIDTH is null then WIDTH else :WIDTH end,
                    DESCRIPTION=case when :DESCRIPTION is null then DESCRIPTION else :DESCRIPTION end,
                    SOURCE_GCL=case when :SOURCE_GCL is null then SOURCE_GCL else :SOURCE_GCL end,
                    COMMENTS=case when :COMMENTS is null then COMMENTS else :COMMENTS end
                    WHERE EVENT_ID = :ID;
                </query>
            </dbCommand>
        </update>
        <delete>
            <dbCommand>
				<var name="CLASS_ID" type="String" direction="Input" default="PODS_SHEET_NOTE_LINK" /> 
				<var name="POLICY" default="POLICY.xml#DELETE_PODS_SEM"  />
                <var name="ID" type="Int64"/>
                <var name="USER_ID" default="-1" type="Int64"/>
                <query>
					DO $$
                    BEGIN
                    UPDATE PODS.EVENT_RANGE
                    SET CURRENT_INDICATOR_LF='N'
                    WHERE EVENT_ID = {ID};

                    DELETE FROM PODS.SHEET_NOTE
                    WHERE EVENT_ID = {ID};
                    DELETE FROM WEB50.LNK_GATE WHERE LEFT_OBJ_ID = 'PODS_SHEET_NOTE/'||CAST({ID} AS VARCHAR(30)) OR RIGHT_OBJ_ID = 'PODS_SHEET_NOTE/'||CAST({ID} AS VARCHAR(30)); 
					END $$;
                </query>
            </dbCommand>
        </delete>
    </data>
    <data table="FOREIGN_LINE_CROSSING" schema="PODS" id="PODS_FOREIGN_LINE_CROSSING_LINK" comment="PODS.FOREIGN_LINE_CROSSING">
        <select>
            <dbQuery idField="ID">
                <param name="USER_ID" default="-1" type="Int64"/>
                <var name="FILTER" default="1=1"/>
                <var name="LPU_ACCESS_FILTER" default="SELECT srv_district_id FROM PODS.SRV_DISTRICT_GCL"/>
                <query>
                    SELECT * FROM (SELECT GEOGRAPHIC_ENTITY_ID ID, t.* FROM PODS.FOREIGN_LINE_CROSSING t
                    WHERE t.TYPE_CL = 'FL_CROSS_TYPE_13'
                    ) d WHERE {FILTER}
                </query>
            </dbQuery>
        </select>
        <insert>
            <dbCommand>
				<var name="CLASS_ID" type="String" direction="Input" default="PODS_FOREIGN_LINE_CROSSING_LINK" /> 
				<var name="POLICY" default="POLICY.xml#INSERT_PODS_SEM"  />
                <var name="EVENT_ID" default="-20" type="Decimal"/>
                <var name="EVENT_GUID" default="" type="String"/>
                <var name="TYPE_CL" default="UNKNOWN" type="String"/>
                <var name="OWNER_CL" default="UNKNOWN" type="String"/>
                <var name="LINE_CLEARANCE" default="NULL" type="Decimal"/>
                <var name="MATERIAL_CL" default="UNKNOWN" type="String"/>
                <var name="FOREIGN_DIAMETER" default="0" type="Decimal"/>
                <var name="CROSSING_DATE" default="" type="DateTime"/>
                <var name="INTERSECTION_ANGLE" default="NULL" type="Decimal"/>
                <var name="SOURCE_NUMBER" default="" type="String"/>
                <var name="SCALED_GCL" default="UNKNOWN" type="String"/>
                <var name="DIRECTION_GCL" default="UNKNOWN" type="String"/>
                <var name="WIDTH" default="NULL" type="Decimal"/>
                <var name="GEOGRAPHIC_ENTITY_GUID" default="" type="String"/>
                <var name="DESCRIPTION" default="" type="String"/>
                <var name="LINE_BELOW_GROUND_LF" default="" type="String"/>
                <var name="CROSSING_BELOW_GROUND_LF" default="" type="String"/>
                <var name="CROSSING_BELOW_LINE_LF" default="" type="String"/>
                <var name="FOREIGN_BOND_LF" default="" type="String"/>
                <var name="SOURCE_GCL" default="UNKNOWN" type="String"/>
                <var name="COMMENTS" default="" type="String"/>
                <var name="ID" type="Int64" direction="Output" default="SELECT max(ENTITY_ID) id FROM PODS.GEOGRAPHIC_ENTITY"/>
                <var name="PODS_USER" type="String"/>
                <var name="USER_ID" default="-1" type="Int64"/>
                <query>
					DO $$
					DECLARE
					returnId integer;
                    BEGIN
                    INSERT INTO PODS.GEOGRAPHIC_ENTITY (ENTITY_GUID,TYPE_CL)
                    VALUES('{GEOGRAPHIC_ENTITY_GUID}','C2000018')
                    RETURNING ENTITY_ID INTO returnId;

                    INSERT INTO PODS.FOREIGN_LINE_CROSSING(GEOGRAPHIC_ENTITY_ID,EVENT_ID,EVENT_GUID,TYPE_CL,OWNER_CL,LINE_CLEARANCE,MATERIAL_CL,FOREIGN_DIAMETER,CROSSING_DATE,INTERSECTION_ANGLE,SOURCE_NUMBER,SCALED_GCL,DIRECTION_GCL,WIDTH,GEOGRAPHIC_ENTITY_GUID,DESCRIPTION,LINE_BELOW_GROUND_LF,CROSSING_BELOW_GROUND_LF,CROSSING_BELOW_LINE_LF,FOREIGN_BOND_LF,SOURCE_GCL,COMMENTS)
                    VALUES(returnId,{EVENT_ID},'{EVENT_GUID}',NULLIF('{TYPE_CL}',''),NULLIF('{OWNER_CL}',''),{LINE_CLEARANCE},NULLIF('{MATERIAL_CL}',''),{FOREIGN_DIAMETER},'{CROSSING_DATE}',{INTERSECTION_ANGLE},NULLIF('{SOURCE_NUMBER}',''),NULLIF('{SCALED_GCL}',''),NULLIF('{DIRECTION_GCL}',''),{WIDTH},'{GEOGRAPHIC_ENTITY_GUID}',NULLIF('{DESCRIPTION}',''),'{LINE_BELOW_GROUND_LF}','{CROSSING_BELOW_GROUND_LF}','{CROSSING_BELOW_LINE_LF}','{FOREIGN_BOND_LF}',NULLIF('{SOURCE_GCL}',''),NULLIF('{COMMENTS}',''));
					END $$;
                </query>
            </dbCommand>
        </insert>
        <update>
            <dbCommand>
				<param name="CLASS_ID" type="String" direction="Input" default="PODS_FOREIGN_LINE_CROSSING_LINK" /> 
				<var name="POLICY" default="POLICY.xml#UPDATE_PODS_SEM"  />
                <param name="EVENT_ID" default="-20" type="Decimal"/>
                <param name="EVENT_GUID" default="" type="String"/>
                <param name="TYPE_CL" default="UNKNOWN" type="String"/>
                <param name="OWNER_CL" default="UNKNOWN" type="String"/>
                <param name="LINE_CLEARANCE" default="NULL" type="Decimal"/>
                <param name="MATERIAL_CL" default="UNKNOWN" type="String"/>
                <param name="FOREIGN_DIAMETER" default="0" type="Decimal"/>
                <param name="CROSSING_DATE" default="" type="DateTime"/>
                <param name="INTERSECTION_ANGLE" default="NULL" type="Decimal"/>
                <param name="SOURCE_NUMBER" default="" type="String"/>
                <param name="SCALED_GCL" default="UNKNOWN" type="String"/>
                <param name="DIRECTION_GCL" default="UNKNOWN" type="String"/>
                <param name="WIDTH" default="NULL" type="Decimal"/>
                <param name="GEOGRAPHIC_ENTITY_GUID" default="" type="String"/>
                <param name="DESCRIPTION" default="" type="String"/>
                <param name="LINE_BELOW_GROUND_LF" default="" type="String"/>
                <param name="CROSSING_BELOW_GROUND_LF" default="" type="String"/>
                <param name="CROSSING_BELOW_LINE_LF" default="" type="String"/>
                <param name="FOREIGN_BOND_LF" default="" type="String"/>
                <param name="SOURCE_GCL" default="UNKNOWN" type="String"/>
                <param name="COMMENTS" default="" type="String"/>
                <param name="ID" type="Int64" direction="Input"/>
                <param name="USER_ID" default="-1" type="Int64"/>
                <query>
                    UPDATE PODS.FOREIGN_LINE_CROSSING
                    SET 
					EVENT_ID=case when :EVENT_ID is null then EVENT_ID else :EVENT_ID end,
					EVENT_GUID=case when :EVENT_GUID is null then EVENT_GUID else :EVENT_GUID end,
                    TYPE_CL=case when :TYPE_CL is null then TYPE_CL else :TYPE_CL end,
                    OWNER_CL=case when :OWNER_CL is null then OWNER_CL else :OWNER_CL end,
                    LINE_CLEARANCE=case when :LINE_CLEARANCE is null then LINE_CLEARANCE else :LINE_CLEARANCE end,
					MATERIAL_CL=case when :MATERIAL_CL is null then MATERIAL_CL else :MATERIAL_CL end,
                    FOREIGN_DIAMETER=case when :FOREIGN_DIAMETER is null then FOREIGN_DIAMETER else :FOREIGN_DIAMETER end,
                    CROSSING_DATE=case when :CROSSING_DATE is null then CROSSING_DATE else :CROSSING_DATE end,
                    INTERSECTION_ANGLE=case when :INTERSECTION_ANGLE is null then INTERSECTION_ANGLE else :INTERSECTION_ANGLE end,
                    SOURCE_NUMBER=case when :SOURCE_NUMBER is null then SOURCE_NUMBER else :SOURCE_NUMBER end,
                    SCALED_GCL=case when :SCALED_GCL is null then SCALED_GCL else :SCALED_GCL end,
                    DIRECTION_GCL=case when :DIRECTION_GCL is null then DIRECTION_GCL else :DIRECTION_GCL end,
                    WIDTH=case when :WIDTH is null then WIDTH else :WIDTH end,
                    GEOGRAPHIC_ENTITY_GUID=case when :GEOGRAPHIC_ENTITY_GUID is null then GEOGRAPHIC_ENTITY_GUID else :GEOGRAPHIC_ENTITY_GUID end,
                    DESCRIPTION=case when :DESCRIPTION is null then DESCRIPTION else :DESCRIPTION end,
                    LINE_BELOW_GROUND_LF=case when :LINE_BELOW_GROUND_LF is null then LINE_BELOW_GROUND_LF else :LINE_BELOW_GROUND_LF end,
                    CROSSING_BELOW_GROUND_LF=case when :CROSSING_BELOW_GROUND_LF is null then CROSSING_BELOW_GROUND_LF else :CROSSING_BELOW_GROUND_LF end,
                    CROSSING_BELOW_LINE_LF=case when :CROSSING_BELOW_LINE_LF is null then CROSSING_BELOW_LINE_LF else :CROSSING_BELOW_LINE_LF end,
                    FOREIGN_BOND_LF=case when :FOREIGN_BOND_LF is null then FOREIGN_BOND_LF else :FOREIGN_BOND_LF end,
                    SOURCE_GCL=case when :SOURCE_GCL is null then SOURCE_GCL else :SOURCE_GCL end,
                    COMMENTS=case when :COMMENTS is null then COMMENTS else :COMMENTS end
                    WHERE GEOGRAPHIC_ENTITY_ID = :ID;
                </query>
            </dbCommand>
        </update>
        <delete>
            <dbCommand>
				<var name="CLASS_ID" type="String" direction="Input" default="PODS_FOREIGN_LINE_CROSSING_LINK" /> 
				<var name="POLICY" default="POLICY.xml#DELETE_PODS_SEM"  />
                <var name="ID" type="Int64" direction="Input"/>
                <var name="USER_ID" default="-1" type="Int64"/>
                <query>
					DO $$
                    BEGIN
                    DELETE FROM PODS.FOREIGN_LINE_CROSSING
                    WHERE GEOGRAPHIC_ENTITY_ID = {ID};

                    DELETE FROM PODS.GEOGRAPHIC_ENTITY
                    WHERE ENTITY_ID = {ID};
                    DELETE FROM WEB50.LNK_GATE WHERE LEFT_OBJ_ID = 'PODS_CP_FOREIGN_LINE_CROSSING/'||CAST({ID} AS VARCHAR(30)) OR RIGHT_OBJ_ID = 'PODS_CP_FOREIGN_LINE_CROSSING/'||CAST({ID} AS VARCHAR(30)); 
					END $$;
                </query>
            </dbCommand>
        </delete>
    </data>
    <data table="SHEET_NOTE" schema="PODS" id="PODS_SHEET_NOTE_FUND" comment="PODS.SHEET_NOTE">
        <select>
            <dbQuery idField="ID">
                <param name="USER_ID" default="-1" type="Int64"/>
                <var name="FILTER" default="1=1"/>
                <var name="LPU_ACCESS_FILTER" default="SELECT srv_district_id FROM PODS.SRV_DISTRICT_GCL"/>
                <query>
                    SELECT * FROM (SELECT EVENT_ID ID, t.* FROM PODS.SHEET_NOTE t WHERE TYPE_CL IN ('C1400014')) d WHERE {FILTER}
                </query>
            </dbQuery>
        </select>
        <insert>
            <dbCommand>
				<var name="CLASS_ID" type="String" direction="Input" default="PODS_SHEET_NOTE_FUND" /> 
				<var name="POLICY" default="POLICY.xml#INSERT_PODS_SEM"  />
                <var name="EVENT_GUID" default="" type="String"/>
                <var name="TYPE_CL" default="UNKNOWN" type="String"/>
                <var name="SOURCE_NUMBER" default="" type="String"/>
                <var name="SCALED_GCL" default="UNKNOWN" type="String"/>
                <var name="DIRECTION_GCL" default="UNKNOWN" type="String"/>
                <var name="INTERSECTION_ANGLE" default="NULL" type="Decimal"/>
                <var name="WIDTH" default="NULL" type="Decimal"/>
                <var name="DESCRIPTION" default="" type="String"/>
                <var name="SOURCE_GCL" default="UNKNOWN" type="String"/>
                <var name="COMMENTS" default="" type="String"/>
                <var name="ID" type="Int64" direction="Output" default="SELECT max(EVENT_ID) id FROM PODS.EVENT_RANGE"/>
                <var name="PODS_USER" type="String"/>
                <var name="USER_ID" default="-1" type="Int64"/>
                <query>
					DO $$
					DECLARE
					returnId integer;
                    BEGIN
                    INSERT INTO PODS.EVENT_RANGE (EVENT_GUID,FEATURE_ID,STATION_ID_BEGIN,STATION_ID_END,PODS_USER,CREATE_DATE,EFFECTIVE_FROM_DATE,CURRENT_INDICATOR_LF,POSITIONING_TYPE_CL)
                    VALUES('{EVENT_GUID}','SHEET_NOTE',0,0,NULLIF('{PODS_USER}',''),current_timestamp,current_timestamp,'Y','UNKNOWN')
                    RETURNING EVENT_ID INTO returnId;

                    INSERT INTO PODS.SHEET_NOTE(EVENT_ID,EVENT_GUID,TYPE_CL,SOURCE_NUMBER,SCALED_GCL,DIRECTION_GCL,INTERSECTION_ANGLE,WIDTH,DESCRIPTION,SOURCE_GCL,COMMENTS)
                    VALUES(returnId,'{EVENT_GUID}',NULLIF('{TYPE_CL}',''),NULLIF('{SOURCE_NUMBER}',''),NULLIF('{SCALED_GCL}',''),NULLIF('{DIRECTION_GCL}',''),{INTERSECTION_ANGLE},{WIDTH},NULLIF('{DESCRIPTION}',''),NULLIF('{SOURCE_GCL}',''),NULLIF('{COMMENTS}',''));
					END $$;
                </query>
            </dbCommand>
        </insert>
        <update>
            <dbCommand>
				<param name="CLASS_ID" type="String" direction="Input" default="PODS_SHEET_NOTE_FUND" /> 
				<var name="POLICY" default="POLICY.xml#UPDATE_PODS_SEM"  />
                <param name="EVENT_GUID" default="" type="String"/>
                <param name="TYPE_CL" default="UNKNOWN" type="String"/>
                <param name="SOURCE_NUMBER" default="" type="String"/>
                <param name="SCALED_GCL" default="UNKNOWN" type="String"/>
                <param name="DIRECTION_GCL" default="UNKNOWN" type="String"/>
                <param name="INTERSECTION_ANGLE" default="NULL" type="Decimal"/>
                <param name="WIDTH" default="NULL" type="Decimal"/>
                <param name="DESCRIPTION" default="" type="String"/>
                <param name="SOURCE_GCL" default="UNKNOWN" type="String"/>
                <param name="COMMENTS" default="" type="String"/>
                <param name="ID" type="Int64"/>
                <param name="USER_ID" default="-1" type="Int64"/>
                <query>
                    UPDATE PODS.SHEET_NOTE
                    SET EVENT_GUID=case when :EVENT_GUID is null then EVENT_GUID else :EVENT_GUID end,
                    TYPE_CL=case when :TYPE_CL is null then TYPE_CL else :TYPE_CL end,
                    SOURCE_NUMBER=case when :SOURCE_NUMBER is null then SOURCE_NUMBER else :SOURCE_NUMBER end,
                    SCALED_GCL=case when :SCALED_GCL is null then SCALED_GCL else :SCALED_GCL end,
                    DIRECTION_GCL=case when :DIRECTION_GCL is null then DIRECTION_GCL else :DIRECTION_GCL end,
                    INTERSECTION_ANGLE=case when :INTERSECTION_ANGLE is null then INTERSECTION_ANGLE else :INTERSECTION_ANGLE end,
                    WIDTH=case when :WIDTH is null then WIDTH else :WIDTH end,
                    DESCRIPTION=case when :DESCRIPTION is null then DESCRIPTION else :DESCRIPTION end,
                    SOURCE_GCL=case when :SOURCE_GCL is null then SOURCE_GCL else :SOURCE_GCL end,
                    COMMENTS=case when :COMMENTS is null then COMMENTS else :COMMENTS end
                    WHERE EVENT_ID = :ID;
                </query>
            </dbCommand>
        </update>
        <delete>
            <dbCommand>
				<var name="CLASS_ID" type="String" direction="Input" default="PODS_SHEET_NOTE_FUND" /> 
				<var name="POLICY" default="POLICY.xml#DELETE_PODS_SEM"  />
                <var name="ID" type="Int64"/>
                <var name="USER_ID" default="-1" type="Int64"/>
                <query>
					DO $$
                    BEGIN
                    UPDATE PODS.EVENT_RANGE
                    SET CURRENT_INDICATOR_LF='N'
                    WHERE EVENT_ID = {ID};

                    DELETE FROM PODS.SHEET_NOTE
                    WHERE EVENT_ID = {ID};
                    DELETE FROM WEB50.LNK_GATE WHERE LEFT_OBJ_ID = 'PODS_SHEET_NOTE/'||CAST({ID} AS VARCHAR(30)) OR RIGHT_OBJ_ID = 'PODS_SHEET_NOTE/'||CAST({ID} AS VARCHAR(30)); 
					END $$;
                </query>
            </dbCommand>
        </delete>
    </data>
    <data table="MARKER" schema="PODS" id="PODS_MARKER" comment="PODS.MARKER">
        <select>
            <dbQuery idField="ID">
                <param name="USER_ID" default="-1" type="Int64"/>
                <var name="FILTER" default="1=1"/>
                <var name="LPU_ACCESS_FILTER" default="SELECT srv_district_id FROM PODS.SRV_DISTRICT_GCL"/>
                <query>
                    SELECT * FROM (SELECT EVENT_ID ID, t.* FROM PODS.MARKER t WHERE t.MARKER_TYPE_GCL = 'MARKER_TYPE_01') d WHERE {FILTER}
                </query>
            </dbQuery>
        </select>
        <insert>
            <dbCommand>
				<var name="CLASS_ID" type="String" direction="Input" default="PODS_MARKER" /> 
				<var name="POLICY" default="POLICY.xml#INSERT_PODS_SEM"  />
                <var name="EVENT_GUID" default="" type="String"/>
                <var name="SIGN_TYPE_CL" default="UNKNOWN" type="String"/>
                <var name="MARKER_TYPE_GCL" default="UNKNOWN" type="String"/>
                <var name="MARKER_NUMBER" default="NULL" type="Decimal"/>
                <var name="DATE_INSTALLED" default="" type="DateTime"/>
                <var name="DESCRIPTION" default="" type="String"/>
                <var name="SOURCE_GCL" default="UNKNOWN" type="String"/>
                <var name="COMMENTS" default="" type="String"/>
                <var name="ID" type="Int64" direction="Output" default="SELECT max(EVENT_ID) id FROM PODS.EVENT_RANGE"/>
                <var name="PODS_USER" type="String"/>
                <var name="USER_ID" default="-1" type="Int64"/>
                <query>
					DO $$
					DECLARE
					returnId integer;
                    BEGIN
                    INSERT INTO PODS.EVENT_RANGE (EVENT_GUID,FEATURE_ID,STATION_ID_BEGIN,STATION_ID_END,PODS_USER,CREATE_DATE,EFFECTIVE_FROM_DATE,CURRENT_INDICATOR_LF,POSITIONING_TYPE_CL)
                    VALUES('{EVENT_GUID}','MARKER',0,0,NULLIF('{PODS_USER}',''),current_timestamp,current_timestamp,'Y','UNKNOWN')
                    RETURNING EVENT_ID INTO returnId;

                    INSERT INTO PODS.MARKER(EVENT_ID,EVENT_GUID,SIGN_TYPE_CL,MARKER_TYPE_GCL,MARKER_NUMBER,DATE_INSTALLED,DESCRIPTION,SOURCE_GCL,COMMENTS)
                    VALUES(returnId,'{EVENT_GUID}',NULLIF('{SIGN_TYPE_CL}',''),NULLIF('{MARKER_TYPE_GCL}',''),{MARKER_NUMBER},'{DATE_INSTALLED}',NULLIF('{DESCRIPTION}',''),NULLIF('{SOURCE_GCL}',''),NULLIF('{COMMENTS}',''));
					END $$;
                </query>
            </dbCommand>
        </insert>
        <update>
            <dbCommand>
				<param name="CLASS_ID" type="String" direction="Input" default="PODS_MARKER" /> 
				<var name="POLICY" default="POLICY.xml#UPDATE_PODS_SEM"  />
                <param name="EVENT_GUID" default="" type="String"/>
                <param name="SIGN_TYPE_CL" default="UNKNOWN" type="String"/>
                <param name="MARKER_TYPE_GCL" default="UNKNOWN" type="String"/>
                <param name="MARKER_NUMBER" default="NULL" type="Decimal"/>
                <param name="DATE_INSTALLED" default="" type="DateTime"/>
                <param name="DESCRIPTION" default="" type="String"/>
                <param name="SOURCE_GCL" default="UNKNOWN" type="String"/>
                <param name="COMMENTS" default="" type="String"/>
                <param name="ID" type="Int64"/>
                <param name="USER_ID" default="-1" type="Int64"/>
                <query>
                    UPDATE PODS.MARKER
                    SET 
					EVENT_GUID=case when :EVENT_GUID is null then EVENT_GUID else :EVENT_GUID end,
					SIGN_TYPE_CL=case when :SIGN_TYPE_CL is null then SIGN_TYPE_CL else :SIGN_TYPE_CL end,
                    MARKER_TYPE_GCL=case when :MARKER_TYPE_GCL is null then MARKER_TYPE_GCL else :MARKER_TYPE_GCL end,
					MARKER_NUMBER=case when :MARKER_NUMBER is null then MARKER_NUMBER else :MARKER_NUMBER end,
                    DATE_INSTALLED=case when :DATE_INSTALLED is null then DATE_INSTALLED else :DATE_INSTALLED end,
                    DESCRIPTION=case when :DESCRIPTION is null then DESCRIPTION else :DESCRIPTION end,
                    SOURCE_GCL=case when :SOURCE_GCL is null then SOURCE_GCL else :SOURCE_GCL end,
                    COMMENTS=case when :COMMENTS is null then COMMENTS else :COMMENTS end
                    WHERE EVENT_ID = :ID;
                </query>
            </dbCommand>
        </update>
        <delete>
            <dbCommand>
				<var name="CLASS_ID" type="String" direction="Input" default="PODS_MARKER" /> 
				<var name="POLICY" default="POLICY.xml#DELETE_PODS_SEM"  />
                <var name="ID" type="Int64"/>
                <var name="USER_ID" default="-1" type="Int64"/>
                <query>
					DO $$
                    BEGIN
                    UPDATE PODS.EVENT_RANGE
                    SET CURRENT_INDICATOR_LF='N'
                    WHERE EVENT_ID = {ID};

                    DELETE FROM PODS.MARKER
                    WHERE EVENT_ID = {ID};
                    DELETE FROM WEB50.LNK_GATE WHERE LEFT_OBJ_ID = 'PODS_MARKER/'||CAST({ID} AS VARCHAR(30)) OR RIGHT_OBJ_ID = 'PODS_MARKER/'||CAST({ID} AS VARCHAR(30)); 
					END $$;
                </query>
            </dbCommand>
        </delete>
    </data>
    <data table="MARKER" schema="PODS" id="PODS_MARKER_POINT" comment="PODS.MARKER">
        <select>
            <dbQuery idField="ID">
                <param name="USER_ID" default="-1" type="Int64"/>
                <var name="FILTER" default="1=1"/>
                <var name="LPU_ACCESS_FILTER" default="SELECT srv_district_id FROM PODS.SRV_DISTRICT_GCL"/>
                <query>
                    SELECT * FROM (SELECT EVENT_ID ID, t.* FROM PODS.MARKER t WHERE t.MARKER_TYPE_GCL = 'MARKER_TYPE_06') d WHERE {FILTER}
                </query>
            </dbQuery>
        </select>
        <insert>
            <dbCommand>
				<var name="CLASS_ID" type="String" direction="Input" default="PODS_MARKER_POINT" /> 
				<var name="POLICY" default="POLICY.xml#INSERT_PODS_SEM"  />
                <var name="EVENT_GUID" default="" type="String"/>
                <var name="SIGN_TYPE_CL" default="UNKNOWN" type="String"/>
                <var name="MARKER_TYPE_GCL" default="MARKER_TYPE_06" type="String"/>
                <var name="MARKER_NUMBER" default="NULL" type="Decimal"/>
                <var name="DATE_INSTALLED" default="" type="DateTime"/>
                <var name="DESCRIPTION" default="" type="String"/>
                <var name="SOURCE_GCL" default="UNKNOWN" type="String"/>
                <var name="COMMENTS" default="" type="String"/>
                <var name="ID" type="Int64" direction="Output" default="SELECT max(EVENT_ID) id FROM PODS.EVENT_RANGE"/>
                <var name="PODS_USER" type="String"/>
                <var name="USER_ID" default="-1" type="Int64"/>
                <query>
					DO $$
					DECLARE
					returnId integer;
                    BEGIN
                    INSERT INTO PODS.EVENT_RANGE (EVENT_GUID,FEATURE_ID,STATION_ID_BEGIN,STATION_ID_END,PODS_USER,CREATE_DATE,EFFECTIVE_FROM_DATE,CURRENT_INDICATOR_LF,POSITIONING_TYPE_CL)
                    VALUES('{EVENT_GUID}','MARKER',0,0,NULLIF('{PODS_USER}',''),current_timestamp,current_timestamp,'Y','UNKNOWN')
                    RETURNING EVENT_ID INTO returnId;

                    INSERT INTO PODS.MARKER(EVENT_ID,EVENT_GUID,SIGN_TYPE_CL,MARKER_TYPE_GCL,MARKER_NUMBER,DATE_INSTALLED,DESCRIPTION,SOURCE_GCL,COMMENTS)
                    VALUES(returnId,'{EVENT_GUID}',NULLIF('{SIGN_TYPE_CL}',''),NULLIF('{MARKER_TYPE_GCL}',''),{MARKER_NUMBER},'{DATE_INSTALLED}',NULLIF('{DESCRIPTION}',''),NULLIF('{SOURCE_GCL}',''),NULLIF('{COMMENTS}',''));
					END $$;
                </query>
            </dbCommand>
        </insert>
        <update>
            <dbCommand>
				<param name="CLASS_ID" type="String" direction="Input" default="PODS_MARKER_POINT" /> 
				<var name="POLICY" default="POLICY.xml#UPDATE_PODS_SEM"  />
                <param name="EVENT_GUID" default="" type="String"/>
                <param name="SIGN_TYPE_CL" default="UNKNOWN" type="String"/>
                <param name="MARKER_TYPE_GCL" default="MARKER_TYPE_06" type="String"/>
                <param name="MARKER_NUMBER" default="NULL" type="Decimal"/>
                <param name="DATE_INSTALLED" default="" type="DateTime"/>
                <param name="DESCRIPTION" default="" type="String"/>
                <param name="SOURCE_GCL" default="UNKNOWN" type="String"/>
                <param name="COMMENTS" default="" type="String"/>
                <param name="ID" type="Int64"/>
                <param name="USER_ID" default="-1" type="Int64"/>
                <query>
                    UPDATE PODS.MARKER
                    SET 
					EVENT_GUID=case when :EVENT_GUID is null then EVENT_GUID else :EVENT_GUID end,
					SIGN_TYPE_CL=case when :SIGN_TYPE_CL is null then SIGN_TYPE_CL else :SIGN_TYPE_CL end,
                    MARKER_TYPE_GCL=case when :MARKER_TYPE_GCL is null then MARKER_TYPE_GCL else :MARKER_TYPE_GCL end,
					MARKER_NUMBER=case when :MARKER_NUMBER is null then MARKER_NUMBER else :MARKER_NUMBER end,
                    DATE_INSTALLED=case when :DATE_INSTALLED is null then DATE_INSTALLED else :DATE_INSTALLED end,
                    DESCRIPTION=case when :DESCRIPTION is null then DESCRIPTION else :DESCRIPTION end,
                    SOURCE_GCL=case when :SOURCE_GCL is null then SOURCE_GCL else :SOURCE_GCL end,
                    COMMENTS=case when :COMMENTS is null then COMMENTS else :COMMENTS end
                    WHERE EVENT_ID = :ID;
                </query>
            </dbCommand>
        </update>
        <delete>
            <dbCommand>
				<var name="CLASS_ID" type="String" direction="Input" default="PODS_MARKER_POINT" /> 
				<var name="POLICY" default="POLICY.xml#DELETE_PODS_SEM"  />
                <var name="ID" type="Int64"/>
                <var name="USER_ID" default="-1" type="Int64"/>
                <query>
					DO $$
                    BEGIN
                    UPDATE PODS.EVENT_RANGE
                    SET CURRENT_INDICATOR_LF='N'
                    WHERE EVENT_ID = {ID};

                    DELETE FROM PODS.MARKER
                    WHERE EVENT_ID = {ID};
                    DELETE FROM WEB50.LNK_GATE WHERE LEFT_OBJ_ID = 'PODS_MARKER/'||CAST({ID} AS VARCHAR(30)) OR RIGHT_OBJ_ID = 'PODS_MARKER/'||CAST({ID} AS VARCHAR(30)); 
					END $$;
                </query>
            </dbCommand>
        </delete>
    </data>
    <data table="MARKER" schema="PODS" id="PODS_MARKER_KM" comment="PODS.MARKER">
        <select>
            <dbQuery idField="ID">
                <param name="USER_ID" default="-1" type="Int64"/>
                <var name="FILTER" default="1=1"/>
                <var name="LPU_ACCESS_FILTER" default="SELECT srv_district_id FROM PODS.SRV_DISTRICT_GCL"/>
                <query>
                    SELECT * FROM (SELECT EVENT_ID ID, t.* FROM PODS.MARKER t WHERE t.MARKER_TYPE_GCL = 'MARKER_TYPE_05') d WHERE {FILTER}
                </query>
            </dbQuery>
        </select>
        <insert>
            <dbCommand>
				<var name="CLASS_ID" type="String" direction="Input" default="PODS_MARKER_KM" /> 
				<var name="POLICY" default="POLICY.xml#INSERT_PODS_SEM"  />
                <var name="EVENT_GUID" default="" type="String"/>
                <var name="SIGN_TYPE_CL" default="UNKNOWN" type="String"/>
                <var name="MARKER_TYPE_GCL" default="UNKNOWN" type="String"/>
                <var name="MARKER_NUMBER" default="NULL" type="Decimal"/>
                <var name="DATE_INSTALLED" default="" type="DateTime"/>
                <var name="DESCRIPTION" default="" type="String"/>
                <var name="SOURCE_GCL" default="UNKNOWN" type="String"/>
                <var name="COMMENTS" default="" type="String"/>
                <var name="ID" type="Int64" direction="Output" default="SELECT max(EVENT_ID) id FROM PODS.EVENT_RANGE"/>
                <var name="PODS_USER" type="String"/>
                <var name="USER_ID" default="-1" type="Int64"/>
                <query>
					DO $$
					DECLARE
					returnId integer;
                    BEGIN
                    INSERT INTO PODS.EVENT_RANGE (EVENT_GUID,FEATURE_ID,STATION_ID_BEGIN,STATION_ID_END,PODS_USER,CREATE_DATE,EFFECTIVE_FROM_DATE,CURRENT_INDICATOR_LF,POSITIONING_TYPE_CL)
                    VALUES('{EVENT_GUID}','MARKER',0,0,NULLIF('{PODS_USER}',''),current_timestamp,current_timestamp,'Y','UNKNOWN')
                    RETURNING EVENT_ID INTO returnId;

                    INSERT INTO PODS.MARKER(EVENT_ID,EVENT_GUID,SIGN_TYPE_CL,MARKER_TYPE_GCL,MARKER_NUMBER,DATE_INSTALLED,DESCRIPTION,SOURCE_GCL,COMMENTS)
                    VALUES(returnId,'{EVENT_GUID}',NULLIF('{SIGN_TYPE_CL}',''),NULLIF('{MARKER_TYPE_GCL}',''),{MARKER_NUMBER},'{DATE_INSTALLED}',NULLIF('{DESCRIPTION}',''),NULLIF('{SOURCE_GCL}',''),NULLIF('{COMMENTS}',''));
					END $$;
                </query>
            </dbCommand>
        </insert>
        <update>
            <dbCommand>
				<param name="CLASS_ID" type="String" direction="Input" default="PODS_MARKER_KM" /> 
				<var name="POLICY" default="POLICY.xml#UPDATE_PODS_SEM"  />
                <param name="EVENT_GUID" default="" type="String"/>
                <param name="SIGN_TYPE_CL" default="UNKNOWN" type="String"/>
                <param name="MARKER_TYPE_GCL" default="UNKNOWN" type="String"/>
                <param name="MARKER_NUMBER" default="NULL" type="Decimal"/>
                <param name="DATE_INSTALLED" default="" type="DateTime"/>
                <param name="DESCRIPTION" default="" type="String"/>
                <param name="SOURCE_GCL" default="UNKNOWN" type="String"/>
                <param name="COMMENTS" default="" type="String"/>
                <param name="ID" type="Int64"/>
                <param name="USER_ID" default="-1" type="Int64"/>
                <query>
                    UPDATE PODS.MARKER
                    SET 
					EVENT_GUID=case when :EVENT_GUID is null then EVENT_GUID else :EVENT_GUID end,
					SIGN_TYPE_CL=case when :SIGN_TYPE_CL is null then SIGN_TYPE_CL else :SIGN_TYPE_CL end,
                    MARKER_TYPE_GCL=case when :MARKER_TYPE_GCL is null then MARKER_TYPE_GCL else :MARKER_TYPE_GCL end,
					MARKER_NUMBER=case when :MARKER_NUMBER is null then MARKER_NUMBER else :MARKER_NUMBER end,
                    DATE_INSTALLED=case when :DATE_INSTALLED is null then DATE_INSTALLED else :DATE_INSTALLED end,
                    DESCRIPTION=case when :DESCRIPTION is null then DESCRIPTION else :DESCRIPTION end,
                    SOURCE_GCL=case when :SOURCE_GCL is null then SOURCE_GCL else :SOURCE_GCL end,
                    COMMENTS=case when :COMMENTS is null then COMMENTS else :COMMENTS end
                    WHERE EVENT_ID = :ID;
                </query>
            </dbCommand>
        </update>
        <delete>
            <dbCommand>
				<var name="CLASS_ID" type="String" direction="Input" default="PODS_MARKER_KM" /> 
				<var name="POLICY" default="POLICY.xml#DELETE_PODS_SEM"  />
                <var name="ID" type="Int64"/>
                <var name="USER_ID" default="-1" type="Int64"/>
                <query>
					DO $$
                    BEGIN
                    UPDATE PODS.EVENT_RANGE
                    SET CURRENT_INDICATOR_LF='N'
                    WHERE EVENT_ID = {ID};

                    DELETE FROM PODS.MARKER
                    WHERE EVENT_ID = {ID};
                    DELETE FROM WEB50.LNK_GATE WHERE LEFT_OBJ_ID = 'PODS_MARKER/'||CAST({ID} AS VARCHAR(30)) OR RIGHT_OBJ_ID = 'PODS_MARKER/'||CAST({ID} AS VARCHAR(30)); 
					END $$;
                </query>
            </dbCommand>
        </delete>
    </data>

    <data table="STO_ILI_DATA_CALC" schema="PODS" id="PODS_STO_REPAIR_METHOD" comment="PODS.STO_ILI_DATA_CALC">
        <select>
            <dbQuery idField="ID">
                <var name="FILTER" default="1=1" />
                <query>
                    SELECT *
                    FROM (SELECT t.ili_data_id ID, t.*,
                    c.CLUSTER_COMMENT,c.R_595_2011_REPAIR_METHOD,c.R_595_2011_DEPTH_ABRASION,
                    c.R_595_2011_SQUARE_ABRASION,c.R_595_2011_LENGTH_PIPE_REPAIR,c.R_595_2011_COMMENT,
                    c.STO_112_2007_ASSURANCE_FACTOR,c.STO_112_2007_DESTRUCT_PRESSURE,c.STO_112_2007_ALLOW_PRESSURE,
                    c.STO_112_2007_PERFORMANCE_EVAL,c.STO_173_2007_CRITICAL_PRESSURE,c.STO_173_2007_DANGER_DEGREE,
                    c.STO_173_2007_SAFE_PRESSURE,c.STO_173_2007_ACTUAL_SAFETY,c.STO_173_2007_STANDARD_SAFETY,
                    c.STO_292_2007_DANGER_RANK,c.STO_401_2009_FAIL_PROBABILITY,ca.r_620_2011_date_test,
                    ca.r_620_2011_date_repair, ca.sto_112_2007_work_press_koef,
                    ca.sto_112_2007_compress_strength, ca.sto_112_2007_length_koef,
                    ca.ltg_thickness_measured, ca.ltg_corrosion_speed,
                    ca.ltg_time_from_last_repair, ca.ltg_thickness_to_destroy,
                    ca.ltg_residual_life, ca.ltg_min_thickness_allow,
                    ca.ltg_actual_res_thickness, ca.ltg_probab_corrosion_speed,
                    ca.ltg_depth_to_destroy, ca.ltg_time_to_destroy,
                    ca.ltg_repair_method,ca.pipe_params
                    FROM pods.ili_data t JOIN pods.sto_ili_data_calc c ON t.ili_data_id = c.ili_data_id
                    LEFT OUTER JOIN pods.sto_ili_data_calc_adv ca ON t.ili_data_id = ca.ili_data_id
                    ) d WHERE {FILTER}
                </query>
            </dbQuery>
        </select>
    </data>
    <data table="STO_ILI_DATA_CALC" schema="PODS" id="PODS_STO_PERFORMANCE_EVAL" comment="PODS.STO_ILI_DATA_CALC">
        <select>
            <dbQuery idField="ID">
                <var name="FILTER" default="1=1" />
                <query>
                    SELECT *
                    FROM (SELECT t.ili_data_id ID, t.*,
                    c.CLUSTER_COMMENT,c.R_595_2011_REPAIR_METHOD,c.R_595_2011_DEPTH_ABRASION,
                    c.R_595_2011_SQUARE_ABRASION,c.R_595_2011_LENGTH_PIPE_REPAIR,c.R_595_2011_COMMENT,
                    c.STO_112_2007_ASSURANCE_FACTOR,c.STO_112_2007_DESTRUCT_PRESSURE,c.STO_112_2007_ALLOW_PRESSURE,
                    c.STO_112_2007_PERFORMANCE_EVAL,c.STO_173_2007_CRITICAL_PRESSURE,c.STO_173_2007_DANGER_DEGREE,
                    c.STO_173_2007_SAFE_PRESSURE,c.STO_173_2007_ACTUAL_SAFETY,c.STO_173_2007_STANDARD_SAFETY,
                    c.STO_292_2007_DANGER_RANK,c.STO_401_2009_FAIL_PROBABILITY,ca.r_620_2011_date_test,
                    ca.r_620_2011_date_repair, ca.sto_112_2007_work_press_koef,
                    ca.sto_112_2007_compress_strength, ca.sto_112_2007_length_koef,
                    ca.ltg_thickness_measured, ca.ltg_corrosion_speed,
                    ca.ltg_time_from_last_repair, ca.ltg_thickness_to_destroy,
                    ca.ltg_residual_life, ca.ltg_min_thickness_allow,
                    ca.ltg_actual_res_thickness, ca.ltg_probab_corrosion_speed,
                    ca.ltg_depth_to_destroy, ca.ltg_time_to_destroy,
                    ca.ltg_repair_method,ca.pipe_params
                    FROM pods.ili_data t JOIN pods.sto_ili_data_calc c ON t.ili_data_id = c.ili_data_id
                    LEFT OUTER JOIN pods.sto_ili_data_calc_adv ca ON t.ili_data_id = ca.ili_data_id
                    ) d WHERE {FILTER}
                </query>
            </dbQuery>
        </select>
    </data>
    <data table="STO_ILI_DATA_CALC" schema="PODS" id="PODS_STO_DANGER_DEGREE" comment="PODS.STO_ILI_DATA_CALC">
        <select>
            <dbQuery idField="ID">
                <var name="FILTER" default="1=1" />
                <query>
                    SELECT *
                    FROM (SELECT t.ili_data_id ID, t.*,
                    c.CLUSTER_COMMENT,c.R_595_2011_REPAIR_METHOD,c.R_595_2011_DEPTH_ABRASION,
                    c.R_595_2011_SQUARE_ABRASION,c.R_595_2011_LENGTH_PIPE_REPAIR,c.R_595_2011_COMMENT,
                    c.STO_112_2007_ASSURANCE_FACTOR,c.STO_112_2007_DESTRUCT_PRESSURE,c.STO_112_2007_ALLOW_PRESSURE,
                    c.STO_112_2007_PERFORMANCE_EVAL,c.STO_173_2007_CRITICAL_PRESSURE,c.STO_173_2007_DANGER_DEGREE,
                    c.STO_173_2007_SAFE_PRESSURE,c.STO_173_2007_ACTUAL_SAFETY,c.STO_173_2007_STANDARD_SAFETY,
                    c.STO_292_2007_DANGER_RANK,c.STO_401_2009_FAIL_PROBABILITY,ca.r_620_2011_date_test,
                    ca.r_620_2011_date_repair, ca.sto_112_2007_work_press_koef,
                    ca.sto_112_2007_compress_strength, ca.sto_112_2007_length_koef,
                    ca.ltg_thickness_measured, ca.ltg_corrosion_speed,
                    ca.ltg_time_from_last_repair, ca.ltg_thickness_to_destroy,
                    ca.ltg_residual_life, ca.ltg_min_thickness_allow,
                    ca.ltg_actual_res_thickness, ca.ltg_probab_corrosion_speed,
                    ca.ltg_depth_to_destroy, ca.ltg_time_to_destroy,
                    ca.ltg_repair_method,ca.pipe_params
                    FROM pods.ili_data t JOIN pods.sto_ili_data_calc c ON t.ili_data_id = c.ili_data_id
                    LEFT OUTER JOIN pods.sto_ili_data_calc_adv ca ON t.ili_data_id = ca.ili_data_id
                    ) d WHERE {FILTER}
                </query>
            </dbQuery>
        </select>
    </data>
    <data table="STO_ILI_DATA_CALC" schema="PODS" id="PODS_STO_DANGER_RANK" comment="PODS.STO_ILI_DATA_CALC">
        <select>
            <dbQuery idField="ID">
                <var name="FILTER" default="1=1" />
                <query>
                    SELECT *
                    FROM (SELECT t.ili_data_id ID, t.*,
                    c.CLUSTER_COMMENT,c.R_595_2011_REPAIR_METHOD,c.R_595_2011_DEPTH_ABRASION,
                    c.R_595_2011_SQUARE_ABRASION,c.R_595_2011_LENGTH_PIPE_REPAIR,c.R_595_2011_COMMENT,
                    c.STO_112_2007_ASSURANCE_FACTOR,c.STO_112_2007_DESTRUCT_PRESSURE,c.STO_112_2007_ALLOW_PRESSURE,
                    c.STO_112_2007_PERFORMANCE_EVAL,c.STO_173_2007_CRITICAL_PRESSURE,c.STO_173_2007_DANGER_DEGREE,
                    c.STO_173_2007_SAFE_PRESSURE,c.STO_173_2007_ACTUAL_SAFETY,c.STO_173_2007_STANDARD_SAFETY,
                    c.STO_292_2007_DANGER_RANK,c.STO_401_2009_FAIL_PROBABILITY,ca.r_620_2011_date_test,
                    ca.r_620_2011_date_repair, ca.sto_112_2007_work_press_koef,
                    ca.sto_112_2007_compress_strength, ca.sto_112_2007_length_koef,
                    ca.ltg_thickness_measured, ca.ltg_corrosion_speed,
                    ca.ltg_time_from_last_repair, ca.ltg_thickness_to_destroy,
                    ca.ltg_residual_life, ca.ltg_min_thickness_allow,
                    ca.ltg_actual_res_thickness, ca.ltg_probab_corrosion_speed,
                    ca.ltg_depth_to_destroy, ca.ltg_time_to_destroy,
                    ca.ltg_repair_method,ca.pipe_params
                    FROM pods.ili_data t JOIN pods.sto_ili_data_calc c ON t.ili_data_id = c.ili_data_id
                    LEFT OUTER JOIN pods.sto_ili_data_calc_adv ca ON t.ili_data_id = ca.ili_data_id
                    ) d WHERE {FILTER}
                </query>
            </dbQuery>
        </select>
    </data>
    <data table="STO_ILI_DATA_CALC" schema="PODS" id="PODS_STO_FAIL_PROBABILITY" comment="PODS.STO_ILI_DATA_CALC">
        <select>
            <dbQuery idField="ID">
                <var name="FILTER" default="1=1" />
                <query>
                    SELECT *
                    FROM (SELECT t.ili_data_id ID, t.*,
                    c.CLUSTER_COMMENT,c.R_595_2011_REPAIR_METHOD,c.R_595_2011_DEPTH_ABRASION,
                    c.R_595_2011_SQUARE_ABRASION,c.R_595_2011_LENGTH_PIPE_REPAIR,c.R_595_2011_COMMENT,
                    c.STO_112_2007_ASSURANCE_FACTOR,c.STO_112_2007_DESTRUCT_PRESSURE,c.STO_112_2007_ALLOW_PRESSURE,
                    c.STO_112_2007_PERFORMANCE_EVAL,c.STO_173_2007_CRITICAL_PRESSURE,c.STO_173_2007_DANGER_DEGREE,
                    c.STO_173_2007_SAFE_PRESSURE,c.STO_173_2007_ACTUAL_SAFETY,c.STO_173_2007_STANDARD_SAFETY,
                    c.STO_292_2007_DANGER_RANK,c.STO_401_2009_FAIL_PROBABILITY,ca.r_620_2011_date_test,
                    ca.r_620_2011_date_repair, ca.sto_112_2007_work_press_koef,
                    ca.sto_112_2007_compress_strength, ca.sto_112_2007_length_koef,
                    ca.ltg_thickness_measured, ca.ltg_corrosion_speed,
                    ca.ltg_time_from_last_repair, ca.ltg_thickness_to_destroy,
                    ca.ltg_residual_life, ca.ltg_min_thickness_allow,
                    ca.ltg_actual_res_thickness, ca.ltg_probab_corrosion_speed,
                    ca.ltg_depth_to_destroy, ca.ltg_time_to_destroy,
                    ca.ltg_repair_method,ca.pipe_params
                    FROM pods.ili_data t JOIN pods.sto_ili_data_calc c ON t.ili_data_id = c.ili_data_id
                    LEFT OUTER JOIN pods.sto_ili_data_calc_adv ca ON t.ili_data_id = ca.ili_data_id
                    ) d WHERE {FILTER}
                </query>
            </dbQuery>
        </select>
    </data>
    <data table="STO_ILI_INSPECTION_CALC" schema="PODS" id="PODS_STO_100_VALUE_PIPE" comment="PODS.STO_ILI_INSPECTION_CALC">
        <select>
            <dbQuery idField="ID">
                <var name="FILTER" default="1=1" />
                <query>SELECT * FROM (SELECT t.EVENT_ID ID, t.*,spb.station STATION_BEG,spe.station STATION_END FROM PODS.STO_ILI_INSPECTION_CALC t,pods.event_range e,pods.station_point spb,pods.station_point spe where t.event_id=e.event_id and e.station_id_begin=spb.station_id and e.station_id_end=spe.station_id and e.current_indicator_lf='Y') d WHERE {FILTER}</query>
            </dbQuery>
        </select>
    </data>
    <data table="STO_ILI_INSPECTION_CALC" schema="PODS" id="PODS_STO_100_DAMAGE_MECHANICAL" comment="PODS.STO_ILI_INSPECTION_CALC">
        <select>
            <dbQuery idField="ID">
                <var name="FILTER" default="1=1" />
                <query>SELECT * FROM (SELECT t.EVENT_ID ID, t.*,spb.station STATION_BEG,spe.station STATION_END FROM PODS.STO_ILI_INSPECTION_CALC t,pods.event_range e,pods.station_point spb,pods.station_point spe where t.event_id=e.event_id and e.station_id_begin=spb.station_id and e.station_id_end=spe.station_id and e.current_indicator_lf='Y') d WHERE {FILTER}</query>
            </dbQuery>
        </select>
    </data>
    <data table="STO_ILI_INSPECTION_CALC" schema="PODS" id="PODS_STO_100_VALUE_WELD" comment="PODS.STO_ILI_INSPECTION_CALC">
        <select>
            <dbQuery idField="ID">
                <var name="FILTER" default="1=1" />
                <query>SELECT * FROM (SELECT t.EVENT_ID ID, t.*,spb.station STATION_BEG,spe.station STATION_END FROM PODS.STO_ILI_INSPECTION_CALC t,pods.event_range e,pods.station_point spb,pods.station_point spe where t.event_id=e.event_id and e.station_id_begin=spb.station_id and e.station_id_end=spe.station_id and e.current_indicator_lf='Y') d WHERE {FILTER}</query>
            </dbQuery>
        </select>
    </data>
    <data table="STO_ILI_INSPECTION_CALC" schema="PODS" id="PODS_STO_100_DAMAGE_CRACK" comment="PODS.STO_ILI_INSPECTION_CALC">
        <select>
            <dbQuery idField="ID">
                <var name="FILTER" default="1=1" />
                <query>SELECT * FROM (SELECT t.EVENT_ID ID, t.*,spb.station STATION_BEG,spe.station STATION_END FROM PODS.STO_ILI_INSPECTION_CALC t,pods.event_range e,pods.station_point spb,pods.station_point spe where t.event_id=e.event_id and e.station_id_begin=spb.station_id and e.station_id_end=spe.station_id and e.current_indicator_lf='Y') d WHERE {FILTER}</query>
            </dbQuery>
        </select>
    </data>
    <data table="STO_ILI_INSPECTION_CALC" schema="PODS" id="PODS_STO_100_DAMAGE_CORROSION" comment="PODS.STO_ILI_INSPECTION_CALC">
        <select>
            <dbQuery idField="ID">
                <var name="FILTER" default="1=1" />
                <query>SELECT * FROM (SELECT t.EVENT_ID ID, t.*,spb.station STATION_BEG,spe.station STATION_END FROM PODS.STO_ILI_INSPECTION_CALC t,pods.event_range e,pods.station_point spb,pods.station_point spe where t.event_id=e.event_id and e.station_id_begin=spb.station_id and e.station_id_end=spe.station_id and e.current_indicator_lf='Y') d WHERE {FILTER}</query>
            </dbQuery>
        </select>
    </data>
    <data table="STO_ILI_INSPECTION_CALC" schema="PODS" id="PODS_STO_100_DAMAGE_DENT" comment="PODS.STO_ILI_INSPECTION_CALC">
        <select>
            <dbQuery idField="ID">
                <var name="FILTER" default="1=1" />
                <query>SELECT * FROM (SELECT t.EVENT_ID ID, t.*,spb.station STATION_BEG,spe.station STATION_END FROM PODS.STO_ILI_INSPECTION_CALC t,pods.event_range e,pods.station_point spb,pods.station_point spe where t.event_id=e.event_id and e.station_id_begin=spb.station_id and e.station_id_end=spe.station_id and e.current_indicator_lf='Y') d WHERE {FILTER}</query>
            </dbQuery>
        </select>
    </data>
    <data table="STO_ILI_INSPECTION_CALC" schema="PODS" id="PODS_STO_100_VALUE_CONDITION" comment="PODS.STO_ILI_INSPECTION_CALC">
        <select>
            <dbQuery idField="ID">
                <var name="FILTER" default="1=1" />
                <query>SELECT * FROM (SELECT t.EVENT_ID ID, t.*,spb.station STATION_BEG,spe.station STATION_END FROM PODS.STO_ILI_INSPECTION_CALC t,pods.event_range e,pods.station_point spb,pods.station_point spe where t.event_id=e.event_id and e.station_id_begin=spb.station_id and e.station_id_end=spe.station_id and e.current_indicator_lf='Y') d WHERE {FILTER}</query>
            </dbQuery>
        </select>
    </data>
    <data table="STO_ILI_INSPECTION_CALC" schema="PODS" id="PODS_STO_100_DAMAGE_DUTY" comment="PODS.STO_ILI_INSPECTION_CALC">
        <select>
            <dbQuery idField="ID">
                <var name="FILTER" default="1=1" />
                <query>SELECT * FROM (SELECT t.EVENT_ID ID, t.*,spb.station STATION_BEG,spe.station STATION_END FROM PODS.STO_ILI_INSPECTION_CALC t,pods.event_range e,pods.station_point spb,pods.station_point spe where t.event_id=e.event_id and e.station_id_begin=spb.station_id and e.station_id_end=spe.station_id and e.current_indicator_lf='Y') d WHERE {FILTER}</query>
            </dbQuery>
        </select>
    </data>
    <data table="STO_ILI_INSPECTION_CALC" schema="PODS" id="PODS_STO_100_PROJECTED_SCC" comment="PODS.STO_ILI_INSPECTION_CALC">
        <select>
            <dbQuery idField="ID">
                <var name="FILTER" default="1=1" />
                <query>SELECT * FROM (SELECT t.EVENT_ID ID, t.*,spb.station STATION_BEG,spe.station STATION_END FROM PODS.STO_ILI_INSPECTION_CALC t,pods.event_range e,pods.station_point spb,pods.station_point spe where t.event_id=e.event_id and e.station_id_begin=spb.station_id and e.station_id_end=spe.station_id and e.current_indicator_lf='Y') d WHERE {FILTER}</query>
            </dbQuery>
        </select>
    </data>
    <data table="STO_ILI_INSPECTION_CALC" schema="PODS" id="PODS_STO_100_PROJECTED_COR" comment="PODS.STO_ILI_INSPECTION_CALC">
        <select>
            <dbQuery idField="ID">
                <var name="FILTER" default="1=1" />
                <query>SELECT * FROM (SELECT t.EVENT_ID ID, t.*,spb.station STATION_BEG,spe.station STATION_END FROM PODS.STO_ILI_INSPECTION_CALC t,pods.event_range e,pods.station_point spb,pods.station_point spe where t.event_id=e.event_id and e.station_id_begin=spb.station_id and e.station_id_end=spe.station_id and e.current_indicator_lf='Y') d WHERE {FILTER}</query>
            </dbQuery>
        </select>
    </data>
    <data table="STO_EHZ_CALC" schema="PODS" id="PODS_STO_100_DANGER_DEG" comment="PODS.STO_EHZ_CALC">
        <select>
            <dbQuery idField="ID">
                <var name="FILTER" default="1=1" />
                <query>SELECT * FROM (SELECT t.EVENT_ID ID, t.*,spb.station STATION_BEG,spe.station STATION_END FROM PODS.STO_EHZ_CALC t,pods.event_range e,pods.station_point spb,pods.station_point spe where t.event_id=e.event_id and e.station_id_begin=spb.station_id and e.station_id_end=spe.station_id and e.current_indicator_lf='Y') d WHERE {FILTER}</query>
            </dbQuery>
        </select>
    </data>
    <data table="STO_EHZ_CALC" schema="PODS" id="PODS_STO_100_SEGMENT_CATEGORY" comment="PODS.STO_EHZ_CALC">
        <select>
            <dbQuery idField="ID">
                <var name="FILTER" default="1=1" />
                <query>SELECT * FROM (SELECT t.EVENT_ID ID, t.*,spb.station STATION_BEG,spe.station STATION_END FROM PODS.STO_EHZ_CALC t,pods.event_range e,pods.station_point spb,pods.station_point spe where t.event_id=e.event_id and e.station_id_begin=spb.station_id and e.station_id_end=spe.station_id and e.current_indicator_lf='Y') d WHERE {FILTER}</query>
            </dbQuery>
        </select>
    </data>
    <data table="STO_EHZ_CALC" schema="PODS" id="PODS_STO_100_TIME_TO_CRIT_DEPTH" comment="PODS.STO_EHZ_CALC">
        <select>
            <dbQuery idField="ID">
                <var name="FILTER" default="1=1" />
                <query>SELECT * FROM (SELECT t.EVENT_ID ID, t.*,spb.station STATION_BEG,spe.station STATION_END FROM PODS.STO_EHZ_CALC t,pods.event_range e,pods.station_point spb,pods.station_point spe where t.event_id=e.event_id and e.station_id_begin=spb.station_id and e.station_id_end=spe.station_id and e.current_indicator_lf='Y') d WHERE {FILTER}</query>
            </dbQuery>
        </select>
    </data>

    <data table="STO_ILI_INSPECTION_CALC" schema="PODS" id="PODS_STO_VALVE_VALUE_PIPE" comment="PODS.STO_ILI_INSPECTION_CALC">
        <select>
            <dbQuery idField="ID">
                <var name="FILTER" default="1=1" />
                <query>SELECT * FROM (SELECT t.EVENT_ID ID, t.*,spb.station STATION_BEG,spe.station STATION_END FROM PODS.STO_ILI_INSPECTION_CALC t,pods.event_range e,pods.station_point spb,pods.station_point spe where t.event_id=e.event_id and e.station_id_begin=spb.station_id and e.station_id_end=spe.station_id and e.current_indicator_lf='Y') d WHERE {FILTER}</query>
            </dbQuery>
        </select>
    </data>
    <data table="STO_ILI_INSPECTION_CALC" schema="PODS" id="PODS_STO_VALVE_DAMAGE_MECHANICAL" comment="PODS.STO_ILI_INSPECTION_CALC">
        <select>
            <dbQuery idField="ID">
                <var name="FILTER" default="1=1" />
                <query>SELECT * FROM (SELECT t.EVENT_ID ID, t.*,spb.station STATION_BEG,spe.station STATION_END FROM PODS.STO_ILI_INSPECTION_CALC t,pods.event_range e,pods.station_point spb,pods.station_point spe where t.event_id=e.event_id and e.station_id_begin=spb.station_id and e.station_id_end=spe.station_id and e.current_indicator_lf='Y') d WHERE {FILTER}</query>
            </dbQuery>
        </select>
    </data>
    <data table="STO_ILI_INSPECTION_CALC" schema="PODS" id="PODS_STO_VALVE_VALUE_WELD" comment="PODS.STO_ILI_INSPECTION_CALC">
        <select>
            <dbQuery idField="ID">
                <var name="FILTER" default="1=1" />
                <query>SELECT * FROM (SELECT t.EVENT_ID ID, t.*,spb.station STATION_BEG,spe.station STATION_END FROM PODS.STO_ILI_INSPECTION_CALC t,pods.event_range e,pods.station_point spb,pods.station_point spe where t.event_id=e.event_id and e.station_id_begin=spb.station_id and e.station_id_end=spe.station_id and e.current_indicator_lf='Y') d WHERE {FILTER}</query>
            </dbQuery>
        </select>
    </data>
    <data table="STO_ILI_INSPECTION_CALC" schema="PODS" id="PODS_STO_VALVE_DAMAGE_CRACK" comment="PODS.STO_ILI_INSPECTION_CALC">
        <select>
            <dbQuery idField="ID">
                <var name="FILTER" default="1=1" />
                <query>SELECT * FROM (SELECT t.EVENT_ID ID, t.*,spb.station STATION_BEG,spe.station STATION_END FROM PODS.STO_ILI_INSPECTION_CALC t,pods.event_range e,pods.station_point spb,pods.station_point spe where t.event_id=e.event_id and e.station_id_begin=spb.station_id and e.station_id_end=spe.station_id and e.current_indicator_lf='Y') d WHERE {FILTER}</query>
            </dbQuery>
        </select>
    </data>
    <data table="STO_ILI_INSPECTION_CALC" schema="PODS" id="PODS_STO_VALVE_DAMAGE_CORROSION" comment="PODS.STO_ILI_INSPECTION_CALC">
        <select>
            <dbQuery idField="ID">
                <var name="FILTER" default="1=1" />
                <query>SELECT * FROM (SELECT t.EVENT_ID ID, t.*,spb.station STATION_BEG,spe.station STATION_END FROM PODS.STO_ILI_INSPECTION_CALC t,pods.event_range e,pods.station_point spb,pods.station_point spe where t.event_id=e.event_id and e.station_id_begin=spb.station_id and e.station_id_end=spe.station_id and e.current_indicator_lf='Y') d WHERE {FILTER}</query>
            </dbQuery>
        </select>
    </data>
    <data table="STO_ILI_INSPECTION_CALC" schema="PODS" id="PODS_STO_VALVE_DAMAGE_DENT" comment="PODS.STO_ILI_INSPECTION_CALC">
        <select>
            <dbQuery idField="ID">
                <var name="FILTER" default="1=1" />
                <query>SELECT * FROM (SELECT t.EVENT_ID ID, t.*,spb.station STATION_BEG,spe.station STATION_END FROM PODS.STO_ILI_INSPECTION_CALC t,pods.event_range e,pods.station_point spb,pods.station_point spe where t.event_id=e.event_id and e.station_id_begin=spb.station_id and e.station_id_end=spe.station_id and e.current_indicator_lf='Y') d WHERE {FILTER}</query>
            </dbQuery>
        </select>
    </data>
    <data table="STO_ILI_INSPECTION_CALC" schema="PODS" id="PODS_STO_VALVE_VALUE_CONDITION" comment="PODS.STO_ILI_INSPECTION_CALC">
        <select>
            <dbQuery idField="ID">
                <var name="FILTER" default="1=1" />
                <query>SELECT * FROM (SELECT t.EVENT_ID ID, t.*,spb.station STATION_BEG,spe.station STATION_END FROM PODS.STO_ILI_INSPECTION_CALC t,pods.event_range e,pods.station_point spb,pods.station_point spe where t.event_id=e.event_id and e.station_id_begin=spb.station_id and e.station_id_end=spe.station_id and e.current_indicator_lf='Y') d WHERE {FILTER}</query>
            </dbQuery>
        </select>
    </data>
    <data table="STO_ILI_INSPECTION_CALC" schema="PODS" id="PODS_STO_VALVE_DAMAGE_DUTY" comment="PODS.STO_ILI_INSPECTION_CALC">
        <select>
            <dbQuery idField="ID">
                <var name="FILTER" default="1=1" />
                <query>SELECT * FROM (SELECT t.EVENT_ID ID, t.*,spb.station STATION_BEG,spe.station STATION_END FROM PODS.STO_ILI_INSPECTION_CALC t,pods.event_range e,pods.station_point spb,pods.station_point spe where t.event_id=e.event_id and e.station_id_begin=spb.station_id and e.station_id_end=spe.station_id and e.current_indicator_lf='Y') d WHERE {FILTER}</query>
            </dbQuery>
        </select>
    </data>
    <data table="STO_ILI_INSPECTION_CALC" schema="PODS" id=" PODS_STO_VALVE_PROJECTED_SCC" comment="PODS.STO_ILI_INSPECTION_CALC">
        <select>
            <dbQuery idField="ID">
                <var name="FILTER" default="1=1" />
                <query>SELECT * FROM (SELECT t.EVENT_ID ID, t.*,spb.station STATION_BEG,spe.station STATION_END FROM PODS.STO_ILI_INSPECTION_CALC t,pods.event_range e,pods.station_point spb,pods.station_point spe where t.event_id=e.event_id and e.station_id_begin=spb.station_id and e.station_id_end=spe.station_id and e.current_indicator_lf='Y') d WHERE {FILTER}</query>
            </dbQuery>
        </select>
    </data>
    <data table="STO_ILI_INSPECTION_CALC" schema="PODS" id="PODS_STO_VALVE_PROJECTED_COR" comment="PODS.STO_ILI_INSPECTION_CALC">
        <select>
            <dbQuery idField="ID">
                <var name="FILTER" default="1=1" />
                <query>SELECT * FROM (SELECT t.EVENT_ID ID, t.*,spb.station STATION_BEG,spe.station STATION_END FROM PODS.STO_ILI_INSPECTION_CALC t,pods.event_range e,pods.station_point spb,pods.station_point spe where t.event_id=e.event_id and e.station_id_begin=spb.station_id and e.station_id_end=spe.station_id and e.current_indicator_lf='Y') d WHERE {FILTER}</query>
            </dbQuery>
        </select>
    </data>
    <data table="STO_EHZ_CALC" schema="PODS" id="PODS_STO_VALVE_DANGER_DEG" comment="PODS.STO_EHZ_CALC">
        <select>
            <dbQuery idField="ID">
                <var name="FILTER" default="1=1" />
                <query>SELECT * FROM (SELECT t.EVENT_ID ID, t.*,spb.station STATION_BEG,spe.station STATION_END FROM PODS.STO_EHZ_CALC t,pods.event_range e,pods.station_point spb,pods.station_point spe where t.event_id=e.event_id and e.station_id_begin=spb.station_id and e.station_id_end=spe.station_id and e.current_indicator_lf='Y') d WHERE {FILTER}</query>
            </dbQuery>
        </select>
    </data>
    <data table="STO_EHZ_CALC" schema="PODS" id="PODS_STO_VALVE_SEGMENT_CATEGORY" comment="PODS.STO_EHZ_CALC">
        <select>
            <dbQuery idField="ID">
                <var name="FILTER" default="1=1" />
                <query>SELECT * FROM (SELECT t.EVENT_ID ID, t.*,spb.station STATION_BEG,spe.station STATION_END FROM PODS.STO_EHZ_CALC t,pods.event_range e,pods.station_point spb,pods.station_point spe where t.event_id=e.event_id and e.station_id_begin=spb.station_id and e.station_id_end=spe.station_id and e.current_indicator_lf='Y') d WHERE {FILTER}</query>
            </dbQuery>
        </select>
    </data>
    <data table="STO_EHZ_CALC" schema="PODS" id="PODS_STO_VALVE_TIME_TO_CRIT_DEPTH" comment="PODS.STO_EHZ_CALC">
        <select>
            <dbQuery idField="ID">
                <var name="FILTER" default="1=1" />
                <query>SELECT * FROM (SELECT t.EVENT_ID ID, t.*,spb.station STATION_BEG,spe.station STATION_END FROM PODS.STO_EHZ_CALC t,pods.event_range e,pods.station_point spb,pods.station_point spe where t.event_id=e.event_id and e.station_id_begin=spb.station_id and e.station_id_end=spe.station_id and e.current_indicator_lf='Y') d WHERE {FILTER}</query>
            </dbQuery>
        </select>
    </data>

    <data table="STO_ILI_INSPECTION_CALC" schema="PODS" id="PODS_STO_RANGE_VALUE_PIPE" comment="PODS.STO_ILI_INSPECTION_CALC">
        <select>
            <dbQuery idField="ID">
                <var name="FILTER" default="1=1" />
                <query>SELECT * FROM (SELECT t.EVENT_ID ID, t.*,spb.station STATION_BEG,spe.station STATION_END FROM PODS.STO_ILI_INSPECTION_CALC t,pods.event_range e,pods.station_point spb,pods.station_point spe where t.event_id=e.event_id and e.station_id_begin=spb.station_id and e.station_id_end=spe.station_id and e.current_indicator_lf='Y') d WHERE {FILTER}</query>
            </dbQuery>
        </select>
    </data>
    <data table="STO_ILI_INSPECTION_CALC" schema="PODS" id="PODS_STO_RANGE_DAMAGE_MECHANICAL" comment="PODS.STO_ILI_INSPECTION_CALC">
        <select>
            <dbQuery idField="ID">
                <var name="FILTER" default="1=1" />
                <query>SELECT * FROM (SELECT t.EVENT_ID ID, t.*,spb.station STATION_BEG,spe.station STATION_END FROM PODS.STO_ILI_INSPECTION_CALC t,pods.event_range e,pods.station_point spb,pods.station_point spe where t.event_id=e.event_id and e.station_id_begin=spb.station_id and e.station_id_end=spe.station_id and e.current_indicator_lf='Y') d WHERE {FILTER}</query>
            </dbQuery>
        </select>
    </data>
    <data table="STO_ILI_INSPECTION_CALC" schema="PODS" id="PODS_STO_RANGE_VALUE_WELD" comment="PODS.STO_ILI_INSPECTION_CALC">
        <select>
            <dbQuery idField="ID">
                <var name="FILTER" default="1=1" />
                <query>SELECT * FROM (SELECT t.EVENT_ID ID, t.*,spb.station STATION_BEG,spe.station STATION_END FROM PODS.STO_ILI_INSPECTION_CALC t,pods.event_range e,pods.station_point spb,pods.station_point spe where t.event_id=e.event_id and e.station_id_begin=spb.station_id and e.station_id_end=spe.station_id and e.current_indicator_lf='Y') d WHERE {FILTER}</query>
            </dbQuery>
        </select>
    </data>
    <data table="STO_ILI_INSPECTION_CALC" schema="PODS" id="PODS_STO_RANGE_DAMAGE_CRACK" comment="PODS.STO_ILI_INSPECTION_CALC">
        <select>
            <dbQuery idField="ID">
                <var name="FILTER" default="1=1" />
                <query>SELECT * FROM (SELECT t.EVENT_ID ID, t.*,spb.station STATION_BEG,spe.station STATION_END FROM PODS.STO_ILI_INSPECTION_CALC t,pods.event_range e,pods.station_point spb,pods.station_point spe where t.event_id=e.event_id and e.station_id_begin=spb.station_id and e.station_id_end=spe.station_id and e.current_indicator_lf='Y') d WHERE {FILTER}</query>
            </dbQuery>
        </select>
    </data>
    <data table="STO_ILI_INSPECTION_CALC" schema="PODS" id="PODS_STO_RANGE_DAMAGE_CORROSION" comment="PODS.STO_ILI_INSPECTION_CALC">
        <select>
            <dbQuery idField="ID">
                <var name="FILTER" default="1=1" />
                <query>SELECT * FROM (SELECT t.EVENT_ID ID, t.*,spb.station STATION_BEG,spe.station STATION_END FROM PODS.STO_ILI_INSPECTION_CALC t,pods.event_range e,pods.station_point spb,pods.station_point spe where t.event_id=e.event_id and e.station_id_begin=spb.station_id and e.station_id_end=spe.station_id and e.current_indicator_lf='Y') d WHERE {FILTER}</query>
            </dbQuery>
        </select>
    </data>
    <data table="STO_ILI_INSPECTION_CALC" schema="PODS" id="PODS_STO_RANGE_DAMAGE_DENT" comment="PODS.STO_ILI_INSPECTION_CALC">
        <select>
            <dbQuery idField="ID">
                <var name="FILTER" default="1=1" />
                <query>SELECT * FROM (SELECT t.EVENT_ID ID, t.*,spb.station STATION_BEG,spe.station STATION_END FROM PODS.STO_ILI_INSPECTION_CALC t,pods.event_range e,pods.station_point spb,pods.station_point spe where t.event_id=e.event_id and e.station_id_begin=spb.station_id and e.station_id_end=spe.station_id and e.current_indicator_lf='Y') d WHERE {FILTER}</query>
            </dbQuery>
        </select>
    </data>
    <data table="STO_ILI_INSPECTION_CALC" schema="PODS" id="PODS_STO_RANGE_VALUE_CONDITION" comment="PODS.STO_ILI_INSPECTION_CALC">
        <select>
            <dbQuery idField="ID">
                <var name="FILTER" default="1=1" />
                <query>SELECT * FROM (SELECT t.EVENT_ID ID, t.*,spb.station STATION_BEG,spe.station STATION_END FROM PODS.STO_ILI_INSPECTION_CALC t,pods.event_range e,pods.station_point spb,pods.station_point spe where t.event_id=e.event_id and e.station_id_begin=spb.station_id and e.station_id_end=spe.station_id and e.current_indicator_lf='Y') d WHERE {FILTER}</query>
            </dbQuery>
        </select>
    </data>
    <data table="STO_ILI_INSPECTION_CALC" schema="PODS" id="PODS_STO_RANGE_DAMAGE_DUTY" comment="PODS.STO_ILI_INSPECTION_CALC">
        <select>
            <dbQuery idField="ID">
                <var name="FILTER" default="1=1" />
                <query>SELECT * FROM (SELECT t.EVENT_ID ID, t.*,spb.station STATION_BEG,spe.station STATION_END FROM PODS.STO_ILI_INSPECTION_CALC t,pods.event_range e,pods.station_point spb,pods.station_point spe where t.event_id=e.event_id and e.station_id_begin=spb.station_id and e.station_id_end=spe.station_id and e.current_indicator_lf='Y') d WHERE {FILTER}</query>
            </dbQuery>
        </select>
    </data>
    <data table="STO_ILI_INSPECTION_CALC" schema="PODS" id="PODS_STO_RANGE_TIME_LIMIT_EXPL" comment="PODS.STO_ILI_INSPECTION_CALC">
        <select>
            <dbQuery idField="ID">
                <var name="FILTER" default="1=1" />
                <query>SELECT * FROM (SELECT t.EVENT_ID ID, t.*,spb.station STATION_BEG,spe.station STATION_END FROM PODS.STO_ILI_INSPECTION_CALC t,pods.event_range e,pods.station_point spb,pods.station_point spe where t.event_id=e.event_id and e.station_id_begin=spb.station_id and e.station_id_end=spe.station_id and e.current_indicator_lf='Y') d WHERE {FILTER}</query>
            </dbQuery>
        </select>
    </data>
    <data table="STO_ILI_INSPECTION_CALC" schema="PODS" id="PODS_STO_RANGE_OPTIM_TIM_BFR_ILI" comment="PODS.STO_ILI_INSPECTION_CALC">
        <select>
            <dbQuery idField="ID">
                <var name="FILTER" default="1=1" />
                <query>SELECT * FROM (SELECT t.EVENT_ID ID, t.*,spb.station STATION_BEG,spe.station STATION_END FROM PODS.STO_ILI_INSPECTION_CALC t,pods.event_range e,pods.station_point spb,pods.station_point spe where t.event_id=e.event_id and e.station_id_begin=spb.station_id and e.station_id_end=spe.station_id and e.current_indicator_lf='Y') d WHERE {FILTER}</query>
            </dbQuery>
        </select>
    </data>
    <data table="STO_ILI_INSPECTION_CALC" schema="PODS" id="PODS_STO_RANGE_MIN_UNIT_COST_YKM" comment="PODS.STO_ILI_INSPECTION_CALC">
        <select>
            <dbQuery idField="ID">
                <var name="FILTER" default="1=1" />
                <query>SELECT * FROM (SELECT t.EVENT_ID ID, t.*,spb.station STATION_BEG,spe.station STATION_END FROM PODS.STO_ILI_INSPECTION_CALC t,pods.event_range e,pods.station_point spb,pods.station_point spe where t.event_id=e.event_id and e.station_id_begin=spb.station_id and e.station_id_end=spe.station_id and e.current_indicator_lf='Y') d WHERE {FILTER}</query>
            </dbQuery>
        </select>
    </data>
    <data table="STO_ILI_INSPECTION_CALC" schema="PODS" id="PODS_STO_RANGE_FAILURE_PROBABLY" comment="PODS.STO_ILI_INSPECTION_CALC">
        <select>
            <dbQuery idField="ID">
                <var name="FILTER" default="1=1" />
                <query>SELECT * FROM (SELECT t.EVENT_ID ID, t.*,spb.station STATION_BEG,spe.station STATION_END FROM PODS.STO_ILI_INSPECTION_CALC t,pods.event_range e,pods.station_point spb,pods.station_point spe where t.event_id=e.event_id and e.station_id_begin=spb.station_id and e.station_id_end=spe.station_id and e.current_indicator_lf='Y') d WHERE {FILTER}</query>
            </dbQuery>
        </select>
    </data>
    <data table="STO_ILI_INSPECTION_CALC" schema="PODS" id="PODS_STO_RANGE_OP_REP_PIPE_COUNT" comment="PODS.STO_ILI_INSPECTION_CALC">
        <select>
            <dbQuery idField="ID">
                <var name="FILTER" default="1=1" />
                <query>SELECT * FROM (SELECT t.EVENT_ID ID, t.*,spb.station STATION_BEG,spe.station STATION_END FROM PODS.STO_ILI_INSPECTION_CALC t,pods.event_range e,pods.station_point spb,pods.station_point spe where t.event_id=e.event_id and e.station_id_begin=spb.station_id and e.station_id_end=spe.station_id and e.current_indicator_lf='Y') d WHERE {FILTER}</query>
            </dbQuery>
        </select>
    </data>
    <data table="STO_ILI_INSPECTION_CALC" schema="PODS" id="PODS_STO_RANGE_MEAN_TIME_FAIL" comment="PODS.STO_ILI_INSPECTION_CALC">
        <select>
            <dbQuery idField="ID">
                <var name="FILTER" default="1=1" />
                <query>SELECT * FROM (SELECT t.EVENT_ID ID, t.*,spb.station STATION_BEG,spe.station STATION_END FROM PODS.STO_ILI_INSPECTION_CALC t,pods.event_range e,pods.station_point spb,pods.station_point spe where t.event_id=e.event_id and e.station_id_begin=spb.station_id and e.station_id_end=spe.station_id and e.current_indicator_lf='Y') d WHERE {FILTER}</query>
            </dbQuery>
        </select>
    </data>
    <data table="STO_ILI_INSPECTION_CALC" schema="PODS" id="PODS_STO_RANGE_PROJECTED_SCC" comment="PODS.STO_ILI_INSPECTION_CALC">
        <select>
            <dbQuery idField="ID">
                <var name="FILTER" default="1=1" />
                <query>SELECT * FROM (SELECT t.EVENT_ID ID, t.*,spb.station STATION_BEG,spe.station STATION_END FROM PODS.STO_ILI_INSPECTION_CALC t,pods.event_range e,pods.station_point spb,pods.station_point spe where t.event_id=e.event_id and e.station_id_begin=spb.station_id and e.station_id_end=spe.station_id and e.current_indicator_lf='Y') d WHERE {FILTER}</query>
            </dbQuery>
        </select>
    </data>
    <data table="STO_ILI_INSPECTION_CALC" schema="PODS" id="PODS_STO_RANGE_NEXT_INSP_SCC" comment="PODS.STO_ILI_INSPECTION_CALC">
        <select>
            <dbQuery idField="ID">
                <var name="FILTER" default="1=1" />
                <query>SELECT * FROM (SELECT t.EVENT_ID ID, t.*,spb.station STATION_BEG,spe.station STATION_END FROM PODS.STO_ILI_INSPECTION_CALC t,pods.event_range e,pods.station_point spb,pods.station_point spe where t.event_id=e.event_id and e.station_id_begin=spb.station_id and e.station_id_end=spe.station_id and e.current_indicator_lf='Y') d WHERE {FILTER}</query>
            </dbQuery>
        </select>
    </data>
    <data table="STO_ILI_INSPECTION_CALC" schema="PODS" id="PODS_STO_RANGE_PROJECTED_COR" comment="PODS.STO_ILI_INSPECTION_CALC">
        <select>
            <dbQuery idField="ID">
                <var name="FILTER" default="1=1" />
                <query>SELECT * FROM (SELECT t.EVENT_ID ID, t.*,spb.station STATION_BEG,spe.station STATION_END FROM PODS.STO_ILI_INSPECTION_CALC t,pods.event_range e,pods.station_point spb,pods.station_point spe where t.event_id=e.event_id and e.station_id_begin=spb.station_id and e.station_id_end=spe.station_id and e.current_indicator_lf='Y') d WHERE {FILTER}</query>
            </dbQuery>
        </select>
    </data>
    <data table="STO_ILI_INSPECTION_CALC" schema="PODS" id="PODS_STO_RANGE_NEXT_INSP" comment="PODS.STO_ILI_INSPECTION_CALC">
        <select>
            <dbQuery idField="ID">
                <var name="FILTER" default="1=1" />
                <query>SELECT * FROM (SELECT t.EVENT_ID ID, t.*,spb.station STATION_BEG,spe.station STATION_END FROM PODS.STO_ILI_INSPECTION_CALC t,pods.event_range e,pods.station_point spb,pods.station_point spe where t.event_id=e.event_id and e.station_id_begin=spb.station_id and e.station_id_end=spe.station_id and e.current_indicator_lf='Y') d WHERE {FILTER}</query>
            </dbQuery>
        </select>
    </data>
    <data table="STO_EHZ_CALC" schema="PODS" id="PODS_STO_RANGE_DANGER_DEG" comment="PODS.STO_EHZ_CALC">
        <select>
            <dbQuery idField="ID">
                <var name="FILTER" default="1=1" />
                <query>SELECT * FROM (SELECT t.EVENT_ID ID, t.*,spb.station STATION_BEG,spe.station STATION_END FROM PODS.STO_EHZ_CALC t,pods.event_range e,pods.station_point spb,pods.station_point spe where t.event_id=e.event_id and e.station_id_begin=spb.station_id and e.station_id_end=spe.station_id and e.current_indicator_lf='Y') d WHERE {FILTER}</query>
            </dbQuery>
        </select>
    </data>
    <data table="STO_EHZ_CALC" schema="PODS" id="PODS_STO_RANGE_SEGMENT_CATEGORY" comment="PODS.STO_EHZ_CALC">
        <select>
            <dbQuery idField="ID">
                <var name="FILTER" default="1=1" />
                <query>SELECT * FROM (SELECT t.EVENT_ID ID, t.*,spb.station STATION_BEG,spe.station STATION_END FROM PODS.STO_EHZ_CALC t,pods.event_range e,pods.station_point spb,pods.station_point spe where t.event_id=e.event_id and e.station_id_begin=spb.station_id and e.station_id_end=spe.station_id and e.current_indicator_lf='Y') d WHERE {FILTER}</query>
            </dbQuery>
        </select>
    </data>
    <data table="STO_EHZ_CALC" schema="PODS" id="PODS_STO_RANGE_TIME_TO_CRIT_DEPTH" comment="PODS.STO_EHZ_CALC">
        <select>
            <dbQuery idField="ID">
                <var name="FILTER" default="1=1" />
                <query>SELECT * FROM (SELECT t.EVENT_ID ID, t.*,spb.station STATION_BEG,spe.station STATION_END FROM PODS.STO_EHZ_CALC t,pods.event_range e,pods.station_point spb,pods.station_point spe where t.event_id=e.event_id and e.station_id_begin=spb.station_id and e.station_id_end=spe.station_id and e.current_indicator_lf='Y') d WHERE {FILTER}</query>
            </dbQuery>
        </select>
    </data>

    <data table="INFOTEH_REPAIR" schema="GIS_INTEGRATION50" id="INFOTEH_REPAIR" comment="GIS_INTEGRATION50.INFOTEH_REPAIR">
        <select>
            <dbQuery idField="ID">
                <var name="FILTER" default="1=1" />
                <query>
                    SELECT *
                    FROM (SELECT t.ili_data_id ID, t.ILI_DATA_ID,t.ILI_INSPECTION_ID,
                    c.infoteh_rep_id, c.infoteh_def_id, c.descr,
                    c.date_repair, c.length, c.width, c.new_diam_thick, c.comments
                    FROM pods.ili_data t JOIN GIS_INTEGRATION50.INFOTEH_REPAIR c ON t.ili_data_id = c.ili_data_id
                    ) d WHERE {FILTER}
                </query>
            </dbQuery>
        </select>
    </data>

    <data table="INFOTEH_EXCAVATE" schema="GIS_INTEGRATION50" id="INFOTEH_EXCAVATE" comment="GIS_INTEGRATION50.INFOTEH_EXCAVATE">
        <select>
            <dbQuery idField="ID">
                <var name="FILTER" default="1=1" />
                <query>
                    SELECT *
                    FROM (SELECT t.ili_data_id ID, t.ILI_DATA_ID,t.ILI_INSPECTION_ID,
                    c.infoteh_excavate_id, c.infoteh_def_id, c.length,
                    c.width, c.def_type, c.date_excavate, c.extern_coating, c.orient, c.pipe
                    FROM pods.ili_data t JOIN GIS_INTEGRATION50.INFOTEH_EXCAVATE c ON t.ili_data_id = c.ili_data_id
                    ) d WHERE {FILTER}
                </query>
            </dbQuery>
        </select>
    </data>

    <data table="STO_ILI_DATA_CALC_ADV" schema="PODS" id="PODS_STO_DATE_TEST" comment="PODS.STO_ILI_DATA_CALC_ADV">
        <select>
            <dbQuery idField="ID">
                <var name="FILTER" default="1=1" />
                <query>
                    SELECT *
                    FROM (SELECT t.ili_data_id ID, t.*,
                    c.cluster_comment, c.r_620_2011_date_test,
                    c.r_620_2011_date_repair, c.sto_112_2007_work_press_koef,
                    c.sto_112_2007_compress_strength, c.sto_112_2007_length_koef,
                    c.ltg_thickness_measured, c.ltg_corrosion_speed,
                    c.ltg_time_from_last_repair, c.ltg_thickness_to_destroy,
                    c.ltg_residual_life, c.ltg_min_thickness_allow,
                    c.ltg_actual_res_thickness, c.ltg_probab_corrosion_speed,
                    c.ltg_depth_to_destroy, c.ltg_time_to_destroy,
                    c.ltg_repair_method, c.pipe_params
                    FROM pods.ili_data t JOIN pods.sto_ili_data_calc_adv c ON t.ili_data_id = c.ili_data_id
                    ) d WHERE {FILTER}
                </query>
            </dbQuery>
        </select>
    </data>

    <data table="STO_ILI_DATA_CALC_ADV" schema="PODS" id="PODS_STO_DATE_REPAIR" comment="PODS.STO_ILI_DATA_CALC_ADV">
        <select>
            <dbQuery idField="ID">
                <var name="FILTER" default="1=1" />
                <query>
                    SELECT *
                    FROM (SELECT t.ili_data_id ID, t.*,
                    c.cluster_comment, c.r_620_2011_date_test,
                    c.r_620_2011_date_repair, c.sto_112_2007_work_press_koef,
                    c.sto_112_2007_compress_strength, c.sto_112_2007_length_koef,
                    c.ltg_thickness_measured, c.ltg_corrosion_speed,
                    c.ltg_time_from_last_repair, c.ltg_thickness_to_destroy,
                    c.ltg_residual_life, c.ltg_min_thickness_allow,
                    c.ltg_actual_res_thickness, c.ltg_probab_corrosion_speed,
                    c.ltg_depth_to_destroy, c.ltg_time_to_destroy,
                    c.ltg_repair_method,
                    c.pipe_params
                    FROM pods.ili_data t JOIN pods.sto_ili_data_calc_adv c ON t.ili_data_id = c.ili_data_id
                    ) d WHERE {FILTER}
                </query>
            </dbQuery>
        </select>
    </data>

    <data table="STO_ILI_DATA_CALC_ADV" schema="PODS" id="PODS_LTG_KOCHETKOVA" comment="PODS.STO_ILI_DATA_CALC_ADV">
        <select>
            <dbQuery idField="ID">
                <var name="FILTER" default="1=1" />
                <query>
                    SELECT *
                    FROM (SELECT t.ili_data_id ID, t.*,
                    c.cluster_comment, c.r_620_2011_date_test,
                    c.r_620_2011_date_repair, c.sto_112_2007_work_press_koef,
                    c.sto_112_2007_compress_strength, c.sto_112_2007_length_koef,
                    c.ltg_thickness_measured, c.ltg_corrosion_speed,
                    c.ltg_time_from_last_repair, c.ltg_thickness_to_destroy,
                    c.ltg_residual_life, c.ltg_min_thickness_allow,
                    c.ltg_actual_res_thickness, c.ltg_probab_corrosion_speed,
                    c.ltg_depth_to_destroy, c.ltg_time_to_destroy,
                    c.ltg_repair_method,
                    c.pipe_params
                    FROM pods.ili_data t JOIN pods.sto_ili_data_calc_adv c ON t.ili_data_id = c.ili_data_id
                    ) d WHERE {FILTER}
                </query>
            </dbQuery>
        </select>
    </data>

    <data table="STO_PIPE_SEGMENT_PARAMS" schema="PODS" id="PODS_STO_PIPE_SEGMENT_PARAMS" comment="PODS.STO_PIPE_SEGMENT_PARAMS">
        <select>
            <dbQuery idField="ID">
                <param name="USER_ID" default="-1" type="Int64"/>
                <var name="FILTER" default="1=1"/>
                <var name="LPU_ACCESS_FILTER" default="SELECT srv_district_id FROM PODS.SRV_DISTRICT_GCL"/>
                <query>
                    SELECT * FROM (SELECT EVENT_ID ID, t.event_id, t.route_id, t.station_begin, t.station_end,
                    t.dot_class_rating_cl, t.nominal_diameter_gcl,
                    t.nominal_wall_thickness_gcl, t.project_pressure,
                    t.test_pressure, t.work_pressure, t.pipe_long_seam_gcl,
                    t.pipe_segment_material_cl, t.pipe_segment_manufacturer_cl,
                    t.date_begin_exploitation, t.date_last_ili, t.cost_repair,
                    t.cost_replace_pipe, t.cost_ili_1_km, t.cost_excavate,
                    t.cost_capital_repair, coalesce(t.coat_code, 'UNKNOWN')||'@'||coalesce(t.coat_subcode, 'NONE') TYPE_SCL,
                    t.where_coating_applied_gcl, t.comments, t.create_date FROM pods.sto_pipe_segment_params t) d WHERE {FILTER}
                </query>
            </dbQuery>
        </select>
        <insert>
            <dbCommand>
				<var name="CLASS_ID" type="String" direction="Input" default="PODS_STO_PIPE_SEGMENT_varS" /> 
				<var name="POLICY" default="POLICY.xml#INSERT_PODS_SEM"  />
                <var name="ROUTE_ID" default="0" type="Decimal"/>
                <var name="STATION_BEGIN" default="0" type="Decimal"/>
                <var name="STATION_END" default="0" type="Decimal"/>
                <var name="DOT_CLASS_RATING_CL" default="UNKNOWN" type="String"/>
                <var name="NOMINAL_DIAMETER_GCL" default="0" type="Decimal"/>
                <var name="NOMINAL_WALL_THICKNESS_GCL" default="0" type="Decimal"/>
                <var name="PROJECT_PRESSURE" default="NULL" type="Decimal"/>
                <var name="TEST_PRESSURE" default="NULL" type="Decimal"/>
                <var name="WORK_PRESSURE" default="NULL" type="Decimal"/>
                <var name="PIPE_LONG_SEAM_GCL" default="UNKNOWN" type="String"/>
                <var name="PIPE_SEGMENT_MATERIAL_CL" default="UNKNOWN" type="String"/>
                <var name="PIPE_SEGMENT_MANUFACTURER_CL" default="UNKNOWN" type="String"/>
                <var name="DATE_BEGIN_EXPLOITATION" default="" type="DateTime"/>
                <var name="DATE_LAST_ILI" default="" type="DateTime"/>
                <var name="COST_REPAIR" default="NULL" type="Decimal"/>
                <var name="COST_REPLACE_PIPE" default="NULL" type="Decimal"/>
                <var name="COST_ILI_1_KM" default="NULL" type="Decimal"/>
                <var name="COST_EXCAVATE" default="NULL" type="Decimal"/>
                <var name="COST_CAPITAL_REPAIR" default="NULL" type="Decimal"/>
                <var name="WHERE_COATING_APPLIED_GCL" default="UNKNOWN" type="String"/>
                <var name="TYPE_SCL" default="UNKNOWN" type="String"/>
                <var name="SUBTYPE_SCL" default="NONE" type="String"/>
                <var name="CREATE_DATE" default="" type="DateTime"/>
                <var name="COMMENTS" default="" type="String"/>
                <var name="ID" type="Int64" direction="Output" default="SELECT max(EVENT_ID) id FROM PODS.EVENT_RANGE"/>
                <var name="PODS_USER" type="String"/>
                <var name="USER_ID" default="-1" type="Int64"/>
                <query>
					DO $$
					DECLARE
					returnId integer;
                    BEGIN
                    INSERT INTO PODS.EVENT_RANGE (EVENT_GUID,FEATURE_ID,STATION_ID_BEGIN,STATION_ID_END,PODS_USER,CREATE_DATE,EFFECTIVE_FROM_DATE,CURRENT_INDICATOR_LF,POSITIONING_TYPE_CL)
                    VALUES(null,'STO_PIPE_SEG_PAR',0,0,NULLIF('{PODS_USER}',''),current_timestamp,current_timestamp,'Y','UNKNOWN')
                    RETURNING EVENT_ID INTO returnId;

                    INSERT INTO PODS.STO_PIPE_SEGMENT_PARAMS (EVENT_ID,ROUTE_ID,STATION_BEGIN,STATION_END,
                    DOT_CLASS_RATING_CL, NOMINAL_DIAMETER_GCL,       NOMINAL_WALL_THICKNESS_GCL, PROJECT_PRESSURE, TEST_PRESSURE, WORK_PRESSURE, PIPE_LONG_SEAM_GCL,
                    PIPE_SEGMENT_MATERIAL_CL, PIPE_SEGMENT_MANUFACTURER_CL, DATE_BEGIN_EXPLOITATION, DATE_LAST_ILI, COST_REPAIR,  COST_REPLACE_PIPE, COST_ILI_1_KM, COST_EXCAVATE, COST_CAPITAL_REPAIR, COAT_CODE, COAT_SUBCODE,  WHERE_COATING_APPLIED_GCL, COMMENTS, CREATE_DATE)
                    VALUES(returnId, {ROUTE_ID}, {STATION_BEGIN},{STATION_END},NULLIF('{DOT_CLASS_RATING_CL}',''), {NOMINAL_DIAMETER_GCL},  {NOMINAL_WALL_THICKNESS_GCL}, {PROJECT_PRESSURE},
                    {TEST_PRESSURE}, {WORK_PRESSURE}, NULLIF('{PIPE_LONG_SEAM_GCL}',''), NULLIF('{PIPE_SEGMENT_MATERIAL_CL}',''), NULLIF('{PIPE_SEGMENT_MANUFACTURER_CL}',''),'{DATE_BEGIN_EXPLOITATION}', '{DATE_LAST_ILI}', {COST_REPAIR}, {COST_REPLACE_PIPE}, {COST_ILI_1_KM}, {COST_EXCAVATE}, {COST_CAPITAL_REPAIR}, coalesce(SUBSTR('{TYPE_SCL}',0,strpos('{TYPE_SCL}','@')),'UNKNOWN'), coalesce(SUBSTR('{TYPE_SCL}',strpos('{TYPE_SCL}','@')+1,length('{TYPE_SCL}')-strpos('{TYPE_SCL}','@')),'NONE'), NULLIF('{WHERE_COATING_APPLIED_GCL}',''), NULLIF('{COMMENTS}',''), '{CREATE_DATE}');
		update pods.event_range e set station_id_begin=(select station_id from pods.station_point s where s.route_id={ROUTE_ID} and abs(s.station-{STATION_BEGIN})&lt;1 order by abs(s.station-{STATION_BEGIN}) desc limit 1),
		station_id_end=(select station_id from pods.station_point s where s.route_id={ROUTE_ID} and abs(s.station-{STATION_END})&lt;1 order by abs(s.station-{STATION_END}) desc limit 1) where e.event_id=returnId;

END $$;
                </query>
            </dbCommand>
        </insert>
        <update>
            <dbCommand>
				<param name="CLASS_ID" type="String" direction="Input" default="PODS_STO_PIPE_SEGMENT_PARAMS" /> 
				<var name="POLICY" default="POLICY.xml#UPDATE_PODS_SEM"  />
                <param name="ROUTE_ID" default="0" type="Decimal"/>
                <param name="STATION_BEGIN" default="NULL" type="Decimal"/>
                <param name="STATION_END" default="NULL" type="Decimal"/>
                <param name="DOT_CLASS_RATING_CL" default="UNKNOWN" type="String"/>
                <param name="NOMINAL_DIAMETER_GCL" default="0" type="Decimal"/>
                <param name="NOMINAL_WALL_THICKNESS_GCL" default="0" type="Decimal"/>
                <param name="PROJECT_PRESSURE" default="NULL" type="Decimal"/>
                <param name="TEST_PRESSURE" default="NULL" type="Decimal"/>
                <param name="WORK_PRESSURE" default="NULL" type="Decimal"/>
                <param name="PIPE_LONG_SEAM_GCL" default="UNKNOWN" type="String"/>
                <param name="PIPE_SEGMENT_MATERIAL_CL" default="UNKNOWN" type="String"/>
                <param name="PIPE_SEGMENT_MANUFACTURER_CL" default="UNKNOWN" type="String"/>
                <param name="DATE_BEGIN_EXPLOITATION" default="" type="DateTime"/>
                <param name="DATE_LAST_ILI" default="" type="DateTime"/>
                <param name="COST_REPAIR" default="NULL" type="Decimal"/>
                <param name="COST_REPLACE_PIPE" default="NULL" type="Decimal"/>
                <param name="COST_ILI_1_KM" default="NULL" type="Decimal"/>
                <param name="COST_EXCAVATE" default="NULL" type="Decimal"/>
                <param name="COST_CAPITAL_REPAIR" default="NULL" type="Decimal"/>
                <param name="WHERE_COATING_APPLIED_GCL" default="UNKNOWN" type="String"/>
                <param name="TYPE_SCL" default="UNKNOWN" type="String"/>
                <param name="SUBTYPE_SCL" default="NONE" type="String"/>
                <param name="CREATE_DATE" default="" type="DateTime"/>
                <param name="COMMENTS" default="" type="String"/>
                <param name="ID" type="Int64"/>
                <param name="PODS_USER" type="String"/>
                <param name="USER_ID" default="-1" type="Int64"/>
                <query>
                    UPDATE PODS.STO_PIPE_SEGMENT_PARAMS
                    SET
                    DOT_CLASS_RATING_CL=case when :DOT_CLASS_RATING_CL is null then DOT_CLASS_RATING_CL else :DOT_CLASS_RATING_CL end,
                    NOMINAL_DIAMETER_GCL=case when :NOMINAL_DIAMETER_GCL is null then NOMINAL_DIAMETER_GCL else :NOMINAL_DIAMETER_GCL end, 
                    NOMINAL_WALL_THICKNESS_GCL=case when :NOMINAL_WALL_THICKNESS_GCL is null then NOMINAL_WALL_THICKNESS_GCL else :NOMINAL_WALL_THICKNESS_GCL end, 
                    PROJECT_PRESSURE=case when :PROJECT_PRESSURE is null then PROJECT_PRESSURE else :PROJECT_PRESSURE end,
                    TEST_PRESSURE=case when :TEST_PRESSURE is null then TEST_PRESSURE else :TEST_PRESSURE end,
                    WORK_PRESSURE=case when :WORK_PRESSURE is null then WORK_PRESSURE else :WORK_PRESSURE end,
                    PIPE_LONG_SEAM_GCL=case when :PIPE_LONG_SEAM_GCL is null then PIPE_LONG_SEAM_GCL else :PIPE_LONG_SEAM_GCL end,
                    PIPE_SEGMENT_MATERIAL_CL=case when :PIPE_SEGMENT_MATERIAL_CL is null then PIPE_SEGMENT_MATERIAL_CL else :PIPE_SEGMENT_MATERIAL_CL end,
                    PIPE_SEGMENT_MANUFACTURER_CL=case when :PIPE_SEGMENT_MANUFACTURER_CL is null then PIPE_SEGMENT_MANUFACTURER_CL else :PIPE_SEGMENT_MANUFACTURER_CL end,
                    DATE_BEGIN_EXPLOITATION=case when :DATE_BEGIN_EXPLOITATION is null then DATE_BEGIN_EXPLOITATION else :DATE_BEGIN_EXPLOITATION end,
                    DATE_LAST_ILI=case when :DATE_LAST_ILI is null then DATE_LAST_ILI else :DATE_LAST_ILI end,
                    COST_REPAIR=case when :COST_REPAIR is null then COST_REPAIR else :COST_REPAIR end,
                    COST_REPLACE_PIPE=case when :COST_REPLACE_PIPE is null then COST_REPLACE_PIPE else :COST_REPLACE_PIPE end,
                    COST_ILI_1_KM=case when :COST_ILI_1_KM is null then COST_ILI_1_KM else :COST_ILI_1_KM end,
                    COST_EXCAVATE=case when :COST_EXCAVATE is null then COST_EXCAVATE else :COST_EXCAVATE end,
                    COST_CAPITAL_REPAIR=case when :COST_CAPITAL_REPAIR is null then COST_CAPITAL_REPAIR else :COST_CAPITAL_REPAIR end,
					COAT_CODE=coalesce(SUBSTR(:TYPE_SCL,0,strpos(:TYPE_SCL,'@')),'UNKNOWN'),
					COAT_SUBCODE=coalesce(SUBSTR(:TYPE_SCL,strpos(:TYPE_SCL,'@')+1,length(:TYPE_SCL)-strpos(:TYPE_SCL,'@')),'NONE'), 
                    WHERE_COATING_APPLIED_GCL=case when :WHERE_COATING_APPLIED_GCL is null then WHERE_COATING_APPLIED_GCL else :WHERE_COATING_APPLIED_GCL end, 
                    COMMENTS=case when :COMMENTS is null then COMMENTS else :COMMENTS end, 
					CREATE_DATE=case when :CREATE_DATE is null then CREATE_DATE else :CREATE_DATE end 
                    WHERE EVENT_ID = :ID;
                </query>
            </dbCommand>
        </update>
        <delete>
            <dbCommand>
				<var name="CLASS_ID" type="String" direction="Input" default="PODS_STO_PIPE_SEGMENT_PARAMS" /> 
				<var name="POLICY" default="POLICY.xml#DELETE_PODS_SEM"  />
                <var name="ID" type="Int64"/>
                <var name="USER_ID" default="-1" type="Int64"/>
                <query>
					DO $$
                    BEGIN
                    UPDATE PODS.EVENT_RANGE
                    SET CURRENT_INDICATOR_LF='N'
                    WHERE EVENT_ID = {ID};

                    DELETE FROM PODS.STO_PIPE_SEGMENT_PARAMS
                    WHERE EVENT_ID = {ID};
                    END $$;
                </query>
            </dbCommand>
        </delete>
    </data>
    <data id="PODS_PI_CP_INSPECTION_KIP" table="PI_CP_INSPECTION" schema="PODS" comment="PODS.PI_CP_INSPECTION">
        <select>
            <dbQuery idField="ID">
                <param name="USER_ID" default="-1" type="Int64"/>
                <var name="FILTER" default="1=1"/>
                <var name="LPU_ACCESS_FILTER" default="SELECT srv_district_id FROM PODS.SRV_DISTRICT_GCL"/>
                <query>
                    SELECT * FROM (SELECT EVENT_ID ID, t.* FROM PODS.PI_CP_INSPECTION t) d WHERE {FILTER}
                </query>
            </dbQuery>
        </select>
        <insert>
            <dbCommand>
                <var name="CLASS_ID" type="String" direction="Input" default="PODS_PI_CP_INSPECTION" /> 
                <var name="POLICY" default="POLICY.xml#INSERT_PODS_SEM"  />
                <var name="EVENT_GUID" default="" type="String"/>
                <var name="INSPECTION_DATE" default="" type="DateTime"/>
                <var name="CRITERIA_CL" default="UNKNOWN" type="String"/>
                <var name="TYPE_CL" default="UNKNOWN" type="String"/>
                <var name="RESULT_CL" default="UNKNOWN" type="String"/>
                <var name="NOMINAL_SPACING" default="NULL" type="Decimal"/>
                <var name="TOOL_CL" default="UNKNOWN" type="String"/>
                <var name="PI_EVENT_ID" default="NULL" type="Decimal"/>
                <var name="PI_EVENT_GUID" default="" type="String"/>
                <var name="DESCRIPTION" default="" type="String"/>
                <var name="SOURCE_GCL" default="UNKNOWN" type="String"/>
                <var name="COMMENTS" default="" type="String"/>
                <var name="ID" type="Int64" direction="Output" default="SELECT max(EVENT_ID) id FROM PODS.EVENT_RANGE"/>
                <var name="PODS_USER" type="String"/>
                <var name="USER_ID" default="-1" type="Int64"/>
                <query>
                    DO $$
                    DECLARE
                    returnId integer;
                    BEGIN
                    INSERT INTO PODS.EVENT_RANGE (EVENT_GUID,FEATURE_ID,STATION_ID_BEGIN,STATION_ID_END,PODS_USER,CREATE_DATE,EFFECTIVE_FROM_DATE,CURRENT_INDICATOR_LF,POSITIONING_TYPE_CL)
                    VALUES('{EVENT_GUID}','PI_CP_INSPECTION',0,0,NULLIF('{PODS_USER}',''),current_timestamp,current_timestamp,'Y','UNKNOWN')
                    RETURNING EVENT_ID INTO returnId;

                    INSERT INTO PODS.PI_CP_INSPECTION(EVENT_ID,EVENT_GUID,INSPECTION_DATE,CRITERIA_CL,TYPE_CL,RESULT_CL,NOMINAL_SPACING,TOOL_CL,PI_EVENT_ID,PI_EVENT_GUID,DESCRIPTION,SOURCE_GCL,COMMENTS)
                    VALUES(returnId,'{EVENT_GUID}','{INSPECTION_DATE}',NULLIF('{CRITERIA_CL}',''),NULLIF('{TYPE_CL}',''),NULLIF('{RESULT_CL}',''),{NOMINAL_SPACING},NULLIF('{TOOL_CL}',''),{PI_EVENT_ID},'{PI_EVENT_GUID}',NULLIF('{DESCRIPTION}',''),NULLIF('{SOURCE_GCL}',''),NULLIF('{COMMENTS}',''));
                    END $$;
                </query>
            </dbCommand>
        </insert>
        <update>
            <dbCommand>
                <param name="CLASS_ID" type="String" direction="Input" default="PODS_PI_CP_INSPECTION" /> 
                <var name="POLICY" default="POLICY.xml#UPDATE_PODS_SEM"  />
                <param name="EVENT_GUID" default="" type="String"/>
                <param name="INSPECTION_DATE" default="" type="DateTime"/>
                <param name="CRITERIA_CL" default="UNKNOWN" type="String"/>
                <param name="TYPE_CL" default="UNKNOWN" type="String"/>
                <param name="RESULT_CL" default="UNKNOWN" type="String"/>
                <param name="NOMINAL_SPACING" default="NULL" type="Decimal"/>
                <param name="TOOL_CL" default="UNKNOWN" type="String"/>
                <param name="PI_EVENT_ID" default="NULL" type="Decimal"/>
                <param name="PI_EVENT_GUID" default="" type="String"/>
                <param name="DESCRIPTION" default="" type="String"/>
                <param name="SOURCE_GCL" default="UNKNOWN" type="String"/>
                <param name="COMMENTS" default="" type="String"/>
                <param name="ID" type="Int64"/>
                <param name="USER_ID" default="-1" type="Int64"/>
                <query>
                    UPDATE PODS.PI_CP_INSPECTION
                    SET 
					EVENT_GUID=case when :EVENT_GUID is null then EVENT_GUID else :EVENT_GUID end,
                    INSPECTION_DATE=case when :INSPECTION_DATE is null then INSPECTION_DATE else :INSPECTION_DATE end,
                    CRITERIA_CL=case when :CRITERIA_CL is null then CRITERIA_CL else :CRITERIA_CL end,
                    TYPE_CL=case when :TYPE_CL is null then TYPE_CL else :TYPE_CL end,
                    RESULT_CL=case when :RESULT_CL is null then RESULT_CL else :RESULT_CL end,
                    NOMINAL_SPACING=case when :NOMINAL_SPACING is null then NOMINAL_SPACING else :NOMINAL_SPACING end,
                    TOOL_CL=case when :TOOL_CL is null then TOOL_CL else :TOOL_CL end,
                    PI_EVENT_ID=case when :PI_EVENT_ID is null then PI_EVENT_ID else :PI_EVENT_ID end,
                    PI_EVENT_GUID=case when :PI_EVENT_GUID is null then PI_EVENT_GUID else :PI_EVENT_GUID end,
                    DESCRIPTION=case when :DESCRIPTION is null then DESCRIPTION else :DESCRIPTION end,
                    SOURCE_GCL=case when :SOURCE_GCL is null then SOURCE_GCL else :SOURCE_GCL end,
                    COMMENTS=case when :COMMENTS is null then COMMENTS else :COMMENTS end
                    WHERE EVENT_ID = :ID;
                </query>
            </dbCommand>
        </update>
        <delete>
            <dbCommand>
                <var name="CLASS_ID" type="String" direction="Input" default="PODS_PI_CP_INSPECTION" /> 
                <var name="POLICY" default="POLICY.xml#DELETE_PODS_SEM"  />
                <var name="ID" type="Int64"/>
                <var name="USER_ID" default="-1" type="Int64"/>
                <query>
                    DO $$
                    DECLARE

                                       
                    BEGIN
                    UPDATE PODS.EVENT_RANGE
                    SET CURRENT_INDICATOR_LF='N'
                    WHERE EVENT_ID in (SELECT EVENT_ID
                    FROM PODS.PI_ANODE_READING
                    WHERE PI_CP_EVENT_ID = {ID});

                    DELETE
                    FROM WEB50.LNK_GATE
                    WHERE LEFT_OBJ_ID IN (SELECT 'PODS_PI_ANODE_READING/'||CAST(EVENT_ID AS VARCHAR(30))
                    FROM PODS.PI_ANODE_READING
                    WHERE PI_CP_EVENT_ID = {ID})
                    OR RIGHT_OBJ_ID IN (SELECT 'PODS_PI_ANODE_READING/'||CAST(EVENT_ID AS VARCHAR(30))
                    FROM PODS.PI_ANODE_READING
                    WHERE PI_CP_EVENT_ID = {ID});

                    BEGIN
                    /* Чистим GATE с расчетом на будущее, пока эта таблица не заполняется */
                    EXECUTE $OP$DELETE
                    FROM GIS_INTEGRATION50.GATE
                    WHERE TABLE_NAME = 'PI_ANODE_READING'
                    AND KEY_FIELDS = 'EVENT_ID'
                    AND KEY_VALUES in (SELECT CAST(EVENT_ID AS VARCHAR(30))
                    FROM PODS.PI_ANODE_READING
                    WHERE PI_CP_EVENT_ID =$1)$OP$
                    USING {ID};
                    EXCEPTION WHEN undefined_table
                    THEN NULL;
                    WHEN OTHERS
                    THEN RAISE;
                    END;

                    DELETE
                    FROM PODS.PI_ANODE_READING
                    WHERE PI_CP_EVENT_ID = {ID};


                    UPDATE PODS.EVENT_RANGE
                    SET CURRENT_INDICATOR_LF='N'
                    WHERE EVENT_ID in (SELECT EVENT_ID
                    FROM PODS.PI_BOND_READING
                    WHERE PI_CP_EVENT_ID = {ID});

                    DELETE
                    FROM WEB50.LNK_GATE
                    WHERE LEFT_OBJ_ID IN (SELECT 'PODS_PI_BOND_READING/'||CAST(EVENT_ID AS VARCHAR(30))
                    FROM PODS.PI_BOND_READING
                    WHERE PI_CP_EVENT_ID = {ID})
                    OR RIGHT_OBJ_ID IN (SELECT 'PODS_PI_BOND_READING/'||CAST(EVENT_ID AS VARCHAR(30))
                    FROM PODS.PI_BOND_READING
                    WHERE PI_CP_EVENT_ID = {ID});

                    BEGIN
                    /* Чистим GATE с расчетом на будущее, пока эта таблица не заполняется */
                    EXECUTE $OP$DELETE
                    FROM GIS_INTEGRATION50.GATE
                    WHERE TABLE_NAME = 'PI_BOND_READING'
                    AND KEY_FIELDS = 'EVENT_ID'
                    AND KEY_VALUES in (SELECT CAST(EVENT_ID AS VARCHAR(30))
                    FROM PODS.PI_BOND_READING
                    WHERE PI_CP_EVENT_ID =$1)$OP$
                    USING {ID};
                    EXCEPTION WHEN undefined_table
                    THEN NULL;
                    WHEN OTHERS
                    THEN RAISE;
                    END;

                    DELETE
                    FROM PODS.PI_BOND_READING
                    WHERE PI_CP_EVENT_ID = {ID};

                    UPDATE PODS.EVENT_RANGE
                    SET CURRENT_INDICATOR_LF='N'
                    WHERE EVENT_ID in (SELECT EVENT_ID
                    FROM PODS.PI_CASING_READING
                    WHERE PI_CP_EVENT_ID = {ID});

                    DELETE
                    FROM WEB50.LNK_GATE
                    WHERE LEFT_OBJ_ID IN (SELECT 'PODS_PI_CASING_READING/'||CAST(EVENT_ID AS VARCHAR(30))
                    FROM PODS.PI_CASING_READING
                    WHERE PI_CP_EVENT_ID = {ID})
                    OR RIGHT_OBJ_ID IN (SELECT 'PODS_PI_CASING_READING/'||CAST(EVENT_ID AS VARCHAR(30))
                    FROM PODS.PI_CASING_READING
                    WHERE PI_CP_EVENT_ID = {ID});

                    BEGIN
                    /* Чистим GATE с расчетом на будущее, пока эта таблица не заполняется */
                    EXECUTE $OP$DELETE
                    FROM GIS_INTEGRATION50.GATE
                    WHERE TABLE_NAME = 'PI_CASING_READING'
                    AND KEY_FIELDS = 'EVENT_ID'
                    AND KEY_VALUES in (SELECT CAST(EVENT_ID AS VARCHAR(30))
                    FROM PODS.PI_CASING_READING
                    WHERE PI_CP_EVENT_ID =$1)$OP$
                    USING {ID};
                    EXCEPTION WHEN undefined_table
                    THEN NULL;
                    WHEN OTHERS
                    THEN RAISE;
                    END;

                    DELETE
                    FROM PODS.PI_CASING_READING
                    WHERE PI_CP_EVENT_ID = {ID};


                    UPDATE PODS.EVENT_RANGE
                    SET CURRENT_INDICATOR_LF='N'
                    WHERE EVENT_ID in (SELECT EVENT_ID
                    FROM PODS.PI_CIS_READING
                    WHERE PI_CP_EVENT_ID = {ID});

                    DELETE
                    FROM WEB50.LNK_GATE
                    WHERE LEFT_OBJ_ID IN (SELECT 'PODS_PI_CIS_READING/'||CAST(EVENT_ID AS VARCHAR(30))
                    FROM PODS.PI_CIS_READING
                    WHERE PI_CP_EVENT_ID = {ID})
                    OR RIGHT_OBJ_ID IN (SELECT 'PODS_PI_CIS_READING/'||CAST(EVENT_ID AS VARCHAR(30))
                    FROM PODS.PI_CIS_READING
                    WHERE PI_CP_EVENT_ID = {ID});

                    BEGIN
                    /* Чистим GATE с расчетом на будущее, пока эта таблица не заполняется */
                    EXECUTE $OP$DELETE
                    FROM GIS_INTEGRATION50.GATE
                    WHERE TABLE_NAME = 'PI_CIS_READING'
                    AND KEY_FIELDS = 'EVENT_ID'
                    AND KEY_VALUES in (SELECT CAST(EVENT_ID AS VARCHAR(30))
                    FROM PODS.PI_CIS_READING
                    WHERE PI_CP_EVENT_ID =$1)$OP$
                    USING {ID};
                    EXCEPTION WHEN undefined_table
                    THEN NULL;
                    WHEN OTHERS
                    THEN RAISE;
                    END;

                    DELETE
                    FROM PODS.PI_CIS_READING
                    WHERE PI_CP_EVENT_ID = {ID};

                    UPDATE PODS.EVENT_RANGE
                    SET CURRENT_INDICATOR_LF='N'
                    WHERE EVENT_ID in (SELECT EVENT_ID
                    FROM PODS.PI_CP_READING
                    WHERE PI_CP_EVENT_ID = {ID});

                    DELETE
                    FROM WEB50.LNK_GATE
                    WHERE LEFT_OBJ_ID IN (SELECT 'PODS_PI_CP_READING/'||CAST(EVENT_ID AS VARCHAR(30))
                    FROM PODS.PI_CP_READING
                    WHERE PI_CP_EVENT_ID = {ID})
                    OR RIGHT_OBJ_ID IN (SELECT 'PODS_PI_CP_READING/'||CAST(EVENT_ID AS VARCHAR(30))
                    FROM PODS.PI_CP_READING
                    WHERE PI_CP_EVENT_ID = {ID});

                    BEGIN
                    /* Чистим GATE эта таблица заполняется */
                    EXECUTE $OP$DELETE
                    FROM GIS_INTEGRATION50.GATE
                    WHERE TABLE_NAME = 'PI_CP_READING'
                    AND KEY_FIELDS = 'PI_CP_READING_ID'
                    AND KEY_VALUES in (SELECT CAST(PI_CP_READING_ID AS VARCHAR(30))
                    FROM PODS.PI_CP_READING
                    WHERE PI_CP_EVENT_ID =$1)$OP$
                    USING {ID};
                    EXCEPTION WHEN  undefined_table
                    THEN NULL;
                    WHEN OTHERS
                    THEN RAISE;
                    END;

                    DELETE
                    FROM PODS.PI_CP_READING
                    WHERE PI_CP_EVENT_ID = {ID};

                    UPDATE PODS.EVENT_RANGE
                    SET CURRENT_INDICATOR_LF='N'
                    WHERE EVENT_ID in (SELECT EVENT_ID
                    FROM PODS.PI_GROUND_BED_READING
                    WHERE PI_CP_EVENT_ID = {ID});

                    DELETE
                    FROM WEB50.LNK_GATE
                    WHERE LEFT_OBJ_ID IN (SELECT 'PODS_PI_GROUND_BED_READING/'||CAST(EVENT_ID AS VARCHAR(30))
                    FROM PODS.PI_GROUND_BED_READING
                    WHERE PI_CP_EVENT_ID = {ID})
                    OR RIGHT_OBJ_ID IN (SELECT 'PODS_PI_GROUND_BED_READING/'||CAST(EVENT_ID AS VARCHAR(30))
                    FROM PODS.PI_GROUND_BED_READING
                    WHERE PI_CP_EVENT_ID = {ID});

                    BEGIN
                    /* Чистим GATE с расчетом на будущее, пока эта таблица не заполняется */
                    EXECUTE $OP$DELETE
                    FROM GIS_INTEGRATION50.GATE
                    WHERE TABLE_NAME = 'PI_GROUND_BED_READING'
                    AND KEY_FIELDS = 'EVENT_ID'
                    AND KEY_VALUES in (SELECT CAST(EVENT_ID AS VARCHAR(30))
                    FROM PODS.PI_GROUND_BED_READING
                    WHERE PI_CP_EVENT_ID =$1)$OP$
                    USING {ID};
                    EXCEPTION WHEN undefined_table
                    THEN NULL;
                    WHEN OTHERS
                    THEN RAISE;
                    END;

                    DELETE
                    FROM PODS.PI_GROUND_BED_READING
                    WHERE PI_CP_EVENT_ID = {ID};

                    UPDATE PODS.EVENT_RANGE
                    SET CURRENT_INDICATOR_LF='N'
                    WHERE EVENT_ID in (SELECT EVENT_ID 
                    FROM PODS.PI_RECTIFIER_READING
                    WHERE PI_CP_EVENT_ID = {ID});

                    DELETE
                    FROM WEB50.LNK_GATE
                    WHERE LEFT_OBJ_ID IN (SELECT 'PODS_PI_RECTIFIER_READING/'||CAST(EVENT_ID AS VARCHAR(30))
                    FROM PODS.PI_RECTIFIER_READING
                    WHERE PI_CP_EVENT_ID = {ID})
                    OR RIGHT_OBJ_ID IN (SELECT 'PODS_PI_RECTIFIER_READING/'||CAST(EVENT_ID AS VARCHAR(30))
                    FROM PODS.PI_RECTIFIER_READING
                    WHERE PI_CP_EVENT_ID = {ID});

                    BEGIN
                    /* Чистим GATE с расчетом на будущее, пока эта таблица не заполняется */
                    EXECUTE $OP$DELETE
                    FROM GIS_INTEGRATION50.GATE
                    WHERE TABLE_NAME = 'PI_RECTIFIER_READING'
                    AND KEY_FIELDS = 'EVENT_ID'
                    AND KEY_VALUES in (SELECT CAST(EVENT_ID AS VARCHAR(30))
                    FROM PODS.PI_RECTIFIER_READING
                    WHERE PI_CP_EVENT_ID =$1)$OP$
                    USING {ID};
                    EXCEPTION WHEN  undefined_table
                    THEN NULL;
                    WHEN OTHERS
                    THEN RAISE;
                    END;

                    DELETE
                    FROM PODS.PI_RECTIFIER_READING
                    WHERE PI_CP_EVENT_ID = {ID};

                    UPDATE PODS.EVENT_RANGE
                    SET CURRENT_INDICATOR_LF='N'
                    WHERE EVENT_ID = {ID};

                    DELETE
                    FROM PODS.PI_CP_INSPECTION
                    WHERE EVENT_ID = {ID};

                    DELETE
                    FROM WEB50.LNK_GATE
                    WHERE LEFT_OBJ_ID = 'PODS_PI_CP_INSPECTION/'||CAST({ID} AS VARCHAR(30))
                    OR RIGHT_OBJ_ID = 'PODS_PI_CP_INSPECTION/'||CAST({ID} AS VARCHAR(30));

                    BEGIN
                    /* Чистим GATE эта таблица заполняется */
                    EXECUTE $OP$DELETE
                    FROM GIS_INTEGRATION50.GATE
                    WHERE TABLE_NAME in ('PI_CP_INSPECTION')
                    AND KEY_FIELDS = 'EVENT_ID'
                    AND KEY_VALUES =$1$OP$
                    USING CAST({ID} AS VARCHAR(30));
                    EXCEPTION WHEN undefined_table
                    THEN NULL;
                    WHEN OTHERS
                    THEN RAISE;
                    END;
                    END $$;
                </query>
            </dbCommand>
        </delete>
    </data>
    <data id="PODS_PI_CP_INSPECTION_INTENS" table="PI_CP_INSPECTION" schema="PODS" comment="PODS.PI_CP_INSPECTION">
        <select>
            <dbQuery idField="ID">
                <param name="USER_ID" default="-1" type="Int64"/>
                <var name="FILTER" default="1=1"/>
                <var name="LPU_ACCESS_FILTER" default="SELECT srv_district_id FROM PODS.SRV_DISTRICT_GCL"/>
                <query>
                    SELECT * FROM (SELECT EVENT_ID ID, t.* FROM PODS.PI_CP_INSPECTION t) d WHERE {FILTER}
                </query>
            </dbQuery>
        </select>
        <insert>
            <dbCommand>
                <var name="CLASS_ID" type="String" direction="Input" default="PODS_PI_CP_INSPECTION" /> 
                <var name="POLICY" default="POLICY.xml#INSERT_PODS_SEM"  />
                <var name="EVENT_GUID" default="" type="String"/>
                <var name="INSPECTION_DATE" default="" type="DateTime"/>
                <var name="CRITERIA_CL" default="UNKNOWN" type="String"/>
                <var name="TYPE_CL" default="UNKNOWN" type="String"/>
                <var name="RESULT_CL" default="UNKNOWN" type="String"/>
                <var name="NOMINAL_SPACING" default="NULL" type="Decimal"/>
                <var name="TOOL_CL" default="UNKNOWN" type="String"/>
                <var name="PI_EVENT_ID" default="NULL" type="Decimal"/>
                <var name="PI_EVENT_GUID" default="" type="String"/>
                <var name="DESCRIPTION" default="" type="String"/>
                <var name="SOURCE_GCL" default="UNKNOWN" type="String"/>
                <var name="COMMENTS" default="" type="String"/>
                <var name="ID" type="Int64" direction="Output" default="SELECT max(EVENT_ID) id FROM PODS.EVENT_RANGE"/>
                <var name="PODS_USER" type="String"/>
                <var name="USER_ID" default="-1" type="Int64"/>
                <query>
                    DO $$
                    DECLARE
                    returnId integer;
                    BEGIN
                    INSERT INTO PODS.EVENT_RANGE (EVENT_GUID,FEATURE_ID,STATION_ID_BEGIN,STATION_ID_END,PODS_USER,CREATE_DATE,EFFECTIVE_FROM_DATE,CURRENT_INDICATOR_LF,POSITIONING_TYPE_CL)
                    VALUES('{EVENT_GUID}','PI_CP_INSPECTION',0,0,NULLIF('{PODS_USER}',''),current_timestamp,current_timestamp,'Y','UNKNOWN')
                    RETURNING EVENT_ID INTO returnId;

                    INSERT INTO PODS.PI_CP_INSPECTION(EVENT_ID,EVENT_GUID,INSPECTION_DATE,CRITERIA_CL,TYPE_CL,RESULT_CL,NOMINAL_SPACING,TOOL_CL,PI_EVENT_ID,PI_EVENT_GUID,DESCRIPTION,SOURCE_GCL,COMMENTS)
                    VALUES(returnId,'{EVENT_GUID}','{INSPECTION_DATE}',NULLIF('{CRITERIA_CL}',''),NULLIF('{TYPE_CL}',''),NULLIF('{RESULT_CL}',''),{NOMINAL_SPACING},NULLIF('{TOOL_CL}',''),{PI_EVENT_ID},'{PI_EVENT_GUID}',NULLIF('{DESCRIPTION}',''),NULLIF('{SOURCE_GCL}',''),NULLIF('{COMMENTS}',''));
                    END $$;
                </query>
            </dbCommand>
        </insert>
        <update>
            <dbCommand>
                <param name="CLASS_ID" type="String" direction="Input" default="PODS_PI_CP_INSPECTION" /> 
                <var name="POLICY" default="POLICY.xml#UPDATE_PODS_SEM"  />
                <param name="EVENT_GUID" default="" type="String"/>
                <param name="INSPECTION_DATE" default="" type="DateTime"/>
                <param name="CRITERIA_CL" default="UNKNOWN" type="String"/>
                <param name="TYPE_CL" default="UNKNOWN" type="String"/>
                <param name="RESULT_CL" default="UNKNOWN" type="String"/>
                <param name="NOMINAL_SPACING" default="NULL" type="Decimal"/>
                <param name="TOOL_CL" default="UNKNOWN" type="String"/>
                <param name="PI_EVENT_ID" default="NULL" type="Decimal"/>
                <param name="PI_EVENT_GUID" default="" type="String"/>
                <param name="DESCRIPTION" default="" type="String"/>
                <param name="SOURCE_GCL" default="UNKNOWN" type="String"/>
                <param name="COMMENTS" default="" type="String"/>
                <param name="ID" type="Int64"/>
                <param name="USER_ID" default="-1" type="Int64"/>
                <query>
                    UPDATE PODS.PI_CP_INSPECTION
                    SET 
					EVENT_GUID=case when :EVENT_GUID is null then EVENT_GUID else :EVENT_GUID end,
                    INSPECTION_DATE=case when :INSPECTION_DATE is null then INSPECTION_DATE else :INSPECTION_DATE end,
                    CRITERIA_CL=case when :CRITERIA_CL is null then CRITERIA_CL else :CRITERIA_CL end,
                    TYPE_CL=case when :TYPE_CL is null then TYPE_CL else :TYPE_CL end,
                    RESULT_CL=case when :RESULT_CL is null then RESULT_CL else :RESULT_CL end,
                    NOMINAL_SPACING=case when :NOMINAL_SPACING is null then NOMINAL_SPACING else :NOMINAL_SPACING end,
                    TOOL_CL=case when :TOOL_CL is null then TOOL_CL else :TOOL_CL end,
                    PI_EVENT_ID=case when :PI_EVENT_ID is null then PI_EVENT_ID else :PI_EVENT_ID end,
                    PI_EVENT_GUID=case when :PI_EVENT_GUID is null then PI_EVENT_GUID else :PI_EVENT_GUID end,
                    DESCRIPTION=case when :DESCRIPTION is null then DESCRIPTION else :DESCRIPTION end,
                    SOURCE_GCL=case when :SOURCE_GCL is null then SOURCE_GCL else :SOURCE_GCL end,
                    COMMENTS=case when :COMMENTS is null then COMMENTS else :COMMENTS end
                    WHERE EVENT_ID = :ID;
                </query>
            </dbCommand>
        </update>
        <delete>
            <dbCommand>
                <var name="CLASS_ID" type="String" direction="Input" default="PODS_PI_CP_INSPECTION" /> 
                <var name="POLICY" default="POLICY.xml#DELETE_PODS_SEM"  />
                <var name="ID" type="Int64"/>
                <var name="USER_ID" default="-1" type="Int64"/>
                <query>
                    DO $$
                    DECLARE

                                       
                    BEGIN
                    UPDATE PODS.EVENT_RANGE
                    SET CURRENT_INDICATOR_LF='N'
                    WHERE EVENT_ID in (SELECT EVENT_ID
                    FROM PODS.PI_ANODE_READING
                    WHERE PI_CP_EVENT_ID = {ID});

                    DELETE
                    FROM WEB50.LNK_GATE
                    WHERE LEFT_OBJ_ID IN (SELECT 'PODS_PI_ANODE_READING/'||CAST(EVENT_ID AS VARCHAR(30))
                    FROM PODS.PI_ANODE_READING
                    WHERE PI_CP_EVENT_ID = {ID})
                    OR RIGHT_OBJ_ID IN (SELECT 'PODS_PI_ANODE_READING/'||CAST(EVENT_ID AS VARCHAR(30))
                    FROM PODS.PI_ANODE_READING
                    WHERE PI_CP_EVENT_ID = {ID});

                    BEGIN
                    /* Чистим GATE с расчетом на будущее, пока эта таблица не заполняется */
                    EXECUTE $OP$DELETE
                    FROM GIS_INTEGRATION50.GATE
                    WHERE TABLE_NAME = 'PI_ANODE_READING'
                    AND KEY_FIELDS = 'EVENT_ID'
                    AND KEY_VALUES in (SELECT CAST(EVENT_ID AS VARCHAR(30))
                    FROM PODS.PI_ANODE_READING
                    WHERE PI_CP_EVENT_ID =$1)$OP$
                    USING {ID};
                    EXCEPTION WHEN undefined_table
                    THEN NULL;
                    WHEN OTHERS
                    THEN RAISE;
                    END;

                    DELETE
                    FROM PODS.PI_ANODE_READING
                    WHERE PI_CP_EVENT_ID = {ID};


                    UPDATE PODS.EVENT_RANGE
                    SET CURRENT_INDICATOR_LF='N'
                    WHERE EVENT_ID in (SELECT EVENT_ID
                    FROM PODS.PI_BOND_READING
                    WHERE PI_CP_EVENT_ID = {ID});

                    DELETE
                    FROM WEB50.LNK_GATE
                    WHERE LEFT_OBJ_ID IN (SELECT 'PODS_PI_BOND_READING/'||CAST(EVENT_ID AS VARCHAR(30))
                    FROM PODS.PI_BOND_READING
                    WHERE PI_CP_EVENT_ID = {ID})
                    OR RIGHT_OBJ_ID IN (SELECT 'PODS_PI_BOND_READING/'||CAST(EVENT_ID AS VARCHAR(30))
                    FROM PODS.PI_BOND_READING
                    WHERE PI_CP_EVENT_ID = {ID});

                    BEGIN
                    /* Чистим GATE с расчетом на будущее, пока эта таблица не заполняется */
                    EXECUTE $OP$DELETE
                    FROM GIS_INTEGRATION50.GATE
                    WHERE TABLE_NAME = 'PI_BOND_READING'
                    AND KEY_FIELDS = 'EVENT_ID'
                    AND KEY_VALUES in (SELECT CAST(EVENT_ID AS VARCHAR(30))
                    FROM PODS.PI_BOND_READING
                    WHERE PI_CP_EVENT_ID =$1)$OP$
                    USING {ID};
                    EXCEPTION WHEN undefined_table
                    THEN NULL;
                    WHEN OTHERS
                    THEN RAISE;
                    END;

                    DELETE
                    FROM PODS.PI_BOND_READING
                    WHERE PI_CP_EVENT_ID = {ID};

                    UPDATE PODS.EVENT_RANGE
                    SET CURRENT_INDICATOR_LF='N'
                    WHERE EVENT_ID in (SELECT EVENT_ID
                    FROM PODS.PI_CASING_READING
                    WHERE PI_CP_EVENT_ID = {ID});

                    DELETE
                    FROM WEB50.LNK_GATE
                    WHERE LEFT_OBJ_ID IN (SELECT 'PODS_PI_CASING_READING/'||CAST(EVENT_ID AS VARCHAR(30))
                    FROM PODS.PI_CASING_READING
                    WHERE PI_CP_EVENT_ID = {ID})
                    OR RIGHT_OBJ_ID IN (SELECT 'PODS_PI_CASING_READING/'||CAST(EVENT_ID AS VARCHAR(30))
                    FROM PODS.PI_CASING_READING
                    WHERE PI_CP_EVENT_ID = {ID});

                    BEGIN
                    /* Чистим GATE с расчетом на будущее, пока эта таблица не заполняется */
                    EXECUTE $OP$DELETE
                    FROM GIS_INTEGRATION50.GATE
                    WHERE TABLE_NAME = 'PI_CASING_READING'
                    AND KEY_FIELDS = 'EVENT_ID'
                    AND KEY_VALUES in (SELECT CAST(EVENT_ID AS VARCHAR(30))
                    FROM PODS.PI_CASING_READING
                    WHERE PI_CP_EVENT_ID =$1)$OP$
                    USING {ID};
                    EXCEPTION WHEN undefined_table
                    THEN NULL;
                    WHEN OTHERS
                    THEN RAISE;
                    END;

                    DELETE
                    FROM PODS.PI_CASING_READING
                    WHERE PI_CP_EVENT_ID = {ID};


                    UPDATE PODS.EVENT_RANGE
                    SET CURRENT_INDICATOR_LF='N'
                    WHERE EVENT_ID in (SELECT EVENT_ID
                    FROM PODS.PI_CIS_READING
                    WHERE PI_CP_EVENT_ID = {ID});

                    DELETE
                    FROM WEB50.LNK_GATE
                    WHERE LEFT_OBJ_ID IN (SELECT 'PODS_PI_CIS_READING/'||CAST(EVENT_ID AS VARCHAR(30))
                    FROM PODS.PI_CIS_READING
                    WHERE PI_CP_EVENT_ID = {ID})
                    OR RIGHT_OBJ_ID IN (SELECT 'PODS_PI_CIS_READING/'||CAST(EVENT_ID AS VARCHAR(30))
                    FROM PODS.PI_CIS_READING
                    WHERE PI_CP_EVENT_ID = {ID});

                    BEGIN
                    /* Чистим GATE с расчетом на будущее, пока эта таблица не заполняется */
                    EXECUTE $OP$DELETE
                    FROM GIS_INTEGRATION50.GATE
                    WHERE TABLE_NAME = 'PI_CIS_READING'
                    AND KEY_FIELDS = 'EVENT_ID'
                    AND KEY_VALUES in (SELECT CAST(EVENT_ID AS VARCHAR(30))
                    FROM PODS.PI_CIS_READING
                    WHERE PI_CP_EVENT_ID =$1)$OP$
                    USING {ID};
                    EXCEPTION WHEN undefined_table
                    THEN NULL;
                    WHEN OTHERS
                    THEN RAISE;
                    END;

                    DELETE
                    FROM PODS.PI_CIS_READING
                    WHERE PI_CP_EVENT_ID = {ID};

                    UPDATE PODS.EVENT_RANGE
                    SET CURRENT_INDICATOR_LF='N'
                    WHERE EVENT_ID in (SELECT EVENT_ID
                    FROM PODS.PI_CP_READING
                    WHERE PI_CP_EVENT_ID = {ID});

                    DELETE
                    FROM WEB50.LNK_GATE
                    WHERE LEFT_OBJ_ID IN (SELECT 'PODS_PI_CP_READING/'||CAST(EVENT_ID AS VARCHAR(30))
                    FROM PODS.PI_CP_READING
                    WHERE PI_CP_EVENT_ID = {ID})
                    OR RIGHT_OBJ_ID IN (SELECT 'PODS_PI_CP_READING/'||CAST(EVENT_ID AS VARCHAR(30))
                    FROM PODS.PI_CP_READING
                    WHERE PI_CP_EVENT_ID = {ID});

                    BEGIN
                    /* Чистим GATE эта таблица заполняется */
                    EXECUTE $OP$DELETE
                    FROM GIS_INTEGRATION50.GATE
                    WHERE TABLE_NAME = 'PI_CP_READING'
                    AND KEY_FIELDS = 'PI_CP_READING_ID'
                    AND KEY_VALUES in (SELECT CAST(PI_CP_READING_ID AS VARCHAR(30))
                    FROM PODS.PI_CP_READING
                    WHERE PI_CP_EVENT_ID =$1)$OP$
                    USING {ID};
                    EXCEPTION WHEN  undefined_table
                    THEN NULL;
                    WHEN OTHERS
                    THEN RAISE;
                    END;

                    DELETE
                    FROM PODS.PI_CP_READING
                    WHERE PI_CP_EVENT_ID = {ID};

                    UPDATE PODS.EVENT_RANGE
                    SET CURRENT_INDICATOR_LF='N'
                    WHERE EVENT_ID in (SELECT EVENT_ID
                    FROM PODS.PI_GROUND_BED_READING
                    WHERE PI_CP_EVENT_ID = {ID});

                    DELETE
                    FROM WEB50.LNK_GATE
                    WHERE LEFT_OBJ_ID IN (SELECT 'PODS_PI_GROUND_BED_READING/'||CAST(EVENT_ID AS VARCHAR(30))
                    FROM PODS.PI_GROUND_BED_READING
                    WHERE PI_CP_EVENT_ID = {ID})
                    OR RIGHT_OBJ_ID IN (SELECT 'PODS_PI_GROUND_BED_READING/'||CAST(EVENT_ID AS VARCHAR(30))
                    FROM PODS.PI_GROUND_BED_READING
                    WHERE PI_CP_EVENT_ID = {ID});

                    BEGIN
                    /* Чистим GATE с расчетом на будущее, пока эта таблица не заполняется */
                    EXECUTE $OP$DELETE
                    FROM GIS_INTEGRATION50.GATE
                    WHERE TABLE_NAME = 'PI_GROUND_BED_READING'
                    AND KEY_FIELDS = 'EVENT_ID'
                    AND KEY_VALUES in (SELECT CAST(EVENT_ID AS VARCHAR(30))
                    FROM PODS.PI_GROUND_BED_READING
                    WHERE PI_CP_EVENT_ID =$1)$OP$
                    USING {ID};
                    EXCEPTION WHEN undefined_table
                    THEN NULL;
                    WHEN OTHERS
                    THEN RAISE;
                    END;

                    DELETE
                    FROM PODS.PI_GROUND_BED_READING
                    WHERE PI_CP_EVENT_ID = {ID};

                    UPDATE PODS.EVENT_RANGE
                    SET CURRENT_INDICATOR_LF='N'
                    WHERE EVENT_ID in (SELECT EVENT_ID 
                    FROM PODS.PI_RECTIFIER_READING
                    WHERE PI_CP_EVENT_ID = {ID});

                    DELETE
                    FROM WEB50.LNK_GATE
                    WHERE LEFT_OBJ_ID IN (SELECT 'PODS_PI_RECTIFIER_READING/'||CAST(EVENT_ID AS VARCHAR(30))
                    FROM PODS.PI_RECTIFIER_READING
                    WHERE PI_CP_EVENT_ID = {ID})
                    OR RIGHT_OBJ_ID IN (SELECT 'PODS_PI_RECTIFIER_READING/'||CAST(EVENT_ID AS VARCHAR(30))
                    FROM PODS.PI_RECTIFIER_READING
                    WHERE PI_CP_EVENT_ID = {ID});

                    BEGIN
                    /* Чистим GATE с расчетом на будущее, пока эта таблица не заполняется */
                    EXECUTE $OP$DELETE
                    FROM GIS_INTEGRATION50.GATE
                    WHERE TABLE_NAME = 'PI_RECTIFIER_READING'
                    AND KEY_FIELDS = 'EVENT_ID'
                    AND KEY_VALUES in (SELECT CAST(EVENT_ID AS VARCHAR(30))
                    FROM PODS.PI_RECTIFIER_READING
                    WHERE PI_CP_EVENT_ID =$1)$OP$
                    USING {ID};
                    EXCEPTION WHEN  undefined_table
                    THEN NULL;
                    WHEN OTHERS
                    THEN RAISE;
                    END;

                    DELETE
                    FROM PODS.PI_RECTIFIER_READING
                    WHERE PI_CP_EVENT_ID = {ID};

                    UPDATE PODS.EVENT_RANGE
                    SET CURRENT_INDICATOR_LF='N'
                    WHERE EVENT_ID = {ID};

                    DELETE
                    FROM PODS.PI_CP_INSPECTION
                    WHERE EVENT_ID = {ID};

                    DELETE
                    FROM WEB50.LNK_GATE
                    WHERE LEFT_OBJ_ID = 'PODS_PI_CP_INSPECTION/'||CAST({ID} AS VARCHAR(30))
                    OR RIGHT_OBJ_ID = 'PODS_PI_CP_INSPECTION/'||CAST({ID} AS VARCHAR(30));

                    BEGIN
                    /* Чистим GATE эта таблица заполняется */
                    EXECUTE $OP$DELETE
                    FROM GIS_INTEGRATION50.GATE
                    WHERE TABLE_NAME in ('PI_CP_INSPECTION')
                    AND KEY_FIELDS = 'EVENT_ID'
                    AND KEY_VALUES =$1$OP$
                    USING CAST({ID} AS VARCHAR(30));
                    EXCEPTION WHEN undefined_table
                    THEN NULL;
                    WHEN OTHERS
                    THEN RAISE;
                    END;
                    END $$;
                </query>
            </dbCommand>
        </delete>
    </data>
</root> 
